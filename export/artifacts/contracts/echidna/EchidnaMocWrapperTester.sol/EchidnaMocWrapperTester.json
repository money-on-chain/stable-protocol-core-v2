{
  "contractName": "EchidnaMocWrapperTester",
  "sourceName": "contracts/echidna/EchidnaMocWrapperTester.sol",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "payable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "decimals_",
          "type": "uint8"
        }
      ],
      "name": "addAsset",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "tpTokenAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "priceProviderAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tpCtarg",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tpMintFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tpRedeemFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tpEma",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tpEmaSf",
              "type": "uint256"
            }
          ],
          "internalType": "struct PeggedTokenParams",
          "name": "peggedTokenParams_",
          "type": "tuple"
        },
        {
          "internalType": "uint96",
          "name": "price_",
          "type": "uint96"
        }
      ],
      "name": "addPeggedToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "echidna_wrappedTokenPrice_always_ONE",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "assetIndex_",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "qTC_",
          "type": "uint256"
        }
      ],
      "name": "mintTC",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "i_",
          "type": "uint256"
        },
        {
          "internalType": "uint96",
          "name": "price_",
          "type": "uint96"
        }
      ],
      "name": "pokePrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "assetIndex_",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "qTC_",
          "type": "uint256"
        }
      ],
      "name": "redeemTC",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "",
  "deployedBytecode": "0x608060405260043610156200001357600080fd5b6000803560e01c806324035d3814620008145780633295b14f1462000718578063499e3b161462000582578063a179161714620003d1578063b75205cb14620003345763e0955452146200006657600080fd5b3462000331576020366003190112620003315760043560ff81168091036200032c576005600c541015620002e7576040516110339081810167ffffffffffffffff9282821084831117620002d357908291620010618339039084f091821562000263576001600160a01b0392831691823b15620002cf5760ff601860405193633d09cad560e11b85520616908160048401528560249381818681838a5af180156200025857620002b2575b505084600b54169060405161019a80820190828210848311176200029f576020918391620020948339670de0b6b3a7640000815203019088f090811562000294578360120360ff8111620002815760405192610313808501938411858510176200026e579260ff6040938b8796948e9a99989562004784873916835216870b602082015203019084f080156200026357813b15620002545760648791858094604051968795869463966d3f2360e01b86528c6004870152168a85015260448401525af1801562000258576200023b575b5050600c5490680100000000000000008210156200022957508060016200020e9201600c55600c62000c09565b909283549160031b90811b9283911b16911916179055604051f35b634e487b7160e01b8552604160045284fd5b81620002479162000b80565b62000254578338620001e1565b8380fd5b6040513d84823e3d90fd5b6040513d85823e3d90fd5b634e487b7160e01b8b526041600452878bfd5b634e487b7160e01b895260116004528589fd5b6040513d89823e3d90fd5b634e487b7160e01b8a526041600452868afd5b81620002be9162000b80565b620002cb57853862000111565b8580fd5b8480fd5b634e487b7160e01b86526041600452602486fd5b60405162461bcd60e51b815260206004820152601860248201527f6d61782061737365747320616c726561647920616464656400000000000000006044820152606490fd5b600080fd5b80fd5b50346200033157806003193601126200033157600b546040516325ca7a8760e11b815290602090829060049082906001600160a01b03165afa9081156200025857829162000392575b602082670de0b6b3a764000060405191148152f35b90506020813d8211620003c8575b81620003af6020938362000b80565b81010312620003c4576020915051386200037d565b5080fd5b3d9150620003a0565b503462000331576040366003190112620003315760043560ff81168091036200032c578190620004146200040c60243592600c549062000be8565b600c62000c09565b905483546040516360009e0b60e01b81526001600160a01b03949391602091908290829060049082908a165afa8015620002945785839189906200053c575b600b5460405163095ea7b360e01b8152908a166001600160a01b0316600482015260248101929092529092508290818a8a82604481015b0393165af18015620002945762000507575b505083600b541690813b15620002cb578560649281956040519788968795631298c1ff60e21b875260031b1c16600485015260248401528160448401525af180156200025857620004ee575b50604051f35b81620004fa9162000b80565b62000331578038620004e8565b816200052b92903d1062000534575b62000522818362000b80565b81019062000c4c565b5038806200049c565b503d62000516565b505081813d83116200057a575b62000555818362000b80565b810103126200057657518581168103620005765781856200048a9262000453565b8680fd5b503d62000549565b503462000331576040366003190112620003315760043560ff81168091036200032c578190620005bd6200040c60243592600c549062000be8565b90546001600160a01b0360039290921b1c811690620005de60028462000c38565b823b15620002cf576040516340c10f1960e01b81523060048201526024810191909152848160448183875af1908115620006ef578591620006fa575b505062000662602082600b54166200063460028762000c38565b60405163095ea7b360e01b81526001600160a01b039092166004830152602482015291829081906044820190565b038188875af18015620006ef57620006cc575b50600b5416916200068860028262000c38565b92803b15620002cf578492836064926040519687958694636418453160e11b86526004860152602485015260448401525af180156200025857620004ee5750604051f35b620006e79060203d8111620005345762000522818362000b80565b503862000675565b6040513d87823e3d90fd5b81620007069162000b80565b620007135783386200061a565b505050fd5b50346200033157604036600319011262000331576024356001600160601b0380821682036200032c576200074d839262000bb9565b60018060a01b038084541660406200076a600a5460043562000be8565b6024825180948193634b74600160e01b835260048301525afa908115620006ef578591620007cf575b501691823b1562000713576024849283604051958694859363032145f960e41b85521660048401525af180156200025857620004ee5750604051f35b90506040813d6040116200080b575b81620007ed6040938362000b80565b81010312620002cf57602001518181168103620002cf573862000793565b3d9150620007de565b5034620003315736600319016101008112620003c45760e01362000331576200084060e0608062000b80565b6004356001600160a01b0381168103620003c4576080526024356001600160a01b0381168103620003c45760a05260443560c05260643560e0526084356101005260a4356101205260c4356101405260e4356001600160601b038116900362000331576005600a54101562000b4457604051806123bc81011067ffffffffffffffff6123bc8301111762000b30576123bc620023c88239806123bc8101039082f0801562000af85760405190816103fa81011067ffffffffffffffff6103fa8401111762000b05576103fa62000c6783396001600160a01b03166103fa820190815260406020820181905281018390528190036060019082f0801562000af85781546001546001600160a01b0392831693929182169116833b1562000b2c57604051916323c56d0560e21b83526080600484015260076084840152662a282a37b5b2b760c91b60a484015260c06024840152600260c484015261054560f41b60e48401526044830152606482015281816101048183875af18015620002585762000b19575b5090608052620009d760e43562000bb9565b604051908161019a81011067ffffffffffffffff61019a8401111762000b05576001600160601b039061019a6200222e84391661019a82015260208161019a810103019082f0801562000af8576001600160a01b0390811660a0528154829116803b1562000af557604051636dbcb03960e11b81526080516001600160a01b03908116600483015260a05116602482015260c051604482015260e05160648201526101005160848201526101205160a48201526101405160c4820152908290829060e490829084905af18015620002585762000adc575b5050600a54600019811462000ac857600101600a55604051f35b634e487b7160e01b82526011600452602482fd5b8162000ae89162000b80565b6200033157803862000aae565b50fd5b50604051903d90823e3d90fd5b634e487b7160e01b83526041600452602483fd5b8162000b259162000b80565b38620009c5565b8280fd5b634e487b7160e01b82526041600452602482fd5b60405162461bcd60e51b81526020600482015260146024820152731b585e08151408185b1c9958591e48185919195960621b6044820152606490fd5b90601f8019910116810190811067ffffffffffffffff82111762000ba357604052565b634e487b7160e01b600052604160045260246000fd5b6001600160601b0380911690811462000bd25760010190565b634e487b7160e01b600052601160045260246000fd5b811562000bf3570690565b634e487b7160e01b600052601260045260246000fd5b805482101562000c225760005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b806000190482118115151662000bd2570290565b908160209103126200032c575180151581036200032c579056fe6040608081526103fa80380380610015816101fc565b92833981019082818303126101f7578051906001600160a01b0382168083036101f75760208281015190926001600160401b0382116101f757019284601f850112156101f75783519361006f61006a86610237565b6101fc565b94808652848601968582840101116101f757868561008d9301610252565b803b1561019d577f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b031916831790558551600092907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b908490a2835115801590610196575b61010d575b855160d190816103298239f35b81806101819661012061006a6027610237565b96602788527f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c87890152660819985a5b195960ca1b8a8901525190845af4913d1561018c573d9061017361006a83610237565b91825281943d92013e610275565b503880808080610100565b5060609250610275565b50816100fb565b855162461bcd60e51b815260048101849052602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608490fd5b600080fd5b6040519190601f01601f191682016001600160401b0381118382101761022157604052565b634e487b7160e01b600052604160045260246000fd5b6001600160401b03811161022157601f01601f191660200190565b60005b8381106102655750506000910152565b8181015183820152602001610255565b919290156102d75750815115610289575090565b3b156102925790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b8251909150156102ea5750805190602001fd5b6044604051809262461bcd60e51b82526020600483015261031a8151809281602486015260208686019101610252565b601f01601f19168101030190fdfe608060405236156054577f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc54600090819081906001600160a01b0316368280378136915af43d82803e156050573d90f35b3d90fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc54600090819081906001600160a01b0316368280378136915af43d82803e156050573d90f3fea26469706673582212208018dc726f6b01bdc8879dccefc8f28189750cc03da1a4032d9037cbe51b17ce64736f6c63430008100033608060405234620003b65762000014620003bb565b6200001e620003bb565b81519091906001600160401b0390818111620002b6576003918254926001928385811c9516958615620003ab575b6020968787101462000395578190601f968781116200033f575b508790878311600114620002d857600092620002cc575b505060001982841b1c191690841b1781555b8551918211620002b65760049586548481811c91168015620002ab575b8782101462000296578581116200024b575b508590858411600114620001e057938394918492600095620001d4575b50501b92600019911b1c19161783555b601260ff19600554161760055533156200019357506002547b6df37f675ef6eadf5ab9a2072d44268d97df837e6748956e5c6c2117928382018092116200017e57506000917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91600255338352828152604083208481540190556040519384523393a3604051610c419081620003f28239f35b601190634e487b7160e01b6000525260246000fd5b606492916040519262461bcd60e51b845283015260248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152fd5b015193503880620000db565b9190601f198416928860005284886000209460005b8a8983831062000233575050501062000218575b50505050811b018355620000eb565b01519060f884600019921b161c191690553880808062000209565b868601518955909701969485019488935001620001f5565b87600052866000208680860160051c8201928987106200028c575b0160051c019085905b8281106200027f575050620000be565b600081550185906200026f565b9250819262000266565b602288634e487b7160e01b6000525260246000fd5b90607f1690620000ac565b634e487b7160e01b600052604160045260246000fd5b0151905038806200007d565b90869350601f1983169185600052896000209260005b8b8282106200032857505084116200030f575b505050811b0181556200008f565b015160001983861b60f8161c1916905538808062000301565b8385015186558a97909501949384019301620002ee565b90915083600052876000208780850160051c8201928a86106200038b575b918891869594930160051c01915b8281106200037b57505062000066565b600081558594508891016200036b565b925081926200035d565b634e487b7160e01b600052602260045260246000fd5b94607f16946200004c565b600080fd5b60408051919082016001600160401b03811183821017620002b657604052600982526845524332304d6f636b60b81b602083015256fe6080604081815260048036101561001557600080fd5b600092833560e01c90816306fdde031461064757508063095ea7b31461061357806318160ddd146105f457806323b872dd146105a6578063313ce56714610140578063395093511461055657806340c10f191461049657806342966c68146104795780635c2f5e261461044557806370a082311461040d57806379cc6790146103d35780637a1395aa146103a757806395d89b41146102875780639dc29fac14610255578063a457c2d7146101a5578063a9059cbb14610166578063ace28fa5146101405763dd62ed3e146100e957600080fd5b3461013c578160031936011261013c576001600160a01b039035818116908190036101385760243591821680920361013857928291602094825260018552828220908252845220549051908152f35b8380fd5b8280fd5b50503461016257816003193601126101625760209060ff600554169051908152f35b5080fd5b503461013c578160031936011261013c5735916001600160a01b03831683036101a2575061019960209260243590610bb7565b90519015158152f35b80fd5b5082346101a257826003193601126101a2578135916001600160a01b038316918284036101a2578490602435933382526001602052828220908252602052205490828210610204576020856101fd8585038733610916565b5160018152f35b608490602086519162461bcd60e51b8352820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152fd5b503461013c578160031936011261013c57356001600160a01b038116810361013c576102849060243590610ab0565b51f35b50919034610162578160031936011261016257805190828454600181811c9080831692831561039d575b602093848410811461038a5783885290811561036e5750600114610319575b505050829003601f01601f191682019267ffffffffffffffff841183851017610306575082918261030292528261073c565b0390f35b634e487b7160e01b815260418552602490fd5b8787529192508591837f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b83851061035a57505050508301013880806102d0565b805488860183015293019284908201610344565b60ff1916878501525050151560051b84010190503880806102d0565b634e487b7160e01b895260228a52602489fd5b91607f16916102b1565b503461013c57602036600319011261013c573560ff811680910361013c5760ff19600554161760055551f35b503461013c578160031936011261013c57356001600160a01b038116810361013c576102849060243590610408823383610a18565b610ab0565b503461013c57602036600319011261013c57356001600160a01b0381169081900361013c578282916020945280845220549051908152f35b503461013c57602036600319011261013c5735600381101561013c5761ff006005549160081b169061ff0019161760055551f35b503461013c57602036600319011261013c57610284903533610ab0565b503461013c578160031936011261013c5780356001600160a01b03811691908290036101385760243590821561051357507fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6020826104f88794600254610785565b6002558484528382528584208181540190558551908152a351f35b606490602085519162461bcd60e51b8352820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152fd5b503461013c578160031936011261013c57356001600160a01b038116808203610138579061059f6020946101fd9333825260018752858220908252865284602435912054610785565b9033610916565b503461013c57606036600319011261013c5735916001600160a01b039081841684036101a25760243591821682036101a257506020926101fd91604435916105ef833383610a18565b6107a8565b5050346101625781600319360112610162576020906002549051908152f35b503461013c578160031936011261013c5735916001600160a01b03831683036101a257506101fd6020926024359033610916565b849150833461013c578260031936011261013c5782600354600181811c90808316928315610732575b602093848410811461038a5783885290811561071657506001146106c057505050829003601f01601f191682019267ffffffffffffffff841183851017610306575082918261030292528261073c565b600387529192508591837fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b83851061070257505050508301018580806102d0565b8054888601830152930192849082016106ec565b60ff1916878501525050151560051b84010190508580806102d0565b91607f1691610670565b6020808252825181830181905290939260005b82811061077157505060409293506000838284010152601f8019910116010190565b81810186015184820160400152850161074f565b9190820180921161079257565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b039081169182156108c357169182156108725760008281528060205260408120549180831061081e57604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815220818154019055604051908152a3565b60405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608490fd5b60405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608490fd5b60405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608490fd5b6001600160a01b039081169182156109c757169182156109775760207f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925918360005260018252604060002085600052825280604060002055604051908152a3565b60405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608490fd5b60405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608490fd5b9060018060a01b0380831660005260016020526040600020908216600052602052604060002054926000198403610a50575b50505050565b808410610a6b57610a62930391610916565b38808080610a4a565b60405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606490fd5b6001600160a01b03168015610b6857600091818352826020526040832054818110610b1857817fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef926020928587528684520360408620558060025403600255604051908152a3565b60405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608490fd5b60405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608490fd5b9060ff60055460081c166003811015610bf55760018114610bed57600214610be857610be391336107a8565b600190565b600080fd5b505050600090565b634e487b7160e01b600052602160045260246000fdfea2646970667358221220ee4a405a71fb04972b1bb8d2b872c05694e3061b67cf275f8f9cfda28d995c9d64736f6c6343000810003360803461005d57601f61019a38819003918201601f19168301916001600160401b038311848410176100625780849260209460405283398101031261005d5751600055600160ff198154161760015560405161012190816100798239f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe608060408181526004361015601357600080fd5b600091823560e01c9081632a3f43891460d35750806332145f901460bb5780635095e3d914609f57806359e02dd71460775763b689d5ac14605357600080fd5b346073578160031936011260735760209060ff6001541690519015158152f35b5080fd5b509034609c5780600319360112609c575460ff60015416825191825215156020820152f35b80fd5b50346073578160031936011260735760ff196001541660015551f35b50346073576020366003190112607357600435825551f35b83903460735781600319360112607357602091548152f3fea2646970667358221220da9fa8140f52ef2031f1efa5923717ba94a4ec11b5f3742f9c8b50ba51589e5564736f6c6343000810003360803461005d57601f61019a38819003918201601f19168301916001600160401b038311848410176100625780849260209460405283398101031261005d5751600055600160ff198154161760015560405161012190816100798239f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe608060408181526004361015601357600080fd5b600091823560e01c9081632a3f43891460d35750806332145f901460bb5780635095e3d914609f57806359e02dd71460775763b689d5ac14605357600080fd5b346073578160031936011260735760209060ff6001541690519015158152f35b5080fd5b509034609c5780600319360112609c575460ff60015416825191825215156020820152f35b80fd5b50346073578160031936011260735760ff196001541660015551f35b50346073576020366003190112607357600435825551f35b83903460735781600319360112607357602091548152f3fea2646970667358221220da9fa8140f52ef2031f1efa5923717ba94a4ec11b5f3742f9c8b50ba51589e5564736f6c6343000810003360a080604052346100dc57306080526000549060ff8260081c1661008a575060ff8082161061004f575b6040516122da90816100e28239608051818181610d5601528181610e7801526110590152f35b60ff90811916176000557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160ff8152a138610029565b62461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b6064820152608490fd5b600080fdfe608080604052600436101561001357600080fd5b60003560e01c90816301ffc9a71461146a5750806306fdde03146113d6578063095ea7b3146113a45780630c340a241461137a57806318160ddd1461135c57806323b872dd14611295578063248a9ca314611266578063282c51f31461122b5780632f2ff15d14611170578063313ce5671461115457806336568abe146110c05780633659cfe6146110275780633950935114610fd057806340c10f1914610edb5780634f1ef28614610e1957806352d1902d14610d4357806370a0823114610d055780638f15b4141461068e5780639010d07c1461064757806391d14854146105f557806395d89b41146105175780639dc29fac146103c2578063a217fddf146103a6578063a457c2d7146102fa578063a9059cbb146102bd578063ca15c87314610291578063d539139314610256578063d547741f1461020a578063dd62ed3e146101b25763e4c0aaf41461016957600080fd5b346101ad5760203660031901126101ad576004356001600160a01b038116908190036101ad57610197612164565b61019180546001600160a01b0319169091179055005b600080fd5b346101ad5760403660031901126101ad576001600160a01b03600435818116908190036101ad576024359182168092036101ad5760005260ca6020526040600020906000526020526020604060002054604051908152f35b346101ad5760403660031901126101ad576004356024356001600160a01b03811681036101ad578161025492600052606560205261024f6001604060002001546115b9565b611698565b005b346101ad5760003660031901126101ad5760206040517f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a68152f35b346101ad5760203660031901126101ad5760043560005260976020526020604060002054604051908152f35b346101ad5760403660031901126101ad576004356001600160a01b03811681036101ad576102ef906024359033611bb8565b602060405160018152f35b346101ad5760403660031901126101ad576004356001600160a01b038116908181036101ad57602435913360005260ca60205260406000209060005260205260406000205491808310610353576102ef92039033611d28565b60405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608490fd5b346101ad5760003660031901126101ad57602060405160008152f35b346101ad5760403660031901126101ad576004356001600160a01b038116908190036101ad57602435906104157f3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a8486115b9565b80156104c8578060005260c960205260406000205491808310610478576020817fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9260009585875260c984520360408620558060cb540360cb55604051908152a3005b60405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608490fd5b60405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608490fd5b346101ad5760003660031901126101ad57604051600060cd5461053981611b5b565b808452906001908181169081156105ce5750600114610573575b61056f8461056381860382611526565b604051918291826114fa565b0390f35b60cd600090815292507f83978b4c69c48dd978ab43fe30f077615294f938fb7f936d9eb340e51ea7db2e5b8284106105b657505050810160200161056382610553565b8054602085870181019190915290930192810161059e565b60ff191660208087019190915292151560051b850190920192506105639150839050610553565b346101ad5760403660031901126101ad576024356001600160a01b038116908190036101ad576004356000526065602052604060002090600052602052602060ff604060002054166040519015158152f35b346101ad5760403660031901126101ad57600435600052609760205260206106756024356040600020611fd0565b905460405160039290921b1c6001600160a01b03168152f35b346101ad5760803660031901126101ad5760043567ffffffffffffffff81116101ad576106bf90369060040161159b565b60243567ffffffffffffffff81116101ad576106df90369060040161159b565b906001600160a01b0360443581811681036101ad576064358281168091036101ad576000549360ff8560081c161594858096610cf8575b8015610ce1575b15610c855760ff19811660011760005585610c73575b5061075760ff60005460081c1661074981612204565b61075281612204565b612204565b805167ffffffffffffffff8111610b68578061077460cc54611b5b565b92601f93848111610bfd575b50602090848311600114610b8957600092610b7e575b50508160011b916000199060031b1c19161760cc555b85519567ffffffffffffffff8711610b68576107c960cd54611b5b565b828111610b06575b506020918711600114610a7c579580916109639697600092610a71575b50508160011b916000199060031b1c19161760cd555b61082260ff60005460081c1661081981612204565b61074981612204565b61019180546001600160a01b031916909117905580821660009081527fffdfc1249c027f9191656349feb0761381bb32c9f557e01f419fd08754bf5a1b602052604090205460659060ff1615610a2c575b6000805260976020526108a88284167f683723e34a772b6e4f2c919bba7fa32ed8ea11a8325f54da7db716e9d9dd98c7611fe8565b507f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a68060005281602052604060002084841660005260205260ff60406000205416156109e7575b60005260976020526109078383166040600020611fe8565b507f3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a848908160005280602052604060002084841660005260205260ff60406000205416156109a2575b506000526097602052166040600020611fe8565b5061096a57005b61ff0019600054166000557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160018152a1005b8160005260205260406000208383166000526020526040600020600160ff1982541617905533838316826000805160206122658339815191526000604051a48561094f565b806000528160205260406000208484166000526020526040600020600160ff1982541617905533848416826000805160206122658339815191526000604051a46108ef565b600080528060205260406000208383166000526020526040600020600160ff1982541617905533838316600060008051602061226583398151915281604051a4610873565b0151905087806107ee565b90601f1987169160cd6000527f83978b4c69c48dd978ab43fe30f077615294f938fb7f936d9eb340e51ea7db2e9260005b818110610aee5750916001939189610963999a9410610ad5575b505050811b0160cd55610804565b015160001960f88460031b161c19169055878080610ac7565b92936020600181928786015181550195019301610aad565b60cd6000527f83978b4c69c48dd978ab43fe30f077615294f938fb7f936d9eb340e51ea7db2e83808a0160051c82019260208b10610b5f575b0160051c01905b818110610b5357506107d1565b60008155600101610b46565b92508192610b3f565b634e487b7160e01b600052604160045260246000fd5b015190508880610796565b60cc60009081526000805160206122858339815191529350601f198516905b818110610be55750908460019594939210610bcc575b505050811b0160cc556107ac565b015160001960f88460031b161c19169055888080610bbe565b92936020600181928786015181550195019301610ba8565b90915060cc6000528380840160051c600080516020612285833981519152019160208510610c5d575b90849392910160051c60008051602061228583398151915201905b818110610c4e5750610780565b60008155849350600101610c41565b6000805160206122858339815191529250610c26565b61ffff19166101011760005586610733565b60405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b50303b15801561071d5750600160ff82161461071d565b50600160ff821610610716565b346101ad5760203660031901126101ad576004356001600160a01b038116908190036101ad5760005260c96020526020604060002054604051908152f35b346101ad5760003660031901126101ad577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163003610dae5760206040517f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc8152f35b60405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c00000000000000006064820152608490fd5b60403660031901126101ad576004356001600160a01b0380821682036101ad576024359067ffffffffffffffff82116101ad57366023830112156101ad5761025492610ece610e746001943690602481600401359101611564565b92807f00000000000000000000000000000000000000000000000000000000000000001690610ea582301415611722565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc541614611783565b610ed6612164565b6117e4565b346101ad5760403660031901126101ad576004356001600160a01b038116908190036101ad57602435610f2d7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a66115b9565b8115610f8b577fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef602082610f6560009460cb54611b95565b60cb5584845260c9825260408420818154019055604051908152a3602060405160018152f35b60405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606490fd5b346101ad5760403660031901126101ad576004356001600160a01b038116908181036101ad576102ef913360005260ca602052604060002090600052602052611020602435604060002054611b95565b9033611d28565b346101ad5760203660031901126101ad576004356001600160a01b0380821682036101ad5761025491611086826000937f00000000000000000000000000000000000000000000000000000000000000001690610ea582301415611722565b61108e612164565b61109782611548565b906110a56040519283611526565b828252601f196110b484611548565b013660208401376117e4565b346101ad5760403660031901126101ad576024356001600160a01b0381168082036101ad5733036110f75761025490600435611698565b60405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b6064820152608490fd5b346101ad5760003660031901126101ad57602060405160128152f35b346101ad5760403660031901126101ad576004356024356001600160a01b038116908190036101ad5760978261025493600052602090606582526111bb6001604060002001546115b9565b8060005260658252604060002084600052825260ff60406000205416156111eb575b600052526040600020611fe8565b806000526065825260406000208460005282526040600020600160ff198254161790553384826000805160206122658339815191526000604051a46111dd565b346101ad5760003660031901126101ad5760206040517f3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a8488152f35b346101ad5760203660031901126101ad5760043560005260656020526020600160406000200154604051908152f35b346101ad5760603660031901126101ad576004356001600160a01b03808216908183036101ad5760243590811681036101ad576044359160005260ca6020526040600020336000526020526040600020549260001984036112fb575b6102ef9350611bb8565b82841061131757611312836102ef95033383611d28565b6112f1565b60405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606490fd5b346101ad5760003660031901126101ad57602060cb54604051908152f35b346101ad5760003660031901126101ad57610191546040516001600160a01b039091168152602090f35b346101ad5760403660031901126101ad576004356001600160a01b03811681036101ad576102ef906024359033611d28565b346101ad5760003660031901126101ad57604051600060cc546113f881611b5b565b808452906001908181169081156105ce57506001146114215761056f8461056381860382611526565b60cc600090815292506000805160206122858339815191525b82841061145257505050810160200161056382610553565b8054602085870181019190915290930192810161143a565b346101ad5760203660031901126101ad576004359063ffffffff60e01b82168092036101ad57602091635a05180f60e01b81149081156114ac575b5015158152f35b637965db0b60e01b8114915081156114c6575b50836114a5565b6301ffc9a760e01b149050836114bf565b60005b8381106114ea5750506000910152565b81810151838201526020016114da565b6040916020825261151a81518092816020860152602086860191016114d7565b601f01601f1916010190565b90601f8019910116810190811067ffffffffffffffff821117610b6857604052565b67ffffffffffffffff8111610b6857601f01601f191660200190565b92919261157082611548565b9161157e6040519384611526565b8294818452818301116101ad578281602093846000960137010152565b9080601f830112156101ad578160206115b693359101611564565b90565b80600052602060658152604060002033600052815260ff60406000205416156115e0575050565b61167c6048611694938361160261166d956115fc601433611e75565b93611e75565b906040519586937f416363657373436f6e74726f6c3a206163636f756e74200000000000000000008386015261164181518092856037890191016114d7565b8401917001034b99036b4b9b9b4b733903937b6329607d1b6037840152835193849187850191016114d7565b01036028810184520182611526565b60405162461bcd60e51b8152918291600483016114fa565b0390fd5b906116d691600081815260656020526040918282209360018060a01b03169384835260205260ff83832054166116d9575b8152609760205220612074565b50565b808252606560205282822084835260205282822060ff1981541690553384827ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b858751a46116c9565b1561172957565b60405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b19195b1959d85d1958d85b1b60a21b6064820152608490fd5b1561178a57565b60405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b6163746976652070726f787960a01b6064820152608490fd5b90929160ff7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435416600014611821575061181f919250611ab9565b565b604080516352d1902d60e01b8152602094919391926001600160a01b038316918681600481865afa60009181611a87575b506118b257855162461bcd60e51b815260048101889052602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b6064820152608490fd5b939594937fc9f76b5ec45e5cdef99837d7b6d2467235c1df8933c8ca56df5c35afa2c7d44401611a31576118e583611ab9565b8351917fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b600084a286511590811591611a29575b50611927575b505050509050565b813b156119d857506000858192856119ba9798519201905af43d156119c557660819985a5b195960ca1b3d9261195c84611548565b9361196982519586611526565b84523d60008686013e5b7f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c61199e6027611548565b956119ab83519788611526565b60278752860152840152611e2a565b50803880808061191f565b660819985a5b195960ca1b606092611973565b62461bcd60e51b815260048101849052602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608490fd5b905038611919565b835162461bcd60e51b815260048101869052602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b6064820152608490fd5b90918882813d8311611ab2575b611a9e8183611526565b81010312611aaf5750519038611852565b80fd5b503d611a94565b803b15611b00577f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b0319166001600160a01b03909216919091179055565b60405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608490fd5b90600182811c92168015611b8b575b6020831014611b7557565b634e487b7160e01b600052602260045260246000fd5b91607f1691611b6a565b91908201809211611ba257565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b03908116918215611cd55716918215611c8457600082815260c9602052604081205491808310611c3057604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef95876020965260c98652038282205586815220818154019055604051908152a3565b60405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608490fd5b60405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608490fd5b60405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608490fd5b6001600160a01b03908116918215611dd95716918215611d895760207f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925918360005260ca8252604060002085600052825280604060002055604051908152a3565b60405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608490fd5b60405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608490fd5b90919015611e36575090565b815115611e465750805190602001fd5b60405162461bcd60e51b815290819061169490600483016114fa565b8060001904821181151516611ba2570290565b90611e81816002611e62565b9160028301809311611ba257611eaf611e9984611548565b93611ea76040519586611526565b808552611548565b6020929084840190601f1901368237845115611fba5760309053835190600191821015611fba57611ee890607860218701536002611e62565b818101809111611ba257905b808211611f48575050611f05575090565b6064906040519062461bcd60e51b825280600483015260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152fd5b9091600f81166010811015611fa5578551841015611fa5576f181899199a1a9b1b9c1cb0b131b232b360811b901a85840185015360041c918015611f90576000190190611ef4565b60246000634e487b7160e01b81526011600452fd5b60246000634e487b7160e01b81526032600452fd5b634e487b7160e01b600052603260045260246000fd5b8054821015611fba5760005260206000200190600090565b9190600183016000908282528060205260408220541560001461206e578454946801000000000000000086101561205a578361204a612031886001604098999a01855584611fd0565b819391549060031b600019811b9283911b169119161790565b9055549382526020522055600190565b634e487b7160e01b83526041600452602483fd5b50925050565b9060018201906000928184528260205260408420549081151560001461215d57600019918083018181116121495782549084820191821161213557808203612100575b505050805480156120ec578201916120cf8383611fd0565b909182549160031b1b191690555582526020526040812055600190565b634e487b7160e01b86526031600452602486fd5b6121206121106120319386611fd0565b90549060031b1c92839286611fd0565b905586528460205260408620553880806120b7565b634e487b7160e01b88526011600452602488fd5b634e487b7160e01b87526011600452602487fd5b5050505090565b6101915460405163d994d6d560e01b815233600482015290602090829060249082906001600160a01b03165afa9081156121f8576000916121ba575b50156121a857565b604051631dd1b1b560e21b8152600490fd5b6020813d82116121f0575b816121d260209383611526565b810103126121ec5751908115158203611aaf5750386121a0565b5080fd5b3d91506121c5565b6040513d6000823e3d90fd5b1561220b57565b60405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608490fdfe2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d47197230e1e4b29fc0bd84d7d78966c0925452aff72a2a121538b102457e9ebea26469706673582212203965df23ab4793f168a5e2652ee2ab5f12b08d29d332c82ec89612d2d48ab31e64736f6c6343000810003360803461008c57601f61031338819003918201601f19168301916001600160401b0383118484101761009157808492604094855283398101031261008c5780516001600160a01b038116919082900361008c5760200151908160000b820361008c576000549160a01b60ff60a01b169160018060a81b031916171760005560405161026b90816100a88239f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe608060408181526004918236101561001657600080fd5b600092833560e01c91826312fc41ca146101ee5750816359e02dd714610070575063b888879e1461004657600080fd5b3461006c578160031936011261006c57905490516001600160a01b039091168152602090f35b5080fd5b8391503461006c578160031936011261006c57815483516359e02dd760e01b815292848484816001600160a01b0386165afa9384156101e25781908295610177575b509160a01c8281830b838113156101075750506100d19060ff1661020e565b9282600019048411831515166100f457505002905b825191825215156020820152f35b634e487b7160e01b825260119052602490fd5b9092809250819695949612610120575b505050506100e6565b909192939450607f1981146101645761013d90820360ff1661020e565b928315610151575050049083808080610117565b634e487b7160e01b825260129052602490fd5b634e487b7160e01b825260118452602482fd5b945050843d86116101db575b601f8101601f1916850167ffffffffffffffff8111868210176101c857869186918352810103126101c5576020845194015193841515850361006c57866100b2565b80fd5b634e487b7160e01b835260418552602483fd5b503d610183565b508451903d90823e3d90fd5b84903461006c578160031936011261006c57816020925460a01c900b8152f35b60ff16604d811161021f57600a0a90565b634e487b7160e01b600052601160045260246000fdfea26469706673582212201ae48dcb727ff64c7999657a96016231bf43c6e2e8bfa366a82b31cfc1b2adf764736f6c63430008100033a2646970667358221220acc3925a1ef6630b791966ca5be22cdad383edf9a4613cf08bea50a43e3347f464736f6c63430008100033",
  "linkReferences": {},
  "deployedLinkReferences": {},
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "title": "EchidnaMocWrapperTester",
    "version": 1
  },
  "evm": {
    "bytecode": {
      "functionDebugData": {
        "checked_mul_uint256": {
          "entryPoint": 3389,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "finalize_allocation": {
          "entryPoint": 3331,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 0
        },
        "fun_addAsset": {
          "entryPoint": 3431,
          "id": 22668,
          "parameterSlots": 1,
          "returnSlots": 0
        },
        "fun_deployProxy": {
          "entryPoint": 4125,
          "id": 22782,
          "parameterSlots": 1,
          "returnSlots": 1
        }
      },
      "generatedSources": [],
      "linkReferences": {},
      "opcodes": "PUSH2 0x100 PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 OR SWAP1 SWAP2 SSTORE PUSH1 0x9 DUP1 SLOAD DUP3 AND PUSH1 0x2 OR SWAP1 SSTORE SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x1BD DUP1 DUP3 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT DUP4 DUP4 LT OR PUSH3 0xCC7 JUMPI SWAP1 DUP3 SWAP2 PUSH3 0x15D2F DUP4 CODECOPY SUB SWAP1 DUP3 CREATE DUP1 ISZERO PUSH3 0xC0E JUMPI PUSH1 0x1 DUP1 SLOAD DUP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH2 0x1033 SWAP1 DUP2 DUP2 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT DUP2 DUP4 LT OR PUSH3 0xCC7 JUMPI DUP1 PUSH3 0x137FB SWAP3 DUP5 DUP5 DUP4 CODECOPY SUB SWAP1 DUP5 CREATE DUP1 ISZERO PUSH3 0xBA1 JUMPI PUSH1 0x5 DUP1 SLOAD DUP7 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP2 DUP1 DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH3 0xCEF JUMPI SWAP1 DUP4 SWAP3 SWAP2 DUP4 CODECOPY SUB SWAP1 DUP3 CREATE DUP1 ISZERO PUSH3 0xC0E JUMPI PUSH1 0x2 DUP1 SLOAD DUP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH2 0x19A DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR PUSH3 0xCDB JUMPI DUP2 PUSH1 0x20 SWAP2 PUSH2 0x19A PUSH3 0x15861 DUP4 CODECOPY PUSH8 0xDE0B6B3A7640000 DUP2 MSTORE SUB ADD SWAP1 DUP3 CREATE DUP1 ISZERO PUSH3 0xC0E JUMPI PUSH1 0x4 DUP1 SLOAD DUP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH2 0x2647 DUP1 DUP3 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT DUP4 DUP4 LT OR PUSH3 0xCC7 JUMPI SWAP1 DUP3 SWAP2 PUSH3 0x182A8 DUP4 CODECOPY SUB SWAP1 DUP3 CREATE DUP1 ISZERO PUSH3 0xC0E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH3 0x19F SWAP1 DUP3 AND PUSH3 0x101D JUMP JUMPDEST AND DUP3 PUSH1 0x3 SLOAD AND OR PUSH1 0x3 SSTORE PUSH1 0x40 MLOAD PUSH2 0x5F74 DUP1 DUP3 ADD SWAP1 DUP3 DUP3 LT PUSH1 0x1 DUP1 PUSH1 0x40 SHL SUB DUP4 GT OR PUSH3 0xCC7 JUMPI SWAP1 DUP3 SWAP2 PUSH3 0xA880 DUP4 CODECOPY SUB SWAP1 DUP3 CREATE DUP1 ISZERO PUSH3 0xC0E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH3 0x1EF SWAP1 DUP3 AND PUSH3 0x101D JUMP JUMPDEST DUP3 SLOAD DUP5 AND SWAP2 AND OR DUP2 SSTORE PUSH1 0x40 MLOAD PUSH2 0x493D DUP1 DUP3 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT DUP4 DUP4 LT OR PUSH3 0xCC7 JUMPI SWAP1 DUP3 SWAP2 PUSH3 0x5F43 DUP4 CODECOPY SUB SWAP1 DUP3 CREATE DUP1 ISZERO PUSH3 0xC0E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH3 0x23F SWAP1 DUP3 AND PUSH3 0x101D JUMP JUMPDEST AND DUP3 PUSH1 0xB SLOAD AND OR PUSH1 0xB SSTORE PUSH1 0x40 MLOAD PUSH2 0x3007 DUP1 DUP3 ADD SWAP1 DUP3 DUP3 LT PUSH1 0x1 DUP1 PUSH1 0x40 SHL SUB DUP4 GT OR PUSH3 0xCC7 JUMPI SWAP1 DUP3 SWAP2 PUSH3 0x107F4 DUP4 CODECOPY SUB SWAP1 DUP3 CREATE DUP1 ISZERO PUSH3 0xC0E JUMPI PUSH1 0x7 DUP1 SLOAD DUP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH2 0x103D DUP1 DUP3 ADD SWAP4 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP6 GT DUP3 DUP7 LT OR PUSH3 0xCC7 JUMPI DUP4 SWAP5 DUP3 SWAP2 PUSH3 0x1AC02 DUP4 CODECOPY SUB SWAP1 DUP4 CREATE DUP1 ISZERO PUSH3 0xB58 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH3 0x2DB SWAP1 DUP3 AND PUSH3 0x101D JUMP JUMPDEST AND DUP1 SWAP2 PUSH1 0x6 SLOAD AND OR PUSH1 0x6 SSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x1 SLOAD AND DUP2 EXTCODESIZE ISZERO PUSH3 0xB63 JUMPI DUP3 SWAP2 PUSH1 0x64 DUP4 SWAP3 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP4 DUP5 SWAP3 PUSH4 0xC0C53B8B PUSH1 0xE0 SHL DUP5 MSTORE CALLER PUSH1 0x4 DUP6 ADD MSTORE PUSH1 0x24 DUP5 ADD MSTORE CALLER PUSH1 0x44 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH3 0xC0E JUMPI PUSH3 0xCB4 JUMPI JUMPDEST PUSH1 0x3 SLOAD DUP2 SLOAD PUSH1 0x1 SLOAD SWAP3 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP3 SWAP1 DUP3 AND SWAP2 AND DUP3 EXTCODESIZE ISZERO PUSH3 0xCAF JUMPI PUSH2 0x104 DUP5 SWAP3 DUP4 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH4 0x23C56D05 PUSH1 0xE2 SHL DUP6 MSTORE PUSH1 0x80 PUSH1 0x4 DUP7 ADD MSTORE PUSH1 0x7 PUSH1 0x84 DUP7 ADD MSTORE PUSH7 0x2A21AA37B5B2B7 PUSH1 0xC9 SHL PUSH1 0xA4 DUP7 ADD MSTORE PUSH1 0xC0 PUSH1 0x24 DUP7 ADD MSTORE PUSH1 0x2 PUSH1 0xC4 DUP7 ADD MSTORE PUSH2 0x5443 PUSH1 0xF0 SHL PUSH1 0xE4 DUP7 ADD MSTORE PUSH1 0x44 DUP6 ADD MSTORE PUSH1 0x64 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH3 0xB58 JUMPI PUSH3 0xC96 JUMPI JUMPDEST POP POP PUSH1 0x2 DUP1 SLOAD PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0xC0 MSTORE PUSH1 0x3 SLOAD PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD SWAP4 DUP4 AND SWAP5 SWAP2 DUP4 AND SWAP4 SWAP1 DUP4 AND SWAP3 AND SWAP1 PUSH3 0x400 SWAP1 PUSH8 0xDE0B6B3A7640000 SWAP1 PUSH3 0xD3D JUMP JUMPDEST PUSH3 0x415 PUSH8 0xDE0B6B3A7640000 PUSH1 0x1 PUSH3 0xD3D JUMP JUMPDEST PUSH1 0xA PUSH3 0x42C PUSH8 0xDE0B6B3A7640000 PUSH1 0x2 PUSH3 0xD3D JUMP JUMPDEST DIV PUSH1 0x64 PUSH3 0x444 PUSH8 0xDE0B6B3A7640000 PUSH1 0x5 PUSH3 0xD3D JUMP JUMPDEST DIV PUSH1 0x64 PUSH3 0x45C PUSH8 0xDE0B6B3A7640000 PUSH1 0x5 PUSH3 0xD3D JUMP JUMPDEST DIV SWAP2 PUSH1 0x64 PUSH3 0x475 PUSH8 0xDE0B6B3A7640000 PUSH1 0x1 PUSH3 0xD3D JUMP JUMPDEST DIV SWAP4 PUSH1 0x64 PUSH3 0x48E PUSH8 0xDE0B6B3A7640000 PUSH1 0x1 PUSH3 0xD3D JUMP JUMPDEST DIV SWAP6 PUSH1 0x64 PUSH3 0x4A7 PUSH8 0xDE0B6B3A7640000 PUSH1 0x1 PUSH3 0xD3D JUMP JUMPDEST DIV SWAP8 PUSH1 0x64 PUSH3 0x4C0 PUSH8 0xDE0B6B3A7640000 PUSH1 0x8 PUSH3 0xD3D JUMP JUMPDEST DIV SWAP10 PUSH1 0x64 PUSH3 0x4D9 PUSH8 0xDE0B6B3A7640000 PUSH1 0x8 PUSH3 0xD3D JUMP JUMPDEST DIV SWAP12 PUSH1 0xA PUSH3 0x4F2 PUSH8 0xDE0B6B3A7640000 PUSH1 0x5 PUSH3 0xD3D JUMP JUMPDEST DIV SWAP14 PUSH1 0xA PUSH3 0x50B PUSH8 0xDE0B6B3A7640000 PUSH1 0x1 PUSH3 0xD3D JUMP JUMPDEST DIV PUSH1 0x80 MSTORE PUSH1 0xA PUSH3 0x526 PUSH8 0xDE0B6B3A7640000 PUSH1 0x5 PUSH3 0xD3D JUMP JUMPDEST DIV PUSH1 0xE0 MSTORE PUSH3 0x53E PUSH2 0x260 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 MSTORE PUSH3 0xD03 JUMP JUMPDEST PUSH1 0xA0 MLOAD MSTORE PUSH1 0xC0 MLOAD PUSH1 0x20 PUSH1 0xA0 MLOAD ADD MSTORE PUSH1 0x40 PUSH1 0xA0 MLOAD ADD MSTORE PUSH1 0x60 PUSH1 0xA0 MLOAD ADD MSTORE PUSH1 0x80 PUSH1 0xA0 MLOAD ADD MSTORE PUSH1 0xA0 DUP1 MLOAD ADD MSTORE PUSH1 0xC0 PUSH1 0xA0 MLOAD ADD MSTORE PUSH1 0xE0 PUSH1 0xA0 MLOAD ADD MSTORE PUSH2 0x100 PUSH1 0xA0 MLOAD ADD MSTORE PUSH2 0x120 PUSH1 0xA0 MLOAD ADD MSTORE PUSH2 0x140 PUSH1 0xA0 MLOAD ADD MSTORE PUSH2 0x160 PUSH1 0xA0 MLOAD ADD MSTORE PUSH2 0x180 PUSH1 0xA0 MLOAD ADD MSTORE PUSH2 0x1A0 PUSH1 0xA0 MLOAD ADD MSTORE PUSH2 0x1C0 PUSH1 0xA0 MLOAD ADD MSTORE PUSH2 0x1E0 PUSH1 0xA0 MLOAD ADD MSTORE PUSH1 0x80 MLOAD PUSH2 0x200 PUSH1 0xA0 MLOAD ADD MSTORE PUSH1 0xE0 MLOAD PUSH2 0x220 PUSH1 0xA0 MLOAD ADD MSTORE PUSH3 0x278D00 PUSH2 0x240 PUSH1 0xA0 MLOAD ADD MSTORE DUP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x1 SLOAD AND PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x7 SLOAD AND PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x6 SLOAD AND SWAP1 PUSH1 0x40 MLOAD SWAP3 PUSH3 0x60B PUSH1 0xC0 DUP6 PUSH3 0xD03 JUMP JUMPDEST PUSH1 0xA0 MLOAD DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE CALLER PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH3 0x15180 PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x5 SLOAD AND PUSH1 0x40 MLOAD SWAP2 PUSH3 0x64A PUSH1 0x40 DUP5 PUSH3 0xD03 JUMP JUMPDEST DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 EXTCODESIZE ISZERO PUSH3 0xB63 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH4 0x6512D8C5 PUSH1 0xE1 SHL DUP2 MSTORE DUP3 MLOAD DUP1 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x4 DUP6 ADD MSTORE PUSH1 0x20 DUP1 DUP4 ADD MLOAD DUP3 AND PUSH1 0x24 DUP7 ADD MSTORE DUP3 DUP7 ADD MLOAD DUP3 AND PUSH1 0x44 DUP7 ADD MSTORE PUSH1 0x60 DUP1 DUP5 ADD MLOAD DUP4 AND PUSH1 0x64 DUP8 ADD MSTORE PUSH1 0x80 DUP1 DUP6 ADD MLOAD DUP5 AND PUSH1 0x84 DUP9 ADD MSTORE PUSH1 0xA0 DUP1 DUP7 ADD MLOAD PUSH1 0xA4 DUP10 ADD MSTORE PUSH1 0xC0 DUP7 ADD MLOAD PUSH1 0xC4 DUP10 ADD MSTORE PUSH1 0xE0 DUP7 ADD MLOAD PUSH1 0xE4 DUP10 ADD MSTORE PUSH2 0x100 DUP7 ADD MLOAD PUSH2 0x104 DUP10 ADD MSTORE PUSH2 0x120 DUP7 ADD MLOAD PUSH2 0x124 DUP10 ADD MSTORE PUSH2 0x140 DUP7 ADD MLOAD PUSH2 0x144 DUP10 ADD MSTORE PUSH2 0x160 DUP7 ADD MLOAD PUSH2 0x164 DUP10 ADD MSTORE PUSH2 0x180 DUP7 ADD MLOAD PUSH2 0x184 DUP10 ADD MSTORE PUSH2 0x1A0 DUP7 ADD MLOAD PUSH2 0x1A4 DUP10 ADD MSTORE PUSH2 0x1C0 DUP7 ADD MLOAD PUSH2 0x1C4 DUP10 ADD MSTORE PUSH2 0x1E0 DUP7 ADD MLOAD PUSH2 0x1E4 DUP10 ADD MSTORE PUSH2 0x200 DUP7 ADD MLOAD PUSH2 0x204 DUP10 ADD MSTORE PUSH2 0x220 DUP7 ADD MLOAD PUSH2 0x224 DUP10 ADD MSTORE PUSH2 0x240 SWAP1 SWAP6 ADD MLOAD PUSH2 0x244 DUP9 ADD MSTORE DUP3 DUP7 ADD MLOAD DUP5 AND PUSH2 0x264 DUP9 ADD MSTORE SWAP7 DUP6 ADD MLOAD DUP4 AND PUSH2 0x284 DUP8 ADD MSTORE DUP5 ADD MLOAD DUP3 AND PUSH2 0x2A4 DUP7 ADD MSTORE SWAP5 DUP4 ADD MLOAD PUSH2 0x2C4 DUP6 ADD MSTORE SWAP2 ADD MLOAD DUP2 AND PUSH2 0x2E4 DUP4 ADD MSTORE SWAP2 SWAP1 SWAP3 ADD MLOAD AND PUSH2 0x304 DUP3 ADD MSTORE SWAP1 DUP3 SWAP1 DUP3 SWAP1 PUSH2 0x324 SWAP1 DUP3 SWAP1 DUP5 SWAP1 GAS CALL DUP1 ISZERO PUSH3 0xB58 JUMPI PUSH3 0xC7D JUMPI JUMPDEST POP PUSH1 0xB SLOAD PUSH1 0x1 SLOAD DUP3 SLOAD PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP4 SWAP3 DUP2 AND SWAP3 SWAP2 DUP2 AND SWAP2 AND DUP1 EXTCODESIZE ISZERO PUSH3 0xC79 JUMPI DUP5 SWAP3 DUP4 PUSH1 0x84 SWAP3 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP6 DUP7 SWAP5 PUSH4 0x7C643B2F PUSH1 0xE1 SHL DUP7 MSTORE PUSH1 0x4 DUP7 ADD MSTORE CALLER PUSH1 0x24 DUP7 ADD MSTORE PUSH1 0x44 DUP6 ADD MSTORE PUSH1 0x64 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH3 0xB58 JUMPI PUSH3 0xC60 JUMPI JUMPDEST POP POP PUSH3 0x83B PUSH8 0xDE0B6B3A7640000 PUSH1 0x5 PUSH3 0xD3D JUMP JUMPDEST SWAP1 PUSH1 0x64 PUSH3 0x853 PUSH8 0xDE0B6B3A7640000 PUSH1 0x5 PUSH3 0xD3D JUMP JUMPDEST DIV PUSH1 0x64 PUSH3 0x86B PUSH8 0xDE0B6B3A7640000 PUSH1 0x5 PUSH3 0xD3D JUMP JUMPDEST DIV PUSH3 0x881 PUSH8 0xDE0B6B3A7640000 PUSH1 0xD4 PUSH3 0xD3D JUMP JUMPDEST SWAP1 PUSH1 0x64 PUSH3 0x899 PUSH8 0xDE0B6B3A7640000 PUSH1 0x5 PUSH3 0xD3D JUMP JUMPDEST DIV SWAP3 PUSH1 0x40 MLOAD SWAP6 PUSH3 0x8AC PUSH1 0xE0 DUP9 PUSH3 0xD03 JUMP JUMPDEST DUP6 DUP8 MSTORE DUP6 PUSH1 0x20 DUP9 ADD MSTORE PUSH1 0x40 DUP8 ADD MSTORE PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0x5 PUSH1 0xA SLOAD LT ISZERO PUSH3 0xC1B JUMPI PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH2 0x23BC DUP3 ADD SWAP1 DUP2 GT SWAP1 DUP3 GT OR PUSH3 0xBD9 JUMPI PUSH2 0x23BC PUSH3 0x15EEC DUP3 CODECOPY DUP1 PUSH2 0x23BC DUP2 ADD SUB SWAP1 DUP3 CREATE DUP1 ISZERO PUSH3 0xC0E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH3 0x926 SWAP1 DUP3 AND PUSH3 0x101D JUMP JUMPDEST DUP3 SLOAD PUSH1 0x1 SLOAD SWAP3 SWAP1 SWAP2 AND SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 AND DUP3 EXTCODESIZE ISZERO PUSH3 0xC0A JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH4 0x23C56D05 PUSH1 0xE2 SHL DUP4 MSTORE PUSH1 0x80 PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x7 PUSH1 0x84 DUP5 ADD MSTORE PUSH7 0x2A282A37B5B2B7 PUSH1 0xC9 SHL PUSH1 0xA4 DUP5 ADD MSTORE PUSH1 0xC0 PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x2 PUSH1 0xC4 DUP5 ADD MSTORE PUSH2 0x545 PUSH1 0xF4 SHL PUSH1 0xE4 DUP5 ADD MSTORE PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP3 ADD MSTORE DUP3 DUP2 PUSH2 0x104 DUP2 DUP4 DUP7 GAS CALL DUP1 ISZERO PUSH3 0xBA1 JUMPI SWAP1 DUP4 SWAP2 PUSH3 0xBED JUMPI JUMPDEST POP POP DUP3 MSTORE PUSH1 0x40 MLOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH2 0x19A DUP5 ADD SWAP1 DUP2 GT SWAP1 DUP5 GT OR PUSH3 0xBD9 JUMPI DUP2 SWAP3 PUSH2 0x19A PUSH3 0x159FB DUP3 CODECOPY PUSH9 0xCBD47B6EAA8CC0001 PUSH2 0x19A DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH2 0x19A DUP2 ADD SUB ADD SWAP1 DUP4 CREATE DUP1 ISZERO PUSH3 0xB58 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE DUP3 SLOAD AND SWAP1 DUP2 EXTCODESIZE ISZERO PUSH3 0xB63 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH4 0x6DBCB039 PUSH1 0xE1 SHL DUP2 MSTORE DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x20 DUP5 ADD MLOAD AND PUSH1 0x24 DUP3 ADD MSTORE SWAP1 DUP3 ADD MLOAD PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA0 DUP3 ADD MLOAD PUSH1 0xA4 DUP3 ADD MSTORE PUSH1 0xC0 SWAP1 SWAP2 ADD MLOAD PUSH1 0xC4 DUP3 ADD MSTORE SWAP1 DUP3 SWAP1 DUP3 SWAP1 PUSH1 0xE4 SWAP1 DUP3 SWAP1 DUP5 SWAP1 GAS CALL DUP1 ISZERO PUSH3 0xB58 JUMPI PUSH3 0xBC0 JUMPI JUMPDEST POP POP PUSH1 0xA SLOAD PUSH1 0x0 NOT DUP2 EQ PUSH3 0xBAC JUMPI PUSH1 0x1 ADD PUSH1 0xA SSTORE PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP3 PUSH1 0x24 DUP2 DUP5 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH3 0xBA1 JUMPI DUP4 SWAP3 PUSH3 0xB67 JUMPI JUMPDEST POP DUP1 EXTCODESIZE ISZERO PUSH3 0xB63 JUMPI PUSH1 0x24 DUP4 SWAP3 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP4 DUP5 SWAP3 PUSH4 0x852CD8D PUSH1 0xE3 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH3 0xB58 JUMPI PUSH3 0xB3C JUMPI JUMPDEST PUSH3 0xB20 PUSH1 0x12 PUSH3 0xD67 JUMP JUMPDEST PUSH3 0xB2C PUSH1 0x6 PUSH3 0xD67 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4ACC SWAP1 DUP2 PUSH3 0x107D DUP3 CODECOPY RETURN JUMPDEST PUSH3 0xB49 DUP3 DUP1 SWAP3 PUSH3 0xD03 JUMP JUMPDEST PUSH3 0xB55 JUMPI DUP1 PUSH3 0xB14 JUMP JUMPDEST DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP POP REVERT JUMPDEST SWAP1 SWAP2 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH3 0xB98 JUMPI JUMPDEST DUP2 PUSH3 0xB86 PUSH1 0x20 SWAP4 DUP4 PUSH3 0xD03 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH3 0xB63 JUMPI MLOAD SWAP1 CODESIZE PUSH3 0xAE1 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH3 0xB77 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST DUP2 PUSH3 0xBCC SWAP2 PUSH3 0xD03 JUMP JUMPDEST PUSH3 0xB55 JUMPI DUP1 CODESIZE PUSH3 0xA92 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST DUP2 PUSH3 0xBF9 SWAP2 PUSH3 0xD03 JUMP JUMPDEST PUSH3 0xC06 JUMPI DUP2 CODESIZE PUSH3 0x9AE JUMP JUMPDEST POP DUP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6D617820545020616C7265616479206164646564000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP2 PUSH3 0xC6C SWAP2 PUSH3 0xD03 JUMP JUMPDEST PUSH3 0xB55 JUMPI DUP1 CODESIZE PUSH3 0x824 JUMP JUMPDEST DUP5 DUP1 REVERT JUMPDEST DUP2 PUSH3 0xC89 SWAP2 PUSH3 0xD03 JUMP JUMPDEST PUSH3 0xB55 JUMPI DUP1 CODESIZE PUSH3 0x7BF JUMP JUMPDEST DUP2 PUSH3 0xCA2 SWAP2 PUSH3 0xD03 JUMP JUMPDEST PUSH3 0xB55 JUMPI DUP1 CODESIZE PUSH3 0x3BD JUMP JUMPDEST POP POP POP REVERT JUMPDEST PUSH3 0xCBF SWAP2 PUSH3 0xD03 JUMP JUMPDEST CODESIZE DUP2 PUSH3 0x331 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT SWAP1 DUP3 LT OR PUSH3 0xD27 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT DUP2 ISZERO ISZERO AND PUSH3 0xD51 JUMPI MUL SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x5 PUSH1 0xC SLOAD LT ISZERO PUSH3 0xFD8 JUMPI PUSH1 0x40 DUP1 MLOAD SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP2 PUSH2 0x1033 DUP1 DUP3 ADD SWAP3 SWAP2 SWAP1 DUP5 DUP5 GT DUP3 DUP6 LT OR PUSH3 0xD27 JUMPI PUSH3 0x1482E DUP3 CODECOPY DUP1 PUSH1 0x0 SWAP4 SUB SWAP1 DUP4 CREATE DUP1 ISZERO PUSH3 0xFCE JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP5 DUP6 EXTCODESIZE ISZERO PUSH3 0xC0A JUMPI PUSH1 0xFF PUSH1 0x18 DUP2 DUP4 MLOAD SWAP6 PUSH4 0x3D09CAD5 PUSH1 0xE1 SHL DUP8 MSTORE AND MOD AND SWAP5 PUSH1 0x4 SWAP6 DUP1 DUP8 DUP7 ADD MSTORE PUSH1 0x24 SWAP5 DUP7 DUP2 DUP8 DUP2 DUP4 DUP14 GAS CALL DUP1 ISZERO PUSH3 0xF9B JUMPI PUSH3 0xFB7 JUMPI JUMPDEST POP DUP4 PUSH1 0xB SLOAD AND SWAP2 DUP4 MLOAD PUSH2 0x19A DUP1 DUP3 ADD SWAP1 DUP3 DUP3 LT DUP5 DUP4 GT OR PUSH3 0xFA5 JUMPI PUSH1 0x20 SWAP2 DUP4 SWAP2 PUSH3 0x15B95 DUP4 CODECOPY PUSH8 0xDE0B6B3A7640000 DUP2 MSTORE SUB ADD SWAP1 DUP9 CREATE SWAP1 DUP2 ISZERO PUSH3 0xF9B JUMPI DUP3 PUSH1 0x12 SUB PUSH1 0xFF DUP2 GT PUSH3 0xF89 JUMPI DUP6 MLOAD SWAP3 PUSH2 0x313 DUP1 DUP6 ADD SWAP4 DUP5 GT DUP6 DUP6 LT OR PUSH3 0xF77 JUMPI DUP5 SWAP3 DUP10 DUP10 SWAP6 SWAP4 PUSH1 0xFF SWAP4 PUSH3 0x1A8EF DUP8 CODECOPY AND DUP4 MSTORE AND DUP11 SIGNEXTEND PUSH1 0x20 DUP3 ADD MSTORE SUB ADD SWAP1 DUP8 CREATE SWAP4 DUP5 ISZERO PUSH3 0xF6D JUMPI DUP3 EXTCODESIZE ISZERO PUSH3 0xF69 JUMPI DUP4 MLOAD PUSH4 0x966D3F23 PUSH1 0xE0 SHL DUP2 MSTORE DUP1 DUP10 ADD DUP11 SWAP1 MSTORE SWAP5 AND DUP6 DUP6 ADD MSTORE PUSH1 0x44 DUP5 ADD MSTORE DUP5 SWAP1 DUP4 SWAP1 PUSH1 0x64 SWAP1 DUP3 SWAP1 DUP5 SWAP1 GAS CALL SWAP1 DUP2 ISZERO PUSH3 0xF60 JUMPI POP SWAP1 DUP4 SWAP2 PUSH3 0xF47 JUMPI JUMPDEST POP POP PUSH1 0xC SLOAD SWAP3 PUSH9 0x10000000000000000 DUP5 LT ISZERO PUSH3 0xF36 JUMPI PUSH1 0x1 DUP5 ADD DUP1 PUSH1 0xC SSTORE DUP5 LT ISZERO PUSH3 0xF25 JUMPI POP POP PUSH1 0xC SWAP1 MSTORE PUSH32 0xDF6966C971051C3D54EC59162606531493A51404A002842F56009D7E5CF4A8C7 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x32 SWAP1 MSTORE DUP2 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x41 SWAP1 MSTORE DUP2 REVERT JUMPDEST DUP2 PUSH3 0xF53 SWAP2 PUSH3 0xD03 JUMP JUMPDEST PUSH3 0xC06 JUMPI DUP2 CODESIZE PUSH3 0xEC2 JUMP JUMPDEST MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP7 DUP1 REVERT JUMPDEST DUP4 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP12 MSTORE PUSH1 0x41 DUP13 MSTORE DUP10 DUP12 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP10 MSTORE PUSH1 0x11 DUP11 MSTORE DUP8 DUP10 REVERT JUMPDEST DUP5 MLOAD RETURNDATASIZE DUP10 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP11 MSTORE PUSH1 0x41 DUP12 MSTORE DUP9 DUP11 REVERT JUMPDEST DUP7 PUSH3 0xFC6 SWAP2 SWAP8 SWAP3 SWAP8 PUSH3 0xD03 JUMP JUMPDEST SWAP5 CODESIZE PUSH3 0xDF6 JUMP JUMPDEST DUP5 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6D61782061737365747320616C72656164792061646465640000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3FA DUP1 DUP3 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT DUP4 DUP4 LT OR PUSH3 0xD27 JUMPI PUSH1 0x60 SWAP2 DUP4 SWAP2 PUSH3 0x5B49 DUP4 CODECOPY PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP6 AND DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x40 DUP3 ADD MSTORE SUB ADD SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO PUSH3 0x1070 JUMPI AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH3 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x24035D38 EQ PUSH3 0x814 JUMPI DUP1 PUSH4 0x3295B14F EQ PUSH3 0x718 JUMPI DUP1 PUSH4 0x499E3B16 EQ PUSH3 0x582 JUMPI DUP1 PUSH4 0xA1791617 EQ PUSH3 0x3D1 JUMPI DUP1 PUSH4 0xB75205CB EQ PUSH3 0x334 JUMPI PUSH4 0xE0955452 EQ PUSH3 0x66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH3 0x331 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH3 0x331 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP1 SWAP2 SUB PUSH3 0x32C JUMPI PUSH1 0x5 PUSH1 0xC SLOAD LT ISZERO PUSH3 0x2E7 JUMPI PUSH1 0x40 MLOAD PUSH2 0x1033 SWAP1 DUP2 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF SWAP3 DUP3 DUP3 LT DUP5 DUP4 GT OR PUSH3 0x2D3 JUMPI SWAP1 DUP3 SWAP2 PUSH3 0x1061 DUP4 CODECOPY SUB SWAP1 DUP5 CREATE SWAP2 DUP3 ISZERO PUSH3 0x263 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP2 DUP3 EXTCODESIZE ISZERO PUSH3 0x2CF JUMPI PUSH1 0xFF PUSH1 0x18 PUSH1 0x40 MLOAD SWAP4 PUSH4 0x3D09CAD5 PUSH1 0xE1 SHL DUP6 MSTORE MOD AND SWAP1 DUP2 PUSH1 0x4 DUP5 ADD MSTORE DUP6 PUSH1 0x24 SWAP4 DUP2 DUP2 DUP7 DUP2 DUP4 DUP11 GAS CALL DUP1 ISZERO PUSH3 0x258 JUMPI PUSH3 0x2B2 JUMPI JUMPDEST POP POP DUP5 PUSH1 0xB SLOAD AND SWAP1 PUSH1 0x40 MLOAD PUSH2 0x19A DUP1 DUP3 ADD SWAP1 DUP3 DUP3 LT DUP5 DUP4 GT OR PUSH3 0x29F JUMPI PUSH1 0x20 SWAP2 DUP4 SWAP2 PUSH3 0x2094 DUP4 CODECOPY PUSH8 0xDE0B6B3A7640000 DUP2 MSTORE SUB ADD SWAP1 DUP9 CREATE SWAP1 DUP2 ISZERO PUSH3 0x294 JUMPI DUP4 PUSH1 0x12 SUB PUSH1 0xFF DUP2 GT PUSH3 0x281 JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH2 0x313 DUP1 DUP6 ADD SWAP4 DUP5 GT DUP6 DUP6 LT OR PUSH3 0x26E JUMPI SWAP3 PUSH1 0xFF PUSH1 0x40 SWAP4 DUP12 DUP8 SWAP7 SWAP5 DUP15 SWAP11 SWAP10 SWAP9 SWAP6 PUSH3 0x4784 DUP8 CODECOPY AND DUP4 MSTORE AND DUP8 SIGNEXTEND PUSH1 0x20 DUP3 ADD MSTORE SUB ADD SWAP1 DUP5 CREATE DUP1 ISZERO PUSH3 0x263 JUMPI DUP2 EXTCODESIZE ISZERO PUSH3 0x254 JUMPI PUSH1 0x64 DUP8 SWAP2 DUP6 DUP1 SWAP5 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP6 DUP7 SWAP5 PUSH4 0x966D3F23 PUSH1 0xE0 SHL DUP7 MSTORE DUP13 PUSH1 0x4 DUP8 ADD MSTORE AND DUP11 DUP6 ADD MSTORE PUSH1 0x44 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH3 0x258 JUMPI PUSH3 0x23B JUMPI JUMPDEST POP POP PUSH1 0xC SLOAD SWAP1 PUSH9 0x10000000000000000 DUP3 LT ISZERO PUSH3 0x229 JUMPI POP DUP1 PUSH1 0x1 PUSH3 0x20E SWAP3 ADD PUSH1 0xC SSTORE PUSH1 0xC PUSH3 0xC09 JUMP JUMPDEST SWAP1 SWAP3 DUP4 SLOAD SWAP2 PUSH1 0x3 SHL SWAP1 DUP2 SHL SWAP3 DUP4 SWAP2 SHL AND SWAP2 NOT AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE DUP5 REVERT JUMPDEST DUP2 PUSH3 0x247 SWAP2 PUSH3 0xB80 JUMP JUMPDEST PUSH3 0x254 JUMPI DUP4 CODESIZE PUSH3 0x1E1 JUMP JUMPDEST DUP4 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP12 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE DUP8 DUP12 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP10 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE DUP6 DUP10 REVERT JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP10 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP11 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE DUP7 DUP11 REVERT JUMPDEST DUP2 PUSH3 0x2BE SWAP2 PUSH3 0xB80 JUMP JUMPDEST PUSH3 0x2CB JUMPI DUP6 CODESIZE PUSH3 0x111 JUMP JUMPDEST DUP6 DUP1 REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6D61782061737365747320616C72656164792061646465640000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH3 0x331 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0x331 JUMPI PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0x25CA7A87 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x4 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH3 0x258 JUMPI DUP3 SWAP2 PUSH3 0x392 JUMPI JUMPDEST PUSH1 0x20 DUP3 PUSH8 0xDE0B6B3A7640000 PUSH1 0x40 MLOAD SWAP2 EQ DUP2 MSTORE RETURN JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE DUP3 GT PUSH3 0x3C8 JUMPI JUMPDEST DUP2 PUSH3 0x3AF PUSH1 0x20 SWAP4 DUP4 PUSH3 0xB80 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH3 0x3C4 JUMPI PUSH1 0x20 SWAP2 POP MLOAD CODESIZE PUSH3 0x37D JUMP JUMPDEST POP DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH3 0x3A0 JUMP JUMPDEST POP CALLVALUE PUSH3 0x331 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH3 0x331 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP1 SWAP2 SUB PUSH3 0x32C JUMPI DUP2 SWAP1 PUSH3 0x414 PUSH3 0x40C PUSH1 0x24 CALLDATALOAD SWAP3 PUSH1 0xC SLOAD SWAP1 PUSH3 0xBE8 JUMP JUMPDEST PUSH1 0xC PUSH3 0xC09 JUMP JUMPDEST SWAP1 SLOAD DUP4 SLOAD PUSH1 0x40 MLOAD PUSH4 0x60009E0B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP4 SWAP2 PUSH1 0x20 SWAP2 SWAP1 DUP3 SWAP1 DUP3 SWAP1 PUSH1 0x4 SWAP1 DUP3 SWAP1 DUP11 AND GAS STATICCALL DUP1 ISZERO PUSH3 0x294 JUMPI DUP6 DUP4 SWAP2 DUP10 SWAP1 PUSH3 0x53C JUMPI JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 DUP11 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 SWAP3 POP DUP3 SWAP1 DUP2 DUP11 DUP11 DUP3 PUSH1 0x44 DUP2 ADD JUMPDEST SUB SWAP4 AND GAS CALL DUP1 ISZERO PUSH3 0x294 JUMPI PUSH3 0x507 JUMPI JUMPDEST POP POP DUP4 PUSH1 0xB SLOAD AND SWAP1 DUP2 EXTCODESIZE ISZERO PUSH3 0x2CB JUMPI DUP6 PUSH1 0x64 SWAP3 DUP2 SWAP6 PUSH1 0x40 MLOAD SWAP8 DUP9 SWAP7 DUP8 SWAP6 PUSH4 0x1298C1FF PUSH1 0xE2 SHL DUP8 MSTORE PUSH1 0x3 SHL SHR AND PUSH1 0x4 DUP6 ADD MSTORE PUSH1 0x24 DUP5 ADD MSTORE DUP2 PUSH1 0x44 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH3 0x258 JUMPI PUSH3 0x4EE JUMPI JUMPDEST POP PUSH1 0x40 MLOAD RETURN JUMPDEST DUP2 PUSH3 0x4FA SWAP2 PUSH3 0xB80 JUMP JUMPDEST PUSH3 0x331 JUMPI DUP1 CODESIZE PUSH3 0x4E8 JUMP JUMPDEST DUP2 PUSH3 0x52B SWAP3 SWAP1 RETURNDATASIZE LT PUSH3 0x534 JUMPI JUMPDEST PUSH3 0x522 DUP2 DUP4 PUSH3 0xB80 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH3 0xC4C JUMP JUMPDEST POP CODESIZE DUP1 PUSH3 0x49C JUMP JUMPDEST POP RETURNDATASIZE PUSH3 0x516 JUMP JUMPDEST POP POP DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH3 0x57A JUMPI JUMPDEST PUSH3 0x555 DUP2 DUP4 PUSH3 0xB80 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH3 0x576 JUMPI MLOAD DUP6 DUP2 AND DUP2 SUB PUSH3 0x576 JUMPI DUP2 DUP6 PUSH3 0x48A SWAP3 PUSH3 0x453 JUMP JUMPDEST DUP7 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH3 0x549 JUMP JUMPDEST POP CALLVALUE PUSH3 0x331 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH3 0x331 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP1 SWAP2 SUB PUSH3 0x32C JUMPI DUP2 SWAP1 PUSH3 0x5BD PUSH3 0x40C PUSH1 0x24 CALLDATALOAD SWAP3 PUSH1 0xC SLOAD SWAP1 PUSH3 0xBE8 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SHR DUP2 AND SWAP1 PUSH3 0x5DE PUSH1 0x2 DUP5 PUSH3 0xC38 JUMP JUMPDEST DUP3 EXTCODESIZE ISZERO PUSH3 0x2CF JUMPI PUSH1 0x40 MLOAD PUSH4 0x40C10F19 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP5 DUP2 PUSH1 0x44 DUP2 DUP4 DUP8 GAS CALL SWAP1 DUP2 ISZERO PUSH3 0x6EF JUMPI DUP6 SWAP2 PUSH3 0x6FA JUMPI JUMPDEST POP POP PUSH3 0x662 PUSH1 0x20 DUP3 PUSH1 0xB SLOAD AND PUSH3 0x634 PUSH1 0x2 DUP8 PUSH3 0xC38 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE SWAP2 DUP3 SWAP1 DUP2 SWAP1 PUSH1 0x44 DUP3 ADD SWAP1 JUMP JUMPDEST SUB DUP2 DUP9 DUP8 GAS CALL DUP1 ISZERO PUSH3 0x6EF JUMPI PUSH3 0x6CC JUMPI JUMPDEST POP PUSH1 0xB SLOAD AND SWAP2 PUSH3 0x688 PUSH1 0x2 DUP3 PUSH3 0xC38 JUMP JUMPDEST SWAP3 DUP1 EXTCODESIZE ISZERO PUSH3 0x2CF JUMPI DUP5 SWAP3 DUP4 PUSH1 0x64 SWAP3 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP6 DUP7 SWAP5 PUSH4 0x64184531 PUSH1 0xE1 SHL DUP7 MSTORE PUSH1 0x4 DUP7 ADD MSTORE PUSH1 0x24 DUP6 ADD MSTORE PUSH1 0x44 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH3 0x258 JUMPI PUSH3 0x4EE JUMPI POP PUSH1 0x40 MLOAD RETURN JUMPDEST PUSH3 0x6E7 SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH3 0x534 JUMPI PUSH3 0x522 DUP2 DUP4 PUSH3 0xB80 JUMP JUMPDEST POP CODESIZE PUSH3 0x675 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP2 PUSH3 0x706 SWAP2 PUSH3 0xB80 JUMP JUMPDEST PUSH3 0x713 JUMPI DUP4 CODESIZE PUSH3 0x61A JUMP JUMPDEST POP POP POP REVERT JUMPDEST POP CALLVALUE PUSH3 0x331 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH3 0x331 JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP1 DUP3 AND DUP3 SUB PUSH3 0x32C JUMPI PUSH3 0x74D DUP4 SWAP3 PUSH3 0xBB9 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 DUP5 SLOAD AND PUSH1 0x40 PUSH3 0x76A PUSH1 0xA SLOAD PUSH1 0x4 CALLDATALOAD PUSH3 0xBE8 JUMP JUMPDEST PUSH1 0x24 DUP3 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x4B746001 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH3 0x6EF JUMPI DUP6 SWAP2 PUSH3 0x7CF JUMPI JUMPDEST POP AND SWAP2 DUP3 EXTCODESIZE ISZERO PUSH3 0x713 JUMPI PUSH1 0x24 DUP5 SWAP3 DUP4 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH4 0x32145F9 PUSH1 0xE4 SHL DUP6 MSTORE AND PUSH1 0x4 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH3 0x258 JUMPI PUSH3 0x4EE JUMPI POP PUSH1 0x40 MLOAD RETURN JUMPDEST SWAP1 POP PUSH1 0x40 DUP2 RETURNDATASIZE PUSH1 0x40 GT PUSH3 0x80B JUMPI JUMPDEST DUP2 PUSH3 0x7ED PUSH1 0x40 SWAP4 DUP4 PUSH3 0xB80 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH3 0x2CF JUMPI PUSH1 0x20 ADD MLOAD DUP2 DUP2 AND DUP2 SUB PUSH3 0x2CF JUMPI CODESIZE PUSH3 0x793 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH3 0x7DE JUMP JUMPDEST POP CALLVALUE PUSH3 0x331 JUMPI CALLDATASIZE PUSH1 0x3 NOT ADD PUSH2 0x100 DUP2 SLT PUSH3 0x3C4 JUMPI PUSH1 0xE0 SGT PUSH3 0x331 JUMPI PUSH3 0x840 PUSH1 0xE0 PUSH1 0x80 PUSH3 0xB80 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH3 0x3C4 JUMPI PUSH1 0x80 MSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH3 0x3C4 JUMPI PUSH1 0xA0 MSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0xC0 MSTORE PUSH1 0x64 CALLDATALOAD PUSH1 0xE0 MSTORE PUSH1 0x84 CALLDATALOAD PUSH2 0x100 MSTORE PUSH1 0xA4 CALLDATALOAD PUSH2 0x120 MSTORE PUSH1 0xC4 CALLDATALOAD PUSH2 0x140 MSTORE PUSH1 0xE4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP2 AND SWAP1 SUB PUSH3 0x331 JUMPI PUSH1 0x5 PUSH1 0xA SLOAD LT ISZERO PUSH3 0xB44 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH2 0x23BC DUP2 ADD LT PUSH8 0xFFFFFFFFFFFFFFFF PUSH2 0x23BC DUP4 ADD GT OR PUSH3 0xB30 JUMPI PUSH2 0x23BC PUSH3 0x23C8 DUP3 CODECOPY DUP1 PUSH2 0x23BC DUP2 ADD SUB SWAP1 DUP3 CREATE DUP1 ISZERO PUSH3 0xAF8 JUMPI PUSH1 0x40 MLOAD SWAP1 DUP2 PUSH2 0x3FA DUP2 ADD LT PUSH8 0xFFFFFFFFFFFFFFFF PUSH2 0x3FA DUP5 ADD GT OR PUSH3 0xB05 JUMPI PUSH2 0x3FA PUSH3 0xC67 DUP4 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3FA DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE DUP2 ADD DUP4 SWAP1 MSTORE DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 DUP3 CREATE DUP1 ISZERO PUSH3 0xAF8 JUMPI DUP2 SLOAD PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP4 SWAP3 SWAP2 DUP3 AND SWAP2 AND DUP4 EXTCODESIZE ISZERO PUSH3 0xB2C JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH4 0x23C56D05 PUSH1 0xE2 SHL DUP4 MSTORE PUSH1 0x80 PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x7 PUSH1 0x84 DUP5 ADD MSTORE PUSH7 0x2A282A37B5B2B7 PUSH1 0xC9 SHL PUSH1 0xA4 DUP5 ADD MSTORE PUSH1 0xC0 PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x2 PUSH1 0xC4 DUP5 ADD MSTORE PUSH2 0x545 PUSH1 0xF4 SHL PUSH1 0xE4 DUP5 ADD MSTORE PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP3 ADD MSTORE DUP2 DUP2 PUSH2 0x104 DUP2 DUP4 DUP8 GAS CALL DUP1 ISZERO PUSH3 0x258 JUMPI PUSH3 0xB19 JUMPI JUMPDEST POP SWAP1 PUSH1 0x80 MSTORE PUSH3 0x9D7 PUSH1 0xE4 CALLDATALOAD PUSH3 0xBB9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 PUSH2 0x19A DUP2 ADD LT PUSH8 0xFFFFFFFFFFFFFFFF PUSH2 0x19A DUP5 ADD GT OR PUSH3 0xB05 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP1 PUSH2 0x19A PUSH3 0x222E DUP5 CODECOPY AND PUSH2 0x19A DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH2 0x19A DUP2 ADD SUB ADD SWAP1 DUP3 CREATE DUP1 ISZERO PUSH3 0xAF8 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0xA0 MSTORE DUP2 SLOAD DUP3 SWAP2 AND DUP1 EXTCODESIZE ISZERO PUSH3 0xAF5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x6DBCB039 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x80 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0xA0 MLOAD AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0xC0 MLOAD PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0xE0 MLOAD PUSH1 0x64 DUP3 ADD MSTORE PUSH2 0x100 MLOAD PUSH1 0x84 DUP3 ADD MSTORE PUSH2 0x120 MLOAD PUSH1 0xA4 DUP3 ADD MSTORE PUSH2 0x140 MLOAD PUSH1 0xC4 DUP3 ADD MSTORE SWAP1 DUP3 SWAP1 DUP3 SWAP1 PUSH1 0xE4 SWAP1 DUP3 SWAP1 DUP5 SWAP1 GAS CALL DUP1 ISZERO PUSH3 0x258 JUMPI PUSH3 0xADC JUMPI JUMPDEST POP POP PUSH1 0xA SLOAD PUSH1 0x0 NOT DUP2 EQ PUSH3 0xAC8 JUMPI PUSH1 0x1 ADD PUSH1 0xA SSTORE PUSH1 0x40 MLOAD RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST DUP2 PUSH3 0xAE8 SWAP2 PUSH3 0xB80 JUMP JUMPDEST PUSH3 0x331 JUMPI DUP1 CODESIZE PUSH3 0xAAE JUMP JUMPDEST POP REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST DUP2 PUSH3 0xB25 SWAP2 PUSH3 0xB80 JUMP JUMPDEST CODESIZE PUSH3 0x9C5 JUMP JUMPDEST DUP3 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x1B585E08151408185B1C9958591E481859191959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH3 0xBA3 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP1 SWAP2 AND SWAP1 DUP2 EQ PUSH3 0xBD2 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 ISZERO PUSH3 0xBF3 JUMPI MOD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH3 0xC22 JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT DUP2 ISZERO ISZERO AND PUSH3 0xBD2 JUMPI MUL SWAP1 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH3 0x32C JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH3 0x32C JUMPI SWAP1 JUMP INVALID PUSH1 0x40 PUSH1 0x80 DUP2 MSTORE PUSH2 0x3FA DUP1 CODESIZE SUB DUP1 PUSH2 0x15 DUP2 PUSH2 0x1FC JUMP JUMPDEST SWAP3 DUP4 CODECOPY DUP2 ADD SWAP1 DUP3 DUP2 DUP4 SUB SLT PUSH2 0x1F7 JUMPI DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP1 DUP4 SUB PUSH2 0x1F7 JUMPI PUSH1 0x20 DUP3 DUP2 ADD MLOAD SWAP1 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x1F7 JUMPI ADD SWAP3 DUP5 PUSH1 0x1F DUP6 ADD SLT ISZERO PUSH2 0x1F7 JUMPI DUP4 MLOAD SWAP4 PUSH2 0x6F PUSH2 0x6A DUP7 PUSH2 0x237 JUMP JUMPDEST PUSH2 0x1FC JUMP JUMPDEST SWAP5 DUP1 DUP7 MSTORE DUP5 DUP7 ADD SWAP7 DUP6 DUP3 DUP5 ADD ADD GT PUSH2 0x1F7 JUMPI DUP7 DUP6 PUSH2 0x8D SWAP4 ADD PUSH2 0x252 JUMP JUMPDEST DUP1 EXTCODESIZE ISZERO PUSH2 0x19D JUMPI PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP4 OR SWAP1 SSTORE DUP6 MLOAD PUSH1 0x0 SWAP3 SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 DUP5 SWAP1 LOG2 DUP4 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x196 JUMPI JUMPDEST PUSH2 0x10D JUMPI JUMPDEST DUP6 MLOAD PUSH1 0xD1 SWAP1 DUP2 PUSH2 0x329 DUP3 CODECOPY RETURN JUMPDEST DUP2 DUP1 PUSH2 0x181 SWAP7 PUSH2 0x120 PUSH2 0x6A PUSH1 0x27 PUSH2 0x237 JUMP JUMPDEST SWAP7 PUSH1 0x27 DUP9 MSTORE PUSH32 0x416464726573733A206C6F772D6C6576656C2064656C65676174652063616C6C DUP8 DUP10 ADD MSTORE PUSH7 0x819985A5B1959 PUSH1 0xCA SHL DUP11 DUP10 ADD MSTORE MLOAD SWAP1 DUP5 GAS DELEGATECALL SWAP2 RETURNDATASIZE ISZERO PUSH2 0x18C JUMPI RETURNDATASIZE SWAP1 PUSH2 0x173 PUSH2 0x6A DUP4 PUSH2 0x237 JUMP JUMPDEST SWAP2 DUP3 MSTORE DUP2 SWAP5 RETURNDATASIZE SWAP3 ADD RETURNDATACOPY PUSH2 0x275 JUMP JUMPDEST POP CODESIZE DUP1 DUP1 DUP1 DUP1 PUSH2 0x100 JUMP JUMPDEST POP PUSH1 0x60 SWAP3 POP PUSH2 0x275 JUMP JUMPDEST POP DUP2 PUSH2 0xFB JUMP JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x1BDD08184818DBDB9D1C9858DD PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP2 SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH2 0x221 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x221 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x265 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x255 JUMP JUMPDEST SWAP2 SWAP3 SWAP1 ISZERO PUSH2 0x2D7 JUMPI POP DUP2 MLOAD ISZERO PUSH2 0x289 JUMPI POP SWAP1 JUMP JUMPDEST EXTCODESIZE ISZERO PUSH2 0x292 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP3 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x2EA JUMPI POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x44 PUSH1 0x40 MLOAD DUP1 SWAP3 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH1 0x20 PUSH1 0x4 DUP4 ADD MSTORE PUSH2 0x31A DUP2 MLOAD DUP1 SWAP3 DUP2 PUSH1 0x24 DUP7 ADD MSTORE PUSH1 0x20 DUP7 DUP7 ADD SWAP2 ADD PUSH2 0x252 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SUB ADD SWAP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLDATASIZE ISZERO PUSH1 0x54 JUMPI PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLDATASIZE DUP3 DUP1 CALLDATACOPY DUP2 CALLDATASIZE SWAP2 GAS DELEGATECALL RETURNDATASIZE DUP3 DUP1 RETURNDATACOPY ISZERO PUSH1 0x50 JUMPI RETURNDATASIZE SWAP1 RETURN JUMPDEST RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLDATASIZE DUP3 DUP1 CALLDATACOPY DUP2 CALLDATASIZE SWAP2 GAS DELEGATECALL RETURNDATASIZE DUP3 DUP1 RETURNDATACOPY ISZERO PUSH1 0x50 JUMPI RETURNDATASIZE SWAP1 RETURN INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 XOR 0xDC PUSH19 0x6F6B01BDC8879DCCEFC8F28189750CC03DA1A4 SUB 0x2D SWAP1 CALLDATACOPY 0xCB 0xE5 SHL OR 0xCE PUSH5 0x736F6C6343 STOP ADDMOD LT STOP CALLER PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH3 0x3B6 JUMPI PUSH3 0x14 PUSH3 0x3BB JUMP JUMPDEST PUSH3 0x1E PUSH3 0x3BB JUMP JUMPDEST DUP2 MLOAD SWAP1 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 DUP2 GT PUSH3 0x2B6 JUMPI PUSH1 0x3 SWAP2 DUP3 SLOAD SWAP3 PUSH1 0x1 SWAP3 DUP4 DUP6 DUP2 SHR SWAP6 AND SWAP6 DUP7 ISZERO PUSH3 0x3AB JUMPI JUMPDEST PUSH1 0x20 SWAP7 DUP8 DUP8 LT EQ PUSH3 0x395 JUMPI DUP2 SWAP1 PUSH1 0x1F SWAP7 DUP8 DUP2 GT PUSH3 0x33F JUMPI JUMPDEST POP DUP8 SWAP1 DUP8 DUP4 GT PUSH1 0x1 EQ PUSH3 0x2D8 JUMPI PUSH1 0x0 SWAP3 PUSH3 0x2CC JUMPI JUMPDEST POP POP PUSH1 0x0 NOT DUP3 DUP5 SHL SHR NOT AND SWAP1 DUP5 SHL OR DUP2 SSTORE JUMPDEST DUP6 MLOAD SWAP2 DUP3 GT PUSH3 0x2B6 JUMPI PUSH1 0x4 SWAP6 DUP7 SLOAD DUP5 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH3 0x2AB JUMPI JUMPDEST DUP8 DUP3 LT EQ PUSH3 0x296 JUMPI DUP6 DUP2 GT PUSH3 0x24B JUMPI JUMPDEST POP DUP6 SWAP1 DUP6 DUP5 GT PUSH1 0x1 EQ PUSH3 0x1E0 JUMPI SWAP4 DUP4 SWAP5 SWAP2 DUP5 SWAP3 PUSH1 0x0 SWAP6 PUSH3 0x1D4 JUMPI JUMPDEST POP POP SHL SWAP3 PUSH1 0x0 NOT SWAP2 SHL SHR NOT AND OR DUP4 SSTORE JUMPDEST PUSH1 0x12 PUSH1 0xFF NOT PUSH1 0x5 SLOAD AND OR PUSH1 0x5 SSTORE CALLER ISZERO PUSH3 0x193 JUMPI POP PUSH1 0x2 SLOAD PUSH28 0x6DF37F675EF6EADF5AB9A2072D44268D97DF837E6748956E5C6C2117 SWAP3 DUP4 DUP3 ADD DUP1 SWAP3 GT PUSH3 0x17E JUMPI POP PUSH1 0x0 SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 PUSH1 0x2 SSTORE CALLER DUP4 MSTORE DUP3 DUP2 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP5 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP4 DUP5 MSTORE CALLER SWAP4 LOG3 PUSH1 0x40 MLOAD PUSH2 0xC41 SWAP1 DUP2 PUSH3 0x3F2 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x11 SWAP1 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x64 SWAP3 SWAP2 PUSH1 0x40 MLOAD SWAP3 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP5 MSTORE DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST ADD MLOAD SWAP4 POP CODESIZE DUP1 PUSH3 0xDB JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x1F NOT DUP5 AND SWAP3 DUP9 PUSH1 0x0 MSTORE DUP5 DUP9 PUSH1 0x0 KECCAK256 SWAP5 PUSH1 0x0 JUMPDEST DUP11 DUP10 DUP4 DUP4 LT PUSH3 0x233 JUMPI POP POP POP LT PUSH3 0x218 JUMPI JUMPDEST POP POP POP POP DUP2 SHL ADD DUP4 SSTORE PUSH3 0xEB JUMP JUMPDEST ADD MLOAD SWAP1 PUSH1 0xF8 DUP5 PUSH1 0x0 NOT SWAP3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 DUP1 PUSH3 0x209 JUMP JUMPDEST DUP7 DUP7 ADD MLOAD DUP10 SSTORE SWAP1 SWAP8 ADD SWAP7 SWAP5 DUP6 ADD SWAP5 DUP9 SWAP4 POP ADD PUSH3 0x1F5 JUMP JUMPDEST DUP8 PUSH1 0x0 MSTORE DUP7 PUSH1 0x0 KECCAK256 DUP7 DUP1 DUP7 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 DUP10 DUP8 LT PUSH3 0x28C JUMPI JUMPDEST ADD PUSH1 0x5 SHR ADD SWAP1 DUP6 SWAP1 JUMPDEST DUP3 DUP2 LT PUSH3 0x27F JUMPI POP POP PUSH3 0xBE JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE ADD DUP6 SWAP1 PUSH3 0x26F JUMP JUMPDEST SWAP3 POP DUP2 SWAP3 PUSH3 0x266 JUMP JUMPDEST PUSH1 0x22 DUP9 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH3 0xAC JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0x7D JUMP JUMPDEST SWAP1 DUP7 SWAP4 POP PUSH1 0x1F NOT DUP4 AND SWAP2 DUP6 PUSH1 0x0 MSTORE DUP10 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x0 JUMPDEST DUP12 DUP3 DUP3 LT PUSH3 0x328 JUMPI POP POP DUP5 GT PUSH3 0x30F JUMPI JUMPDEST POP POP POP DUP2 SHL ADD DUP2 SSTORE PUSH3 0x8F JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT DUP4 DUP7 SHL PUSH1 0xF8 AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x301 JUMP JUMPDEST DUP4 DUP6 ADD MLOAD DUP7 SSTORE DUP11 SWAP8 SWAP1 SWAP6 ADD SWAP5 SWAP4 DUP5 ADD SWAP4 ADD PUSH3 0x2EE JUMP JUMPDEST SWAP1 SWAP2 POP DUP4 PUSH1 0x0 MSTORE DUP8 PUSH1 0x0 KECCAK256 DUP8 DUP1 DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 DUP11 DUP7 LT PUSH3 0x38B JUMPI JUMPDEST SWAP2 DUP9 SWAP2 DUP7 SWAP6 SWAP5 SWAP4 ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH3 0x37B JUMPI POP POP PUSH3 0x66 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP DUP9 SWAP2 ADD PUSH3 0x36B JUMP JUMPDEST SWAP3 POP DUP2 SWAP3 PUSH3 0x35D JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP5 PUSH1 0x7F AND SWAP5 PUSH3 0x4C JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 SWAP1 DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH3 0x2B6 JUMPI PUSH1 0x40 MSTORE PUSH1 0x9 DUP3 MSTORE PUSH9 0x45524332304D6F636B PUSH1 0xB8 SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP INVALID PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATASIZE LT ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x6FDDE03 EQ PUSH2 0x647 JUMPI POP DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x613 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x5F4 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x5A6 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x556 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x496 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x479 JUMPI DUP1 PUSH4 0x5C2F5E26 EQ PUSH2 0x445 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x40D JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x3D3 JUMPI DUP1 PUSH4 0x7A1395AA EQ PUSH2 0x3A7 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x287 JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x255 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1A5 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x166 JUMPI DUP1 PUSH4 0xACE28FA5 EQ PUSH2 0x140 JUMPI PUSH4 0xDD62ED3E EQ PUSH2 0xE9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x13C JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x13C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 CALLDATALOAD DUP2 DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x138 JUMPI PUSH1 0x24 CALLDATALOAD SWAP2 DUP3 AND DUP1 SWAP3 SUB PUSH2 0x138 JUMPI SWAP3 DUP3 SWAP2 PUSH1 0x20 SWAP5 DUP3 MSTORE PUSH1 0x1 DUP6 MSTORE DUP3 DUP3 KECCAK256 SWAP1 DUP3 MSTORE DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP4 DUP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x162 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x162 JUMPI PUSH1 0x20 SWAP1 PUSH1 0xFF PUSH1 0x5 SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x13C JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x13C JUMPI CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP4 SUB PUSH2 0x1A2 JUMPI POP PUSH2 0x199 PUSH1 0x20 SWAP3 PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0xBB7 JUMP JUMPDEST SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST DUP1 REVERT JUMPDEST POP DUP3 CALLVALUE PUSH2 0x1A2 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1A2 JUMPI DUP2 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP2 DUP3 DUP5 SUB PUSH2 0x1A2 JUMPI DUP5 SWAP1 PUSH1 0x24 CALLDATALOAD SWAP4 CALLER DUP3 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP3 DUP3 KECCAK256 SWAP1 DUP3 MSTORE PUSH1 0x20 MSTORE KECCAK256 SLOAD SWAP1 DUP3 DUP3 LT PUSH2 0x204 JUMPI PUSH1 0x20 DUP6 PUSH2 0x1FD DUP6 DUP6 SUB DUP8 CALLER PUSH2 0x916 JUMP JUMPDEST MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x84 SWAP1 PUSH1 0x20 DUP7 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST POP CALLVALUE PUSH2 0x13C JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x13C JUMPI CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x13C JUMPI PUSH2 0x284 SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0xAB0 JUMP JUMPDEST MLOAD RETURN JUMPDEST POP SWAP2 SWAP1 CALLVALUE PUSH2 0x162 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x162 JUMPI DUP1 MLOAD SWAP1 DUP3 DUP5 SLOAD PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP1 DUP4 AND SWAP3 DUP4 ISZERO PUSH2 0x39D JUMPI JUMPDEST PUSH1 0x20 SWAP4 DUP5 DUP5 LT DUP2 EQ PUSH2 0x38A JUMPI DUP4 DUP9 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x36E JUMPI POP PUSH1 0x1 EQ PUSH2 0x319 JUMPI JUMPDEST POP POP POP DUP3 SWAP1 SUB PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT DUP4 DUP6 LT OR PUSH2 0x306 JUMPI POP DUP3 SWAP2 DUP3 PUSH2 0x302 SWAP3 MSTORE DUP3 PUSH2 0x73C JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x41 DUP6 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP8 DUP8 MSTORE SWAP2 SWAP3 POP DUP6 SWAP2 DUP4 PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B JUMPDEST DUP4 DUP6 LT PUSH2 0x35A JUMPI POP POP POP POP DUP4 ADD ADD CODESIZE DUP1 DUP1 PUSH2 0x2D0 JUMP JUMPDEST DUP1 SLOAD DUP9 DUP7 ADD DUP4 ADD MSTORE SWAP4 ADD SWAP3 DUP5 SWAP1 DUP3 ADD PUSH2 0x344 JUMP JUMPDEST PUSH1 0xFF NOT AND DUP8 DUP6 ADD MSTORE POP POP ISZERO ISZERO PUSH1 0x5 SHL DUP5 ADD ADD SWAP1 POP CODESIZE DUP1 DUP1 PUSH2 0x2D0 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP10 MSTORE PUSH1 0x22 DUP11 MSTORE PUSH1 0x24 DUP10 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x2B1 JUMP JUMPDEST POP CALLVALUE PUSH2 0x13C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x13C JUMPI CALLDATALOAD PUSH1 0xFF DUP2 AND DUP1 SWAP2 SUB PUSH2 0x13C JUMPI PUSH1 0xFF NOT PUSH1 0x5 SLOAD AND OR PUSH1 0x5 SSTORE MLOAD RETURN JUMPDEST POP CALLVALUE PUSH2 0x13C JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x13C JUMPI CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x13C JUMPI PUSH2 0x284 SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x408 DUP3 CALLER DUP4 PUSH2 0xA18 JUMP JUMPDEST PUSH2 0xAB0 JUMP JUMPDEST POP CALLVALUE PUSH2 0x13C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x13C JUMPI CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x13C JUMPI DUP3 DUP3 SWAP2 PUSH1 0x20 SWAP5 MSTORE DUP1 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x13C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x13C JUMPI CALLDATALOAD PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x13C JUMPI PUSH2 0xFF00 PUSH1 0x5 SLOAD SWAP2 PUSH1 0x8 SHL AND SWAP1 PUSH2 0xFF00 NOT AND OR PUSH1 0x5 SSTORE MLOAD RETURN JUMPDEST POP CALLVALUE PUSH2 0x13C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x13C JUMPI PUSH2 0x284 SWAP1 CALLDATALOAD CALLER PUSH2 0xAB0 JUMP JUMPDEST POP CALLVALUE PUSH2 0x13C JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x13C JUMPI DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP2 SWAP1 DUP3 SWAP1 SUB PUSH2 0x138 JUMPI PUSH1 0x24 CALLDATALOAD SWAP1 DUP3 ISZERO PUSH2 0x513 JUMPI POP PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x20 DUP3 PUSH2 0x4F8 DUP8 SWAP5 PUSH1 0x2 SLOAD PUSH2 0x785 JUMP JUMPDEST PUSH1 0x2 SSTORE DUP5 DUP5 MSTORE DUP4 DUP3 MSTORE DUP6 DUP5 KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE DUP6 MLOAD SWAP1 DUP2 MSTORE LOG3 MLOAD RETURN JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x20 DUP6 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP CALLVALUE PUSH2 0x13C JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x13C JUMPI CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP1 DUP3 SUB PUSH2 0x138 JUMPI SWAP1 PUSH2 0x59F PUSH1 0x20 SWAP5 PUSH2 0x1FD SWAP4 CALLER DUP3 MSTORE PUSH1 0x1 DUP8 MSTORE DUP6 DUP3 KECCAK256 SWAP1 DUP3 MSTORE DUP7 MSTORE DUP5 PUSH1 0x24 CALLDATALOAD SWAP2 KECCAK256 SLOAD PUSH2 0x785 JUMP JUMPDEST SWAP1 CALLER PUSH2 0x916 JUMP JUMPDEST POP CALLVALUE PUSH2 0x13C JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x13C JUMPI CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 DUP5 AND DUP5 SUB PUSH2 0x1A2 JUMPI PUSH1 0x24 CALLDATALOAD SWAP2 DUP3 AND DUP3 SUB PUSH2 0x1A2 JUMPI POP PUSH1 0x20 SWAP3 PUSH2 0x1FD SWAP2 PUSH1 0x44 CALLDATALOAD SWAP2 PUSH2 0x5EF DUP4 CALLER DUP4 PUSH2 0xA18 JUMP JUMPDEST PUSH2 0x7A8 JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x162 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x162 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x2 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x13C JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x13C JUMPI CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP4 SUB PUSH2 0x1A2 JUMPI POP PUSH2 0x1FD PUSH1 0x20 SWAP3 PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x916 JUMP JUMPDEST DUP5 SWAP2 POP DUP4 CALLVALUE PUSH2 0x13C JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x13C JUMPI DUP3 PUSH1 0x3 SLOAD PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP1 DUP4 AND SWAP3 DUP4 ISZERO PUSH2 0x732 JUMPI JUMPDEST PUSH1 0x20 SWAP4 DUP5 DUP5 LT DUP2 EQ PUSH2 0x38A JUMPI DUP4 DUP9 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x716 JUMPI POP PUSH1 0x1 EQ PUSH2 0x6C0 JUMPI POP POP POP DUP3 SWAP1 SUB PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT DUP4 DUP6 LT OR PUSH2 0x306 JUMPI POP DUP3 SWAP2 DUP3 PUSH2 0x302 SWAP3 MSTORE DUP3 PUSH2 0x73C JUMP JUMPDEST PUSH1 0x3 DUP8 MSTORE SWAP2 SWAP3 POP DUP6 SWAP2 DUP4 PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B JUMPDEST DUP4 DUP6 LT PUSH2 0x702 JUMPI POP POP POP POP DUP4 ADD ADD DUP6 DUP1 DUP1 PUSH2 0x2D0 JUMP JUMPDEST DUP1 SLOAD DUP9 DUP7 ADD DUP4 ADD MSTORE SWAP4 ADD SWAP3 DUP5 SWAP1 DUP3 ADD PUSH2 0x6EC JUMP JUMPDEST PUSH1 0xFF NOT AND DUP8 DUP6 ADD MSTORE POP POP ISZERO ISZERO PUSH1 0x5 SHL DUP5 ADD ADD SWAP1 POP DUP6 DUP1 DUP1 PUSH2 0x2D0 JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x670 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP2 DUP4 ADD DUP2 SWAP1 MSTORE SWAP1 SWAP4 SWAP3 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x771 JUMPI POP POP PUSH1 0x40 SWAP3 SWAP4 POP PUSH1 0x0 DUP4 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 ADD DUP7 ADD MLOAD DUP5 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP6 ADD PUSH2 0x74F JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x792 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 DUP3 ISZERO PUSH2 0x8C3 JUMPI AND SWAP2 DUP3 ISZERO PUSH2 0x872 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP2 DUP1 DUP4 LT PUSH2 0x81E JUMPI PUSH1 0x40 DUP3 DUP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP6 DUP8 PUSH1 0x20 SWAP7 MSTORE DUP3 DUP7 MSTORE SUB DUP3 DUP3 KECCAK256 SSTORE DUP7 DUP2 MSTORE KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 DUP3 ISZERO PUSH2 0x9C7 JUMPI AND SWAP2 DUP3 ISZERO PUSH2 0x977 JUMPI PUSH1 0x20 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 DUP4 PUSH1 0x0 MSTORE PUSH1 0x1 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP6 PUSH1 0x0 MSTORE DUP3 MSTORE DUP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 DUP3 AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP3 PUSH1 0x0 NOT DUP5 SUB PUSH2 0xA50 JUMPI JUMPDEST POP POP POP POP JUMP JUMPDEST DUP1 DUP5 LT PUSH2 0xA6B JUMPI PUSH2 0xA62 SWAP4 SUB SWAP2 PUSH2 0x916 JUMP JUMPDEST CODESIZE DUP1 DUP1 DUP1 PUSH2 0xA4A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0xB68 JUMPI PUSH1 0x0 SWAP2 DUP2 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SLOAD DUP2 DUP2 LT PUSH2 0xB18 JUMPI DUP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 PUSH1 0x20 SWAP3 DUP6 DUP8 MSTORE DUP7 DUP5 MSTORE SUB PUSH1 0x40 DUP7 KECCAK256 SSTORE DUP1 PUSH1 0x2 SLOAD SUB PUSH1 0x2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0xFF PUSH1 0x5 SLOAD PUSH1 0x8 SHR AND PUSH1 0x3 DUP2 LT ISZERO PUSH2 0xBF5 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0xBED JUMPI PUSH1 0x2 EQ PUSH2 0xBE8 JUMPI PUSH2 0xBE3 SWAP2 CALLER PUSH2 0x7A8 JUMP JUMPDEST PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEE 0x4A BLOCKHASH GAS PUSH18 0xFB04972B1BB8D2B872C05694E3061B67CF27 0x5F DUP16 SWAP13 REVERT LOG2 DUP14 SWAP10 0x5C SWAP14 PUSH5 0x736F6C6343 STOP ADDMOD LT STOP CALLER PUSH1 0x80 CALLVALUE PUSH2 0x5D JUMPI PUSH1 0x1F PUSH2 0x19A CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH2 0x62 JUMPI DUP1 DUP5 SWAP3 PUSH1 0x20 SWAP5 PUSH1 0x40 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0x5D JUMPI MLOAD PUSH1 0x0 SSTORE PUSH1 0x1 PUSH1 0xFF NOT DUP2 SLOAD AND OR PUSH1 0x1 SSTORE PUSH1 0x40 MLOAD PUSH2 0x121 SWAP1 DUP2 PUSH2 0x79 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH1 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x2A3F4389 EQ PUSH1 0xD3 JUMPI POP DUP1 PUSH4 0x32145F90 EQ PUSH1 0xBB JUMPI DUP1 PUSH4 0x5095E3D9 EQ PUSH1 0x9F JUMPI DUP1 PUSH4 0x59E02DD7 EQ PUSH1 0x77 JUMPI PUSH4 0xB689D5AC EQ PUSH1 0x53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH1 0x73 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH1 0x73 JUMPI PUSH1 0x20 SWAP1 PUSH1 0xFF PUSH1 0x1 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH1 0x9C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH1 0x9C JUMPI SLOAD PUSH1 0xFF PUSH1 0x1 SLOAD AND DUP3 MLOAD SWAP2 DUP3 MSTORE ISZERO ISZERO PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH1 0x73 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH1 0x73 JUMPI PUSH1 0xFF NOT PUSH1 0x1 SLOAD AND PUSH1 0x1 SSTORE MLOAD RETURN JUMPDEST POP CALLVALUE PUSH1 0x73 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH1 0x73 JUMPI PUSH1 0x4 CALLDATALOAD DUP3 SSTORE MLOAD RETURN JUMPDEST DUP4 SWAP1 CALLVALUE PUSH1 0x73 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH1 0x73 JUMPI PUSH1 0x20 SWAP2 SLOAD DUP2 MSTORE RETURN INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDA SWAP16 0xA8 EQ 0xF MSTORE 0xEF KECCAK256 BALANCE CALL 0xEF 0xA5 SWAP3 CALLDATACOPY OR 0xBA SWAP5 LOG4 0xEC GT 0xB5 RETURN PUSH21 0x2F9C8B50BA51589E5564736F6C6343000810003360 DUP1 CALLVALUE PUSH2 0x5D JUMPI PUSH1 0x1F PUSH2 0x19A CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH2 0x62 JUMPI DUP1 DUP5 SWAP3 PUSH1 0x20 SWAP5 PUSH1 0x40 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0x5D JUMPI MLOAD PUSH1 0x0 SSTORE PUSH1 0x1 PUSH1 0xFF NOT DUP2 SLOAD AND OR PUSH1 0x1 SSTORE PUSH1 0x40 MLOAD PUSH2 0x121 SWAP1 DUP2 PUSH2 0x79 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH1 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x2A3F4389 EQ PUSH1 0xD3 JUMPI POP DUP1 PUSH4 0x32145F90 EQ PUSH1 0xBB JUMPI DUP1 PUSH4 0x5095E3D9 EQ PUSH1 0x9F JUMPI DUP1 PUSH4 0x59E02DD7 EQ PUSH1 0x77 JUMPI PUSH4 0xB689D5AC EQ PUSH1 0x53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH1 0x73 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH1 0x73 JUMPI PUSH1 0x20 SWAP1 PUSH1 0xFF PUSH1 0x1 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH1 0x9C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH1 0x9C JUMPI SLOAD PUSH1 0xFF PUSH1 0x1 SLOAD AND DUP3 MLOAD SWAP2 DUP3 MSTORE ISZERO ISZERO PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH1 0x73 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH1 0x73 JUMPI PUSH1 0xFF NOT PUSH1 0x1 SLOAD AND PUSH1 0x1 SSTORE MLOAD RETURN JUMPDEST POP CALLVALUE PUSH1 0x73 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH1 0x73 JUMPI PUSH1 0x4 CALLDATALOAD DUP3 SSTORE MLOAD RETURN JUMPDEST DUP4 SWAP1 CALLVALUE PUSH1 0x73 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH1 0x73 JUMPI PUSH1 0x20 SWAP2 SLOAD DUP2 MSTORE RETURN INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDA SWAP16 0xA8 EQ 0xF MSTORE 0xEF KECCAK256 BALANCE CALL 0xEF 0xA5 SWAP3 CALLDATACOPY OR 0xBA SWAP5 LOG4 0xEC GT 0xB5 RETURN PUSH21 0x2F9C8B50BA51589E5564736F6C6343000810003360 LOG0 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0xDC JUMPI ADDRESS PUSH1 0x80 MSTORE PUSH1 0x0 SLOAD SWAP1 PUSH1 0xFF DUP3 PUSH1 0x8 SHR AND PUSH2 0x8A JUMPI POP PUSH1 0xFF DUP1 DUP3 AND LT PUSH2 0x4F JUMPI JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22DA SWAP1 DUP2 PUSH2 0xE2 DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 DUP2 DUP2 PUSH2 0xD56 ADD MSTORE DUP2 DUP2 PUSH2 0xE78 ADD MSTORE PUSH2 0x1059 ADD MSTORE RETURN JUMPDEST PUSH1 0xFF SWAP1 DUP2 NOT AND OR PUSH1 0x0 SSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0xFF DUP2 MSTORE LOG1 CODESIZE PUSH2 0x29 JUMP JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320696E697469 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x616C697A696E67 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1FFC9A7 EQ PUSH2 0x146A JUMPI POP DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x13D6 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x13A4 JUMPI DUP1 PUSH4 0xC340A24 EQ PUSH2 0x137A JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x135C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1295 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x1266 JUMPI DUP1 PUSH4 0x282C51F3 EQ PUSH2 0x122B JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x1170 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1154 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x10C0 JUMPI DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0x1027 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0xFD0 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0xEDB JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0xE19 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0xD43 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0xD05 JUMPI DUP1 PUSH4 0x8F15B414 EQ PUSH2 0x68E JUMPI DUP1 PUSH4 0x9010D07C EQ PUSH2 0x647 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x5F5 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x517 JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x3C2 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x3A6 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x2FA JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2BD JUMPI DUP1 PUSH4 0xCA15C873 EQ PUSH2 0x291 JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x256 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x20A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1B2 JUMPI PUSH4 0xE4C0AAF4 EQ PUSH2 0x169 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1AD JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AD JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x1AD JUMPI PUSH2 0x197 PUSH2 0x2164 JUMP JUMPDEST PUSH2 0x191 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1AD JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AD JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x4 CALLDATALOAD DUP2 DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x1AD JUMPI PUSH1 0x24 CALLDATALOAD SWAP2 DUP3 AND DUP1 SWAP3 SUB PUSH2 0x1AD JUMPI PUSH1 0x0 MSTORE PUSH1 0xCA PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1AD JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AD JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x1AD JUMPI DUP2 PUSH2 0x254 SWAP3 PUSH1 0x0 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE PUSH2 0x24F PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH2 0x15B9 JUMP JUMPDEST PUSH2 0x1698 JUMP JUMPDEST STOP JUMPDEST CALLVALUE PUSH2 0x1AD JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AD JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1AD JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AD JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x97 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1AD JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AD JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x1AD JUMPI PUSH2 0x2EF SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x1BB8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1AD JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AD JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 DUP2 SUB PUSH2 0x1AD JUMPI PUSH1 0x24 CALLDATALOAD SWAP2 CALLER PUSH1 0x0 MSTORE PUSH1 0xCA PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP2 DUP1 DUP4 LT PUSH2 0x353 JUMPI PUSH2 0x2EF SWAP3 SUB SWAP1 CALLER PUSH2 0x1D28 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1AD JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AD JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1AD JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AD JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x1AD JUMPI PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x415 PUSH32 0x3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848 PUSH2 0x15B9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4C8 JUMPI DUP1 PUSH1 0x0 MSTORE PUSH1 0xC9 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP2 DUP1 DUP4 LT PUSH2 0x478 JUMPI PUSH1 0x20 DUP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 PUSH1 0x0 SWAP6 DUP6 DUP8 MSTORE PUSH1 0xC9 DUP5 MSTORE SUB PUSH1 0x40 DUP7 KECCAK256 SSTORE DUP1 PUSH1 0xCB SLOAD SUB PUSH1 0xCB SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1AD JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AD JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0xCD SLOAD PUSH2 0x539 DUP2 PUSH2 0x1B5B JUMP JUMPDEST DUP1 DUP5 MSTORE SWAP1 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x5CE JUMPI POP PUSH1 0x1 EQ PUSH2 0x573 JUMPI JUMPDEST PUSH2 0x56F DUP5 PUSH2 0x563 DUP2 DUP7 SUB DUP3 PUSH2 0x1526 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x14FA JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0xCD PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP3 POP PUSH32 0x83978B4C69C48DD978AB43FE30F077615294F938FB7F936D9EB340E51EA7DB2E JUMPDEST DUP3 DUP5 LT PUSH2 0x5B6 JUMPI POP POP POP DUP2 ADD PUSH1 0x20 ADD PUSH2 0x563 DUP3 PUSH2 0x553 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x20 DUP6 DUP8 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP4 ADD SWAP3 DUP2 ADD PUSH2 0x59E JUMP JUMPDEST PUSH1 0xFF NOT AND PUSH1 0x20 DUP1 DUP8 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 ISZERO ISZERO PUSH1 0x5 SHL DUP6 ADD SWAP1 SWAP3 ADD SWAP3 POP PUSH2 0x563 SWAP2 POP DUP4 SWAP1 POP PUSH2 0x553 JUMP JUMPDEST CALLVALUE PUSH2 0x1AD JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AD JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x1AD JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1AD JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AD JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x97 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH2 0x675 PUSH1 0x24 CALLDATALOAD PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x1FD0 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1AD JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AD JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1AD JUMPI PUSH2 0x6BF SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x159B JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1AD JUMPI PUSH2 0x6DF SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x159B JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x44 CALLDATALOAD DUP2 DUP2 AND DUP2 SUB PUSH2 0x1AD JUMPI PUSH1 0x64 CALLDATALOAD DUP3 DUP2 AND DUP1 SWAP2 SUB PUSH2 0x1AD JUMPI PUSH1 0x0 SLOAD SWAP4 PUSH1 0xFF DUP6 PUSH1 0x8 SHR AND ISZERO SWAP5 DUP6 DUP1 SWAP7 PUSH2 0xCF8 JUMPI JUMPDEST DUP1 ISZERO PUSH2 0xCE1 JUMPI JUMPDEST ISZERO PUSH2 0xC85 JUMPI PUSH1 0xFF NOT DUP2 AND PUSH1 0x1 OR PUSH1 0x0 SSTORE DUP6 PUSH2 0xC73 JUMPI JUMPDEST POP PUSH2 0x757 PUSH1 0xFF PUSH1 0x0 SLOAD PUSH1 0x8 SHR AND PUSH2 0x749 DUP2 PUSH2 0x2204 JUMP JUMPDEST PUSH2 0x752 DUP2 PUSH2 0x2204 JUMP JUMPDEST PUSH2 0x2204 JUMP JUMPDEST DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xB68 JUMPI DUP1 PUSH2 0x774 PUSH1 0xCC SLOAD PUSH2 0x1B5B JUMP JUMPDEST SWAP3 PUSH1 0x1F SWAP4 DUP5 DUP2 GT PUSH2 0xBFD JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 DUP5 DUP4 GT PUSH1 0x1 EQ PUSH2 0xB89 JUMPI PUSH1 0x0 SWAP3 PUSH2 0xB7E JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0xCC SSTORE JUMPDEST DUP6 MLOAD SWAP6 PUSH8 0xFFFFFFFFFFFFFFFF DUP8 GT PUSH2 0xB68 JUMPI PUSH2 0x7C9 PUSH1 0xCD SLOAD PUSH2 0x1B5B JUMP JUMPDEST DUP3 DUP2 GT PUSH2 0xB06 JUMPI JUMPDEST POP PUSH1 0x20 SWAP2 DUP8 GT PUSH1 0x1 EQ PUSH2 0xA7C JUMPI SWAP6 DUP1 SWAP2 PUSH2 0x963 SWAP7 SWAP8 PUSH1 0x0 SWAP3 PUSH2 0xA71 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0xCD SSTORE JUMPDEST PUSH2 0x822 PUSH1 0xFF PUSH1 0x0 SLOAD PUSH1 0x8 SHR AND PUSH2 0x819 DUP2 PUSH2 0x2204 JUMP JUMPDEST PUSH2 0x749 DUP2 PUSH2 0x2204 JUMP JUMPDEST PUSH2 0x191 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xFFDFC1249C027F9191656349FEB0761381BB32C9F557E01F419FD08754BF5A1B PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x65 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0xA2C JUMPI JUMPDEST PUSH1 0x0 DUP1 MSTORE PUSH1 0x97 PUSH1 0x20 MSTORE PUSH2 0x8A8 DUP3 DUP5 AND PUSH32 0x683723E34A772B6E4F2C919BBA7FA32ED8EA11A8325F54DA7DB716E9D9DD98C7 PUSH2 0x1FE8 JUMP JUMPDEST POP PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP1 PUSH1 0x0 MSTORE DUP2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP5 DUP5 AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0x9E7 JUMPI JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x97 PUSH1 0x20 MSTORE PUSH2 0x907 DUP4 DUP4 AND PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x1FE8 JUMP JUMPDEST POP PUSH32 0x3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848 SWAP1 DUP2 PUSH1 0x0 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP5 DUP5 AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0x9A2 JUMPI JUMPDEST POP PUSH1 0x0 MSTORE PUSH1 0x97 PUSH1 0x20 MSTORE AND PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x1FE8 JUMP JUMPDEST POP PUSH2 0x96A JUMPI STOP JUMPDEST PUSH2 0xFF00 NOT PUSH1 0x0 SLOAD AND PUSH1 0x0 SSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE LOG1 STOP JUMPDEST DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP4 DUP4 AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE CALLER DUP4 DUP4 AND DUP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2265 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 PUSH1 0x40 MLOAD LOG4 DUP6 PUSH2 0x94F JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE DUP2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP5 DUP5 AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE CALLER DUP5 DUP5 AND DUP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2265 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 PUSH1 0x40 MLOAD LOG4 PUSH2 0x8EF JUMP JUMPDEST PUSH1 0x0 DUP1 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP4 DUP4 AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE CALLER DUP4 DUP4 AND PUSH1 0x0 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2265 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 PUSH1 0x40 MLOAD LOG4 PUSH2 0x873 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP8 DUP1 PUSH2 0x7EE JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP8 AND SWAP2 PUSH1 0xCD PUSH1 0x0 MSTORE PUSH32 0x83978B4C69C48DD978AB43FE30F077615294F938FB7F936D9EB340E51EA7DB2E SWAP3 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0xAEE JUMPI POP SWAP2 PUSH1 0x1 SWAP4 SWAP2 DUP10 PUSH2 0x963 SWAP10 SWAP11 SWAP5 LT PUSH2 0xAD5 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0xCD SSTORE PUSH2 0x804 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP8 DUP1 DUP1 PUSH2 0xAC7 JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0xAAD JUMP JUMPDEST PUSH1 0xCD PUSH1 0x0 MSTORE PUSH32 0x83978B4C69C48DD978AB43FE30F077615294F938FB7F936D9EB340E51EA7DB2E DUP4 DUP1 DUP11 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 PUSH1 0x20 DUP12 LT PUSH2 0xB5F JUMPI JUMPDEST ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0xB53 JUMPI POP PUSH2 0x7D1 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xB46 JUMP JUMPDEST SWAP3 POP DUP2 SWAP3 PUSH2 0xB3F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD MLOAD SWAP1 POP DUP9 DUP1 PUSH2 0x796 JUMP JUMPDEST PUSH1 0xCC PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2285 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP4 POP PUSH1 0x1F NOT DUP6 AND SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0xBE5 JUMPI POP SWAP1 DUP5 PUSH1 0x1 SWAP6 SWAP5 SWAP4 SWAP3 LT PUSH2 0xBCC JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0xCC SSTORE PUSH2 0x7AC JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP9 DUP1 DUP1 PUSH2 0xBBE JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0xBA8 JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0xCC PUSH1 0x0 MSTORE DUP4 DUP1 DUP5 ADD PUSH1 0x5 SHR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2285 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH2 0xC5D JUMPI JUMPDEST SWAP1 DUP5 SWAP4 SWAP3 SWAP2 ADD PUSH1 0x5 SHR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2285 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0xC4E JUMPI POP PUSH2 0x780 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP5 SWAP4 POP PUSH1 0x1 ADD PUSH2 0xC41 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2285 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 POP PUSH2 0xC26 JUMP JUMPDEST PUSH2 0xFFFF NOT AND PUSH2 0x101 OR PUSH1 0x0 SSTORE DUP7 PUSH2 0x733 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x71D JUMPI POP PUSH1 0x1 PUSH1 0xFF DUP3 AND EQ PUSH2 0x71D JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0xFF DUP3 AND LT PUSH2 0x716 JUMP JUMPDEST CALLVALUE PUSH2 0x1AD JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AD JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x1AD JUMPI PUSH1 0x0 MSTORE PUSH1 0xC9 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1AD JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AD JUMPI PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS SUB PUSH2 0xDAE JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP2 MSTORE RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x555550535570677261646561626C653A206D757374206E6F742062652063616C PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6C6564207468726F7567682064656C656761746563616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AD JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND DUP3 SUB PUSH2 0x1AD JUMPI PUSH1 0x24 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x1AD JUMPI CALLDATASIZE PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0x1AD JUMPI PUSH2 0x254 SWAP3 PUSH2 0xECE PUSH2 0xE74 PUSH1 0x1 SWAP5 CALLDATASIZE SWAP1 PUSH1 0x24 DUP2 PUSH1 0x4 ADD CALLDATALOAD SWAP2 ADD PUSH2 0x1564 JUMP JUMPDEST SWAP3 DUP1 PUSH32 0x0 AND SWAP1 PUSH2 0xEA5 DUP3 ADDRESS EQ ISZERO PUSH2 0x1722 JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD AND EQ PUSH2 0x1783 JUMP JUMPDEST PUSH2 0xED6 PUSH2 0x2164 JUMP JUMPDEST PUSH2 0x17E4 JUMP JUMPDEST CALLVALUE PUSH2 0x1AD JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AD JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x1AD JUMPI PUSH1 0x24 CALLDATALOAD PUSH2 0xF2D PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0x15B9 JUMP JUMPDEST DUP2 ISZERO PUSH2 0xF8B JUMPI PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x20 DUP3 PUSH2 0xF65 PUSH1 0x0 SWAP5 PUSH1 0xCB SLOAD PUSH2 0x1B95 JUMP JUMPDEST PUSH1 0xCB SSTORE DUP5 DUP5 MSTORE PUSH1 0xC9 DUP3 MSTORE PUSH1 0x40 DUP5 KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1AD JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AD JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 DUP2 SUB PUSH2 0x1AD JUMPI PUSH2 0x2EF SWAP2 CALLER PUSH1 0x0 MSTORE PUSH1 0xCA PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH2 0x1020 PUSH1 0x24 CALLDATALOAD PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1B95 JUMP JUMPDEST SWAP1 CALLER PUSH2 0x1D28 JUMP JUMPDEST CALLVALUE PUSH2 0x1AD JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AD JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND DUP3 SUB PUSH2 0x1AD JUMPI PUSH2 0x254 SWAP2 PUSH2 0x1086 DUP3 PUSH1 0x0 SWAP4 PUSH32 0x0 AND SWAP1 PUSH2 0xEA5 DUP3 ADDRESS EQ ISZERO PUSH2 0x1722 JUMP JUMPDEST PUSH2 0x108E PUSH2 0x2164 JUMP JUMPDEST PUSH2 0x1097 DUP3 PUSH2 0x1548 JUMP JUMPDEST SWAP1 PUSH2 0x10A5 PUSH1 0x40 MLOAD SWAP3 DUP4 PUSH2 0x1526 JUMP JUMPDEST DUP3 DUP3 MSTORE PUSH1 0x1F NOT PUSH2 0x10B4 DUP5 PUSH2 0x1548 JUMP JUMPDEST ADD CALLDATASIZE PUSH1 0x20 DUP5 ADD CALLDATACOPY PUSH2 0x17E4 JUMP JUMPDEST CALLVALUE PUSH2 0x1AD JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AD JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP1 DUP3 SUB PUSH2 0x1AD JUMPI CALLER SUB PUSH2 0x10F7 JUMPI PUSH2 0x254 SWAP1 PUSH1 0x4 CALLDATALOAD PUSH2 0x1698 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x103937B632B9903337B91039B2B633 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1AD JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AD JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1AD JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AD JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x1AD JUMPI PUSH1 0x97 DUP3 PUSH2 0x254 SWAP4 PUSH1 0x0 MSTORE PUSH1 0x20 SWAP1 PUSH1 0x65 DUP3 MSTORE PUSH2 0x11BB PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH2 0x15B9 JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x65 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP5 PUSH1 0x0 MSTORE DUP3 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0x11EB JUMPI JUMPDEST PUSH1 0x0 MSTORE MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x1FE8 JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x65 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP5 PUSH1 0x0 MSTORE DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE CALLER DUP5 DUP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2265 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 PUSH1 0x40 MLOAD LOG4 PUSH2 0x11DD JUMP JUMPDEST CALLVALUE PUSH2 0x1AD JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AD JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1AD JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AD JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1AD JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AD JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND SWAP1 DUP2 DUP4 SUB PUSH2 0x1AD JUMPI PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 AND DUP2 SUB PUSH2 0x1AD JUMPI PUSH1 0x44 CALLDATALOAD SWAP2 PUSH1 0x0 MSTORE PUSH1 0xCA PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP3 PUSH1 0x0 NOT DUP5 SUB PUSH2 0x12FB JUMPI JUMPDEST PUSH2 0x2EF SWAP4 POP PUSH2 0x1BB8 JUMP JUMPDEST DUP3 DUP5 LT PUSH2 0x1317 JUMPI PUSH2 0x1312 DUP4 PUSH2 0x2EF SWAP6 SUB CALLER DUP4 PUSH2 0x1D28 JUMP JUMPDEST PUSH2 0x12F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1AD JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AD JUMPI PUSH1 0x20 PUSH1 0xCB SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1AD JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AD JUMPI PUSH2 0x191 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1AD JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AD JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x1AD JUMPI PUSH2 0x2EF SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x1D28 JUMP JUMPDEST CALLVALUE PUSH2 0x1AD JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AD JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0xCC SLOAD PUSH2 0x13F8 DUP2 PUSH2 0x1B5B JUMP JUMPDEST DUP1 DUP5 MSTORE SWAP1 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x5CE JUMPI POP PUSH1 0x1 EQ PUSH2 0x1421 JUMPI PUSH2 0x56F DUP5 PUSH2 0x563 DUP2 DUP7 SUB DUP3 PUSH2 0x1526 JUMP JUMPDEST PUSH1 0xCC PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP3 POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2285 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE JUMPDEST DUP3 DUP5 LT PUSH2 0x1452 JUMPI POP POP POP DUP2 ADD PUSH1 0x20 ADD PUSH2 0x563 DUP3 PUSH2 0x553 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x20 DUP6 DUP8 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP4 ADD SWAP3 DUP2 ADD PUSH2 0x143A JUMP JUMPDEST CALLVALUE PUSH2 0x1AD JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AD JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP3 AND DUP1 SWAP3 SUB PUSH2 0x1AD JUMPI PUSH1 0x20 SWAP2 PUSH4 0x5A05180F PUSH1 0xE0 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x14AC JUMPI JUMPDEST POP ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x7965DB0B PUSH1 0xE0 SHL DUP2 EQ SWAP2 POP DUP2 ISZERO PUSH2 0x14C6 JUMPI JUMPDEST POP DUP4 PUSH2 0x14A5 JUMP JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP DUP4 PUSH2 0x14BF JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x14EA JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x14DA JUMP JUMPDEST PUSH1 0x40 SWAP2 PUSH1 0x20 DUP3 MSTORE PUSH2 0x151A DUP2 MLOAD DUP1 SWAP3 DUP2 PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x20 DUP7 DUP7 ADD SWAP2 ADD PUSH2 0x14D7 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xB68 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xB68 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH2 0x1570 DUP3 PUSH2 0x1548 JUMP JUMPDEST SWAP2 PUSH2 0x157E PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x1526 JUMP JUMPDEST DUP3 SWAP5 DUP2 DUP5 MSTORE DUP2 DUP4 ADD GT PUSH2 0x1AD JUMPI DUP3 DUP2 PUSH1 0x20 SWAP4 DUP5 PUSH1 0x0 SWAP7 ADD CALLDATACOPY ADD ADD MSTORE JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x1AD JUMPI DUP2 PUSH1 0x20 PUSH2 0x15B6 SWAP4 CALLDATALOAD SWAP2 ADD PUSH2 0x1564 JUMP JUMPDEST SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x65 DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE DUP2 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0x15E0 JUMPI POP POP JUMP JUMPDEST PUSH2 0x167C PUSH1 0x48 PUSH2 0x1694 SWAP4 DUP4 PUSH2 0x1602 PUSH2 0x166D SWAP6 PUSH2 0x15FC PUSH1 0x14 CALLER PUSH2 0x1E75 JUMP JUMPDEST SWAP4 PUSH2 0x1E75 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP4 PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 DUP4 DUP7 ADD MSTORE PUSH2 0x1641 DUP2 MLOAD DUP1 SWAP3 DUP6 PUSH1 0x37 DUP10 ADD SWAP2 ADD PUSH2 0x14D7 JUMP JUMPDEST DUP5 ADD SWAP2 PUSH17 0x1034B99036B4B9B9B4B733903937B6329 PUSH1 0x7D SHL PUSH1 0x37 DUP5 ADD MSTORE DUP4 MLOAD SWAP4 DUP5 SWAP2 DUP8 DUP6 ADD SWAP2 ADD PUSH2 0x14D7 JUMP JUMPDEST ADD SUB PUSH1 0x28 DUP2 ADD DUP5 MSTORE ADD DUP3 PUSH2 0x1526 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP2 DUP3 SWAP2 PUSH1 0x4 DUP4 ADD PUSH2 0x14FA JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x16D6 SWAP2 PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP2 DUP3 DUP3 KECCAK256 SWAP4 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP4 DUP5 DUP4 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF DUP4 DUP4 KECCAK256 SLOAD AND PUSH2 0x16D9 JUMPI JUMPDEST DUP2 MSTORE PUSH1 0x97 PUSH1 0x20 MSTORE KECCAK256 PUSH2 0x2074 JUMP JUMPDEST POP JUMP JUMPDEST DUP1 DUP3 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE DUP3 DUP3 KECCAK256 DUP5 DUP4 MSTORE PUSH1 0x20 MSTORE DUP3 DUP3 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE CALLER DUP5 DUP3 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B DUP6 DUP8 MLOAD LOG4 PUSH2 0x16C9 JUMP JUMPDEST ISZERO PUSH2 0x1729 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x19195B1959D85D1958D85B1B PUSH1 0xA2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x178A JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x6163746976652070726F7879 PUSH1 0xA0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 SWAP3 SWAP2 PUSH1 0xFF PUSH32 0x4910FDFA16FED3260ED0E7147F7CC6DA11A60208B5B9406D12A635614FFD9143 SLOAD AND PUSH1 0x0 EQ PUSH2 0x1821 JUMPI POP PUSH2 0x181F SWAP2 SWAP3 POP PUSH2 0x1AB9 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x52D1902D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x20 SWAP5 SWAP2 SWAP4 SWAP2 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP2 DUP7 DUP2 PUSH1 0x4 DUP2 DUP7 GAS STATICCALL PUSH1 0x0 SWAP2 DUP2 PUSH2 0x1A87 JUMPI JUMPDEST POP PUSH2 0x18B2 JUMPI DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A206E657720696D706C656D656E74617469 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x6F6E206973206E6F742055555053 PUSH1 0x90 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP4 SWAP6 SWAP5 SWAP4 PUSH32 0xC9F76B5EC45E5CDEF99837D7B6D2467235C1DF8933C8CA56DF5C35AFA2C7D444 ADD PUSH2 0x1A31 JUMPI PUSH2 0x18E5 DUP4 PUSH2 0x1AB9 JUMP JUMPDEST DUP4 MLOAD SWAP2 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x0 DUP5 LOG2 DUP7 MLOAD ISZERO SWAP1 DUP2 ISZERO SWAP2 PUSH2 0x1A29 JUMPI JUMPDEST POP PUSH2 0x1927 JUMPI JUMPDEST POP POP POP POP SWAP1 POP JUMP JUMPDEST DUP2 EXTCODESIZE ISZERO PUSH2 0x19D8 JUMPI POP PUSH1 0x0 DUP6 DUP2 SWAP3 DUP6 PUSH2 0x19BA SWAP8 SWAP9 MLOAD SWAP3 ADD SWAP1 GAS DELEGATECALL RETURNDATASIZE ISZERO PUSH2 0x19C5 JUMPI PUSH7 0x819985A5B1959 PUSH1 0xCA SHL RETURNDATASIZE SWAP3 PUSH2 0x195C DUP5 PUSH2 0x1548 JUMP JUMPDEST SWAP4 PUSH2 0x1969 DUP3 MLOAD SWAP6 DUP7 PUSH2 0x1526 JUMP JUMPDEST DUP5 MSTORE RETURNDATASIZE PUSH1 0x0 DUP7 DUP7 ADD RETURNDATACOPY JUMPDEST PUSH32 0x416464726573733A206C6F772D6C6576656C2064656C65676174652063616C6C PUSH2 0x199E PUSH1 0x27 PUSH2 0x1548 JUMP JUMPDEST SWAP6 PUSH2 0x19AB DUP4 MLOAD SWAP8 DUP9 PUSH2 0x1526 JUMP JUMPDEST PUSH1 0x27 DUP8 MSTORE DUP7 ADD MSTORE DUP5 ADD MSTORE PUSH2 0x1E2A JUMP JUMPDEST POP DUP1 CODESIZE DUP1 DUP1 DUP1 PUSH2 0x191F JUMP JUMPDEST PUSH7 0x819985A5B1959 PUSH1 0xCA SHL PUSH1 0x60 SWAP3 PUSH2 0x1973 JUMP JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2064656C65676174652063616C6C20746F206E6F6E2D636F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1B9D1C9858DD PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 POP CODESIZE PUSH2 0x1919 JUMP JUMPDEST DUP4 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A20756E737570706F727465642070726F78 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x1A58589B1955555251 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 SWAP2 DUP9 DUP3 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x1AB2 JUMPI JUMPDEST PUSH2 0x1A9E DUP2 DUP4 PUSH2 0x1526 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1AAF JUMPI POP MLOAD SWAP1 CODESIZE PUSH2 0x1852 JUMP JUMPDEST DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x1A94 JUMP JUMPDEST DUP1 EXTCODESIZE ISZERO PUSH2 0x1B00 JUMPI PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x1BDD08184818DBDB9D1C9858DD PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x1B8B JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x1B75 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x1B6A JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x1BA2 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 DUP3 ISZERO PUSH2 0x1CD5 JUMPI AND SWAP2 DUP3 ISZERO PUSH2 0x1C84 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xC9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP2 DUP1 DUP4 LT PUSH2 0x1C30 JUMPI PUSH1 0x40 DUP3 DUP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP6 DUP8 PUSH1 0x20 SWAP7 MSTORE PUSH1 0xC9 DUP7 MSTORE SUB DUP3 DUP3 KECCAK256 SSTORE DUP7 DUP2 MSTORE KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 DUP3 ISZERO PUSH2 0x1DD9 JUMPI AND SWAP2 DUP3 ISZERO PUSH2 0x1D89 JUMPI PUSH1 0x20 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 DUP4 PUSH1 0x0 MSTORE PUSH1 0xCA DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP6 PUSH1 0x0 MSTORE DUP3 MSTORE DUP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 SWAP2 SWAP1 ISZERO PUSH2 0x1E36 JUMPI POP SWAP1 JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0x1E46 JUMPI POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP1 DUP2 SWAP1 PUSH2 0x1694 SWAP1 PUSH1 0x4 DUP4 ADD PUSH2 0x14FA JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT DUP2 ISZERO ISZERO AND PUSH2 0x1BA2 JUMPI MUL SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1E81 DUP2 PUSH1 0x2 PUSH2 0x1E62 JUMP JUMPDEST SWAP2 PUSH1 0x2 DUP4 ADD DUP1 SWAP4 GT PUSH2 0x1BA2 JUMPI PUSH2 0x1EAF PUSH2 0x1E99 DUP5 PUSH2 0x1548 JUMP JUMPDEST SWAP4 PUSH2 0x1EA7 PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x1526 JUMP JUMPDEST DUP1 DUP6 MSTORE PUSH2 0x1548 JUMP JUMPDEST PUSH1 0x20 SWAP3 SWAP1 DUP5 DUP5 ADD SWAP1 PUSH1 0x1F NOT ADD CALLDATASIZE DUP3 CALLDATACOPY DUP5 MLOAD ISZERO PUSH2 0x1FBA JUMPI PUSH1 0x30 SWAP1 MSTORE8 DUP4 MLOAD SWAP1 PUSH1 0x1 SWAP2 DUP3 LT ISZERO PUSH2 0x1FBA JUMPI PUSH2 0x1EE8 SWAP1 PUSH1 0x78 PUSH1 0x21 DUP8 ADD MSTORE8 PUSH1 0x2 PUSH2 0x1E62 JUMP JUMPDEST DUP2 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x1BA2 JUMPI SWAP1 JUMPDEST DUP1 DUP3 GT PUSH2 0x1F48 JUMPI POP POP PUSH2 0x1F05 JUMPI POP SWAP1 JUMP JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE DUP1 PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 SWAP2 PUSH1 0xF DUP2 AND PUSH1 0x10 DUP2 LT ISZERO PUSH2 0x1FA5 JUMPI DUP6 MLOAD DUP5 LT ISZERO PUSH2 0x1FA5 JUMPI PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL SWAP1 BYTE DUP6 DUP5 ADD DUP6 ADD MSTORE8 PUSH1 0x4 SHR SWAP2 DUP1 ISZERO PUSH2 0x1F90 JUMPI PUSH1 0x0 NOT ADD SWAP1 PUSH2 0x1EF4 JUMP JUMPDEST PUSH1 0x24 PUSH1 0x0 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x24 PUSH1 0x0 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x1FBA JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x1 DUP4 ADD PUSH1 0x0 SWAP1 DUP3 DUP3 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 SLOAD ISZERO PUSH1 0x0 EQ PUSH2 0x206E JUMPI DUP5 SLOAD SWAP5 PUSH9 0x10000000000000000 DUP7 LT ISZERO PUSH2 0x205A JUMPI DUP4 PUSH2 0x204A PUSH2 0x2031 DUP9 PUSH1 0x1 PUSH1 0x40 SWAP9 SWAP10 SWAP11 ADD DUP6 SSTORE DUP5 PUSH2 0x1FD0 JUMP JUMPDEST DUP2 SWAP4 SWAP2 SLOAD SWAP1 PUSH1 0x3 SHL PUSH1 0x0 NOT DUP2 SHL SWAP3 DUP4 SWAP2 SHL AND SWAP2 NOT AND OR SWAP1 JUMP JUMPDEST SWAP1 SSTORE SLOAD SWAP4 DUP3 MSTORE PUSH1 0x20 MSTORE KECCAK256 SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST POP SWAP3 POP POP JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 ADD SWAP1 PUSH1 0x0 SWAP3 DUP2 DUP5 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 SLOAD SWAP1 DUP2 ISZERO ISZERO PUSH1 0x0 EQ PUSH2 0x215D JUMPI PUSH1 0x0 NOT SWAP2 DUP1 DUP4 ADD DUP2 DUP2 GT PUSH2 0x2149 JUMPI DUP3 SLOAD SWAP1 DUP5 DUP3 ADD SWAP2 DUP3 GT PUSH2 0x2135 JUMPI DUP1 DUP3 SUB PUSH2 0x2100 JUMPI JUMPDEST POP POP POP DUP1 SLOAD DUP1 ISZERO PUSH2 0x20EC JUMPI DUP3 ADD SWAP2 PUSH2 0x20CF DUP4 DUP4 PUSH2 0x1FD0 JUMP JUMPDEST SWAP1 SWAP2 DUP3 SLOAD SWAP2 PUSH1 0x3 SHL SHL NOT AND SWAP1 SSTORE SSTORE DUP3 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST PUSH2 0x2120 PUSH2 0x2110 PUSH2 0x2031 SWAP4 DUP7 PUSH2 0x1FD0 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR SWAP3 DUP4 SWAP3 DUP7 PUSH2 0x1FD0 JUMP JUMPDEST SWAP1 SSTORE DUP7 MSTORE DUP5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP7 KECCAK256 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x20B7 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP9 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP8 REVERT JUMPDEST POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x191 SLOAD PUSH1 0x40 MLOAD PUSH4 0xD994D6D5 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x21F8 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x21BA JUMPI JUMPDEST POP ISZERO PUSH2 0x21A8 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1DD1B1B5 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x20 DUP2 RETURNDATASIZE DUP3 GT PUSH2 0x21F0 JUMPI JUMPDEST DUP2 PUSH2 0x21D2 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1526 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x21EC JUMPI MLOAD SWAP1 DUP2 ISZERO ISZERO DUP3 SUB PUSH2 0x1AAF JUMPI POP CODESIZE PUSH2 0x21A0 JUMP JUMPDEST POP DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x21C5 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x220B JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT INVALID 0x2F DUP8 DUP9 GT PUSH31 0x7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D47197230 0xE1 0xE4 0xB2 SWAP16 0xC0 0xBD DUP5 0xD7 0xD7 DUP10 PUSH7 0xC0925452AFF72A 0x2A SLT ISZERO CODESIZE 0xB1 MUL GASLIMIT PUSH31 0x9EBEA26469706673582212203965DF23AB4793F168A5E2652EE2AB5F12B08D 0x29 0xD3 ORIGIN 0xC8 0x2E 0xC8 SWAP7 SLT 0xD2 0xD4 DUP11 0xB3 0x1E PUSH5 0x736F6C6343 STOP ADDMOD LT STOP CALLER PUSH1 0x80 CALLVALUE PUSH2 0x8C JUMPI PUSH1 0x1F PUSH2 0x313 CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH2 0x91 JUMPI DUP1 DUP5 SWAP3 PUSH1 0x40 SWAP5 DUP6 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0x8C JUMPI DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP2 SWAP1 DUP3 SWAP1 SUB PUSH2 0x8C JUMPI PUSH1 0x20 ADD MLOAD SWAP1 DUP2 PUSH1 0x0 SIGNEXTEND DUP3 SUB PUSH2 0x8C JUMPI PUSH1 0x0 SLOAD SWAP2 PUSH1 0xA0 SHL PUSH1 0xFF PUSH1 0xA0 SHL AND SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA8 SHL SUB NOT AND OR OR PUSH1 0x0 SSTORE PUSH1 0x40 MLOAD PUSH2 0x26B SWAP1 DUP2 PUSH2 0xA8 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 SWAP2 DUP3 CALLDATASIZE LT ISZERO PUSH2 0x16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE0 SHR SWAP2 DUP3 PUSH4 0x12FC41CA EQ PUSH2 0x1EE JUMPI POP DUP2 PUSH4 0x59E02DD7 EQ PUSH2 0x70 JUMPI POP PUSH4 0xB888879E EQ PUSH2 0x46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x6C JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x6C JUMPI SWAP1 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP DUP1 REVERT JUMPDEST DUP4 SWAP2 POP CALLVALUE PUSH2 0x6C JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x6C JUMPI DUP2 SLOAD DUP4 MLOAD PUSH4 0x59E02DD7 PUSH1 0xE0 SHL DUP2 MSTORE SWAP3 DUP5 DUP5 DUP5 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND GAS STATICCALL SWAP4 DUP5 ISZERO PUSH2 0x1E2 JUMPI DUP2 SWAP1 DUP3 SWAP6 PUSH2 0x177 JUMPI JUMPDEST POP SWAP2 PUSH1 0xA0 SHR DUP3 DUP2 DUP4 SIGNEXTEND DUP4 DUP2 SGT ISZERO PUSH2 0x107 JUMPI POP POP PUSH2 0xD1 SWAP1 PUSH1 0xFF AND PUSH2 0x20E JUMP JUMPDEST SWAP3 DUP3 PUSH1 0x0 NOT DIV DUP5 GT DUP4 ISZERO ISZERO AND PUSH2 0xF4 JUMPI POP POP MUL SWAP1 JUMPDEST DUP3 MLOAD SWAP2 DUP3 MSTORE ISZERO ISZERO PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x11 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST SWAP1 SWAP3 DUP1 SWAP3 POP DUP2 SWAP7 SWAP6 SWAP5 SWAP7 SLT PUSH2 0x120 JUMPI JUMPDEST POP POP POP POP PUSH2 0xE6 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 POP PUSH1 0x7F NOT DUP2 EQ PUSH2 0x164 JUMPI PUSH2 0x13D SWAP1 DUP3 SUB PUSH1 0xFF AND PUSH2 0x20E JUMP JUMPDEST SWAP3 DUP4 ISZERO PUSH2 0x151 JUMPI POP POP DIV SWAP1 DUP4 DUP1 DUP1 DUP1 PUSH2 0x117 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x12 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x11 DUP5 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST SWAP5 POP POP DUP5 RETURNDATASIZE DUP7 GT PUSH2 0x1DB JUMPI JUMPDEST PUSH1 0x1F DUP2 ADD PUSH1 0x1F NOT AND DUP6 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP7 DUP3 LT OR PUSH2 0x1C8 JUMPI DUP7 SWAP2 DUP7 SWAP2 DUP4 MSTORE DUP2 ADD SUB SLT PUSH2 0x1C5 JUMPI PUSH1 0x20 DUP5 MLOAD SWAP5 ADD MLOAD SWAP4 DUP5 ISZERO ISZERO DUP6 SUB PUSH2 0x6C JUMPI DUP7 PUSH2 0xB2 JUMP JUMPDEST DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x41 DUP6 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x183 JUMP JUMPDEST POP DUP5 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP5 SWAP1 CALLVALUE PUSH2 0x6C JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x6C JUMPI DUP2 PUSH1 0x20 SWAP3 SLOAD PUSH1 0xA0 SHR SWAP1 SIGNEXTEND DUP2 MSTORE RETURN JUMPDEST PUSH1 0xFF AND PUSH1 0x4D DUP2 GT PUSH2 0x21F JUMPI PUSH1 0xA EXP SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE 0xE4 DUP14 0xCB PUSH19 0x7FF64C7999657A96016231BF43C6E2E8BFA366 0xA8 0x2B BALANCE 0xCF 0xC1 0xB2 0xAD 0xF7 PUSH5 0x736F6C6343 STOP ADDMOD LT STOP CALLER LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAC 0xC3 SWAP3 GAS 0x1E 0xF6 PUSH4 0xB791966 0xCA JUMPDEST 0xE2 0x2C 0xDA 0xD3 DUP4 0xED 0xF9 LOG4 PUSH2 0x3CF0 DUP12 0xEA POP LOG4 RETURNDATACOPY CALLER SELFBALANCE DELEGATECALL PUSH5 0x736F6C6343 STOP ADDMOD LT STOP CALLER PUSH1 0x40 PUSH1 0x80 DUP2 MSTORE PUSH2 0x3FA DUP1 CODESIZE SUB DUP1 PUSH2 0x15 DUP2 PUSH2 0x1FC JUMP JUMPDEST SWAP3 DUP4 CODECOPY DUP2 ADD SWAP1 DUP3 DUP2 DUP4 SUB SLT PUSH2 0x1F7 JUMPI DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP1 DUP4 SUB PUSH2 0x1F7 JUMPI PUSH1 0x20 DUP3 DUP2 ADD MLOAD SWAP1 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x1F7 JUMPI ADD SWAP3 DUP5 PUSH1 0x1F DUP6 ADD SLT ISZERO PUSH2 0x1F7 JUMPI DUP4 MLOAD SWAP4 PUSH2 0x6F PUSH2 0x6A DUP7 PUSH2 0x237 JUMP JUMPDEST PUSH2 0x1FC JUMP JUMPDEST SWAP5 DUP1 DUP7 MSTORE DUP5 DUP7 ADD SWAP7 DUP6 DUP3 DUP5 ADD ADD GT PUSH2 0x1F7 JUMPI DUP7 DUP6 PUSH2 0x8D SWAP4 ADD PUSH2 0x252 JUMP JUMPDEST DUP1 EXTCODESIZE ISZERO PUSH2 0x19D JUMPI PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP4 OR SWAP1 SSTORE DUP6 MLOAD PUSH1 0x0 SWAP3 SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 DUP5 SWAP1 LOG2 DUP4 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x196 JUMPI JUMPDEST PUSH2 0x10D JUMPI JUMPDEST DUP6 MLOAD PUSH1 0xD1 SWAP1 DUP2 PUSH2 0x329 DUP3 CODECOPY RETURN JUMPDEST DUP2 DUP1 PUSH2 0x181 SWAP7 PUSH2 0x120 PUSH2 0x6A PUSH1 0x27 PUSH2 0x237 JUMP JUMPDEST SWAP7 PUSH1 0x27 DUP9 MSTORE PUSH32 0x416464726573733A206C6F772D6C6576656C2064656C65676174652063616C6C DUP8 DUP10 ADD MSTORE PUSH7 0x819985A5B1959 PUSH1 0xCA SHL DUP11 DUP10 ADD MSTORE MLOAD SWAP1 DUP5 GAS DELEGATECALL SWAP2 RETURNDATASIZE ISZERO PUSH2 0x18C JUMPI RETURNDATASIZE SWAP1 PUSH2 0x173 PUSH2 0x6A DUP4 PUSH2 0x237 JUMP JUMPDEST SWAP2 DUP3 MSTORE DUP2 SWAP5 RETURNDATASIZE SWAP3 ADD RETURNDATACOPY PUSH2 0x275 JUMP JUMPDEST POP CODESIZE DUP1 DUP1 DUP1 DUP1 PUSH2 0x100 JUMP JUMPDEST POP PUSH1 0x60 SWAP3 POP PUSH2 0x275 JUMP JUMPDEST POP DUP2 PUSH2 0xFB JUMP JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x1BDD08184818DBDB9D1C9858DD PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP2 SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH2 0x221 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x221 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x265 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x255 JUMP JUMPDEST SWAP2 SWAP3 SWAP1 ISZERO PUSH2 0x2D7 JUMPI POP DUP2 MLOAD ISZERO PUSH2 0x289 JUMPI POP SWAP1 JUMP JUMPDEST EXTCODESIZE ISZERO PUSH2 0x292 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP3 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x2EA JUMPI POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x44 PUSH1 0x40 MLOAD DUP1 SWAP3 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH1 0x20 PUSH1 0x4 DUP4 ADD MSTORE PUSH2 0x31A DUP2 MLOAD DUP1 SWAP3 DUP2 PUSH1 0x24 DUP7 ADD MSTORE PUSH1 0x20 DUP7 DUP7 ADD SWAP2 ADD PUSH2 0x252 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SUB ADD SWAP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLDATASIZE ISZERO PUSH1 0x54 JUMPI PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLDATASIZE DUP3 DUP1 CALLDATACOPY DUP2 CALLDATASIZE SWAP2 GAS DELEGATECALL RETURNDATASIZE DUP3 DUP1 RETURNDATACOPY ISZERO PUSH1 0x50 JUMPI RETURNDATASIZE SWAP1 RETURN JUMPDEST RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLDATASIZE DUP3 DUP1 CALLDATACOPY DUP2 CALLDATASIZE SWAP2 GAS DELEGATECALL RETURNDATASIZE DUP3 DUP1 RETURNDATACOPY ISZERO PUSH1 0x50 JUMPI RETURNDATASIZE SWAP1 RETURN INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 XOR 0xDC PUSH19 0x6F6B01BDC8879DCCEFC8F28189750CC03DA1A4 SUB 0x2D SWAP1 CALLDATACOPY 0xCB 0xE5 SHL OR 0xCE PUSH5 0x736F6C6343 STOP ADDMOD LT STOP CALLER PUSH1 0xA0 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH3 0xE1 JUMPI ADDRESS PUSH1 0x80 MSTORE PUSH1 0x0 SLOAD SWAP1 PUSH1 0xFF DUP3 PUSH1 0x8 SHR AND PUSH3 0x8F JUMPI POP PUSH1 0xFF DUP1 DUP3 AND LT PUSH3 0x53 JUMPI JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4856 SWAP1 DUP2 PUSH3 0xE7 DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 DUP2 DUP2 PUSH2 0x2785 ADD MSTORE DUP2 DUP2 PUSH2 0x28F4 ADD MSTORE PUSH2 0x2D7F ADD MSTORE RETURN JUMPDEST PUSH1 0xFF SWAP1 DUP2 NOT AND OR PUSH1 0x0 SSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0xFF DUP2 MSTORE LOG1 CODESIZE PUSH3 0x2C JUMP JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320696E697469 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x616C697A696E67 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xE0 PUSH1 0x0 CALLDATALOAD DUP2 SHR SWAP1 DUP2 PUSH4 0x3C6168F EQ PUSH2 0x32D3 JUMPI DUP2 PUSH4 0x4A6B1DA EQ PUSH2 0x3082 JUMPI DUP2 PUSH4 0x9A849C3 EQ PUSH2 0x2FEA JUMPI DUP2 PUSH4 0xC340A24 EQ PUSH2 0x2FC1 JUMPI DUP2 PUSH4 0x11D32B60 EQ PUSH2 0x2F36 JUMPI DUP2 PUSH4 0x1E4A7B0A EQ PUSH2 0x2EBC JUMPI DUP2 PUSH4 0x289DAAD1 EQ PUSH2 0x2E3B JUMPI DUP2 PUSH4 0x2D88AF4A EQ PUSH2 0x2DE6 JUMPI DUP2 PUSH4 0x3659CFE6 EQ PUSH2 0x2D4D JUMPI DUP2 PUSH4 0x36BA97ED EQ PUSH2 0x2D0C JUMPI DUP2 PUSH4 0x3CDF93FB EQ PUSH2 0x2C8A JUMPI DUP2 PUSH4 0x3E52D2BD EQ PUSH2 0x2C07 JUMPI DUP2 PUSH4 0x3F4BA83A EQ PUSH2 0x2B8D JUMPI DUP2 PUSH4 0x3FFD0332 EQ PUSH2 0x2B0B JUMPI DUP2 PUSH4 0x4094853A EQ PUSH2 0x2A88 JUMPI DUP2 PUSH4 0x41839186 EQ PUSH2 0x29FF JUMPI DUP2 PUSH4 0x4A6307FC EQ PUSH2 0x297A JUMPI DUP2 PUSH4 0x4B94F50E EQ PUSH2 0x2957 JUMPI DUP2 PUSH4 0x4F1EF286 EQ PUSH2 0x286D JUMPI DUP2 PUSH4 0x5210570C EQ PUSH2 0x2848 JUMPI DUP2 PUSH4 0x52D1902D EQ PUSH2 0x2772 JUMPI DUP2 PUSH4 0x5475B66F EQ PUSH2 0x26F2 JUMPI DUP2 PUSH4 0x57F54AE0 EQ PUSH2 0x2669 JUMPI DUP2 PUSH4 0x5ABB6418 EQ PUSH2 0x249C JUMPI DUP2 PUSH4 0x5C975ABB EQ PUSH2 0x2476 JUMPI DUP2 PUSH4 0x5D23B4A4 EQ PUSH2 0x23F4 JUMPI DUP2 PUSH4 0x68274357 EQ PUSH2 0x23CC JUMPI DUP2 PUSH4 0x6F249D38 EQ PUSH2 0x21BA JUMPI DUP2 PUSH4 0x7102DCAC EQ PUSH2 0x213E JUMPI DUP2 PUSH4 0x8456CB59 EQ PUSH2 0x2093 JUMPI DUP2 PUSH4 0x8D0C84D5 EQ PUSH2 0x2018 JUMPI DUP2 PUSH4 0x90E3B126 EQ PUSH2 0x1F8E JUMPI DUP2 PUSH4 0x966D3F23 EQ PUSH2 0x1D72 JUMPI DUP2 PUSH4 0x969B704A EQ PUSH2 0x1CFC JUMPI DUP2 PUSH4 0x9D72DD4B EQ PUSH2 0x1C70 JUMPI DUP2 PUSH4 0x9FD0506D EQ PUSH2 0x1C43 JUMPI DUP2 PUSH4 0xA27B1AB7 EQ PUSH2 0x1BC6 JUMPI DUP2 PUSH4 0xB1C03A41 EQ PUSH2 0x1B3A JUMPI DUP2 PUSH4 0xB986CB30 EQ PUSH2 0x1AB7 JUMPI DUP2 PUSH4 0xBB4872DE EQ PUSH2 0x1A94 JUMPI DUP2 PUSH4 0xBC392847 EQ PUSH2 0x1899 JUMPI DUP2 PUSH4 0xC699CFED EQ PUSH2 0x1823 JUMPI DUP2 PUSH4 0xC82BB9FE EQ PUSH2 0x1797 JUMPI DUP2 PUSH4 0xC8308A62 EQ PUSH2 0x1714 JUMPI DUP2 PUSH4 0xCFF5C6EC EQ PUSH2 0x14A6 JUMPI DUP2 PUSH4 0xD3B1382A EQ PUSH2 0x11A7 JUMPI DUP2 PUSH4 0xD4F277EE EQ PUSH2 0xFD3 JUMPI DUP2 PUSH4 0xD5AC5A18 EQ PUSH2 0xF31 JUMPI DUP2 PUSH4 0xDF2B033B EQ PUSH2 0xBC3 JUMPI DUP2 PUSH4 0xE4C0AAF4 EQ PUSH2 0xB7F JUMPI DUP2 PUSH4 0xE4D6944D EQ PUSH2 0xB0D JUMPI DUP2 PUSH4 0xE9196648 EQ PUSH2 0x937 JUMPI DUP2 PUSH4 0xEE9C49D7 EQ PUSH2 0x8B2 JUMPI DUP2 PUSH4 0xF101F261 EQ PUSH2 0x52E JUMPI POP PUSH4 0xF8C8765E EQ PUSH2 0x27C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x484 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x484 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x4 CALLDATALOAD DUP2 DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x484 JUMPI PUSH1 0x24 CALLDATALOAD SWAP2 DUP1 DUP4 AND DUP4 SUB PUSH2 0x484 JUMPI PUSH1 0x44 CALLDATALOAD SWAP1 DUP1 DUP3 AND SWAP1 DUP2 DUP4 SUB PUSH2 0x484 JUMPI PUSH1 0x64 CALLDATALOAD SWAP1 DUP2 AND DUP1 SWAP2 SUB PUSH2 0x484 JUMPI PUSH1 0x0 SLOAD SWAP4 PUSH1 0xFF DUP6 PUSH1 0x8 SHR AND ISZERO SWAP5 DUP6 DUP1 SWAP7 PUSH2 0x521 JUMPI JUMPDEST DUP1 ISZERO PUSH2 0x50A JUMPI JUMPDEST ISZERO PUSH2 0x4AE JUMPI PUSH2 0x3C9 SWAP7 PUSH1 0x1 SWAP2 DUP8 DUP4 PUSH1 0xFF NOT DUP4 AND OR PUSH1 0x0 SSTORE PUSH2 0x49C JUMPI JUMPDEST POP PUSH2 0x354 PUSH1 0xFF PUSH1 0x0 SLOAD PUSH1 0x8 SHR AND PUSH2 0x31A DUP2 PUSH2 0x47C0 JUMP JUMPDEST PUSH2 0x323 DUP2 PUSH2 0x47C0 JUMP JUMPDEST PUSH2 0x32C DUP2 PUSH2 0x47C0 JUMP JUMPDEST PUSH2 0x335 DUP2 PUSH2 0x47C0 JUMP JUMPDEST PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL SWAP5 DUP6 PUSH1 0x97 SLOAD AND OR PUSH1 0x97 SSTORE PUSH2 0x47C0 JUMP JUMPDEST PUSH1 0xCA DUP1 SLOAD PUSH2 0xFF00 NOT PUSH1 0xB0 DUP6 SWAP1 SHL SWAP1 DUP2 ADD NOT SWAP1 SWAP2 AND PUSH1 0x10 SWAP4 SWAP1 SWAP4 SHL PUSH2 0xFFFF NOT SWAP1 SWAP2 ADD AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x162 DUP1 SLOAD DUP3 AND DUP5 OR SWAP1 SSTORE PUSH2 0x161 DUP1 SLOAD SWAP1 SWAP2 AND DUP3 OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x20 SWAP5 DUP6 SWAP1 DUP5 SWAP1 DUP2 SWAP1 PUSH1 0x44 DUP3 ADD SWAP1 JUMP JUMPDEST SUB DUP2 DUP5 GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x490 JUMPI PUSH1 0x0 SWAP4 PUSH2 0x45A JUMPI JUMPDEST POP PUSH2 0x3EB PUSH2 0x41C SWAP4 ISZERO PUSH2 0x3CC1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP7 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x0 NOT PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x44 DUP3 MSTORE PUSH2 0x417 PUSH1 0x64 DUP4 PUSH2 0x36ED JUMP JUMPDEST PUSH2 0x3D39 JUMP JUMPDEST PUSH2 0x423 JUMPI JUMPDEST STOP JUMPDEST PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH2 0xFF00 NOT PUSH1 0x0 SLOAD AND PUSH1 0x0 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE LOG1 STOP JUMPDEST SWAP3 POP DUP5 DUP4 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x489 JUMPI JUMPDEST PUSH2 0x471 DUP2 DUP4 PUSH2 0x36ED JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x484 JUMPI SWAP2 MLOAD SWAP2 PUSH2 0x3EB PUSH2 0x3DD JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x467 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0xFFFF NOT AND PUSH2 0x101 OR PUSH1 0x0 SSTORE CODESIZE PUSH2 0x304 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2E8 JUMPI POP PUSH1 0x1 PUSH1 0xFF DUP3 AND EQ PUSH2 0x2E8 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0xFF DUP3 AND LT PUSH2 0x2E1 JUMP JUMPDEST CALLVALUE PUSH2 0x484 JUMPI PUSH2 0x5B2 SWAP1 PUSH2 0x542 CALLDATASIZE PUSH1 0x4 PUSH2 0x35E4 JUMP JUMPDEST SWAP3 PUSH1 0x40 SWAP8 SWAP6 SWAP8 SWAP3 SWAP2 SWAP3 MLOAD SWAP8 PUSH2 0x559 PUSH2 0x100 DUP11 PUSH2 0x36ED JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP5 DUP6 DUP10 MSTORE PUSH1 0x20 DUP10 ADD MSTORE PUSH1 0x40 DUP9 ADD MSTORE PUSH1 0x60 DUP8 ADD MSTORE PUSH1 0x80 DUP7 ADD MSTORE CALLER PUSH1 0xA0 DUP7 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0x0 DUP4 DUP6 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH2 0x165 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x8A0 JUMPI PUSH2 0x162 SLOAD PUSH1 0x40 MLOAD PUSH4 0x60009E0B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 SWAP1 PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 DUP7 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x490 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x881 JUMPI JUMPDEST POP PUSH1 0x20 DUP1 DUP6 ADD MLOAD PUSH1 0x24 PUSH1 0x40 MLOAD DUP1 SWAP7 DUP2 SWAP4 PUSH3 0x7C6DA1 PUSH1 0xE2 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x490 JUMPI PUSH1 0x0 SWAP4 PUSH2 0x84C JUMPI JUMPDEST POP PUSH1 0xA0 DUP5 ADD MLOAD PUSH1 0x40 DUP6 ADD MLOAD PUSH2 0x641 SWAP3 SWAP1 SWAP2 ADDRESS SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 AND PUSH2 0x44B1 JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD MLOAD PUSH1 0x60 DUP5 ADD MLOAD PUSH2 0x664 SWAP2 ADDRESS SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP7 AND PUSH2 0x44B1 JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD MLOAD PUSH2 0x67B SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x42FF JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 PUSH1 0xA0 SWAP6 SWAP5 SWAP6 SHL SUB PUSH2 0x162 SLOAD AND PUSH1 0xA4 PUSH1 0x20 DUP9 ADD MLOAD PUSH1 0x0 PUSH1 0x40 DUP11 ADD MLOAD SWAP4 DUP6 DUP12 ADD MLOAD SWAP8 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 DUP13 ADD MLOAD AND PUSH1 0x40 MLOAD SWAP9 DUP10 SWAP7 DUP8 SWAP6 PUSH4 0x7C287999 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x4 DUP8 ADD MSTORE PUSH1 0x24 DUP7 ADD MSTORE PUSH1 0x44 DUP6 ADD MSTORE DUP3 PUSH1 0x64 DUP6 ADD MSTORE PUSH1 0x84 DUP5 ADD MSTORE GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x490 JUMPI PUSH1 0x0 SWAP4 PUSH1 0x0 SWAP4 PUSH1 0x0 SWAP4 PUSH2 0x809 JUMPI JUMPDEST POP PUSH2 0x786 PUSH2 0x71F PUSH2 0x79A SWAP6 SWAP7 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP11 MLOAD AND PUSH1 0x80 DUP12 ADD MLOAD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0xC0 DUP14 ADD MLOAD AND SWAP3 ADDRESS SWAP3 PUSH2 0x4127 JUMP JUMPDEST SWAP7 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0xA0 DUP11 ADD MLOAD AND SWAP1 PUSH2 0x778 PUSH2 0x73F DUP10 PUSH1 0x60 DUP14 ADD MLOAD PUSH2 0x42F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND PUSH1 0x24 DUP6 ADD MSTORE PUSH1 0x44 DUP5 ADD MSTORE DUP3 PUSH1 0x64 DUP2 ADD JUMPDEST SUB PUSH1 0x1F NOT DUP2 ADD DUP5 MSTORE DUP4 PUSH2 0x36ED JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3D39 JUMP JUMPDEST PUSH1 0xA0 DUP8 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH2 0x45C7 JUMP JUMPDEST DUP3 MLOAD PUSH1 0x20 DUP1 DUP6 ADD MLOAD PUSH1 0xA0 DUP7 ADD MLOAD PUSH1 0xC0 DUP8 ADD MLOAD PUSH1 0x40 SWAP8 DUP9 ADD MLOAD DUP9 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 DUP8 AND DUP2 MSTORE SWAP5 DUP6 ADD MSTORE SWAP7 DUP4 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x60 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP4 DUP2 AND SWAP4 SWAP2 AND SWAP2 SWAP1 PUSH32 0xEF4F73043E566578C766F5060597F325DCB82E894199F25BF03E1506BEEDFA08 SWAP1 DUP1 PUSH1 0x80 DUP2 ADD JUMPDEST SUB SWAP1 LOG4 STOP JUMPDEST PUSH2 0x786 SWAP6 POP PUSH2 0x79A SWAP5 POP PUSH2 0x71F SWAP4 POP PUSH2 0x838 SWAP1 PUSH1 0x60 RETURNDATASIZE DUP2 GT PUSH2 0x845 JUMPI JUMPDEST PUSH2 0x830 DUP2 DUP4 PUSH2 0x36ED JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x46DF JUMP JUMPDEST SWAP2 SWAP7 SWAP1 SWAP6 POP SWAP1 SWAP4 POP PUSH2 0x6EF JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x826 JUMP JUMPDEST PUSH2 0x641 SWAP2 SWAP4 POP PUSH2 0x873 SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x87A JUMPI JUMPDEST PUSH2 0x86B DUP2 DUP4 PUSH2 0x36ED JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x46C0 JUMP JUMPDEST SWAP3 SWAP1 PUSH2 0x61C JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x861 JUMP JUMPDEST PUSH2 0x89A SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x87A JUMPI PUSH2 0x86B DUP2 DUP4 PUSH2 0x36ED JUMP JUMPDEST DUP5 PUSH2 0x5ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xE6C4247B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x484 JUMPI PUSH2 0x5B2 SWAP1 PUSH2 0x8C6 CALLDATASIZE PUSH1 0x4 PUSH2 0x3754 JUMP JUMPDEST SWAP4 PUSH1 0x40 SWAP9 SWAP7 SWAP9 SWAP4 SWAP2 SWAP4 MLOAD SWAP9 PUSH2 0x8DD PUSH2 0x100 DUP12 PUSH2 0x36ED JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP1 DUP12 MSTORE PUSH1 0x20 DUP1 DUP13 ADD SWAP9 SWAP1 SWAP9 MSTORE PUSH1 0x40 DUP1 DUP13 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x60 DUP12 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x80 DUP11 ADD SWAP4 SWAP1 SWAP4 MSTORE CALLER PUSH1 0xA0 DUP11 ADD MSTORE SWAP3 DUP3 AND PUSH1 0xC0 DUP10 ADD MSTORE SWAP3 AND DUP6 DUP8 ADD MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH2 0x165 SWAP1 SWAP3 MSTORE KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x484 JUMPI PUSH2 0x947 CALLDATASIZE PUSH1 0x4 PUSH2 0x3680 JUMP JUMPDEST SWAP1 PUSH1 0x40 SWAP4 SWAP3 SWAP4 MLOAD SWAP1 PUSH2 0x95A PUSH1 0xC0 DUP4 PUSH2 0x36ED JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP5 AND SWAP5 DUP6 DUP4 MSTORE PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x9AC PUSH1 0x60 DUP3 ADD SWAP5 CALLER DUP7 MSTORE CALLER PUSH1 0x80 DUP5 ADD MSTORE DUP5 PUSH1 0xA0 DUP5 ADD SWAP5 AND DUP5 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH2 0x165 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x8A0 JUMPI PUSH2 0x9C9 DUP4 DUP3 MLOAD AND PUSH1 0x40 DUP4 ADD MLOAD DUP6 DUP8 MLOAD AND SWAP1 ADDRESS SWAP3 PUSH2 0x4601 JUMP JUMPDEST SWAP4 PUSH2 0x9D6 DUP5 DUP3 MLOAD AND PUSH2 0x42FF JUMP JUMPDEST PUSH1 0x40 DUP7 PUSH2 0x162 SWAP9 SWAP4 SWAP9 SLOAD AND SWAP6 PUSH1 0x84 PUSH1 0x20 DUP8 ADD MLOAD PUSH1 0x0 DUP11 DUP1 PUSH1 0x80 DUP12 ADD MLOAD AND SWAP5 MLOAD AND SWAP10 DUP6 MLOAD SWAP11 DUP12 SWAP6 DUP7 SWAP5 PUSH4 0x3FB42B79 PUSH1 0xE2 SHL DUP7 MSTORE PUSH1 0x4 DUP7 ADD MSTORE DUP10 PUSH1 0x24 DUP7 ADD MSTORE PUSH1 0x44 DUP6 ADD MSTORE PUSH1 0x64 DUP5 ADD MSTORE GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x490 JUMPI PUSH32 0x7CEE37BE28E3F38AE2745B4A7D111A1EA445FDA21DFC7079716BDD4AFFE5D286 SWAP6 PUSH2 0xA82 SWAP4 PUSH1 0x0 SWAP2 PUSH1 0x0 SWAP5 PUSH2 0xAD1 JUMPI JUMPDEST POP PUSH2 0xA77 SWAP2 PUSH2 0xA65 SWAP2 PUSH2 0x42F2 JUMP JUMPDEST DUP9 DUP8 MLOAD AND PUSH1 0x0 DUP11 DUP9 MLOAD AND SWAP3 ADDRESS SWAP3 PUSH2 0x4127 JUMP JUMPDEST SWAP8 DUP8 DUP6 MLOAD AND SWAP1 PUSH2 0x45C7 JUMP JUMPDEST PUSH2 0xACC PUSH2 0xAA7 DUP6 DUP1 DUP6 MLOAD AND SWAP4 MLOAD AND SWAP6 PUSH1 0x80 DUP6 ADD MLOAD AND SWAP7 PUSH1 0x40 PUSH1 0x20 DUP7 ADD MLOAD SWAP6 ADD MLOAD PUSH2 0x42F2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 DUP5 PUSH1 0x40 SWAP2 SWAP5 SWAP4 SWAP3 PUSH1 0x60 DUP3 ADD SWAP6 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP1 LOG3 STOP JUMPDEST PUSH2 0xA65 SWAP2 SWAP5 POP PUSH2 0xA77 SWAP3 POP PUSH2 0xAFD SWAP1 PUSH1 0x40 RETURNDATASIZE PUSH1 0x40 GT PUSH2 0xB06 JUMPI JUMPDEST PUSH2 0xAF5 DUP2 DUP4 PUSH2 0x36ED JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x42DC JUMP JUMPDEST SWAP5 SWAP2 POP SWAP2 PUSH2 0xA57 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xAEB JUMP JUMPDEST CALLVALUE PUSH2 0x484 JUMPI PUSH2 0xB1D CALLDATASIZE PUSH1 0x4 PUSH2 0x3680 JUMP JUMPDEST SWAP3 SWAP2 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH2 0xB2F PUSH1 0xC0 DUP4 PUSH2 0x36ED JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP1 DUP4 MSTORE PUSH1 0x20 DUP1 DUP5 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x40 DUP1 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE CALLER PUSH1 0x60 DUP5 ADD SWAP1 DUP2 MSTORE SWAP6 DUP6 AND PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x0 PUSH1 0xA0 DUP5 ADD DUP2 DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH2 0x165 SWAP1 SWAP5 MSTORE SWAP3 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0xFF AND PUSH2 0x9AC JUMP JUMPDEST CALLVALUE PUSH2 0x484 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x484 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x484 JUMPI PUSH2 0xBAD PUSH2 0x4732 JUMP JUMPDEST PUSH1 0x97 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE STOP JUMPDEST CALLVALUE PUSH2 0x484 JUMPI PUSH2 0xC3F SWAP1 PUSH2 0xBD7 CALLDATASIZE PUSH1 0x4 PUSH2 0x372B JUMP JUMPDEST SWAP1 PUSH1 0x40 SWAP6 SWAP4 SWAP6 MLOAD SWAP6 PUSH2 0xBEB PUSH2 0x100 DUP9 PUSH2 0x36ED JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP3 DUP4 DUP8 MSTORE PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x60 DUP6 ADD MSTORE CALLER PUSH1 0x80 DUP6 ADD MSTORE CALLER PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0x0 PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0x0 DUP4 DUP6 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH2 0x165 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x8A0 JUMPI PUSH2 0x162 SLOAD PUSH1 0x20 DUP4 DUP2 ADD MLOAD PUSH1 0x40 MLOAD PUSH3 0x7C6DA1 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x490 JUMPI PUSH1 0x0 SWAP2 PUSH2 0xF12 JUMPI JUMPDEST POP DUP2 DUP4 ADD MLOAD PUSH2 0xE92 JUMPI JUMPDEST PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x40 DUP5 ADD MLOAD PUSH2 0xCB2 SWAP3 SWAP1 SWAP2 ADDRESS SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 AND PUSH2 0x44B1 JUMP JUMPDEST PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0xCC9 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x42FF JUMP JUMPDEST SWAP2 DUP4 ADD MLOAD SWAP1 SWAP2 SWAP1 PUSH1 0x0 SWAP1 ISZERO PUSH2 0xDF9 JUMPI PUSH2 0x162 SLOAD PUSH1 0x20 DUP6 DUP2 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x9195C85B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP2 DUP5 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL SWAP3 DUP4 ISZERO PUSH2 0x490 JUMPI PUSH1 0x0 SWAP4 PUSH2 0xDC3 JUMPI JUMPDEST POP PUSH2 0xD48 PUSH2 0xD5C SWAP4 JUMPDEST DUP7 MLOAD PUSH1 0x60 DUP9 ADD MLOAD PUSH1 0xA0 DUP10 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP4 ADDRESS SWAP4 SWAP1 SWAP2 AND PUSH2 0x4127 JUMP JUMPDEST SWAP4 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x80 DUP8 ADD MLOAD AND SWAP1 PUSH2 0x45C7 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x20 DUP1 DUP5 ADD MLOAD PUSH1 0x80 DUP6 ADD MLOAD PUSH1 0xA0 DUP7 ADD MLOAD PUSH1 0x40 SWAP7 DUP8 ADD MLOAD DUP8 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 DUP8 AND DUP2 MSTORE SWAP5 DUP6 ADD MSTORE SWAP6 DUP4 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP4 DUP3 AND SWAP4 SWAP2 SWAP1 SWAP3 AND SWAP2 PUSH32 0x7AD6609DA145D6EE5AD0114EA489BB938C61528354B696F0E99C3A59A0D2E027 SWAP1 DUP1 PUSH1 0x60 DUP2 ADD PUSH2 0x804 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP4 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xDF1 JUMPI JUMPDEST DUP2 PUSH2 0xDDE PUSH1 0x20 SWAP4 DUP4 PUSH2 0x36ED JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x484 JUMPI SWAP2 MLOAD SWAP2 PUSH2 0xD48 PUSH2 0xD1D JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xDD1 JUMP JUMPDEST POP PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH2 0x162 SLOAD AND PUSH1 0x40 PUSH1 0x20 DUP6 ADD MLOAD PUSH1 0x84 DUP3 DUP8 ADD MLOAD SWAP2 PUSH1 0x0 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0xC0 DUP11 ADD MLOAD AND SWAP6 DUP6 MLOAD SWAP7 DUP8 SWAP6 DUP7 SWAP5 PUSH4 0xBC3D125 PUSH1 0xE3 SHL DUP7 MSTORE PUSH1 0x4 DUP7 ADD MSTORE PUSH1 0x24 DUP6 ADD MSTORE DUP3 PUSH1 0x44 DUP6 ADD MSTORE PUSH1 0x64 DUP5 ADD MSTORE GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x490 JUMPI PUSH2 0xD5C SWAP3 PUSH1 0x0 SWAP3 PUSH1 0x0 SWAP2 PUSH2 0xE6D JUMPI JUMPDEST POP PUSH2 0xD48 SWAP1 SWAP3 PUSH2 0xD26 JUMP JUMPDEST PUSH2 0xD48 SWAP4 POP PUSH2 0xE8B SWAP2 POP PUSH1 0x40 RETURNDATASIZE PUSH1 0x40 GT PUSH2 0xB06 JUMPI PUSH2 0xAF5 DUP2 DUP4 PUSH2 0x36ED JUMP JUMPDEST SWAP1 SWAP3 PUSH2 0xE62 JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP2 SWAP1 PUSH1 0x20 SWAP1 DUP4 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 DUP6 AND GAS STATICCALL DUP1 ISZERO PUSH2 0x490 JUMPI PUSH1 0x0 SWAP1 PUSH2 0xEDE JUMPI JUMPDEST PUSH1 0x40 DUP6 ADD MSTORE SWAP1 POP PUSH2 0xC8E JUMP JUMPDEST POP PUSH1 0x20 DUP3 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xF0A JUMPI JUMPDEST DUP2 PUSH2 0xEF8 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x36ED JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x484 JUMPI PUSH2 0xCB2 SWAP2 MLOAD PUSH2 0xED2 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xEEB JUMP JUMPDEST PUSH2 0xF2B SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x87A JUMPI PUSH2 0x86B DUP2 DUP4 PUSH2 0x36ED JUMP JUMPDEST DUP4 PUSH2 0xC84 JUMP JUMPDEST CALLVALUE PUSH2 0x484 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x484 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP2 SWAP1 DUP3 SWAP1 SUB PUSH2 0x484 JUMPI PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP3 SWAP1 DUP4 SWAP1 SUB PUSH2 0x484 JUMPI PUSH2 0xC3F SWAP1 PUSH1 0x40 MLOAD SWAP4 PUSH2 0xF82 PUSH2 0x100 DUP7 PUSH2 0x36ED JUMP JUMPDEST DUP2 DUP6 MSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x0 PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x0 PUSH1 0x60 DUP7 ADD MSTORE CALLER PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0x0 PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0x1 DUP4 DUP6 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH2 0x165 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x484 JUMPI PUSH2 0xFE3 CALLDATASIZE PUSH1 0x4 PUSH2 0x3680 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 PUSH1 0x40 MLOAD SWAP2 PUSH2 0xFF5 PUSH1 0xC0 DUP5 PUSH2 0x36ED JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP7 DUP8 MSTORE PUSH1 0x40 DUP1 DUP7 ADD SWAP7 SWAP1 SWAP7 MSTORE CALLER PUSH1 0x60 DUP7 ADD DUP2 DUP2 MSTORE PUSH1 0x80 DUP8 ADD SWAP2 DUP3 MSTORE SWAP4 DUP6 AND PUSH1 0xA0 DUP8 ADD SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP4 DUP5 MSTORE PUSH2 0x165 SWAP1 SWAP3 MSTORE SWAP6 SWAP1 SWAP2 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x8A0 JUMPI PUSH2 0x162 SWAP3 PUSH1 0x4 PUSH1 0x20 DUP3 DUP7 SLOAD AND PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0x60009E0B PUSH1 0xE0 SHL DUP3 MSTORE GAS STATICCALL DUP1 ISZERO PUSH2 0x490 JUMPI PUSH2 0x108C SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x1189 JUMPI JUMPDEST POP DUP3 DUP6 MLOAD AND SWAP1 DUP10 MLOAD SWAP2 DUP5 ADDRESS SWAP3 AND PUSH2 0x44B1 JUMP JUMPDEST DUP1 PUSH1 0x40 PUSH2 0x109B DUP3 DUP7 MLOAD AND PUSH2 0x42FF JUMP JUMPDEST SWAP3 SWAP1 SWAP7 SLOAD AND SWAP4 PUSH1 0x64 DUP5 DUP12 MLOAD SWAP3 MLOAD AND SWAP2 PUSH1 0x0 DUP5 MLOAD SWAP8 DUP9 SWAP5 DUP6 SWAP4 PUSH4 0x471A80E3 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x4 DUP6 ADD MSTORE DUP3 PUSH1 0x24 DUP6 ADD MSTORE PUSH1 0x44 DUP5 ADD MSTORE GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x490 JUMPI PUSH32 0xC0A29F7E47448A817F6AAB7D6420E2B5AEBBE7B1B2EFB161C8F94FF6C5112F1A SWAP7 PUSH2 0x1135 DUP5 SWAP4 DUP5 SWAP4 PUSH2 0xACC SWAP8 PUSH1 0x0 SWAP1 PUSH1 0x0 SWAP4 PUSH2 0x1165 JUMPI JUMPDEST POP PUSH2 0x112A SWAP1 DUP14 DUP8 DUP8 MLOAD AND SWAP1 DUP9 PUSH1 0x40 DUP10 ADD MLOAD SWAP2 MLOAD AND SWAP3 ADDRESS SWAP3 PUSH2 0x4127 JUMP JUMPDEST SWAP10 DUP6 DUP11 MLOAD AND SWAP1 PUSH2 0x45C7 JUMP JUMPDEST MLOAD AND SWAP4 MLOAD AND SWAP6 MLOAD AND SWAP6 MLOAD SWAP3 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 DUP5 PUSH1 0x40 SWAP2 SWAP5 SWAP4 SWAP3 PUSH1 0x60 DUP3 ADD SWAP6 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST PUSH2 0x112A SWAP4 POP PUSH2 0x1183 SWAP2 POP PUSH1 0x40 RETURNDATASIZE PUSH1 0x40 GT PUSH2 0xB06 JUMPI PUSH2 0xAF5 DUP2 DUP4 PUSH2 0x36ED JUMP JUMPDEST SWAP3 PUSH2 0x110E JUMP JUMPDEST PUSH2 0x11A1 SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x87A JUMPI PUSH2 0x86B DUP2 DUP4 PUSH2 0x36ED JUMP JUMPDEST DUP10 PUSH2 0x107A JUMP JUMPDEST CALLVALUE PUSH2 0x484 JUMPI PUSH2 0x1230 SWAP1 PUSH2 0x11BB CALLDATASIZE PUSH1 0x4 PUSH2 0x37C4 JUMP JUMPDEST SWAP4 PUSH1 0x40 SWAP9 SWAP7 SWAP9 SWAP4 SWAP2 SWAP4 MLOAD SWAP9 PUSH2 0x11D2 PUSH2 0x120 DUP12 PUSH2 0x36ED JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP6 DUP7 DUP11 MSTORE PUSH1 0x20 DUP11 ADD MSTORE PUSH1 0x40 DUP10 ADD MSTORE PUSH1 0x60 DUP9 ADD MSTORE PUSH1 0x80 DUP8 ADD MSTORE PUSH1 0xA0 DUP7 ADD MSTORE CALLER PUSH1 0xC0 DUP7 ADD MSTORE CALLER DUP5 DUP7 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH2 0x100 DUP6 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH2 0x165 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x8A0 JUMPI DUP2 MLOAD PUSH1 0xA0 DUP4 ADD MLOAD PUSH1 0xC0 DUP5 ADD MLOAD PUSH2 0x125B SWAP3 ADDRESS SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 SWAP1 SWAP2 AND PUSH2 0x4601 JUMP JUMPDEST SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH2 0x162 SLOAD AND PUSH1 0x20 DUP1 DUP4 ADD MLOAD PUSH1 0x24 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH3 0x7C6DA1 PUSH1 0xE2 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL DUP1 ISZERO PUSH2 0x490 JUMPI PUSH2 0x12B9 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x1488 JUMPI JUMPDEST POP PUSH1 0xC0 DUP4 ADD MLOAD PUSH1 0x60 DUP5 ADD MLOAD SWAP2 ADDRESS SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND PUSH2 0x44B1 JUMP JUMPDEST PUSH1 0xC0 DUP2 ADD MLOAD PUSH2 0x12D0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x42FF JUMP JUMPDEST SWAP2 SWAP1 SWAP4 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH2 0x162 SLOAD AND SWAP3 PUSH1 0x60 PUSH1 0x20 DUP5 ADD MLOAD PUSH1 0xE4 PUSH1 0x40 DUP7 ADD MLOAD SWAP2 PUSH1 0x0 DUP5 DUP9 ADD MLOAD SWAP9 PUSH1 0x80 DUP10 ADD MLOAD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP13 DUP12 ADD MLOAD AND PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH2 0x100 DUP13 ADD MLOAD AND SWAP2 PUSH1 0x40 MLOAD SWAP13 DUP14 SWAP9 DUP10 SWAP8 PUSH4 0x71CD722D PUSH1 0xE0 SHL DUP10 MSTORE PUSH1 0x4 DUP10 ADD MSTORE PUSH1 0x24 DUP9 ADD MSTORE PUSH1 0x44 DUP8 ADD MSTORE PUSH1 0x64 DUP7 ADD MSTORE DUP10 PUSH1 0x84 DUP7 ADD MSTORE PUSH1 0xA4 DUP6 ADD MSTORE PUSH1 0xC4 DUP5 ADD MSTORE GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x490 JUMPI PUSH1 0x0 DUP1 SWAP6 PUSH1 0x0 SWAP5 PUSH2 0x142A JUMPI JUMPDEST POP SWAP3 PUSH32 0x8B0E6E8789B22FED235EA22BF1FF2085F5D51277CD17D7D4B532BD4296C59401 SWAP5 SWAP3 PUSH2 0x13B9 PUSH2 0x13CC SWAP4 PUSH2 0x13A2 PUSH1 0xA0 SWAP8 PUSH1 0x1 DUP1 DUP11 SHL SUB DUP9 MLOAD AND SWAP3 PUSH2 0x42F2 JUMP JUMPDEST SWAP1 PUSH1 0x0 PUSH1 0x1 DUP1 DUP11 SHL SUB PUSH1 0xC0 DUP10 ADD MLOAD AND SWAP3 ADDRESS SWAP3 PUSH2 0x4127 JUMP JUMPDEST SWAP9 PUSH1 0x1 DUP1 DUP8 SHL SUB PUSH1 0xC0 DUP7 ADD MLOAD AND SWAP1 PUSH2 0x45C7 JUMP JUMPDEST PUSH1 0x1 DUP1 DUP4 SHL SUB DUP2 MLOAD AND SWAP1 PUSH1 0x20 DUP2 ADD MLOAD SWAP5 PUSH1 0x40 DUP3 ADD MLOAD SWAP2 PUSH2 0x140C PUSH1 0x1 DUP1 DUP8 SHL SUB PUSH1 0xC0 DUP4 ADD MLOAD AND SWAP9 PUSH1 0x1 DUP1 DUP9 SHL SUB SWAP1 DUP4 ADD MLOAD AND SWAP10 DUP7 PUSH1 0x60 DUP5 ADD MLOAD SWAP4 ADD MLOAD PUSH2 0x42F2 JUMP JUMPDEST SWAP3 PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE LOG4 STOP JUMPDEST PUSH2 0x13CC SWAP3 SWAP7 POP PUSH1 0xA0 SWAP5 POP PUSH2 0x13A2 SWAP2 POP SWAP3 PUSH2 0x13B9 PUSH2 0x1476 PUSH32 0x8B0E6E8789B22FED235EA22BF1FF2085F5D51277CD17D7D4B532BD4296C59401 SWAP8 SWAP6 PUSH1 0x60 RETURNDATASIZE DUP2 GT PUSH2 0x845 JUMPI PUSH2 0x830 DUP2 DUP4 PUSH2 0x36ED JUMP JUMPDEST SWAP10 SWAP2 SWAP5 SWAP1 SWAP10 SWAP8 POP POP SWAP4 POP POP SWAP3 SWAP5 PUSH2 0x1361 JUMP JUMPDEST PUSH2 0x14A0 SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x87A JUMPI PUSH2 0x86B DUP2 DUP4 PUSH2 0x36ED JUMP JUMPDEST DUP6 PUSH2 0x1299 JUMP JUMPDEST CALLVALUE PUSH2 0x484 JUMPI PUSH2 0x14B6 CALLDATASIZE PUSH1 0x4 PUSH2 0x35E4 JUMP JUMPDEST SWAP5 SWAP3 SWAP6 SWAP4 SWAP1 SWAP2 PUSH1 0x40 MLOAD SWAP4 PUSH2 0x14CC PUSH2 0x100 DUP7 PUSH2 0x36ED JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 AND SWAP1 DUP2 DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP4 DUP5 MSTORE PUSH1 0x40 DUP7 ADD SWAP9 DUP10 MSTORE PUSH1 0x60 DUP7 ADD SWAP3 DUP4 MSTORE PUSH1 0x80 DUP7 ADD SWAP5 DUP6 MSTORE PUSH2 0x1531 PUSH1 0xA0 DUP8 ADD SWAP8 CALLER DUP10 MSTORE DUP3 PUSH1 0xC0 DUP10 ADD SWAP11 AND DUP11 MSTORE DUP8 ADD SWAP3 PUSH1 0x0 DUP5 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH2 0x165 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x8A0 JUMPI PUSH2 0x154B DUP2 DUP8 MLOAD AND DUP7 MLOAD DUP4 DUP11 MLOAD AND SWAP1 ADDRESS SWAP3 PUSH2 0x4601 JUMP JUMPDEST SWAP6 PUSH2 0x162 SWAP3 DUP3 DUP5 SLOAD AND SWAP1 PUSH1 0x20 DUP8 MLOAD PUSH1 0x24 PUSH1 0x40 MLOAD DUP1 SWAP6 DUP2 SWAP4 PUSH3 0x7C6DA1 PUSH1 0xE2 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL DUP1 ISZERO PUSH2 0x490 JUMPI DUP10 SWAP7 DUP14 DUP14 SWAP3 DUP8 DUP15 DUP2 SWAP8 PUSH1 0x0 SWAP4 PUSH2 0x16F4 JUMPI JUMPDEST POP MLOAD AND SWAP2 MLOAD SWAP1 DUP7 ADDRESS SWAP2 AND SWAP3 PUSH2 0x159D SWAP4 PUSH2 0x44B1 JUMP JUMPDEST DUP14 DUP5 DUP14 MLOAD AND PUSH2 0x15AB SWAP1 PUSH2 0x42FF JUMP JUMPDEST SWAP6 SWAP1 SWAP9 SLOAD AND SWAP4 DUP8 DUP1 DUP13 MLOAD SWAP4 MLOAD SWAP5 MLOAD SWAP6 MLOAD AND SWAP2 MLOAD AND SWAP1 PUSH1 0x40 MLOAD SWAP14 DUP15 SWAP6 DUP7 SWAP6 PUSH4 0xF6A46F3 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x4 DUP8 ADD SWAP6 PUSH2 0x15E0 SWAP7 PUSH2 0x46FA JUMP JUMPDEST SUB DUP2 GAS PUSH1 0x60 SWAP5 PUSH1 0x0 SWAP2 CALL SWAP1 DUP2 ISZERO PUSH2 0x490 JUMPI DUP10 SWAP5 PUSH1 0x0 SWAP7 PUSH1 0x0 SWAP8 PUSH1 0x0 SWAP5 PUSH2 0x16A5 JUMPI JUMPDEST PUSH32 0xD2E2E0C1053BAE3647488C151FB84B114C8432E6E9FF648822B045F54E836BF8 SWAP12 POP DUP7 SWAP5 DUP6 SWAP5 DUP6 SWAP5 DUP6 PUSH2 0x165A DUP13 DUP12 SWAP8 PUSH2 0x804 SWAP16 SWAP15 SWAP13 DUP5 PUSH2 0x1676 SWAP16 PUSH2 0x1663 SWAP11 PUSH2 0x164F SWAP2 PUSH1 0x0 SWAP5 MLOAD AND SWAP5 PUSH2 0x42F2 JUMP JUMPDEST SWAP4 MLOAD AND SWAP3 ADDRESS SWAP3 PUSH2 0x4127 JUMP JUMPDEST SWAP10 MLOAD AND SWAP1 PUSH2 0x45C7 JUMP JUMPDEST MLOAD AND SWAP7 MLOAD SWAP10 MLOAD AND SWAP10 MLOAD AND SWAP10 MLOAD SWAP6 MLOAD PUSH2 0x42F2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP6 AND DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP4 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP2 SWAP1 PUSH1 0x80 DUP3 ADD SWAP1 JUMP JUMPDEST POP SWAP5 SWAP3 POP SWAP9 DUP6 SWAP7 POP DUP3 SWAP2 SWAP6 SWAP4 DUP3 DUP1 DUP1 SWAP4 PUSH1 0x60 RETURNDATASIZE DUP2 GT PUSH2 0x16ED JUMPI JUMPDEST PUSH2 0x16C9 DUP2 DUP4 PUSH2 0x36ED JUMP JUMPDEST DUP2 ADD PUSH2 0x16D4 SWAP2 PUSH2 0x46DF JUMP JUMPDEST SWAP11 SWAP2 SWAP15 SWAP1 SWAP11 SWAP8 POP SWAP5 POP SWAP5 POP POP SWAP6 SWAP1 SWAP5 POP DUP11 SWAP8 SWAP7 SWAP8 PUSH2 0x1601 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x16BF JUMP JUMPDEST PUSH2 0x170D SWAP2 SWAP4 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x87A JUMPI PUSH2 0x86B DUP2 DUP4 PUSH2 0x36ED JUMP JUMPDEST SWAP2 CODESIZE PUSH2 0x1589 JUMP JUMPDEST CALLVALUE PUSH2 0x484 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x484 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND SWAP2 DUP3 SWAP1 SUB PUSH2 0x484 JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x174A PUSH1 0xC0 DUP5 PUSH2 0x36ED JUMP JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD SWAP3 CALLER DUP5 MSTORE CALLER PUSH1 0x80 DUP3 ADD MSTORE PUSH2 0x9AC PUSH1 0xA0 DUP3 ADD SWAP3 PUSH1 0x0 DUP5 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH2 0x165 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x484 JUMPI PUSH2 0xC3F SWAP1 PUSH2 0x17AB CALLDATASIZE PUSH1 0x4 PUSH2 0x36AD JUMP JUMPDEST SWAP3 PUSH1 0x40 SWAP8 SWAP6 SWAP8 SWAP3 SWAP2 SWAP3 MLOAD SWAP8 PUSH2 0x17C2 PUSH2 0x100 DUP11 PUSH2 0x36ED JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP5 DUP6 DUP10 MSTORE PUSH1 0x20 DUP10 ADD MSTORE PUSH1 0x40 DUP9 ADD MSTORE PUSH1 0x60 DUP8 ADD MSTORE CALLER PUSH1 0x80 DUP8 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0xA0 DUP7 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0x0 DUP4 DUP6 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH2 0x165 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x484 JUMPI PUSH2 0x1833 CALLDATASIZE PUSH1 0x4 PUSH2 0x3680 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x1844 PUSH1 0xC0 DUP5 PUSH2 0x36ED JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP7 DUP8 MSTORE PUSH1 0x40 DUP1 DUP7 ADD SWAP4 SWAP1 SWAP4 MSTORE CALLER PUSH1 0x60 DUP7 ADD SWAP1 DUP2 MSTORE SWAP6 DUP5 AND PUSH1 0x80 DUP7 ADD SWAP1 DUP2 MSTORE PUSH1 0x0 PUSH1 0xA0 DUP8 ADD DUP2 DUP2 MSTORE SWAP4 DUP2 MSTORE PUSH2 0x165 SWAP1 SWAP3 MSTORE SWAP3 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP2 SWAP5 SWAP2 PUSH1 0xFF AND PUSH2 0x1044 JUMP JUMPDEST CALLVALUE PUSH2 0x484 JUMPI PUSH2 0x18A9 CALLDATASIZE PUSH1 0x4 PUSH2 0x372B JUMP JUMPDEST SWAP2 SWAP4 SWAP3 PUSH2 0x18B9 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x36ED JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP4 DUP5 DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE CALLER PUSH1 0x80 DUP3 ADD MSTORE CALLER PUSH1 0xA0 DUP3 ADD MSTORE PUSH2 0x190C PUSH1 0xC0 DUP3 ADD SWAP3 PUSH1 0x0 DUP5 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH2 0x165 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x8A0 JUMPI DUP1 MLOAD PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0x1937 SWAP3 ADDRESS SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 SWAP1 SWAP2 AND PUSH2 0x4601 JUMP JUMPDEST PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x194E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x42FF JUMP JUMPDEST PUSH2 0x162 SLOAD PUSH1 0x20 DUP6 ADD MLOAD PUSH1 0x40 DUP1 DUP8 ADD MLOAD PUSH1 0xA0 DUP9 ADD MLOAD SWAP9 MLOAD DUP3 MLOAD PUSH4 0xFBBB53A7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x24 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 DUP4 ADD DUP8 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP9 DUP10 AND PUSH1 0x64 DUP5 ADD MSTORE DUP9 AND PUSH1 0x84 DUP4 ADD MSTORE SWAP4 SWAP7 SWAP1 SWAP4 SWAP2 DUP5 SWAP2 PUSH1 0xA4 SWAP2 DUP4 SWAP2 PUSH1 0x0 SWAP2 AND GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x490 JUMPI PUSH2 0x1A06 SWAP4 PUSH1 0x0 SWAP2 PUSH1 0x0 SWAP5 PUSH2 0x1A68 JUMPI JUMPDEST POP PUSH2 0x19F2 SWAP2 PUSH2 0x19D4 SWAP2 PUSH2 0x42F2 JUMP JUMPDEST DUP6 MLOAD PUSH1 0x80 DUP8 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP3 ADDRESS SWAP3 PUSH1 0x0 SWAP3 AND PUSH2 0x4127 JUMP JUMPDEST SWAP5 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x80 DUP7 ADD MLOAD AND SWAP1 PUSH2 0x45C7 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0xA0 DUP5 ADD MLOAD PUSH1 0x40 DUP6 ADD MLOAD PUSH1 0x60 SWAP1 SWAP6 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP7 SWAP3 DUP3 AND SWAP6 SWAP4 SWAP5 PUSH32 0xA96382430C9C4BC56996C6E85C0F27E26CFD1F4CBFC2CE9F5BA23F1E51252BC7 SWAP5 SWAP4 SWAP3 AND SWAP2 PUSH2 0x804 SWAP2 PUSH2 0xAA7 SWAP2 SWAP1 PUSH2 0x42F2 JUMP JUMPDEST PUSH2 0x19D4 SWAP2 SWAP5 POP PUSH2 0x19F2 SWAP3 POP PUSH2 0x1A8B SWAP1 PUSH1 0x40 RETURNDATASIZE PUSH1 0x40 GT PUSH2 0xB06 JUMPI PUSH2 0xAF5 DUP2 DUP4 PUSH2 0x36ED JUMP JUMPDEST SWAP5 SWAP2 POP SWAP2 PUSH2 0x19C6 JUMP JUMPDEST CALLVALUE PUSH2 0x484 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x484 JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0xCA SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x484 JUMPI PUSH2 0xC3F SWAP1 PUSH2 0x1ACB CALLDATASIZE PUSH1 0x4 PUSH2 0x364E JUMP JUMPDEST SWAP2 PUSH1 0x40 SWAP7 SWAP5 SWAP7 MLOAD SWAP7 PUSH2 0x1ADF PUSH2 0x100 DUP10 PUSH2 0x36ED JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP4 DUP5 DUP9 MSTORE PUSH1 0x20 DUP9 ADD MSTORE PUSH1 0x40 DUP8 ADD MSTORE PUSH1 0x60 DUP7 ADD MSTORE CALLER PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0x0 PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0x0 DUP4 DUP6 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH2 0x165 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x484 JUMPI PUSH2 0x1B4A CALLDATASIZE PUSH1 0x4 PUSH2 0x3754 JUMP JUMPDEST PUSH1 0x40 SWAP8 SWAP6 SWAP3 SWAP4 SWAP2 SWAP7 SWAP5 SWAP8 MLOAD SWAP5 PUSH2 0x1B62 PUSH2 0x100 DUP8 PUSH2 0x36ED JUMP JUMPDEST PUSH2 0x1531 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP3 AND DUP1 DUP9 MSTORE PUSH1 0x20 DUP9 ADD SWAP6 DUP7 MSTORE PUSH1 0x40 DUP9 ADD SWAP11 DUP12 MSTORE PUSH1 0x60 DUP9 ADD SWAP5 DUP6 MSTORE PUSH1 0x80 DUP9 ADD SWAP7 DUP8 MSTORE DUP3 PUSH1 0xA0 DUP10 ADD SWAP10 CALLER DUP12 MSTORE DUP2 PUSH1 0xC0 DUP12 ADD SWAP13 AND DUP13 MSTORE DUP10 ADD SWAP5 AND DUP5 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH2 0x165 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x484 JUMPI PUSH2 0x1BD6 CALLDATASIZE PUSH1 0x4 PUSH2 0x364E JUMP JUMPDEST SWAP3 SWAP5 SWAP4 PUSH2 0x1BE9 PUSH1 0x40 SWAP4 SWAP3 SWAP4 MLOAD SWAP6 DUP7 PUSH2 0x36ED JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP5 DUP6 DUP6 MSTORE PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE CALLER PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0xA0 DUP3 ADD MSTORE PUSH2 0x190C PUSH1 0xC0 DUP3 ADD SWAP3 PUSH1 0x0 DUP5 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH2 0x165 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x484 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x484 JUMPI PUSH1 0xCA SLOAD PUSH1 0x40 MLOAD PUSH1 0x10 SWAP2 SWAP1 SWAP2 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x484 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x484 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP2 SWAP1 DUP3 SWAP1 SUB PUSH2 0x484 JUMPI PUSH2 0xC3F PUSH1 0x40 MLOAD SWAP3 PUSH2 0x1CAA PUSH2 0x100 DUP6 PUSH2 0x36ED JUMP JUMPDEST DUP1 DUP5 MSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x0 PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x0 PUSH1 0x60 DUP6 ADD MSTORE CALLER PUSH1 0x80 DUP6 ADD MSTORE CALLER PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0x0 PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0x1 DUP4 DUP6 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH2 0x165 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x484 JUMPI PUSH2 0x9AC PUSH2 0x1D0F CALLDATASIZE PUSH1 0x4 PUSH2 0x3792 JUMP JUMPDEST SWAP3 PUSH1 0x40 SWAP6 SWAP2 SWAP6 MLOAD SWAP3 PUSH2 0x1D22 PUSH1 0xC0 DUP6 PUSH2 0x36ED JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP7 AND SWAP2 DUP3 DUP6 MSTORE PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 DUP5 ADD MSTORE DUP5 PUSH1 0x60 DUP5 ADD SWAP7 CALLER DUP9 MSTORE AND PUSH1 0x80 DUP5 ADD MSTORE DUP5 PUSH1 0xA0 DUP5 ADD SWAP5 AND DUP5 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH2 0x165 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x484 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x484 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND SWAP2 DUP3 SWAP1 SUB PUSH2 0x484 JUMPI PUSH1 0x24 CALLDATALOAD SWAP1 DUP1 DUP3 AND DUP1 SWAP3 SUB PUSH2 0x484 JUMPI PUSH1 0x44 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP1 SWAP2 SUB PUSH2 0x484 JUMPI PUSH2 0x1DBD PUSH2 0x4732 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x59E02DD7 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 DUP2 PUSH1 0x4 DUP2 DUP8 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x490 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x1F5D JUMPI JUMPDEST POP ISZERO PUSH2 0x8A0 JUMPI DUP4 PUSH1 0x0 MSTORE PUSH2 0x165 DUP1 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND ISZERO PUSH2 0x1E58 JUMPI JUMPDEST DUP5 PUSH32 0x20D2581988316D1A188695A19393B9AE4C1C266DDF57CE57A64DB1EA06DF0F16 PUSH1 0x20 DUP7 DUP4 PUSH1 0x0 MSTORE PUSH2 0x164 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG2 STOP JUMPDEST PUSH2 0x163 DUP1 SLOAD SWAP4 SWAP5 SWAP1 SWAP4 SWAP1 SWAP3 PUSH1 0x0 SIGNEXTEND PUSH1 0x12 SUB SWAP1 PUSH1 0x7F NOT DUP3 SLT PUSH1 0x7F DUP4 SGT OR PUSH2 0x1F47 JUMPI PUSH1 0x40 MLOAD PUSH1 0x1 SWAP2 PUSH2 0x1E89 PUSH1 0x60 DUP4 PUSH2 0x36ED JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP4 DUP3 DUP6 MSTORE PUSH1 0x40 DUP3 ADD SWAP4 PUSH1 0x0 SIGNEXTEND DUP5 MSTORE DUP9 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 MLOAD DUP2 SSTORE ADD SWAP2 MLOAD ISZERO ISZERO SWAP1 PUSH1 0xFF DUP4 SLOAD SWAP2 MLOAD PUSH1 0x8 SHL PUSH2 0xFF00 AND SWAP3 AND SWAP1 PUSH2 0xFFFF NOT AND OR OR SWAP1 SSTORE DUP2 SLOAD SWAP3 PUSH9 0x10000000000000000 DUP5 LT ISZERO PUSH2 0x1F31 JUMPI DUP5 PUSH2 0x1F14 DUP6 PUSH1 0x20 SWAP6 PUSH1 0x1 PUSH32 0x20D2581988316D1A188695A19393B9AE4C1C266DDF57CE57A64DB1EA06DF0F16 SWAP9 ADD DUP2 SSTORE PUSH2 0x3E95 JUMP JUMPDEST SWAP1 SWAP3 DUP4 SLOAD SWAP2 PUSH1 0x3 SHL SWAP1 DUP2 SHL SWAP3 DUP4 SWAP2 SHL AND SWAP2 NOT AND OR SWAP1 SSTORE SWAP2 DUP5 PUSH2 0x1E05 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1F7F SWAP2 POP PUSH1 0x40 RETURNDATASIZE PUSH1 0x40 GT PUSH2 0x1F87 JUMPI JUMPDEST PUSH2 0x1F77 DUP2 DUP4 PUSH2 0x36ED JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x406B JUMP JUMPDEST SWAP1 POP DUP6 PUSH2 0x1DE2 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1F6D JUMP JUMPDEST CALLVALUE PUSH2 0x484 JUMPI PUSH2 0x1230 SWAP1 PUSH2 0x1FA2 CALLDATASIZE PUSH1 0x4 PUSH2 0x37C4 JUMP JUMPDEST SWAP4 PUSH1 0x40 SWAP9 SWAP7 SWAP9 SWAP4 SWAP2 SWAP4 MLOAD SWAP9 PUSH2 0x1FB9 PUSH2 0x120 DUP12 PUSH2 0x36ED JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP6 DUP7 DUP11 MSTORE PUSH1 0x20 DUP11 ADD MSTORE PUSH1 0x40 DUP10 ADD MSTORE PUSH1 0x60 DUP9 ADD MSTORE PUSH1 0x80 DUP8 ADD MSTORE PUSH1 0xA0 DUP7 ADD MSTORE CALLER PUSH1 0xC0 DUP7 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP4 DUP6 ADD MSTORE PUSH1 0x0 PUSH2 0x100 DUP6 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH2 0x165 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x484 JUMPI PUSH2 0x2028 CALLDATASIZE PUSH1 0x4 PUSH2 0x3792 JUMP JUMPDEST SWAP2 PUSH1 0x40 SWAP5 SWAP2 SWAP4 SWAP5 MLOAD SWAP3 PUSH2 0x203C PUSH1 0xC0 DUP6 PUSH2 0x36ED JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP4 AND SWAP2 DUP3 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP7 DUP8 MSTORE PUSH1 0x40 DUP6 ADD MSTORE PUSH2 0x1044 PUSH1 0x60 DUP6 ADD SWAP3 CALLER DUP5 MSTORE DUP5 PUSH1 0x80 DUP8 ADD SWAP8 AND DUP8 MSTORE DUP5 PUSH1 0xA0 DUP8 ADD SWAP4 AND DUP4 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH2 0x165 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x484 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x484 JUMPI PUSH1 0xCA SLOAD PUSH1 0xFF DUP2 PUSH1 0x8 SHR AND PUSH2 0x212C JUMPI PUSH1 0x10 DUP2 SWAP1 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x211A JUMPI PUSH1 0xFF DUP2 AND ISZERO PUSH2 0x2108 JUMPI PUSH2 0x100 SWAP1 PUSH2 0xFF00 NOT AND OR PUSH1 0xCA SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH1 0x20 PUSH1 0x40 MLOAD CALLER DUP2 MSTORE LOG1 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x866099C3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1D77D477 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x783BB6C9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x484 JUMPI PUSH2 0x190C SWAP1 PUSH2 0x2152 CALLDATASIZE PUSH1 0x4 PUSH2 0x364E JUMP JUMPDEST SWAP6 SWAP4 PUSH2 0x2164 PUSH1 0x40 SWAP4 SWAP3 SWAP4 MLOAD SWAP7 DUP8 PUSH2 0x36ED JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP3 DUP4 DUP7 MSTORE PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP5 ADD MSTORE CALLER PUSH1 0x80 DUP5 ADD MSTORE CALLER PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xC0 DUP4 ADD SWAP4 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH2 0x165 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x484 JUMPI PUSH2 0x21CA CALLDATASIZE PUSH1 0x4 PUSH2 0x3754 JUMP JUMPDEST PUSH1 0x40 SWAP8 SWAP6 SWAP3 SWAP4 SWAP2 SWAP7 SWAP5 SWAP8 MLOAD SWAP5 PUSH2 0x21E2 PUSH2 0x100 DUP8 PUSH2 0x36ED JUMP JUMPDEST PUSH2 0x2246 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP3 AND DUP1 DUP9 MSTORE PUSH1 0x20 DUP9 ADD SWAP6 DUP7 MSTORE PUSH1 0x40 DUP9 ADD SWAP11 DUP12 MSTORE PUSH1 0x60 DUP9 ADD SWAP5 DUP6 MSTORE PUSH1 0x80 DUP9 ADD SWAP7 DUP8 MSTORE DUP3 PUSH1 0xA0 DUP10 ADD SWAP10 CALLER DUP12 MSTORE DUP2 PUSH1 0xC0 DUP12 ADD SWAP13 AND DUP13 MSTORE DUP10 ADD SWAP5 AND DUP5 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH2 0x165 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x8A0 JUMPI PUSH2 0x2260 DUP2 DUP8 MLOAD AND DUP7 MLOAD DUP4 DUP11 MLOAD AND SWAP1 ADDRESS SWAP3 PUSH2 0x4601 JUMP JUMPDEST SWAP6 PUSH1 0x4 PUSH2 0x162 SWAP4 PUSH1 0x20 DUP5 DUP7 SLOAD AND PUSH1 0x40 MLOAD SWAP4 DUP5 DUP1 SWAP3 PUSH4 0x60009E0B PUSH1 0xE0 SHL DUP3 MSTORE GAS STATICCALL DUP1 ISZERO PUSH2 0x490 JUMPI DUP10 SWAP7 DUP14 DUP14 SWAP3 DUP8 DUP15 DUP2 SWAP8 PUSH1 0x0 SWAP4 PUSH2 0x23AC JUMPI JUMPDEST POP MLOAD AND SWAP2 MLOAD SWAP1 DUP7 ADDRESS SWAP2 AND SWAP3 PUSH2 0x22AB SWAP4 PUSH2 0x44B1 JUMP JUMPDEST DUP14 DUP5 DUP14 MLOAD AND PUSH2 0x22B9 SWAP1 PUSH2 0x42FF JUMP JUMPDEST SWAP6 SWAP1 SWAP9 SLOAD AND SWAP4 DUP8 DUP1 DUP13 MLOAD SWAP4 MLOAD SWAP5 MLOAD SWAP6 MLOAD AND SWAP2 MLOAD AND SWAP1 PUSH1 0x40 MLOAD SWAP14 DUP15 SWAP6 DUP7 SWAP6 PUSH4 0xDA2F567D PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x4 DUP8 ADD SWAP6 PUSH2 0x22EE SWAP7 PUSH2 0x46FA JUMP JUMPDEST SUB DUP2 GAS PUSH1 0x60 SWAP5 PUSH1 0x0 SWAP2 CALL SWAP1 DUP2 ISZERO PUSH2 0x490 JUMPI DUP10 SWAP5 PUSH1 0x0 SWAP7 PUSH1 0x0 SWAP8 PUSH1 0x0 SWAP5 PUSH2 0x235D JUMPI JUMPDEST PUSH32 0x2B431B3DDA86C3D03FF399B5BADA914145A869EB3F7EBFEFA094DDFE99C0C4A1 SWAP12 POP DUP7 SWAP5 DUP6 SWAP5 DUP6 SWAP5 DUP6 PUSH2 0x165A DUP13 DUP12 SWAP8 PUSH2 0x804 SWAP16 SWAP15 SWAP13 DUP5 PUSH2 0x1676 SWAP16 PUSH2 0x1663 SWAP11 PUSH2 0x164F SWAP2 PUSH1 0x0 SWAP5 MLOAD AND SWAP5 PUSH2 0x42F2 JUMP JUMPDEST POP SWAP5 SWAP3 POP SWAP9 DUP6 SWAP7 POP DUP3 SWAP2 SWAP6 SWAP4 DUP3 DUP1 DUP1 SWAP4 PUSH1 0x60 RETURNDATASIZE DUP2 GT PUSH2 0x23A5 JUMPI JUMPDEST PUSH2 0x2381 DUP2 DUP4 PUSH2 0x36ED JUMP JUMPDEST DUP2 ADD PUSH2 0x238C SWAP2 PUSH2 0x46DF JUMP JUMPDEST SWAP11 SWAP2 SWAP15 SWAP1 SWAP11 SWAP8 POP SWAP5 POP SWAP5 POP POP SWAP6 SWAP1 SWAP5 POP DUP11 SWAP8 SWAP7 SWAP8 PUSH2 0x230F JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x2377 JUMP JUMPDEST PUSH2 0x23C5 SWAP2 SWAP4 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x87A JUMPI PUSH2 0x86B DUP2 DUP4 PUSH2 0x36ED JUMP JUMPDEST SWAP2 CODESIZE PUSH2 0x2297 JUMP JUMPDEST CALLVALUE PUSH2 0x484 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x484 JUMPI PUSH2 0x23E5 PUSH2 0x4732 JUMP JUMPDEST PUSH1 0xCA DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE STOP JUMPDEST CALLVALUE PUSH2 0x484 JUMPI PUSH2 0x2404 CALLDATASIZE PUSH1 0x4 PUSH2 0x3620 JUMP JUMPDEST SWAP1 SWAP2 SWAP5 SWAP4 SWAP3 PUSH1 0x40 MLOAD SWAP3 PUSH2 0x2419 PUSH2 0x100 DUP6 PUSH2 0x36ED JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND DUP1 DUP6 MSTORE PUSH1 0x20 DUP1 DUP7 ADD SWAP4 DUP5 MSTORE PUSH1 0x40 DUP1 DUP8 ADD SWAP10 DUP11 MSTORE PUSH1 0x60 DUP8 ADD SWAP4 DUP5 MSTORE PUSH1 0x80 DUP8 ADD SWAP6 DUP7 MSTORE CALLER PUSH1 0xA0 DUP9 ADD DUP2 DUP2 MSTORE PUSH1 0xC0 DUP10 ADD SWAP2 DUP3 MSTORE PUSH1 0x0 SWAP11 DUP10 ADD DUP12 DUP2 MSTORE SWAP5 DUP12 MSTORE PUSH2 0x165 SWAP1 SWAP4 MSTORE SWAP9 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 SWAP7 SWAP1 PUSH1 0xFF AND PUSH2 0x1531 JUMP JUMPDEST CALLVALUE PUSH2 0x484 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x484 JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0xCA SLOAD PUSH1 0x8 SHR AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x484 JUMPI PUSH2 0x24AC CALLDATASIZE PUSH1 0x4 PUSH2 0x372B JUMP JUMPDEST SWAP2 SWAP1 SWAP4 SWAP3 PUSH2 0x24BD PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x36ED JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 AND SWAP2 DUP3 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP1 DUP2 MSTORE PUSH1 0x40 DUP6 ADD SWAP6 DUP7 MSTORE PUSH1 0x60 DUP6 ADD SWAP4 DUP5 MSTORE PUSH1 0x80 DUP6 ADD SWAP4 CALLER DUP6 MSTORE PUSH1 0xA0 DUP7 ADD SWAP6 CALLER DUP8 MSTORE PUSH2 0x251C PUSH1 0xC0 DUP3 ADD SWAP6 PUSH1 0x0 DUP8 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH2 0x165 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x8A0 JUMPI DUP4 DUP2 MLOAD AND DUP3 MLOAD DUP6 DUP9 MLOAD AND ADDRESS SWAP2 PUSH2 0x2536 SWAP4 PUSH2 0x4601 JUMP JUMPDEST SWAP4 DUP1 DUP8 MLOAD AND PUSH2 0x2544 SWAP1 PUSH2 0x42FF JUMP JUMPDEST PUSH2 0x162 SLOAD DUP7 MLOAD DUP13 MLOAD DUP13 MLOAD SWAP11 MLOAD PUSH1 0x40 MLOAD PUSH4 0x8CE6C2C1 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x24 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 DUP3 ADD DUP11 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP11 DUP7 AND DUP12 AND PUSH1 0x64 DUP4 ADD MSTORE DUP6 AND SWAP1 SWAP10 AND PUSH1 0x84 DUP11 ADD MSTORE SWAP2 SWAP4 SWAP2 DUP4 AND DUP9 PUSH1 0xA4 DUP2 GAS PUSH1 0x60 SWAP5 PUSH1 0x0 SWAP2 CALL SWAP1 DUP2 ISZERO PUSH2 0x490 JUMPI DUP10 SWAP5 PUSH1 0x0 SWAP9 PUSH1 0x0 SWAP10 PUSH1 0x0 SWAP5 PUSH2 0x2619 JUMPI JUMPDEST PUSH32 0x1561C24CD3F8AD463CA4FF624E29C93575D86A34004F6848ABCF37684E2BA601 SWAP12 POP DUP7 SWAP5 DUP6 SWAP5 DUP6 SWAP5 DUP6 PUSH2 0x165A DUP13 DUP12 SWAP8 PUSH2 0x804 SWAP16 SWAP15 SWAP13 DUP5 PUSH2 0x1676 SWAP16 PUSH2 0x2606 SWAP11 PUSH2 0x164F SWAP2 PUSH1 0x0 SWAP5 MLOAD AND SWAP5 PUSH2 0x42F2 JUMP JUMPDEST MLOAD AND SWAP7 MLOAD SWAP10 MLOAD AND SWAP10 MLOAD AND SWAP10 MLOAD SWAP3 MLOAD PUSH2 0x42F2 JUMP JUMPDEST POP SWAP5 SWAP3 POP SWAP9 DUP3 SWAP2 SWAP9 POP DUP6 SWAP7 SWAP6 SWAP4 DUP3 DUP1 DUP1 SWAP4 PUSH1 0x60 RETURNDATASIZE DUP2 GT PUSH2 0x2662 JUMPI JUMPDEST PUSH2 0x263E DUP2 DUP4 PUSH2 0x36ED JUMP JUMPDEST DUP2 ADD PUSH2 0x2649 SWAP2 PUSH2 0x46DF JUMP JUMPDEST SWAP14 SWAP2 SWAP15 SWAP1 SWAP14 SWAP8 POP SWAP5 POP SWAP5 POP POP SWAP6 SWAP1 SWAP5 POP DUP11 SWAP8 SWAP7 SWAP8 PUSH2 0x25B8 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x2634 JUMP JUMPDEST CALLVALUE PUSH2 0x484 JUMPI PUSH2 0x2679 CALLDATASIZE PUSH1 0x4 PUSH2 0x35E4 JUMP JUMPDEST SWAP3 SWAP6 SWAP5 SWAP4 SWAP1 SWAP2 PUSH1 0x40 MLOAD SWAP4 PUSH2 0x268F PUSH2 0x100 DUP7 PUSH2 0x36ED JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND DUP1 DUP7 MSTORE PUSH1 0x20 DUP1 DUP8 ADD SWAP5 DUP6 MSTORE PUSH1 0x40 DUP1 DUP9 ADD SWAP11 DUP12 MSTORE PUSH1 0x60 DUP9 ADD SWAP5 DUP6 MSTORE PUSH1 0x80 DUP9 ADD SWAP7 DUP8 MSTORE CALLER PUSH1 0xA0 DUP10 ADD DUP2 DUP2 MSTORE PUSH1 0xC0 DUP11 ADD SWAP2 DUP3 MSTORE SWAP5 DUP11 AND SWAP11 DUP10 ADD SWAP11 DUP12 MSTORE PUSH1 0x0 SWAP4 DUP5 MSTORE PUSH2 0x165 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 SWAP8 SWAP2 SWAP7 SWAP1 PUSH1 0xFF AND PUSH2 0x2246 JUMP JUMPDEST CALLVALUE PUSH2 0x484 JUMPI PUSH2 0x2702 CALLDATASIZE PUSH1 0x4 PUSH2 0x364E JUMP JUMPDEST SWAP4 SWAP1 SWAP2 SWAP5 SWAP3 PUSH2 0x2714 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x36ED JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP1 DUP6 MSTORE PUSH1 0x20 DUP1 DUP7 ADD SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP8 ADD SWAP9 DUP10 MSTORE PUSH1 0x60 DUP8 ADD SWAP6 DUP7 MSTORE CALLER PUSH1 0x80 DUP9 ADD SWAP1 DUP2 MSTORE SWAP8 DUP6 AND PUSH1 0xA0 DUP9 ADD SWAP1 DUP2 MSTORE PUSH1 0x0 PUSH1 0xC0 DUP10 ADD DUP2 DUP2 MSTORE SWAP5 DUP2 MSTORE PUSH2 0x165 SWAP1 SWAP4 MSTORE SWAP2 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 SWAP7 SWAP6 SWAP2 SWAP5 SWAP2 SWAP1 PUSH1 0xFF AND PUSH2 0x251C JUMP JUMPDEST CALLVALUE PUSH2 0x484 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x484 JUMPI PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS SUB PUSH2 0x27DD JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP2 MSTORE RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x555550535570677261646561626C653A206D757374206E6F742062652063616C PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6C6564207468726F7567682064656C656761746563616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x484 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x484 JUMPI PUSH2 0x2861 PUSH2 0x4732 JUMP JUMPDEST PUSH1 0xCA DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE STOP JUMPDEST PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x484 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x4 CALLDATALOAD DUP2 DUP2 AND DUP2 SUB PUSH2 0x484 JUMPI PUSH1 0x24 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x484 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x484 JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD SWAP2 PUSH2 0x28B9 DUP4 PUSH2 0x370F JUMP JUMPDEST SWAP2 PUSH2 0x28C7 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x36ED JUMP JUMPDEST DUP4 DUP4 MSTORE CALLDATASIZE PUSH1 0x24 DUP6 DUP4 ADD ADD GT PUSH2 0x484 JUMPI PUSH2 0x421 SWAP5 PUSH1 0x0 PUSH1 0x20 DUP7 PUSH1 0x1 SWAP8 PUSH1 0x24 PUSH2 0x294A SWAP7 ADD DUP4 DUP10 ADD CALLDATACOPY DUP7 ADD ADD MSTORE DUP1 PUSH32 0x0 AND SWAP1 PUSH2 0x2921 DUP3 ADDRESS EQ ISZERO PUSH2 0x3802 JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD AND EQ PUSH2 0x3863 JUMP JUMPDEST PUSH2 0x2952 PUSH2 0x4732 JUMP JUMPDEST PUSH2 0x38C4 JUMP JUMPDEST CALLVALUE PUSH2 0x484 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x484 JUMPI PUSH1 0x20 PUSH2 0x2972 PUSH2 0x3EF6 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x484 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x484 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x4 CALLDATALOAD DUP2 DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x484 JUMPI PUSH1 0x40 MLOAD PUSH2 0x29AF PUSH1 0xC0 DUP3 PUSH2 0x36ED JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 PUSH1 0x24 CALLDATALOAD DUP5 MSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD CALLER DUP2 MSTORE PUSH1 0x80 DUP4 ADD SWAP4 CALLER DUP6 MSTORE PUSH2 0x1044 PUSH1 0xA0 DUP6 ADD SWAP2 PUSH1 0x0 DUP4 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH2 0x165 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x484 JUMPI PUSH2 0x2A0F CALLDATASIZE PUSH1 0x4 PUSH2 0x35E4 JUMP JUMPDEST SWAP3 SWAP6 SWAP5 SWAP4 SWAP1 SWAP2 PUSH1 0x40 MLOAD SWAP4 PUSH2 0x2A25 PUSH2 0x100 DUP7 PUSH2 0x36ED JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND DUP1 DUP7 MSTORE PUSH1 0x20 DUP1 DUP8 ADD SWAP5 DUP6 MSTORE PUSH1 0x40 DUP1 DUP9 ADD SWAP11 DUP12 MSTORE PUSH1 0x60 DUP9 ADD SWAP5 DUP6 MSTORE PUSH1 0x80 DUP9 ADD SWAP7 DUP8 MSTORE CALLER PUSH1 0xA0 DUP10 ADD DUP2 DUP2 MSTORE PUSH1 0xC0 DUP11 ADD SWAP2 DUP3 MSTORE SWAP5 DUP11 AND SWAP11 DUP10 ADD SWAP11 DUP12 MSTORE PUSH1 0x0 SWAP4 DUP5 MSTORE PUSH2 0x165 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 SWAP8 SWAP2 SWAP7 SWAP1 PUSH1 0xFF AND PUSH2 0x1531 JUMP JUMPDEST CALLVALUE PUSH2 0x484 JUMPI PUSH2 0x190C SWAP1 PUSH2 0x2A9C CALLDATASIZE PUSH1 0x4 PUSH2 0x36AD JUMP JUMPDEST SWAP7 SWAP5 PUSH2 0x2AAE PUSH1 0x40 SWAP5 SWAP3 SWAP5 MLOAD SWAP8 DUP9 PUSH2 0x36ED JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP4 DUP5 DUP8 MSTORE PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x60 DUP6 ADD MSTORE CALLER PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xC0 DUP4 ADD SWAP4 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH2 0x165 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x484 JUMPI PUSH2 0x2B1B CALLDATASIZE PUSH1 0x4 PUSH2 0x3620 JUMP JUMPDEST SWAP1 SWAP2 SWAP5 SWAP4 SWAP3 PUSH1 0x40 MLOAD SWAP3 PUSH2 0x2B30 PUSH2 0x100 DUP6 PUSH2 0x36ED JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND DUP1 DUP6 MSTORE PUSH1 0x20 DUP1 DUP7 ADD SWAP4 DUP5 MSTORE PUSH1 0x40 DUP1 DUP8 ADD SWAP10 DUP11 MSTORE PUSH1 0x60 DUP8 ADD SWAP4 DUP5 MSTORE PUSH1 0x80 DUP8 ADD SWAP6 DUP7 MSTORE CALLER PUSH1 0xA0 DUP9 ADD DUP2 DUP2 MSTORE PUSH1 0xC0 DUP10 ADD SWAP2 DUP3 MSTORE PUSH1 0x0 SWAP11 DUP10 ADD DUP12 DUP2 MSTORE SWAP5 DUP12 MSTORE PUSH2 0x165 SWAP1 SWAP4 MSTORE SWAP9 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 SWAP7 SWAP1 PUSH1 0xFF AND PUSH2 0x2246 JUMP JUMPDEST CALLVALUE PUSH2 0x484 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x484 JUMPI PUSH1 0xCA SLOAD PUSH1 0xFF DUP2 PUSH1 0x8 SHR AND ISZERO PUSH2 0x2BF5 JUMPI PUSH1 0x10 DUP2 SWAP1 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x211A JUMPI PUSH2 0xFF00 NOT AND PUSH1 0xCA SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH1 0x20 PUSH1 0x40 MLOAD CALLER DUP2 MSTORE LOG1 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x7C7FD079 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x484 JUMPI PUSH2 0x2C17 CALLDATASIZE PUSH1 0x4 PUSH2 0x36AD JUMP JUMPDEST SWAP3 SWAP6 SWAP4 SWAP1 SWAP5 SWAP2 PUSH2 0x2C2A PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x36ED JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP4 AND SWAP5 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 DUP4 MSTORE PUSH1 0x40 DUP2 ADD SWAP8 DUP9 MSTORE PUSH1 0x60 DUP2 ADD SWAP2 DUP3 MSTORE PUSH2 0x251C PUSH1 0x80 DUP3 ADD SWAP7 CALLER DUP9 MSTORE DUP6 PUSH1 0xA0 DUP5 ADD SWAP10 AND DUP10 MSTORE DUP6 PUSH1 0xC0 DUP5 ADD SWAP8 AND DUP8 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH2 0x165 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x484 JUMPI PUSH2 0xC3F SWAP1 PUSH2 0x2C9E CALLDATASIZE PUSH1 0x4 PUSH2 0x364E JUMP JUMPDEST SWAP2 PUSH1 0x40 SWAP7 SWAP5 SWAP7 MLOAD SWAP7 PUSH2 0x2CB2 PUSH2 0x100 DUP10 PUSH2 0x36ED JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP4 DUP5 DUP9 MSTORE PUSH1 0x20 DUP9 ADD MSTORE PUSH1 0x40 DUP8 ADD MSTORE PUSH1 0x60 DUP7 ADD MSTORE CALLER PUSH1 0x80 DUP7 ADD MSTORE CALLER PUSH1 0xA0 DUP7 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0x0 DUP4 DUP6 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH2 0x165 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x484 JUMPI PUSH2 0x2D1C CALLDATASIZE PUSH1 0x4 PUSH2 0x3680 JUMP JUMPDEST SWAP2 SWAP3 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 MSTORE PUSH2 0x165 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND ISZERO PUSH2 0x8A0 JUMPI PUSH2 0x421 SWAP4 CALLER SWAP3 PUSH2 0x4127 JUMP JUMPDEST CALLVALUE PUSH2 0x484 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x484 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND DUP3 SUB PUSH2 0x484 JUMPI PUSH2 0x421 SWAP2 PUSH2 0x2DAC DUP3 PUSH1 0x0 SWAP4 PUSH32 0x0 AND SWAP1 PUSH2 0x2921 DUP3 ADDRESS EQ ISZERO PUSH2 0x3802 JUMP JUMPDEST PUSH2 0x2DB4 PUSH2 0x4732 JUMP JUMPDEST PUSH2 0x2DBD DUP3 PUSH2 0x370F JUMP JUMPDEST SWAP1 PUSH2 0x2DCB PUSH1 0x40 MLOAD SWAP3 DUP4 PUSH2 0x36ED JUMP JUMPDEST DUP3 DUP3 MSTORE PUSH1 0x1F NOT PUSH2 0x2DDA DUP5 PUSH2 0x370F JUMP JUMPDEST ADD CALLDATASIZE PUSH1 0x20 DUP5 ADD CALLDATACOPY PUSH2 0x38C4 JUMP JUMPDEST CALLVALUE PUSH2 0x484 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x484 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x484 JUMPI PUSH2 0x2E12 PUSH2 0x4732 JUMP JUMPDEST PUSH1 0xCA DUP1 SLOAD PUSH3 0x10000 PUSH1 0x1 PUSH1 0xB0 SHL SUB NOT AND PUSH1 0x10 SWAP3 SWAP1 SWAP3 SHL PUSH3 0x10000 PUSH1 0x1 PUSH1 0xB0 SHL SUB AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE STOP JUMPDEST CALLVALUE PUSH2 0x484 JUMPI PUSH2 0x2E4B CALLDATASIZE PUSH1 0x4 PUSH2 0x364E JUMP JUMPDEST SWAP2 SWAP5 SWAP3 PUSH2 0x2E5E PUSH1 0x40 SWAP6 SWAP3 SWAP6 MLOAD SWAP5 DUP6 PUSH2 0x36ED JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP1 DUP6 MSTORE PUSH1 0x20 DUP1 DUP7 ADD SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP8 ADD SWAP9 DUP10 MSTORE PUSH1 0x60 DUP8 ADD SWAP8 DUP9 MSTORE CALLER PUSH1 0x80 DUP9 ADD DUP2 DUP2 MSTORE PUSH1 0xA0 DUP10 ADD SWAP2 DUP3 MSTORE SWAP7 DUP7 AND PUSH1 0xC0 DUP10 ADD SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP5 DUP6 MSTORE PUSH2 0x165 SWAP1 SWAP4 MSTORE SWAP3 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP2 SWAP7 SWAP5 SWAP6 SWAP1 SWAP5 SWAP2 PUSH1 0xFF AND PUSH2 0x251C JUMP JUMPDEST CALLVALUE PUSH2 0x484 JUMPI PUSH2 0x5B2 SWAP1 PUSH2 0x2ED0 CALLDATASIZE PUSH1 0x4 PUSH2 0x3620 JUMP JUMPDEST SWAP2 PUSH1 0x40 SWAP7 SWAP5 SWAP7 MLOAD SWAP7 PUSH2 0x2EE4 PUSH2 0x100 DUP10 PUSH2 0x36ED JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP4 DUP5 DUP9 MSTORE PUSH1 0x20 DUP9 ADD MSTORE PUSH1 0x40 DUP8 ADD MSTORE PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x80 DUP6 ADD MSTORE CALLER PUSH1 0xA0 DUP6 ADD MSTORE CALLER PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0x0 DUP4 DUP6 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH2 0x165 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x484 JUMPI PUSH2 0x2F46 CALLDATASIZE PUSH1 0x4 PUSH2 0x35E4 JUMP JUMPDEST SWAP5 SWAP3 SWAP6 SWAP4 SWAP1 SWAP2 PUSH1 0x40 MLOAD SWAP4 PUSH2 0x2F5C PUSH2 0x100 DUP7 PUSH2 0x36ED JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 AND SWAP1 DUP2 DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP4 DUP5 MSTORE PUSH1 0x40 DUP7 ADD SWAP9 DUP10 MSTORE PUSH1 0x60 DUP7 ADD SWAP3 DUP4 MSTORE PUSH1 0x80 DUP7 ADD SWAP5 DUP6 MSTORE PUSH2 0x2246 PUSH1 0xA0 DUP8 ADD SWAP8 CALLER DUP10 MSTORE DUP3 PUSH1 0xC0 DUP10 ADD SWAP11 AND DUP11 MSTORE DUP8 ADD SWAP3 PUSH1 0x0 DUP5 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH2 0x165 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x484 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x484 JUMPI PUSH1 0x97 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x484 JUMPI PUSH1 0xC0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x484 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP2 SWAP1 DUP3 SWAP1 SUB PUSH2 0x484 JUMPI PUSH2 0x1230 PUSH1 0x40 MLOAD SWAP3 PUSH2 0x3024 PUSH2 0x120 DUP6 PUSH2 0x36ED JUMP JUMPDEST DUP1 DUP5 MSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x64 CALLDATALOAD PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x84 CALLDATALOAD PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA4 CALLDATALOAD PUSH1 0xA0 DUP6 ADD MSTORE CALLER PUSH1 0xC0 DUP6 ADD MSTORE CALLER DUP4 DUP6 ADD MSTORE PUSH1 0x0 PUSH2 0x100 DUP6 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH2 0x165 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x484 JUMPI PUSH2 0x100 SWAP1 DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x484 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP3 SWAP1 DUP4 SWAP1 SUB PUSH2 0x484 JUMPI PUSH1 0xC4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP4 SWAP1 DUP5 SWAP1 SUB PUSH2 0x484 JUMPI PUSH1 0xE4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP2 SWAP1 DUP3 SWAP1 SUB PUSH2 0x484 JUMPI PUSH2 0x3145 SWAP2 PUSH1 0x40 MLOAD SWAP6 PUSH2 0x30EC PUSH2 0x120 DUP9 PUSH2 0x36ED JUMP JUMPDEST DUP3 DUP8 MSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x20 DUP9 ADD MSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0x40 DUP9 ADD MSTORE PUSH1 0x64 CALLDATALOAD PUSH1 0x60 DUP9 ADD MSTORE PUSH1 0x84 CALLDATALOAD PUSH1 0x80 DUP9 ADD MSTORE PUSH1 0xA4 CALLDATALOAD PUSH1 0xA0 DUP9 ADD MSTORE CALLER PUSH1 0xC0 DUP9 ADD MSTORE DUP6 DUP8 ADD MSTORE DUP4 DUP7 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH2 0x165 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x8A0 JUMPI DUP3 MLOAD PUSH1 0xA0 DUP5 ADD MLOAD PUSH1 0xC0 DUP6 ADD MLOAD PUSH2 0x3170 SWAP3 ADDRESS SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 SWAP1 SWAP2 AND PUSH2 0x4601 JUMP JUMPDEST SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH2 0x162 SLOAD AND PUSH1 0x20 DUP1 DUP4 ADD MLOAD PUSH1 0x24 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH3 0x7C6DA1 PUSH1 0xE2 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL DUP1 ISZERO PUSH2 0x490 JUMPI PUSH2 0x31CD SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x32B5 JUMPI POP PUSH1 0xC0 DUP4 ADD MLOAD PUSH1 0x60 DUP5 ADD MLOAD SWAP2 ADDRESS SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND PUSH2 0x44B1 JUMP JUMPDEST PUSH1 0xC0 DUP2 ADD MLOAD PUSH2 0x31E4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x42FF JUMP JUMPDEST PUSH2 0x162 SLOAD PUSH1 0x20 DUP5 ADD MLOAD PUSH1 0x40 DUP1 DUP7 ADD MLOAD PUSH1 0x60 DUP8 DUP2 ADD MLOAD PUSH1 0x80 DUP10 ADD MLOAD DUP12 DUP11 ADD MLOAD SWAP11 DUP11 ADD MLOAD SWAP5 MLOAD PUSH4 0x71CD722D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0x24 DUP7 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x44 DUP6 ADD MSTORE PUSH1 0x64 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x84 DUP4 ADD DUP11 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP8 DUP9 AND PUSH1 0xA4 DUP5 ADD MSTORE SWAP1 DUP8 AND PUSH1 0xC4 DUP4 ADD MSTORE SWAP4 SWAP8 SWAP1 SWAP6 SWAP1 SWAP4 SWAP2 DUP7 SWAP2 PUSH1 0xE4 SWAP2 DUP4 SWAP2 PUSH1 0x0 SWAP2 AND GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x490 JUMPI PUSH1 0x0 DUP1 SWAP6 PUSH1 0x0 SWAP5 PUSH2 0x142A JUMPI POP SWAP3 PUSH32 0x8B0E6E8789B22FED235EA22BF1FF2085F5D51277CD17D7D4B532BD4296C59401 SWAP5 SWAP3 PUSH2 0x13B9 PUSH2 0x13CC SWAP4 PUSH2 0x13A2 PUSH1 0xA0 SWAP8 PUSH1 0x1 DUP1 DUP11 SHL SUB DUP9 MLOAD AND SWAP3 PUSH2 0x42F2 JUMP JUMPDEST PUSH2 0x32CD SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x87A JUMPI PUSH2 0x86B DUP2 DUP4 PUSH2 0x36ED JUMP JUMPDEST DUP7 PUSH2 0x1299 JUMP JUMPDEST CALLVALUE PUSH2 0x484 JUMPI PUSH2 0x334F PUSH2 0x32E6 CALLDATASIZE PUSH1 0x4 PUSH2 0x35E4 JUMP JUMPDEST SWAP6 SWAP5 PUSH2 0x32FB PUSH2 0x100 SWAP9 SWAP5 SWAP9 SWAP4 SWAP3 SWAP4 PUSH1 0x80 PUSH2 0x36ED JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x80 DUP2 DUP2 MSTORE PUSH1 0xA0 SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0xC0 SWAP9 DUP10 MSTORE PUSH1 0xE0 SWAP3 SWAP1 SWAP3 MSTORE PUSH2 0x100 SWAP3 SWAP1 SWAP3 MSTORE CALLER PUSH2 0x120 DUP2 SWAP1 MSTORE PUSH2 0x140 MSTORE SWAP5 AND SWAP2 ADD SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH2 0x165 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP3 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x8A0 JUMPI PUSH2 0x162 SLOAD PUSH1 0x40 MLOAD PUSH4 0x60009E0B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 SWAP1 PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 DUP7 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x490 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x35B1 JUMPI JUMPDEST POP PUSH1 0x20 DUP1 PUSH1 0x80 ADD MLOAD PUSH1 0x24 PUSH1 0x40 MLOAD DUP1 SWAP7 DUP2 SWAP4 PUSH3 0x7C6DA1 PUSH1 0xE2 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x490 JUMPI PUSH1 0x0 SWAP4 PUSH2 0x358C JUMPI JUMPDEST POP PUSH2 0x120 MLOAD DUP5 MLOAD PUSH2 0x33DB SWAP3 SWAP1 SWAP2 ADDRESS SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 AND PUSH2 0x44B1 JUMP JUMPDEST PUSH2 0x120 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x33FB SWAP2 ADDRESS SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP7 AND PUSH2 0x44B1 JUMP JUMPDEST PUSH2 0x120 MLOAD PUSH2 0x3411 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x42FF JUMP JUMPDEST PUSH2 0x162 SLOAD PUSH1 0xA0 MLOAD DUP7 MLOAD PUSH1 0xE0 MLOAD SWAP6 MLOAD PUSH1 0x40 MLOAD PUSH4 0x7C287999 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x24 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 DUP3 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0x0 PUSH1 0x64 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND PUSH1 0x84 DUP4 ADD MSTORE SWAP4 SWAP5 SWAP1 SWAP4 PUSH1 0x60 SWAP3 DUP6 SWAP3 PUSH1 0xA4 SWAP3 DUP5 SWAP3 SWAP1 SWAP2 AND GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x490 JUMPI PUSH1 0x0 SWAP4 PUSH1 0x0 SWAP4 PUSH1 0x0 SWAP4 PUSH2 0x3559 JUMPI JUMPDEST POP PUSH1 0x80 MLOAD PUSH2 0x100 MLOAD PUSH2 0x140 MLOAD SWAP6 SWAP7 PUSH2 0x34EE SWAP7 PUSH2 0x34DB SWAP4 PUSH2 0x34B7 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP4 ADDRESS SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 AND PUSH2 0x4127 JUMP JUMPDEST PUSH2 0x120 MLOAD PUSH1 0xE0 MLOAD SWAP2 SWAP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH2 0x778 SWAP1 PUSH2 0x73F SWAP1 DUP11 SWAP1 PUSH2 0x42F2 JUMP JUMPDEST PUSH2 0x120 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH2 0x45C7 JUMP JUMPDEST PUSH1 0x80 DUP1 MLOAD PUSH1 0xA0 MLOAD PUSH2 0x120 MLOAD PUSH2 0x140 MLOAD SWAP7 MLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP2 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0x60 DUP6 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP5 DUP2 AND SWAP5 SWAP4 AND SWAP3 SWAP2 PUSH32 0xEF4F73043E566578C766F5060597F325DCB82E894199F25BF03E1506BEEDFA08 SWAP2 DUP2 SWAP1 DUP2 ADD PUSH2 0x804 JUMP JUMPDEST PUSH2 0x34DB SWAP6 POP PUSH2 0x34EE SWAP5 POP PUSH2 0x34B7 SWAP4 POP PUSH2 0x357F SWAP1 PUSH1 0x60 RETURNDATASIZE DUP2 GT PUSH2 0x845 JUMPI PUSH2 0x830 DUP2 DUP4 PUSH2 0x36ED JUMP JUMPDEST SWAP2 SWAP7 SWAP1 SWAP6 POP SWAP1 SWAP4 POP PUSH2 0x3485 JUMP JUMPDEST PUSH2 0x33DB SWAP2 SWAP4 POP PUSH2 0x35AA SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x87A JUMPI PUSH2 0x86B DUP2 DUP4 PUSH2 0x36ED JUMP JUMPDEST SWAP3 SWAP1 PUSH2 0x33BA JUMP JUMPDEST PUSH2 0x35CA SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x87A JUMPI PUSH2 0x86B DUP2 DUP4 PUSH2 0x36ED JUMP JUMPDEST DUP5 PUSH2 0x338A JUMP JUMPDEST CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x484 JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 PUSH1 0xC0 SWAP2 SUB SLT PUSH2 0x484 JUMPI PUSH2 0x35F9 DUP3 PUSH2 0x35D0 JUMP JUMPDEST SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP2 PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP2 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP2 PUSH2 0x361D PUSH1 0xA0 PUSH1 0x80 DUP5 ADD CALLDATALOAD SWAP4 ADD PUSH2 0x35D0 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0xA0 SWAP2 SUB SLT PUSH2 0x484 JUMPI PUSH2 0x3634 DUP2 PUSH2 0x35D0 JUMP JUMPDEST SWAP2 PUSH1 0x20 DUP3 ADD CALLDATALOAD SWAP2 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP2 PUSH1 0x80 PUSH1 0x60 DUP4 ADD CALLDATALOAD SWAP3 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0xA0 SWAP2 SUB SLT PUSH2 0x484 JUMPI PUSH2 0x3662 DUP2 PUSH2 0x35D0 JUMP JUMPDEST SWAP2 PUSH1 0x20 DUP3 ADD CALLDATALOAD SWAP2 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP2 PUSH2 0x361D PUSH1 0x80 PUSH1 0x60 DUP5 ADD CALLDATALOAD SWAP4 ADD PUSH2 0x35D0 JUMP JUMPDEST SWAP2 SWAP1 DUP3 PUSH1 0x80 SWAP2 SUB SLT PUSH2 0x484 JUMPI PUSH2 0x3695 DUP3 PUSH2 0x35D0 JUMP JUMPDEST SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP2 PUSH2 0x361D PUSH1 0x60 PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP4 ADD PUSH2 0x35D0 JUMP JUMPDEST SWAP2 SWAP1 DUP3 PUSH1 0xC0 SWAP2 SUB SLT PUSH2 0x484 JUMPI PUSH2 0x36C2 DUP3 PUSH2 0x35D0 JUMP JUMPDEST SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP2 PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP2 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP2 PUSH2 0x361D PUSH1 0xA0 PUSH2 0x36E6 PUSH1 0x80 DUP6 ADD PUSH2 0x35D0 JUMP JUMPDEST SWAP4 ADD PUSH2 0x35D0 JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1F31 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1F31 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP3 PUSH1 0x80 SWAP2 SUB SLT PUSH2 0x484 JUMPI PUSH2 0x3740 DUP3 PUSH2 0x35D0 JUMP JUMPDEST SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP2 PUSH1 0x60 PUSH1 0x40 DUP4 ADD CALLDATALOAD SWAP3 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0xE0 SWAP2 SUB SLT PUSH2 0x484 JUMPI PUSH2 0x3768 DUP2 PUSH2 0x35D0 JUMP JUMPDEST SWAP2 PUSH1 0x20 DUP3 ADD CALLDATALOAD SWAP2 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP2 PUSH1 0x60 DUP3 ADD CALLDATALOAD SWAP2 PUSH1 0x80 DUP2 ADD CALLDATALOAD SWAP2 PUSH2 0x361D PUSH1 0xC0 PUSH2 0x36E6 PUSH1 0xA0 DUP6 ADD PUSH2 0x35D0 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0xA0 SWAP2 SUB SLT PUSH2 0x484 JUMPI PUSH2 0x37A6 DUP2 PUSH2 0x35D0 JUMP JUMPDEST SWAP2 PUSH1 0x20 DUP3 ADD CALLDATALOAD SWAP2 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP2 PUSH2 0x361D PUSH1 0x80 PUSH2 0x36E6 PUSH1 0x60 DUP6 ADD PUSH2 0x35D0 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0xE0 SWAP2 SUB SLT PUSH2 0x484 JUMPI PUSH2 0x37D8 DUP2 PUSH2 0x35D0 JUMP JUMPDEST SWAP2 PUSH1 0x20 DUP3 ADD CALLDATALOAD SWAP2 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP2 PUSH1 0x60 DUP3 ADD CALLDATALOAD SWAP2 PUSH1 0x80 DUP2 ADD CALLDATALOAD SWAP2 PUSH2 0x361D PUSH1 0xC0 PUSH1 0xA0 DUP5 ADD CALLDATALOAD SWAP4 ADD PUSH2 0x35D0 JUMP JUMPDEST ISZERO PUSH2 0x3809 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x19195B1959D85D1958D85B1B PUSH1 0xA2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x386A JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x6163746976652070726F7879 PUSH1 0xA0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 SWAP3 SWAP2 PUSH1 0xFF PUSH32 0x4910FDFA16FED3260ED0E7147F7CC6DA11A60208B5B9406D12A635614FFD9143 SLOAD AND PUSH1 0x0 EQ PUSH2 0x3901 JUMPI POP PUSH2 0x38FF SWAP2 SWAP3 POP PUSH2 0x3B67 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x52D1902D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x20 SWAP5 SWAP2 SWAP4 SWAP2 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP2 DUP7 DUP2 PUSH1 0x4 DUP2 DUP7 GAS STATICCALL PUSH1 0x0 SWAP2 DUP2 PUSH2 0x3B35 JUMPI JUMPDEST POP PUSH2 0x3992 JUMPI DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A206E657720696D706C656D656E74617469 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x6F6E206973206E6F742055555053 PUSH1 0x90 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP4 SWAP6 SWAP5 SWAP4 PUSH32 0xC9F76B5EC45E5CDEF99837D7B6D2467235C1DF8933C8CA56DF5C35AFA2C7D444 ADD PUSH2 0x3ADF JUMPI PUSH2 0x39C5 DUP4 PUSH2 0x3B67 JUMP JUMPDEST DUP4 MLOAD SWAP2 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x0 DUP5 LOG2 DUP7 MLOAD ISZERO SWAP1 DUP2 ISZERO SWAP2 PUSH2 0x3AD7 JUMPI JUMPDEST POP PUSH2 0x3A07 JUMPI JUMPDEST POP POP POP POP SWAP1 POP JUMP JUMPDEST DUP2 EXTCODESIZE ISZERO PUSH2 0x3A86 JUMPI POP PUSH1 0x0 DUP6 DUP2 SWAP3 DUP6 PUSH2 0x3A7B SWAP8 SWAP9 MLOAD SWAP3 ADD SWAP1 GAS DELEGATECALL PUSH7 0x819985A5B1959 PUSH1 0xCA SHL PUSH2 0x3A33 PUSH2 0x3C09 JUMP JUMPDEST SWAP3 PUSH32 0x416464726573733A206C6F772D6C6576656C2064656C65676174652063616C6C PUSH2 0x3A5F PUSH1 0x27 PUSH2 0x370F JUMP JUMPDEST SWAP6 PUSH2 0x3A6C DUP4 MLOAD SWAP8 DUP9 PUSH2 0x36ED JUMP JUMPDEST PUSH1 0x27 DUP8 MSTORE DUP7 ADD MSTORE DUP5 ADD MSTORE PUSH2 0x3C39 JUMP JUMPDEST POP DUP1 CODESIZE DUP1 DUP1 DUP1 PUSH2 0x39FF JUMP JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2064656C65676174652063616C6C20746F206E6F6E2D636F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1B9D1C9858DD PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 POP CODESIZE PUSH2 0x39F9 JUMP JUMPDEST DUP4 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A20756E737570706F727465642070726F78 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x1A58589B1955555251 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 SWAP2 DUP9 DUP3 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x3B60 JUMPI JUMPDEST PUSH2 0x3B4C DUP2 DUP4 PUSH2 0x36ED JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x3B5D JUMPI POP MLOAD SWAP1 CODESIZE PUSH2 0x3932 JUMP JUMPDEST DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x3B42 JUMP JUMPDEST DUP1 EXTCODESIZE ISZERO PUSH2 0x3BAE JUMPI PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x1BDD08184818DBDB9D1C9858DD PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x3C34 JUMPI RETURNDATASIZE SWAP1 PUSH2 0x3C1A DUP3 PUSH2 0x370F JUMP JUMPDEST SWAP2 PUSH2 0x3C28 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x36ED JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x60 SWAP2 ISZERO PUSH2 0x3C48 JUMPI POP POP SWAP1 JUMP JUMPDEST PUSH2 0x38FF SWAP2 SWAP4 SWAP3 JUMPDEST DUP1 MLOAD SWAP1 SWAP3 POP ISZERO PUSH2 0x3C62 JUMPI POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE DUP2 PUSH1 0x20 DUP1 PUSH1 0x4 DUP4 ADD MSTORE DUP3 MLOAD SWAP1 DUP2 PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x0 SWAP4 JUMPDEST DUP3 DUP6 LT PUSH2 0x3CA8 JUMPI POP POP PUSH1 0x44 SWAP3 POP PUSH1 0x0 DUP4 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SUB ADD SWAP1 REVERT JUMPDEST DUP5 DUP2 ADD DUP3 ADD MLOAD DUP7 DUP7 ADD PUSH1 0x44 ADD MSTORE SWAP4 DUP2 ADD SWAP4 DUP6 SWAP4 POP PUSH2 0x3C85 JUMP JUMPDEST ISZERO PUSH2 0x3CC8 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x36 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A20617070726F76652066726F6D206E6F6E2D7A65726F PUSH1 0x44 DUP3 ADD MSTORE PUSH22 0x20746F206E6F6E2D7A65726F20616C6C6F77616E6365 PUSH1 0x50 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST MLOAD SWAP1 DUP2 ISZERO ISZERO DUP3 SUB PUSH2 0x484 JUMPI JUMP JUMPDEST PUSH1 0x20 SWAP2 PUSH2 0x3DA2 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP1 PUSH2 0x3D55 DUP7 PUSH2 0x370F JUMP JUMPDEST SWAP4 PUSH2 0x3D63 PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x36ED JUMP JUMPDEST DUP7 DUP6 MSTORE PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP8 DUP7 ADD MSTORE DUP7 DUP2 MLOAD SWAP2 ADD DUP3 DUP6 GAS CALL PUSH2 0x3D9C PUSH2 0x3C09 JUMP JUMPDEST SWAP2 PUSH2 0x3E23 JUMP JUMPDEST DUP1 MLOAD DUP1 PUSH2 0x3DAE JUMPI POP POP POP JUMP JUMPDEST DUP2 DUP4 SWAP2 DUP2 ADD SUB SLT PUSH2 0x484 JUMPI DUP2 PUSH2 0x3DC4 SWAP2 ADD PUSH2 0x3D2C JUMP JUMPDEST ISZERO PUSH2 0x3DCC JUMPI POP JUMP JUMPDEST PUSH1 0x84 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST SWAP2 SWAP3 PUSH1 0x60 SWAP2 ISZERO PUSH2 0x3E88 JUMPI POP POP DUP2 MLOAD ISZERO PUSH2 0x3E3A JUMPI POP SWAP1 JUMP JUMPDEST EXTCODESIZE ISZERO PUSH2 0x3E43 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 SWAP4 SWAP3 PUSH2 0x38FF SWAP3 POP PUSH2 0x3C4F JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x3EAD JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT DUP2 ISZERO ISZERO AND PUSH2 0x1F47 JUMPI MUL SWAP1 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x3EE0 JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x161 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x18160DDD PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 PUSH1 0x20 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH1 0x4 SWAP1 DUP4 SWAP1 DUP7 SWAP1 DUP4 SWAP1 DUP3 SWAP1 DUP7 AND GAS STATICCALL SWAP5 DUP6 ISZERO PUSH2 0x4060 JUMPI PUSH1 0x0 SWAP6 PUSH2 0x4031 JUMPI JUMPDEST POP DUP5 ISZERO PUSH2 0x4020 JUMPI SWAP2 SWAP1 SWAP3 PUSH2 0x163 SWAP3 DUP4 SLOAD SWAP2 PUSH1 0x0 SWAP6 DUP7 SWAP6 JUMPDEST DUP5 DUP8 LT PUSH2 0x3F62 JUMPI POP POP POP POP POP POP POP SWAP1 PUSH2 0x361D SWAP2 PUSH2 0x3ED6 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 DUP3 PUSH2 0x3F74 DUP10 DUP5 PUSH2 0x3E95 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND DUP5 MLOAD SWAP1 PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP3 MSTORE ADDRESS DUP8 DUP4 ADD MSTORE PUSH1 0x24 SWAP2 DUP10 DUP2 DUP5 DUP2 DUP6 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x4015 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x3FE6 JUMPI JUMPDEST POP PUSH2 0x3FB4 PUSH2 0x3FBA SWAP3 PUSH2 0x4085 JUMP JUMPDEST SWAP1 PUSH2 0x3EC3 JUMP JUMPDEST DUP3 ADD DUP1 SWAP3 GT PUSH2 0x3FD3 JUMPI POP SWAP7 PUSH1 0x1 ADD SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3F4A JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 DUP8 MSTORE REVERT JUMPDEST SWAP1 DUP11 DUP3 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x400E JUMPI JUMPDEST PUSH2 0x3FFC DUP2 DUP4 PUSH2 0x36ED JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x3B5D JUMPI POP MLOAD PUSH2 0x3FB4 PUSH2 0x3FA7 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x3FF2 JUMP JUMPDEST DUP8 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP POP POP POP POP PUSH8 0xDE0B6B3A7640000 SWAP1 JUMP JUMPDEST SWAP1 SWAP5 DUP4 DUP3 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x4059 JUMPI JUMPDEST PUSH2 0x4048 DUP2 DUP4 PUSH2 0x36ED JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x3B5D JUMPI POP MLOAD SWAP4 CODESIZE PUSH2 0x3F33 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x403E JUMP JUMPDEST DUP5 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 PUSH1 0x40 SWAP2 SUB SLT PUSH2 0x484 JUMPI PUSH2 0x361D PUSH1 0x20 DUP4 MLOAD SWAP4 ADD PUSH2 0x3D2C JUMP JUMPDEST PUSH1 0x4 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 AND SWAP1 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH2 0x164 DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP4 DUP5 DUP5 DUP2 DUP6 KECCAK256 SLOAD AND DUP2 MLOAD SWAP8 DUP9 DUP1 SWAP3 PUSH4 0x59E02DD7 PUSH1 0xE0 SHL DUP3 MSTORE GAS STATICCALL DUP1 ISZERO PUSH2 0x411D JUMPI DUP4 SWAP7 DUP5 SWAP2 PUSH2 0x40FA JUMPI JUMPDEST POP ISZERO PUSH2 0x40D8 JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 MSTORE PUSH1 0x20 MSTORE DUP3 SWAP1 KECCAK256 SLOAD SWAP2 MLOAD PUSH4 0x7F6E4DB9 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP2 POP REVERT JUMPDEST SWAP1 POP PUSH2 0x4114 SWAP2 SWAP7 POP DUP6 RETURNDATASIZE DUP8 GT PUSH2 0x1F87 JUMPI PUSH2 0x1F77 DUP2 DUP4 PUSH2 0x36ED JUMP JUMPDEST SWAP6 SWAP1 SWAP6 CODESIZE PUSH2 0x40CA JUMP JUMPDEST DUP6 MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP2 SWAP3 SWAP5 SWAP4 PUSH2 0x12F SWAP6 PUSH1 0x2 DUP8 SLOAD EQ PUSH2 0x424D JUMPI PUSH1 0x2 DUP8 SSTORE PUSH2 0x415F PUSH2 0x4150 DUP5 PUSH2 0x414B PUSH2 0x3EF6 JUMP JUMPDEST PUSH2 0x3EC3 JUMP JUMPDEST PUSH2 0x4159 DUP7 PUSH2 0x4085 JUMP JUMPDEST SWAP1 PUSH2 0x3ED6 JUMP JUMPDEST SWAP4 PUSH1 0x0 SWAP6 PUSH1 0x1 PUSH1 0x40 DUP2 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP5 AND SWAP9 DUP10 DUP2 MSTORE PUSH2 0x165 PUSH1 0x20 MSTORE KECCAK256 ADD SLOAD PUSH1 0x8 SHR SWAP5 DUP1 SWAP6 PUSH1 0x0 DUP2 DUP2 SIGNEXTEND SGT PUSH2 0x4225 JUMPI JUMPDEST POP POP DUP1 DUP7 LT PUSH2 0x4207 JUMPI POP PUSH2 0x161 SLOAD AND SWAP3 DUP4 EXTCODESIZE ISZERO PUSH2 0x484 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2770A7EB PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE SWAP2 PUSH1 0x0 SWAP1 DUP4 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 DUP5 SWAP1 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x490 JUMPI PUSH1 0x1 SWAP5 PUSH2 0x41F2 SWAP4 DUP6 SWAP4 PUSH2 0x41F6 JUMPI JUMPDEST POP PUSH2 0x4292 JUMP JUMPDEST SWAP3 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4201 SWAP2 PUSH2 0x36ED JUMP JUMPDEST CODESIZE PUSH2 0x41EC JUMP JUMPDEST PUSH1 0x44 SWAP1 DUP7 PUSH1 0x40 MLOAD SWAP2 PUSH4 0x54CDE313 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0x4245 SWAP3 SWAP7 POP PUSH2 0x423F PUSH2 0x3FB4 SWAP2 PUSH1 0xFF AND SWAP3 PUSH2 0x4159 DUP5 PUSH2 0x42CB JUMP JUMPDEST SWAP2 PUSH2 0x42CB JUMP JUMPDEST SWAP4 CODESIZE DUP1 PUSH2 0x418E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH2 0x38FF SWAP2 PUSH2 0x417 DUP3 PUSH1 0x64 DUP2 ADD PUSH2 0x76A JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0x4D DUP2 GT PUSH2 0x1F47 JUMPI PUSH1 0xA EXP SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP3 PUSH1 0x40 SWAP2 SUB SLT PUSH2 0x484 JUMPI PUSH1 0x20 DUP3 MLOAD SWAP3 ADD MLOAD SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x1F47 JUMPI JUMP JUMPDEST PUSH2 0x162 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x647846A5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 SWAP5 SWAP1 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 SWAP2 DUP3 SWAP1 DUP7 SWAP1 PUSH1 0x4 SWAP1 DUP3 SWAP1 DUP12 AND GAS STATICCALL SWAP5 DUP6 ISZERO PUSH2 0x44A6 JUMPI PUSH1 0x0 SWAP6 PUSH2 0x4468 JUMPI JUMPDEST POP DUP1 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE SWAP2 DUP8 DUP7 AND DUP2 DUP5 PUSH1 0x44 DUP2 DUP5 GAS STATICCALL SWAP4 DUP5 ISZERO PUSH2 0x445D JUMPI PUSH1 0x0 SWAP5 PUSH2 0x442E JUMPI JUMPDEST POP SWAP1 DUP1 DUP4 SWAP3 PUSH1 0x24 SWAP5 MLOAD SWAP5 DUP6 DUP1 SWAP3 PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP3 MSTORE DUP14 DUP12 AND PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x4424 JUMPI POP PUSH1 0x0 SWAP2 PUSH2 0x43F8 JUMPI JUMPDEST POP SWAP1 POP DUP1 DUP3 LT ISZERO PUSH2 0x43EE JUMPI POP SWAP5 DUP6 SWAP2 JUMPDEST DUP3 PUSH2 0x43CD JUMPI JUMPDEST POP POP POP POP SWAP2 SWAP1 JUMP JUMPDEST PUSH2 0x43DD DUP4 PUSH2 0x43E5 SWAP6 ADDRESS SWAP1 DUP9 PUSH2 0x44B1 JUMP JUMPDEST SLOAD AND DUP4 PUSH2 0x44F5 JUMP JUMPDEST CODESIZE DUP4 DUP2 DUP1 PUSH2 0x43C5 JUMP JUMPDEST SWAP1 POP SWAP5 DUP6 SWAP2 PUSH2 0x43BF JUMP JUMPDEST DUP3 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x441D JUMPI JUMPDEST PUSH2 0x440C DUP2 DUP4 PUSH2 0x36ED JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x3B5D JUMPI POP MLOAD DUP1 CODESIZE PUSH2 0x43AF JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x4402 JUMP JUMPDEST MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 SWAP4 DUP3 DUP3 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x4456 JUMPI JUMPDEST PUSH2 0x4445 DUP2 DUP4 PUSH2 0x36ED JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x3B5D JUMPI POP MLOAD SWAP3 DUP2 PUSH2 0x437E JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x443B JUMP JUMPDEST DUP4 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP3 DUP2 DUP2 SWAP8 SWAP4 SWAP8 RETURNDATASIZE DUP4 GT PUSH2 0x449F JUMPI JUMPDEST PUSH2 0x4480 DUP2 DUP4 PUSH2 0x36ED JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x449B JUMPI MLOAD SWAP1 DUP8 DUP3 AND DUP3 SUB PUSH2 0x3B5D JUMPI POP SWAP4 CODESIZE PUSH2 0x4341 JUMP JUMPDEST POP DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x4476 JUMP JUMPDEST POP MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP2 MSTORE PUSH2 0x38FF SWAP2 PUSH2 0x417 PUSH1 0x84 DUP4 PUSH2 0x36ED JUMP JUMPDEST SWAP3 SWAP2 SWAP1 SWAP3 DUP2 ISZERO DUP1 ISZERO PUSH2 0x4545 JUMPI JUMPDEST PUSH2 0x38FF SWAP4 SWAP5 PUSH2 0x4513 PUSH2 0x417 SWAP3 PUSH2 0x3CC1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE DUP3 PUSH1 0x64 DUP2 ADD PUSH2 0x76A JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x20 DUP2 DUP1 PUSH1 0x44 DUP2 ADD SUB DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x490 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x4594 JUMPI JUMPDEST POP ISZERO PUSH2 0x4502 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 RETURNDATASIZE DUP3 GT PUSH2 0x45BF JUMPI JUMPDEST DUP2 PUSH2 0x45AD PUSH1 0x20 SWAP4 DUP4 PUSH2 0x36ED JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x3B5D JUMPI POP MLOAD PUSH2 0x38FF PUSH2 0x458D JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x45A0 JUMP JUMPDEST SWAP2 SWAP3 PUSH2 0x45D3 SWAP2 SWAP4 PUSH2 0x42F2 JUMP JUMPDEST SWAP1 DUP2 PUSH2 0x45DE JUMPI POP POP POP JUMP JUMPDEST PUSH2 0x45EE PUSH1 0x0 SWAP3 PUSH2 0x38FF SWAP5 DUP4 PUSH2 0x4292 JUMP JUMPDEST PUSH2 0x162 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH2 0x44F5 JUMP JUMPDEST PUSH2 0x466A SWAP3 PUSH2 0x4627 PUSH2 0x4610 PUSH2 0x3EF6 JUMP JUMPDEST PUSH2 0x4622 PUSH2 0x461C DUP6 PUSH2 0x4085 JUMP JUMPDEST DUP7 PUSH2 0x3EC3 JUMP JUMPDEST PUSH2 0x3ED6 JUMP JUMPDEST PUSH2 0x161 SLOAD PUSH1 0x40 MLOAD PUSH4 0x40C10F19 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP8 DUP9 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE SWAP2 SWAP7 SWAP2 SWAP6 PUSH1 0x20 SWAP2 DUP8 SWAP2 SWAP1 DUP5 AND SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 DUP3 SWAP1 PUSH1 0x44 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x490 JUMPI PUSH2 0x4686 JUMPI JUMPDEST PUSH2 0x361D SWAP5 POP ADDRESS SWAP3 AND PUSH2 0x44B1 JUMP JUMPDEST PUSH1 0x20 DUP6 RETURNDATASIZE DUP3 GT PUSH2 0x46B8 JUMPI JUMPDEST DUP2 PUSH2 0x469E PUSH1 0x20 SWAP4 DUP4 PUSH2 0x36ED JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x484 JUMPI PUSH2 0x46B2 PUSH2 0x361D SWAP6 PUSH2 0x3D2C JUMP JUMPDEST POP PUSH2 0x4679 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x4691 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x484 JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x484 JUMPI SWAP1 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x60 SWAP2 SUB SLT PUSH2 0x484 JUMPI DUP1 MLOAD SWAP2 PUSH1 0x40 PUSH1 0x20 DUP4 ADD MLOAD SWAP3 ADD MLOAD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x80 DUP3 ADD MSTORE SWAP2 AND PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x97 SLOAD PUSH1 0x40 MLOAD PUSH4 0xD994D6D5 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x490 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x4787 JUMPI JUMPDEST POP ISZERO PUSH2 0x4775 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1DD1B1B5 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0x20 DUP3 RETURNDATASIZE DUP3 GT PUSH2 0x47B8 JUMPI JUMPDEST DUP2 PUSH2 0x47A0 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x36ED JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x3B5D JUMPI POP PUSH2 0x47B2 SWAP1 PUSH2 0x3D2C JUMP JUMPDEST CODESIZE PUSH2 0x476D JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x4793 JUMP JUMPDEST ISZERO PUSH2 0x47C7 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NUMBER 0x49 NOT PUSH9 0xB85D66895ADEFDFC7A PUSH10 0x9AB1B84464F8D387E4EC SUB 0xD2 PUSH11 0x3C3D305BB464736F6C6343 STOP ADDMOD LT STOP CALLER PUSH1 0xA0 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH3 0xE1 JUMPI ADDRESS PUSH1 0x80 MSTORE PUSH1 0x0 SLOAD SWAP1 PUSH1 0xFF DUP3 PUSH1 0x8 SHR AND PUSH3 0x8F JUMPI POP PUSH1 0xFF DUP1 DUP3 AND LT PUSH3 0x53 JUMPI JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5E8D SWAP1 DUP2 PUSH3 0xE7 DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 DUP2 DUP2 PUSH2 0x2D24 ADD MSTORE DUP2 DUP2 PUSH2 0x3085 ADD MSTORE PUSH2 0x34CA ADD MSTORE RETURN JUMPDEST PUSH1 0xFF SWAP1 DUP2 NOT AND OR PUSH1 0x0 SSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0xFF DUP2 MSTORE LOG1 CODESIZE PUSH3 0x2C JUMP JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320696E697469 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x616C697A696E67 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP2 CALLDATALOAD DUP2 SHR SWAP1 DUP2 PUSH4 0x1CDED9C EQ PUSH2 0x414C JUMPI DUP2 PUSH4 0x1DDE6EF EQ PUSH2 0x4126 JUMPI DUP2 PUSH4 0x1F1B684 EQ PUSH2 0x40DE JUMPI DUP2 PUSH4 0xBB7F608 EQ PUSH2 0x4039 JUMPI DUP2 PUSH4 0xC340A24 EQ PUSH2 0x4010 JUMPI DUP2 PUSH4 0xC36D897 EQ PUSH2 0x3FF1 JUMPI DUP2 PUSH4 0xD6AC463 EQ PUSH2 0x3FA9 JUMPI DUP2 PUSH4 0xE0A8FD2 EQ PUSH2 0x3F83 JUMPI DUP2 PUSH4 0xF1E5E2B EQ PUSH2 0x3F3B JUMPI DUP2 PUSH4 0xF6A46F3 EQ PUSH2 0x3ED9 JUMPI DUP2 PUSH4 0x102FEFAC EQ PUSH2 0x3E7E JUMPI DUP2 PUSH4 0x1301A8F0 EQ PUSH2 0x3D78 JUMPI DUP2 PUSH4 0x17574BC5 EQ PUSH2 0x3B5C JUMPI DUP2 PUSH4 0x17DF0AB8 EQ PUSH2 0x3A93 JUMPI DUP2 PUSH4 0x181770DA EQ PUSH2 0x39AF JUMPI DUP2 PUSH4 0x1867E2F5 EQ PUSH2 0x3990 JUMPI DUP2 PUSH4 0x1A89B8F2 EQ PUSH2 0x3931 JUMPI DUP2 PUSH4 0x1F1138A6 EQ PUSH2 0x38BE JUMPI DUP2 PUSH4 0x1FB0DDA0 EQ PUSH2 0x389D JUMPI DUP2 PUSH4 0x1FE6A7AD EQ PUSH2 0x3861 JUMPI DUP2 PUSH4 0x2069F753 EQ PUSH2 0x383B JUMPI DUP2 PUSH4 0x23B98CDE EQ PUSH2 0x3814 JUMPI DUP2 PUSH4 0x27EAB2A1 EQ PUSH2 0x37CC JUMPI DUP2 PUSH4 0x2A20D57D EQ PUSH2 0x37AD JUMPI DUP2 PUSH4 0x2C43BD3B EQ PUSH2 0x3787 JUMPI DUP2 PUSH4 0x2D88AF4A EQ PUSH2 0x372E JUMPI DUP2 PUSH4 0x2DED50F0 EQ PUSH2 0x370F JUMPI DUP2 PUSH4 0x2E9680E4 EQ PUSH2 0x369B JUMPI DUP2 PUSH4 0x31741258 EQ PUSH2 0x3644 JUMPI DUP2 PUSH4 0x333431FD EQ PUSH2 0x3625 JUMPI DUP2 PUSH4 0x33421C38 EQ PUSH2 0x3531 JUMPI DUP2 PUSH4 0x3659CFE6 EQ PUSH2 0x3498 JUMPI DUP2 PUSH4 0x3BC4AC0A EQ PUSH2 0x3472 JUMPI DUP2 PUSH4 0x3DBC50A9 EQ PUSH2 0x341E JUMPI DUP2 PUSH4 0x3F4BA83A EQ PUSH2 0x33A1 JUMPI DUP2 PUSH4 0x4017936A EQ PUSH2 0x335C JUMPI DUP2 PUSH4 0x407F0E34 EQ PUSH2 0x333D JUMPI DUP2 PUSH4 0x4310ADC6 EQ PUSH2 0x32D4 JUMPI DUP2 PUSH4 0x4454AE8B EQ PUSH2 0x326E JUMPI DUP2 PUSH4 0x471A80E3 EQ PUSH2 0x3209 JUMPI DUP2 PUSH4 0x4B746001 EQ PUSH2 0x31BC JUMPI DUP2 PUSH4 0x4CFFBAAB EQ PUSH2 0x3159 JUMPI DUP2 PUSH4 0x4D977E78 EQ PUSH2 0x313A JUMPI DUP2 PUSH4 0x4E1F907A EQ PUSH2 0x3110 JUMPI DUP2 PUSH4 0x4F0F27EE EQ PUSH2 0x30F1 JUMPI DUP2 PUSH4 0x4F1EF286 EQ PUSH2 0x2FFD JUMPI DUP2 PUSH4 0x5210570C EQ PUSH2 0x2FD5 JUMPI DUP2 PUSH4 0x5241271C EQ PUSH2 0x2FA6 JUMPI DUP2 PUSH4 0x52A0331D EQ PUSH2 0x2DE7 JUMPI DUP2 PUSH4 0x52D1902D EQ PUSH2 0x2D11 JUMPI DUP2 PUSH4 0x543AEB48 EQ PUSH2 0x2CEB JUMPI DUP2 PUSH4 0x54A73C62 EQ PUSH2 0x2C89 JUMPI DUP2 PUSH4 0x5C616A73 EQ PUSH2 0x29CD JUMPI DUP2 PUSH4 0x5C975ABB EQ PUSH2 0x29A7 JUMPI DUP2 PUSH4 0x5D65D045 EQ PUSH2 0x2973 JUMPI DUP2 PUSH4 0x5E1E8928 EQ PUSH2 0x290F JUMPI DUP2 PUSH4 0x60009E0B EQ PUSH2 0x28E5 JUMPI DUP2 PUSH4 0x647846A5 EQ PUSH2 0x28BB JUMPI DUP2 PUSH4 0x662013F4 EQ PUSH2 0x2897 JUMPI DUP2 PUSH4 0x68274357 EQ PUSH2 0x286C JUMPI DUP2 PUSH4 0x6B5488DF EQ PUSH2 0x284D JUMPI DUP2 PUSH4 0x70713468 EQ PUSH2 0x2827 JUMPI DUP2 PUSH4 0x71CD722D EQ PUSH2 0x272D JUMPI DUP2 PUSH4 0x7554FFFD EQ PUSH2 0x270E JUMPI DUP2 PUSH4 0x7750BA0C EQ PUSH2 0x26E8 JUMPI DUP2 PUSH4 0x79F9A91C EQ PUSH2 0x26C9 JUMPI DUP2 PUSH4 0x7A193C31 EQ PUSH2 0x26AA JUMPI DUP2 PUSH4 0x7A4FF1D9 EQ PUSH2 0x2684 JUMPI DUP2 PUSH4 0x7A727FE8 EQ PUSH2 0x2665 JUMPI DUP2 PUSH4 0x7AF5758C EQ PUSH2 0x263F JUMPI DUP2 PUSH4 0x7C287999 EQ PUSH2 0x25E5 JUMPI DUP2 PUSH4 0x7CBA2383 EQ PUSH2 0x25BF JUMPI DUP2 PUSH4 0x7D8E0314 EQ PUSH2 0x2590 JUMPI DUP2 PUSH4 0x7F01C715 EQ PUSH2 0x2566 JUMPI DUP2 PUSH4 0x826FCD58 EQ PUSH2 0x2545 JUMPI DUP2 PUSH4 0x8456CB59 EQ PUSH2 0x24AC JUMPI DUP2 PUSH4 0x8CE6C2C1 EQ PUSH2 0x244E JUMPI DUP2 PUSH4 0x8CFA4241 EQ PUSH2 0x242F JUMPI DUP2 PUSH4 0x8F27EC6C EQ PUSH2 0x22FD JUMPI DUP2 PUSH4 0x904AA85B EQ PUSH2 0x22DE JUMPI DUP2 PUSH4 0x9195C85B EQ PUSH2 0x22BD JUMPI DUP2 PUSH4 0x9853C35A EQ PUSH2 0x2293 JUMPI DUP2 PUSH4 0x9ABB14C9 EQ PUSH2 0x21C9 JUMPI DUP2 PUSH4 0x9AD6659D EQ PUSH2 0x2194 JUMPI DUP2 PUSH4 0x9BDD7CCE EQ PUSH2 0x1F11 JUMPI DUP2 PUSH4 0x9CABFC00 EQ PUSH2 0x1EC4 JUMPI DUP2 PUSH4 0x9FD0506D EQ PUSH2 0x1E97 JUMPI DUP2 PUSH4 0xA17BFB96 EQ PUSH2 0x1E34 JUMPI DUP2 PUSH4 0xA8E9AC30 EQ PUSH2 0x1E12 JUMPI DUP2 PUSH4 0xAEA038DC EQ PUSH2 0x1DF3 JUMPI DUP2 PUSH4 0xBAD25A21 EQ PUSH2 0x1C7B JUMPI DUP2 PUSH4 0xBB2AC788 EQ PUSH2 0x1A79 JUMPI DUP2 PUSH4 0xBB4872DE EQ PUSH2 0x1A56 JUMPI DUP2 PUSH4 0xBECACA6B EQ PUSH2 0x1A30 JUMPI DUP2 PUSH4 0xC00F538D EQ PUSH2 0x1A0A JUMPI DUP2 PUSH4 0xC039CC69 EQ PUSH2 0x19BE JUMPI DUP2 PUSH4 0xC84353C9 EQ PUSH2 0x1998 JUMPI DUP2 PUSH4 0xCA25B18A EQ PUSH2 0x14FF JUMPI DUP2 PUSH4 0xCEECC55A EQ PUSH2 0x138B JUMPI DUP2 PUSH4 0xCF351C1D EQ PUSH2 0x1343 JUMPI DUP2 PUSH4 0xD1A0FAA0 EQ PUSH2 0x1325 JUMPI DUP2 PUSH4 0xDA2F567D EQ PUSH2 0x10AE JUMPI DUP2 PUSH4 0xDB796072 EQ PUSH2 0x106F JUMPI DUP2 PUSH4 0xDE08160F EQ PUSH2 0x1032 JUMPI DUP2 PUSH4 0xDE8D520A EQ PUSH2 0x1001 JUMPI DUP2 PUSH4 0xE23C135C EQ PUSH2 0xFAD JUMPI DUP2 PUSH4 0xE4012945 EQ PUSH2 0xE1D JUMPI DUP2 PUSH4 0xE4C0AAF4 EQ PUSH2 0xDD6 JUMPI DUP2 PUSH4 0xE6A683E0 EQ PUSH2 0xD8E JUMPI DUP2 PUSH4 0xE6B1627C EQ PUSH2 0xD4B JUMPI DUP2 PUSH4 0xE7C25978 EQ PUSH2 0xD27 JUMPI DUP2 PUSH4 0xE8859A15 EQ PUSH2 0xD0C JUMPI DUP2 PUSH4 0xF13F4054 EQ PUSH2 0xCE2 JUMPI DUP2 PUSH4 0xF21FCC00 EQ PUSH2 0xA84 JUMPI DUP2 PUSH4 0xF26114AA EQ PUSH2 0xA1B JUMPI POP DUP1 PUSH4 0xF2808778 EQ PUSH2 0x9F5 JUMPI DUP1 PUSH4 0xF30B5614 EQ PUSH2 0x9D6 JUMPI DUP1 PUSH4 0xF375CFBA EQ PUSH2 0x9B7 JUMPI DUP1 PUSH4 0xFA6E83BD EQ PUSH2 0x998 JUMPI DUP1 PUSH4 0xFA79589E EQ PUSH2 0x946 JUMPI DUP1 PUSH4 0xFBBB53A7 EQ PUSH2 0x79E JUMPI DUP1 PUSH4 0xFDA70F8B EQ PUSH2 0x77F JUMPI DUP1 PUSH4 0xFED0ADE4 EQ PUSH2 0x721 JUMPI PUSH4 0xFFE31539 EQ PUSH2 0x574 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x71E JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x719 JUMPI PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND SWAP2 DUP3 SWAP1 SUB PUSH2 0x719 JUMPI PUSH2 0x641 SWAP1 PUSH1 0x40 MLOAD SWAP4 PUSH2 0x5AE PUSH1 0xA0 DUP7 PUSH2 0x450C JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 PUSH1 0x24 CALLDATALOAD DUP6 MSTORE PUSH1 0x40 DUP7 ADD SWAP2 CALLER DUP4 MSTORE PUSH1 0x60 DUP8 ADD SWAP4 CALLER DUP6 MSTORE PUSH1 0x80 DUP9 ADD SWAP3 DUP4 MSTORE PUSH2 0x5DC PUSH2 0x5161 JUMP JUMPDEST PUSH2 0x5E4 PUSH2 0x5E26 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 PUSH2 0x616 PUSH2 0x610 PUSH2 0x607 PUSH2 0x5FE PUSH2 0x4ED8 JUMP JUMPDEST PUSH2 0x17B SLOAD PUSH2 0x522B JUMP JUMPDEST DUP13 MLOAD SWAP3 SWAP2 PUSH2 0x526E JUMP JUMPDEST SWAP1 PUSH2 0x4C20 JUMP JUMPDEST DIV PUSH2 0x61F PUSH2 0x4F72 JUMP JUMPDEST POP PUSH2 0x636 DUP3 DUP7 MLOAD AND DUP3 DUP5 DUP8 MLOAD AND PUSH2 0x16E SLOAD SWAP3 PUSH2 0x52A9 JUMP JUMPDEST SWAP7 SWAP2 DUP4 SWAP10 SWAP2 SWAP10 PUSH2 0x4AEC JUMP JUMPDEST SWAP9 MLOAD DUP1 DUP11 GT PUSH2 0x6FB JUMPI POP DUP9 ISZERO PUSH2 0x6E9 JUMPI PUSH2 0x6BE PUSH2 0x6DD SWAP8 DUP5 SWAP4 DUP5 PUSH1 0x40 SWAP14 DUP11 DUP15 PUSH32 0x73EF11A21CABAB55CA448E6E2AE4B60BDA75ED8109E2496084C92DC17B8334DB DUP5 DUP10 MLOAD AND SWAP2 DUP6 DUP9 MLOAD AND SWAP4 PUSH2 0x6B1 DUP7 MLOAD SWAP2 DUP1 MLOAD SWAP1 PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x40 PUSH1 0x60 SWAP1 DUP4 ADD MLOAD SWAP3 ADD MLOAD SWAP3 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP7 DUP8 PUSH2 0x4F99 JUMP JUMPDEST SUB SWAP1 LOG3 MLOAD SWAP3 MLOAD AND SWAP2 PUSH2 0x5183 JUMP JUMPDEST PUSH2 0x6D1 DUP10 DUP4 PUSH2 0x24F SLOAD AND ADDRESS SWAP1 CALLER SWAP1 PUSH2 0x4FC1 JUMP JUMPDEST MLOAD AND SWAP3 MLOAD AND SWAP2 DUP1 PUSH2 0x5812 JUMP JUMPDEST DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xF3E39B5D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x44 SWAP1 DUP11 PUSH1 0x40 MLOAD SWAP2 PUSH4 0xB63F1A7 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x71E JUMPI PUSH2 0x641 SWAP1 PUSH2 0x736 CALLDATASIZE PUSH1 0x4 PUSH2 0x44CA JUMP JUMPDEST PUSH1 0x40 SWAP6 SWAP4 SWAP6 SWAP5 SWAP2 SWAP3 SWAP5 MLOAD SWAP6 PUSH2 0x74C PUSH1 0xA0 DUP9 PUSH2 0x450C JUMP JUMPDEST DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP5 DUP6 MSTORE PUSH1 0x40 DUP7 ADD SWAP2 CALLER DUP4 MSTORE PUSH1 0x60 DUP8 ADD SWAP4 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 AND DUP6 MSTORE DUP1 PUSH1 0x80 DUP10 ADD SWAP4 AND DUP4 MSTORE PUSH2 0x5DC PUSH2 0x5161 JUMP JUMPDEST POP CALLVALUE PUSH2 0x71E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x71E JUMPI PUSH1 0x20 PUSH2 0x16E SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x71E JUMPI PUSH2 0x8A6 SWAP1 PUSH2 0x7B3 CALLDATASIZE PUSH1 0x4 PUSH2 0x4560 JUMP JUMPDEST SWAP1 SWAP3 SWAP6 SWAP4 SWAP2 SWAP5 PUSH1 0x40 MLOAD SWAP3 PUSH2 0x7C8 PUSH1 0xC0 DUP6 PUSH2 0x450C JUMP JUMPDEST DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP7 DUP8 MSTORE PUSH1 0x40 DUP4 ADD SWAP6 DUP7 MSTORE PUSH1 0x60 DUP4 ADD SWAP4 CALLER DUP6 MSTORE PUSH1 0x80 DUP5 ADD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP3 AND DUP2 MSTORE DUP2 PUSH1 0xA0 DUP7 ADD SWAP5 AND DUP5 MSTORE PUSH2 0x801 PUSH2 0x5161 JUMP JUMPDEST PUSH2 0x809 PUSH2 0x5E26 JUMP JUMPDEST PUSH2 0x811 PUSH2 0x5D04 JUMP JUMPDEST PUSH2 0x86B PUSH2 0x840 PUSH2 0x853 DUP8 DUP13 PUSH2 0x846 PUSH2 0x827 PUSH2 0x5C48 JUMP JUMPDEST PUSH2 0x835 DUP6 SWAP4 SWAP3 SWAP4 MLOAD DUP3 PUSH2 0x4AF9 JUMP JUMPDEST MLOAD SWAP7 DUP8 DUP1 SWAP7 MLOAD PUSH2 0x55E9 JUMP JUMPDEST DUP3 PUSH2 0x522B JUMP JUMPDEST SWAP4 SWAP1 SWAP3 DUP13 MLOAD SWAP1 MLOAD SWAP1 PUSH2 0x5640 JUMP JUMPDEST PUSH2 0x866 PUSH8 0xDE0B6B3A7640000 DUP13 MLOAD PUSH2 0x4C20 JUMP JUMPDEST PUSH2 0x4C33 JUMP JUMPDEST SWAP6 PUSH2 0x874 PUSH2 0x4F72 JUMP JUMPDEST POP PUSH2 0x89B DUP4 DUP3 MLOAD AND DUP9 DUP6 DUP9 MLOAD AND PUSH2 0x88E DUP11 MLOAD PUSH2 0x176 PUSH2 0x43E9 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR SWAP3 PUSH2 0x52A9 JUMP JUMPDEST SWAP8 SWAP2 DUP10 SWAP11 SWAP2 SWAP11 PUSH2 0x4AEC JUMP JUMPDEST SWAP10 MLOAD DUP1 DUP12 GT PUSH2 0x928 JUMPI POP DUP10 ISZERO PUSH2 0x6E9 JUMPI PUSH1 0x40 SWAP11 PUSH2 0x6DD SWAP9 DUP6 SWAP5 DUP6 DUP5 DUP12 DUP16 PUSH2 0x6BE SWAP8 MLOAD PUSH32 0xB1C19484081F58B25DE95EB3695CAEA3C2167249920A6439EC0253054D343E73 DUP6 DUP12 MLOAD AND SWAP3 DUP7 DUP9 MLOAD AND SWAP5 PUSH2 0x919 DUP12 MLOAD SWAP2 DUP1 MLOAD SWAP1 PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x40 PUSH1 0x60 SWAP1 DUP4 ADD MLOAD SWAP3 ADD MLOAD SWAP3 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP7 DUP8 PUSH2 0x4F99 JUMP JUMPDEST SUB SWAP1 LOG4 MLOAD SWAP4 MLOAD SWAP2 MLOAD AND SWAP3 PUSH2 0x5550 JUMP JUMPDEST PUSH1 0x44 SWAP1 DUP12 PUSH1 0x40 MLOAD SWAP2 PUSH4 0xB63F1A7 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST POP CALLVALUE PUSH2 0x71E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x71E JUMPI PUSH1 0x20 PUSH2 0x990 PUSH2 0x982 PUSH1 0x4 CALLDATALOAD PUSH2 0x96B PUSH2 0x5C48 JUMP JUMPDEST SWAP1 PUSH2 0x98A PUSH2 0x979 DUP5 DUP5 PUSH2 0x4AF9 JUMP JUMPDEST MLOAD SWAP5 DUP6 SWAP4 PUSH2 0x4B0D JUMP JUMPDEST SWAP6 SWAP1 SWAP5 PUSH2 0x5BA0 JUMP JUMPDEST SWAP1 PUSH2 0x567B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x71E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x71E JUMPI PUSH1 0x20 PUSH2 0x16C SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x71E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x71E JUMPI PUSH1 0x20 PUSH2 0x173 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x71E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x71E JUMPI PUSH1 0x20 PUSH2 0x163 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x71E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x71E JUMPI PUSH2 0xA0F PUSH2 0x5D98 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH2 0x16E SSTORE PUSH1 0x40 MLOAD RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0xA80 JUMPI CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x71E JUMPI PUSH2 0xA34 PUSH2 0x5D98 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x79308A55 PUSH1 0xE1 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0xA7A SWAP1 PUSH2 0xA68 DUP2 PUSH2 0xA5A PUSH1 0x4 PUSH1 0x24 DUP4 ADD PUSH2 0x5B02 JUMP JUMPDEST SUB PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x450C JUMP JUMPDEST PUSH2 0x21C SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x56F1 JUMP JUMPDEST POP PUSH1 0x40 MLOAD RETURN JUMPDEST POP DUP1 REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x71E JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x719 JUMPI PUSH1 0x40 MLOAD SWAP1 PUSH2 0xAA5 PUSH1 0xC0 DUP4 PUSH2 0x450C JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD PUSH1 0x24 CALLDATALOAD DUP2 MSTORE PUSH1 0x40 DUP4 ADD SWAP1 PUSH1 0x44 CALLDATALOAD DUP3 MSTORE PUSH1 0x60 DUP5 ADD SWAP4 CALLER DUP6 MSTORE PUSH1 0x80 DUP2 ADD CALLER DUP2 MSTORE PUSH1 0xA0 DUP3 ADD DUP6 DUP2 MSTORE PUSH2 0xADB PUSH2 0x5161 JUMP JUMPDEST PUSH2 0xAE3 PUSH2 0x5E26 JUMP JUMPDEST PUSH2 0xAEB PUSH2 0x5D04 JUMP JUMPDEST PUSH2 0xAF3 PUSH2 0x5C48 JUMP JUMPDEST SWAP7 SWAP1 SWAP8 PUSH2 0xB01 DUP6 MLOAD DUP10 PUSH2 0x4AF9 JUMP JUMPDEST MLOAD SWAP9 PUSH2 0xB0E DUP11 DUP8 MLOAD PUSH2 0x55E9 JUMP JUMPDEST PUSH2 0xB1B DUP10 PUSH2 0x17C SLOAD PUSH2 0x522B JUMP JUMPDEST POP POP PUSH2 0xB31 PUSH2 0xB2B DUP9 MLOAD SWAP11 PUSH2 0x4B0D JUMP JUMPDEST SWAP1 PUSH2 0x526E JUMP JUMPDEST SWAP1 PUSH8 0xDE0B6B3A763FFFF NOT DUP2 ADD SWAP1 DUP2 GT PUSH2 0xCCE JUMPI SWAP1 PUSH2 0xB83 DUP12 PUSH2 0x866 PUSH2 0xB65 DUP14 SWAP15 PUSH2 0x866 PUSH2 0xBBC SWAP14 SWAP15 SWAP16 SWAP8 PUSH2 0xB89 SWAP9 PUSH2 0x4C20 JUMP JUMPDEST SWAP4 PUSH2 0xB7D PUSH8 0xDE0B6B3A7640000 SWAP2 PUSH2 0x866 DUP4 DUP9 PUSH2 0x4C20 JUMP JUMPDEST SWAP15 PUSH2 0x4C20 JUMP JUMPDEST SWAP1 PUSH2 0x4AEC JUMP JUMPDEST SWAP4 PUSH2 0xB92 PUSH2 0x4F72 JUMP JUMPDEST POP PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 PUSH2 0xBB1 DUP4 DUP3 MLOAD AND DUP8 DUP6 DUP9 MLOAD AND PUSH2 0x174 SLOAD SWAP3 PUSH2 0x52A9 JUMP JUMPDEST SWAP8 SWAP2 DUP3 SWAP11 SWAP2 SWAP11 PUSH2 0x4AEC JUMP JUMPDEST SWAP11 MLOAD DUP1 DUP13 GT PUSH2 0xCB0 JUMPI POP DUP11 ISZERO PUSH2 0x6E9 JUMPI DUP10 DUP6 DUP5 DUP7 DUP16 SWAP12 DUP16 PUSH2 0xCAC SWAP16 SWAP14 PUSH2 0xC7C SWAP8 PUSH2 0xC8F SWAP16 DUP16 SWAP12 DUP12 PUSH32 0x3D9B2786930E9C1E492D52AF3CC38BD2FFE9405D82B4997053A26A8956056200 DUP9 SWAP15 DUP7 PUSH2 0xC63 PUSH2 0xC70 SWAP10 DUP13 DUP1 DUP14 MLOAD SWAP8 MLOAD AND SWAP8 MLOAD AND SWAP8 MLOAD SWAP4 DUP1 MLOAD PUSH1 0x20 DUP3 ADD MLOAD SWAP1 PUSH1 0x60 PUSH1 0x40 DUP5 ADD MLOAD SWAP4 ADD MLOAD SWAP4 PUSH1 0x40 MLOAD SWAP8 DUP9 SWAP8 DUP9 SWAP4 SWAP1 SWAP8 SWAP7 SWAP6 SWAP3 PUSH1 0xC0 SWAP6 SWAP3 PUSH1 0xE0 DUP7 ADD SWAP10 DUP7 MSTORE PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP1 LOG4 DUP5 DUP7 MLOAD AND SWAP2 PUSH2 0x5183 JUMP JUMPDEST MLOAD SWAP4 MLOAD SWAP2 MLOAD AND SWAP3 PUSH2 0x5550 JUMP JUMPDEST PUSH2 0x6D1 DUP11 DUP4 PUSH2 0x24F SLOAD AND ADDRESS SWAP1 CALLER SWAP1 PUSH2 0x4FC1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 DUP5 PUSH1 0x40 SWAP2 SWAP5 SWAP4 SWAP3 PUSH1 0x60 DUP3 ADD SWAP6 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0x44 SWAP1 DUP13 PUSH1 0x40 MLOAD SWAP2 PUSH4 0xB63F1A7 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x71E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x71E JUMPI PUSH2 0x162 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x71E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x71E JUMPI PUSH1 0x20 PUSH2 0x990 PUSH2 0x5B63 JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x71E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x71E JUMPI PUSH1 0x20 PUSH1 0xFF PUSH2 0x17D SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x71E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x71E JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH2 0x1B4 SWAP1 DUP2 SLOAD DUP4 LT ISZERO PUSH2 0x71E JUMPI PUSH1 0x40 PUSH2 0xD7A DUP5 DUP5 PUSH2 0x44F0 JUMP JUMPDEST POP PUSH1 0x1 DUP2 SLOAD SWAP2 ADD SLOAD DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x71E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x71E JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x719 JUMPI PUSH2 0xDBD PUSH2 0x5D98 JUMP JUMPDEST PUSH2 0x21C DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x40 MLOAD RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x71E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x71E JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0xA80 JUMPI PUSH2 0xE05 PUSH2 0x5D98 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0x97 SLOAD AND OR PUSH1 0x97 SSTORE PUSH1 0x40 MLOAD RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x71E JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x719 JUMPI PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND SWAP3 SWAP2 DUP4 SWAP1 SUB PUSH2 0x719 JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH2 0xE55 PUSH1 0xA0 DUP6 PUSH2 0x450C JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 PUSH1 0x24 CALLDATALOAD DUP5 MSTORE PUSH1 0x40 DUP6 ADD SWAP3 CALLER DUP5 MSTORE PUSH1 0x60 DUP7 ADD SWAP3 DUP4 MSTORE PUSH1 0x80 DUP7 ADD SWAP2 DUP3 MSTORE PUSH2 0xE82 PUSH2 0x5161 JUMP JUMPDEST PUSH2 0xE8A PUSH2 0x5E26 JUMP JUMPDEST PUSH2 0xE92 PUSH2 0x5D04 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 PUSH2 0xECC PUSH2 0xEB8 PUSH2 0x610 DUP10 PUSH2 0xEC4 PUSH2 0xEB0 PUSH2 0x5C48 JUMP JUMPDEST DUP2 SWAP6 SWAP2 PUSH2 0x522B JUMP JUMPDEST SWAP3 SWAP1 DUP1 SWAP6 DUP5 SWAP3 MLOAD PUSH2 0x5AC5 JUMP JUMPDEST DUP11 MLOAD SWAP3 PUSH2 0x526E JUMP JUMPDEST DIV SWAP4 DUP5 ISZERO PUSH2 0x6E9 JUMPI PUSH2 0xF02 SWAP5 PUSH2 0xEE0 PUSH2 0x4F72 JUMP JUMPDEST POP PUSH2 0xEF7 DUP4 DUP4 MLOAD AND DUP3 DUP6 DUP8 MLOAD AND PUSH2 0x16F SLOAD SWAP3 PUSH2 0x52A9 JUMP JUMPDEST SWAP10 SWAP2 DUP4 SWAP9 SWAP2 SWAP9 PUSH2 0x4A4E JUMP JUMPDEST SWAP8 MLOAD DUP1 DUP10 LT PUSH2 0xF8F JUMPI POP SWAP3 DUP1 DUP1 DUP5 PUSH2 0xF81 DUP13 SWAP9 SWAP6 DUP11 SWAP9 PUSH1 0x40 SWAP15 PUSH2 0x6DD SWAP13 DUP16 SWAP11 DUP12 DUP9 DUP1 PUSH32 0x96956E9E47738119037532FCF68A81B25D418EAF754281E005F11FA2D33BFFFB SWAP4 MLOAD AND SWAP4 MLOAD AND SWAP4 PUSH2 0xF72 DUP7 MLOAD SWAP2 DUP1 MLOAD SWAP1 PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x40 PUSH1 0x60 SWAP1 DUP4 ADD MLOAD SWAP3 ADD MLOAD SWAP3 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP7 DUP8 PUSH2 0x4F99 JUMP JUMPDEST SUB SWAP1 LOG3 MLOAD SWAP1 DUP5 DUP5 MLOAD AND SWAP2 PUSH2 0x57A7 JUMP JUMPDEST MLOAD AND SWAP5 MLOAD AND SWAP2 MLOAD AND SWAP3 PUSH2 0x5812 JUMP JUMPDEST PUSH1 0x44 SWAP1 DUP10 PUSH1 0x40 MLOAD SWAP2 PUSH4 0x54CDE313 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x71E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x71E JUMPI PUSH2 0xFC7 ADDRESS PUSH2 0x4A71 JUMP JUMPDEST PUSH2 0x163 SWAP1 PUSH2 0xFD7 DUP3 SLOAD DUP1 SWAP3 PUSH2 0x4A4E JUMP JUMPDEST PUSH2 0xFE2 JUMPI JUMPDEST DUP3 PUSH1 0x40 MLOAD RETURN JUMPDEST DUP1 PUSH2 0xB83 PUSH2 0xFF8 SWAP3 PUSH2 0xFF3 ADDRESS PUSH2 0x4A71 JUMP JUMPDEST PUSH2 0x4A4E JUMP JUMPDEST SWAP1 SSTORE DUP2 DUP1 PUSH2 0xFDC JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x71E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x71E JUMPI PUSH1 0x20 PUSH2 0x990 PUSH2 0x1027 PUSH2 0x1022 PUSH2 0x4ED8 JUMP JUMPDEST PUSH2 0x4B0D JUMP JUMPDEST SWAP1 POP PUSH2 0x163 SLOAD PUSH2 0x4A4E JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x71E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x71E JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH2 0x176 SWAP1 DUP2 SLOAD DUP4 LT ISZERO PUSH2 0x71E JUMPI PUSH1 0x20 PUSH2 0x1061 DUP5 DUP5 PUSH2 0x43E9 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x40 MLOAD SWAP2 PUSH1 0x3 SHL SHR DUP2 MSTORE RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0xA80 JUMPI CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x71E JUMPI PUSH2 0x1088 PUSH2 0x5D98 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6DBCB039 PUSH1 0xE1 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0xA7A SWAP1 PUSH2 0xA68 DUP2 PUSH2 0xA5A PUSH1 0x4 PUSH1 0x24 DUP4 ADD PUSH2 0x5B02 JUMP JUMPDEST SWAP1 POP CALLVALUE PUSH2 0xA80 JUMPI PUSH2 0x10C0 CALLDATASIZE PUSH1 0x4 PUSH2 0x4417 JUMP JUMPDEST SWAP5 PUSH2 0x10D4 PUSH1 0x40 SWAP6 SWAP3 SWAP6 SWAP5 SWAP4 SWAP5 MLOAD SWAP8 DUP9 PUSH2 0x450C JUMP JUMPDEST DUP7 MSTORE PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP5 ADD MSTORE CALLER PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0xA0 DUP5 ADD MSTORE AND PUSH1 0xC0 DUP3 ADD MSTORE PUSH2 0x1109 PUSH2 0x5161 JUMP JUMPDEST PUSH2 0x1111 PUSH2 0x5E26 JUMP JUMPDEST PUSH2 0x1119 PUSH2 0x5D04 JUMP JUMPDEST PUSH2 0x1121 PUSH2 0x5C48 JUMP JUMPDEST SWAP3 SWAP1 PUSH2 0x1173 PUSH2 0x1147 PUSH2 0x1134 DUP6 MLOAD DUP8 PUSH2 0x4AF9 JUMP JUMPDEST MLOAD SWAP6 PUSH2 0x1141 DUP8 DUP8 MLOAD PUSH2 0x55E9 JUMP JUMPDEST DUP4 PUSH2 0x522B JUMP JUMPDEST SWAP1 PUSH2 0x1158 DUP3 DUP3 DUP7 PUSH1 0x20 DUP11 ADD MLOAD PUSH2 0x5AC5 JUMP JUMPDEST PUSH1 0x20 DUP7 ADD MLOAD PUSH8 0xDE0B6B3A7640000 SWAP4 DUP5 SWAP2 PUSH2 0x610 DUP6 DUP6 PUSH2 0x526E JUMP JUMPDEST DIV SWAP4 DUP5 ISZERO PUSH2 0x6E9 JUMPI PUSH2 0x11B8 SWAP4 PUSH2 0x11AE PUSH2 0x11A4 DUP11 PUSH2 0x119F PUSH1 0x20 DUP13 ADD MLOAD PUSH2 0x610 DUP9 PUSH2 0xFF3 DUP12 PUSH2 0x163 SLOAD PUSH2 0x4A4E JUMP JUMPDEST PUSH2 0x4C20 JUMP JUMPDEST PUSH2 0x166 SLOAD SWAP1 PUSH2 0x4C33 JUMP JUMPDEST DIV SWAP8 DUP9 DUP9 MLOAD PUSH2 0x5640 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MLOAD DUP1 DUP6 LT PUSH2 0x1307 JUMPI POP PUSH2 0x11F4 SWAP1 PUSH2 0x11D1 PUSH2 0x4F72 JUMP JUMPDEST POP PUSH1 0x80 DUP5 ADD MLOAD PUSH1 0xC0 DUP6 ADD MLOAD PUSH2 0x172 SLOAD SWAP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 AND PUSH2 0x52A9 JUMP JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 PUSH1 0x60 DUP3 ADD MLOAD DUP1 DUP7 GT PUSH2 0x12E8 JUMPI POP SWAP2 DUP2 PUSH2 0xCAC SWAP5 SWAP4 PUSH2 0xC8F SWAP4 MLOAD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x80 DUP5 ADD MLOAD AND PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0xA0 DUP6 ADD MLOAD AND SWAP2 PUSH32 0xF4287B96E269F789F166DB491B07456566F468352771E466CE088E98D6007A0C DUP12 PUSH1 0x20 DUP8 ADD MLOAD PUSH2 0x1275 DUP10 MLOAD PUSH1 0x20 DUP12 ADD MLOAD PUSH1 0x40 DUP13 ADD MLOAD SWAP1 PUSH1 0x60 DUP14 ADD MLOAD SWAP3 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP7 DUP8 PUSH2 0x4F99 JUMP JUMPDEST SUB SWAP1 LOG4 PUSH2 0x1294 PUSH1 0x20 DUP4 ADD MLOAD DUP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x80 DUP7 ADD MLOAD AND SWAP2 PUSH2 0x57A7 JUMP JUMPDEST PUSH2 0x12AE DUP3 MLOAD DUP3 DUP11 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0xA0 DUP8 ADD MLOAD AND SWAP3 PUSH2 0x5550 JUMP JUMPDEST PUSH2 0x24F SLOAD PUSH2 0x12CA SWAP1 DUP9 SWAP1 ADDRESS SWAP1 CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x4FC1 JUMP JUMPDEST PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0xC0 SWAP1 SWAP3 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP3 AND DUP1 PUSH2 0x5812 JUMP JUMPDEST PUSH1 0x44 SWAP1 DUP5 MLOAD PUSH1 0x40 MLOAD SWAP2 PUSH4 0xB63F1A7 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x44 SWAP1 DUP6 PUSH1 0x40 MLOAD SWAP2 PUSH4 0x272E3F59 PUSH1 0xE2 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x71E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x71E JUMPI PUSH2 0x133E PUSH2 0x5D04 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x71E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x71E JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x719 JUMPI PUSH2 0x1372 PUSH2 0x5D98 JUMP JUMPDEST PUSH2 0x161 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x40 MLOAD RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x71E JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x71E JUMPI PUSH1 0x40 MLOAD SWAP1 PUSH2 0x13AD PUSH2 0x100 DUP4 PUSH2 0x450C JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 PUSH1 0x24 CALLDATALOAD DUP3 MSTORE PUSH1 0x40 DUP4 ADD SWAP2 PUSH1 0x44 CALLDATALOAD DUP4 MSTORE PUSH2 0x147D PUSH1 0x60 DUP6 ADD SWAP5 PUSH1 0x64 CALLDATALOAD DUP7 MSTORE PUSH1 0x80 DUP2 ADD PUSH1 0x84 CALLDATALOAD DUP2 MSTORE PUSH1 0xA0 DUP3 ADD SWAP7 CALLER DUP9 MSTORE PUSH1 0xC0 DUP4 ADD SWAP7 CALLER DUP9 MSTORE DUP10 DUP5 ADD SWAP6 DUP8 DUP8 MSTORE PUSH2 0x13FB PUSH2 0x5161 JUMP JUMPDEST PUSH2 0x1403 PUSH2 0x5E26 JUMP JUMPDEST PUSH2 0x140B PUSH2 0x4F72 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x1C280CE1 PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP5 MLOAD PUSH1 0x24 DUP7 ADD MSTORE MLOAD PUSH1 0x44 DUP6 ADD MSTORE MLOAD PUSH1 0x64 DUP5 ADD MSTORE MLOAD PUSH1 0x84 DUP4 ADD MSTORE MLOAD PUSH1 0xA4 DUP3 ADD MSTORE DUP6 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0xC4 DUP4 ADD MSTORE SWAP5 MLOAD DUP6 AND PUSH1 0xE4 DUP3 ADD MSTORE DUP3 MLOAD DUP6 AND PUSH2 0x104 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 MSTORE PUSH2 0x1472 PUSH2 0x124 DUP3 PUSH2 0x450C JUMP JUMPDEST DUP5 PUSH2 0x21C SLOAD AND PUSH2 0x56F1 JUMP JUMPDEST SWAP2 DUP3 DUP1 MLOAD DUP2 ADD SUB SWAP4 DUP7 DUP6 SLT PUSH2 0xA80 JUMPI PUSH1 0x20 DUP5 ADD MLOAD SWAP6 PUSH1 0x40 DUP6 ADD MLOAD SWAP8 PUSH1 0x80 PUSH1 0x60 DUP8 ADD MLOAD SWAP8 PUSH1 0x5F NOT ADD SLT PUSH2 0x14FB JUMPI SWAP2 DUP1 PUSH2 0xCAC SWAP8 SWAP7 SWAP5 SWAP3 PUSH2 0xC8F SWAP7 SWAP5 PUSH1 0x40 MLOAD SWAP7 PUSH2 0x14C6 PUSH1 0x80 DUP10 PUSH2 0x450C JUMP JUMPDEST PUSH1 0x80 DUP2 ADD MLOAD DUP9 MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0x20 DUP10 ADD MSTORE PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0x40 DUP10 ADD MSTORE ADD MLOAD PUSH1 0x60 DUP8 ADD MSTORE PUSH2 0x6D1 DUP11 DUP4 PUSH2 0x24F SLOAD AND ADDRESS SWAP1 CALLER SWAP1 PUSH2 0x4FC1 JUMP JUMPDEST DUP4 DUP1 REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x71E JUMPI PUSH2 0x320 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x71E JUMPI DUP1 SLOAD PUSH1 0xFF DUP2 PUSH1 0x8 SHR AND ISZERO SWAP1 DUP2 DUP1 SWAP3 PUSH2 0x198B JUMPI JUMPDEST DUP1 ISZERO PUSH2 0x1974 JUMPI JUMPDEST ISZERO PUSH2 0x1918 JUMPI PUSH1 0xFF NOT DUP2 AND PUSH1 0x1 OR DUP4 SSTORE DUP2 PUSH2 0x1907 JUMPI JUMPDEST POP PUSH2 0x304 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x719 JUMPI PUSH2 0x24F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE DUP2 SLOAD SWAP1 PUSH2 0x157F PUSH1 0xFF DUP4 PUSH1 0x8 SHR AND PUSH2 0x4F12 JUMP JUMPDEST PUSH2 0x2A4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x719 JUMPI PUSH2 0x21C DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x264 CALLDATALOAD SWAP1 DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x719 JUMPI PUSH2 0x284 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x719 JUMPI PUSH1 0x1 SWAP2 PUSH2 0x15E6 PUSH1 0xFF DUP7 PUSH1 0x8 SHR AND PUSH2 0x4F12 JUMP JUMPDEST PUSH2 0x15F5 PUSH1 0xFF DUP7 PUSH1 0x8 SHR AND PUSH2 0x4F12 JUMP JUMPDEST PUSH2 0x1604 PUSH1 0xFF DUP7 PUSH1 0x8 SHR AND PUSH2 0x4F12 JUMP JUMPDEST PUSH2 0x1613 PUSH1 0xFF DUP7 PUSH1 0x8 SHR AND PUSH2 0x4F12 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0x97 SLOAD AND OR PUSH1 0x97 SSTORE PUSH2 0x1635 PUSH1 0xFF DUP6 PUSH1 0x8 SHR AND PUSH2 0x4F12 JUMP JUMPDEST PUSH1 0xCA SLOAD SWAP1 PUSH3 0x10000 DUP4 PUSH1 0xB0 SHL SUB SWAP1 PUSH1 0x10 SHL AND SWAP1 PUSH2 0xFF01 DUP4 PUSH1 0xB0 SHL SUB NOT AND OR OR PUSH1 0xCA SSTORE PUSH2 0x1666 PUSH1 0xFF DUP4 PUSH1 0x8 SHR AND PUSH2 0x4F12 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 PUSH1 0xA4 CALLDATALOAD LT PUSH2 0x18F5 JUMPI PUSH2 0x1682 PUSH1 0xE4 CALLDATALOAD PUSH2 0x5E47 JUMP JUMPDEST PUSH2 0x168E PUSH2 0x104 CALLDATALOAD PUSH2 0x5E47 JUMP JUMPDEST PUSH2 0x169A PUSH2 0x124 CALLDATALOAD PUSH2 0x5E47 JUMP JUMPDEST PUSH2 0x16A6 PUSH2 0x144 CALLDATALOAD PUSH2 0x5E47 JUMP JUMPDEST PUSH2 0x16B2 PUSH2 0x164 CALLDATALOAD PUSH2 0x5E47 JUMP JUMPDEST PUSH2 0x16BE PUSH2 0x184 CALLDATALOAD PUSH2 0x5E47 JUMP JUMPDEST PUSH2 0x16CA PUSH2 0x1A4 CALLDATALOAD PUSH2 0x5E47 JUMP JUMPDEST PUSH2 0x16D6 PUSH2 0x1C4 CALLDATALOAD PUSH2 0x5E47 JUMP JUMPDEST PUSH2 0x16E2 PUSH2 0x1E4 CALLDATALOAD PUSH2 0x5E47 JUMP JUMPDEST PUSH2 0x16FA PUSH2 0x16F5 PUSH2 0x224 CALLDATALOAD PUSH2 0x204 CALLDATALOAD PUSH2 0x4AEC JUMP JUMPDEST PUSH2 0x5E47 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x719 JUMPI PUSH2 0x161 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND OR SWAP1 SSTORE PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 AND DUP2 SUB PUSH2 0x719 JUMPI PUSH2 0x162 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND OR SWAP1 SSTORE PUSH1 0x44 CALLDATALOAD SWAP1 DUP2 AND DUP2 SUB PUSH2 0x719 JUMPI PUSH2 0x165 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND OR SWAP1 SSTORE PUSH1 0x64 CALLDATALOAD SWAP1 DUP2 AND DUP2 SUB PUSH2 0x719 JUMPI PUSH2 0x178 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND OR SWAP1 SSTORE PUSH1 0x84 CALLDATALOAD SWAP1 DUP2 AND DUP2 SUB PUSH2 0x719 JUMPI PUSH2 0x179 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0xA4 CALLDATALOAD PUSH2 0x17B SSTORE PUSH1 0xC4 CALLDATALOAD PUSH2 0x17C SSTORE PUSH1 0xE4 CALLDATALOAD PUSH2 0x16D SSTORE PUSH2 0x104 CALLDATALOAD PUSH2 0x16E SSTORE PUSH2 0x124 CALLDATALOAD PUSH2 0x16F SSTORE PUSH2 0x144 CALLDATALOAD PUSH2 0x170 SSTORE PUSH2 0x164 CALLDATALOAD PUSH2 0x171 SSTORE PUSH2 0x184 CALLDATALOAD PUSH2 0x172 SSTORE PUSH2 0x1A4 CALLDATALOAD PUSH2 0x173 SSTORE PUSH2 0x1C4 CALLDATALOAD PUSH2 0x174 SSTORE PUSH2 0x1E4 CALLDATALOAD PUSH2 0x175 SSTORE PUSH2 0x204 CALLDATALOAD PUSH2 0x16B SSTORE PUSH2 0x224 CALLDATALOAD PUSH2 0x16C SSTORE PUSH2 0x1845 PUSH2 0x244 CALLDATALOAD DUP1 PUSH2 0x17E SSTORE NUMBER PUSH2 0x4AEC JUMP JUMPDEST PUSH2 0x17F SSTORE PUSH2 0x17D PUSH2 0xFFFF NOT DUP2 SLOAD AND SWAP1 SSTORE PUSH2 0x2C4 CALLDATALOAD PUSH2 0x1868 PUSH1 0xFF DUP5 PUSH1 0x8 SHR AND PUSH2 0x4F12 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x18F5 JUMPI PUSH2 0x1B6 DUP2 SWAP1 SSTORE NUMBER ADD PUSH2 0x1B5 SSTORE PUSH2 0x2E4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x719 JUMPI PUSH2 0x189F PUSH1 0xFF DUP5 PUSH1 0x8 SHR AND PUSH2 0x4F12 JUMP JUMPDEST PUSH2 0x1E9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x18BD JUMPI POP PUSH1 0x40 MLOAD RETURN JUMPDEST PUSH2 0xFF00 NOT AND DUP2 SSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE LOG1 DUP2 PUSH2 0xA7A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2A9FFAB7 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0xFFFF NOT AND PUSH2 0x101 OR DUP3 SSTORE DUP3 PUSH2 0x1541 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x152C JUMPI POP PUSH1 0x1 PUSH1 0xFF DUP3 AND EQ PUSH2 0x152C JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0xFF DUP3 AND LT PUSH2 0x1525 JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x71E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x71E JUMPI PUSH2 0x19B2 PUSH2 0x5D98 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH2 0x17E SSTORE PUSH1 0x40 MLOAD RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x71E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x71E JUMPI PUSH1 0x20 PUSH2 0x990 PUSH2 0x19FD PUSH2 0x866 PUSH8 0xDE0B6B3A7640000 PUSH2 0x1A04 PUSH2 0x19F1 PUSH2 0x1022 PUSH2 0x4ED8 JUMP JUMPDEST PUSH2 0x163 SWAP6 SWAP2 SWAP6 SLOAD PUSH2 0x4A4E JUMP JUMPDEST SWAP4 DUP5 PUSH2 0x4A4E JUMP JUMPDEST SWAP3 PUSH2 0x4C20 JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x71E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x71E JUMPI PUSH2 0x1A24 PUSH2 0x5D98 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH2 0x16F SSTORE PUSH1 0x40 MLOAD RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x71E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x71E JUMPI PUSH2 0x1A4A PUSH2 0x5D98 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH2 0x16B SSTORE PUSH1 0x40 MLOAD RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x71E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x71E JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0xCA SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x71E JUMPI PUSH2 0x1A8A CALLDATASIZE PUSH1 0x4 PUSH2 0x4450 JUMP JUMPDEST SWAP3 PUSH1 0x40 SWAP6 SWAP3 SWAP5 SWAP2 SWAP6 MLOAD SWAP3 PUSH2 0x1A9E SWAP1 DUP5 PUSH2 0x450C JUMP JUMPDEST DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP4 DUP5 MSTORE PUSH1 0x40 DUP3 ADD SWAP5 DUP6 MSTORE PUSH1 0x60 DUP3 ADD SWAP3 DUP4 MSTORE PUSH1 0x80 DUP3 ADD SWAP1 CALLER DUP3 MSTORE PUSH1 0xA0 DUP4 ADD SWAP6 CALLER DUP8 MSTORE PUSH1 0xC0 DUP5 ADD SWAP3 DUP3 DUP5 MSTORE PUSH2 0x1AD5 PUSH2 0x5161 JUMP JUMPDEST PUSH2 0x1ADD PUSH2 0x5E26 JUMP JUMPDEST PUSH2 0x1AE5 PUSH2 0x5D04 JUMP JUMPDEST PUSH2 0x1AED PUSH2 0x5C48 JUMP JUMPDEST SWAP9 SWAP1 SWAP3 DUP7 MLOAD PUSH2 0x1AFC SWAP1 DUP12 PUSH2 0x4AF9 JUMP JUMPDEST MLOAD SWAP10 DUP11 DUP9 MLOAD SWAP1 PUSH2 0x1B0B SWAP2 PUSH2 0x55E9 JUMP JUMPDEST PUSH2 0x1B15 SWAP1 DUP6 PUSH2 0x522B JUMP JUMPDEST DUP6 DUP2 DUP4 DUP14 MLOAD SWAP3 PUSH2 0x1B24 SWAP4 PUSH2 0x5AC5 JUMP JUMPDEST DUP11 MLOAD SWAP2 PUSH8 0xDE0B6B3A7640000 DUP1 SWAP4 PUSH2 0x1B3C DUP5 DUP5 PUSH2 0x526E JUMP JUMPDEST PUSH2 0x1B45 SWAP2 PUSH2 0x4C20 JUMP JUMPDEST DIV SWAP7 DUP8 ISZERO PUSH2 0x6E9 JUMPI PUSH2 0x1B7A SWAP4 PUSH2 0x1B70 DUP16 DUP16 SWAP1 PUSH2 0x119F PUSH2 0x11A4 SWAP3 MLOAD PUSH2 0x610 DUP9 PUSH2 0xFF3 DUP12 PUSH2 0x163 SLOAD PUSH2 0x4A4E JUMP JUMPDEST DIV SWAP14 DUP15 DUP13 MLOAD PUSH2 0x5640 JUMP JUMPDEST MLOAD DUP1 DUP11 LT PUSH2 0x1C5D JUMPI POP PUSH2 0x1B8B PUSH2 0x4F72 JUMP JUMPDEST POP PUSH2 0x1BAA PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 DUP5 MLOAD AND SWAP1 DUP6 DUP9 MLOAD AND PUSH2 0x172 SLOAD SWAP3 PUSH2 0x52A9 JUMP JUMPDEST SWAP8 SWAP2 SWAP10 SWAP1 SWAP9 MLOAD DUP1 DUP12 GT PUSH2 0x1C3E JUMPI POP SWAP3 PUSH2 0xC7C DUP6 SWAP4 DUP8 DUP14 DUP7 DUP7 PUSH2 0x1C34 PUSH2 0xCAC SWAP16 SWAP15 SWAP13 SWAP11 DUP14 PUSH2 0xC8F SWAP16 SWAP14 SWAP11 MLOAD DUP6 DUP12 MLOAD AND SWAP1 PUSH32 0xF4287B96E269F789F166DB491B07456566F468352771E466CE088E98D6007A0C DUP9 DUP9 DUP13 MLOAD AND SWAP5 PUSH2 0x1C25 DUP8 MLOAD SWAP2 DUP1 MLOAD SWAP1 PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x60 PUSH1 0x40 DUP4 ADD MLOAD SWAP3 ADD MLOAD SWAP3 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP7 DUP8 PUSH2 0x4F99 JUMP JUMPDEST SUB SWAP1 LOG4 MLOAD DUP6 DUP5 DUP11 MLOAD AND SWAP2 PUSH2 0x57A7 JUMP JUMPDEST MLOAD SWAP4 MLOAD AND SWAP3 PUSH2 0x5550 JUMP JUMPDEST PUSH1 0x44 SWAP1 DUP10 MLOAD PUSH1 0x40 MLOAD SWAP2 PUSH4 0xB63F1A7 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x44 SWAP1 DUP11 PUSH1 0x40 MLOAD SWAP2 PUSH4 0x272E3F59 PUSH1 0xE2 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x71E JUMPI PUSH2 0x1D4D PUSH2 0x1C8F CALLDATASIZE PUSH1 0x4 PUSH2 0x4560 JUMP JUMPDEST SWAP1 PUSH1 0x40 SWAP6 SWAP4 SWAP3 SWAP5 SWAP6 MLOAD SWAP6 PUSH2 0x1CA4 PUSH1 0xC0 DUP9 PUSH2 0x450C JUMP JUMPDEST DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP3 DUP4 MSTORE PUSH1 0x40 DUP7 ADD SWAP5 DUP6 MSTORE PUSH1 0x60 DUP7 ADD CALLER DUP2 MSTORE PUSH1 0x80 DUP8 ADD SWAP4 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP4 AND DUP6 MSTORE DUP3 PUSH1 0xA0 DUP10 ADD SWAP5 AND DUP5 MSTORE PUSH2 0x1CDD PUSH2 0x5161 JUMP JUMPDEST PUSH2 0x1CE5 PUSH2 0x5E26 JUMP JUMPDEST PUSH2 0x1D20 PUSH2 0x1CF0 PUSH2 0x4ED8 JUMP JUMPDEST PUSH2 0x1D0B PUSH2 0x1CFE DUP12 MLOAD DUP4 PUSH2 0x4AF9 JUMP JUMPDEST MLOAD SWAP2 PUSH2 0x5FE DUP4 DUP14 MLOAD PUSH2 0x55E9 JUMP JUMPDEST POP POP PUSH2 0x866 PUSH8 0xDE0B6B3A7640000 DUP5 MLOAD PUSH2 0x4C20 JUMP JUMPDEST PUSH2 0x1D28 PUSH2 0x4F72 JUMP JUMPDEST POP PUSH2 0x1D42 DUP5 DUP5 MLOAD AND DUP3 DUP7 DUP9 MLOAD AND PUSH2 0x88E DUP14 MLOAD PUSH2 0x177 PUSH2 0x43E9 JUMP JUMPDEST SWAP11 SWAP2 DUP4 SWAP10 SWAP2 SWAP10 PUSH2 0x4A4E JUMP JUMPDEST SWAP9 DUP3 ISZERO PUSH2 0x6E9 JUMPI MLOAD DUP1 DUP11 LT PUSH2 0x1DD5 JUMPI POP SWAP4 DUP1 DUP10 SWAP5 PUSH2 0xF81 DUP13 SWAP9 SWAP6 DUP4 SWAP6 DUP10 PUSH1 0x40 SWAP16 DUP14 PUSH2 0x6DD SWAP15 SWAP13 MLOAD PUSH32 0x94623CC0BDFF77F15A945C5F7C85F92E30BAEEE629058DB590CEEBA3755AD3BE DUP14 DUP11 DUP1 DUP12 MLOAD AND SWAP5 MLOAD AND SWAP5 PUSH2 0x1DC5 DUP10 MLOAD SWAP2 DUP1 MLOAD SWAP1 PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x40 PUSH1 0x60 SWAP1 DUP4 ADD MLOAD SWAP3 ADD MLOAD SWAP3 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP7 DUP8 PUSH2 0x4F99 JUMP JUMPDEST SUB SWAP1 LOG4 MLOAD SWAP2 MLOAD DUP6 DUP6 MLOAD AND SWAP3 PUSH2 0x5713 JUMP JUMPDEST PUSH1 0x44 SWAP1 DUP11 PUSH1 0x40 MLOAD SWAP2 PUSH4 0x54CDE313 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x71E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x71E JUMPI PUSH1 0x20 PUSH2 0x16F SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x71E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x71E JUMPI PUSH1 0x20 PUSH2 0x1B5 SLOAD NUMBER LT ISZERO PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x71E JUMPI PUSH2 0x8A6 SWAP1 PUSH2 0x1E49 CALLDATASIZE PUSH1 0x4 PUSH2 0x4472 JUMP JUMPDEST PUSH1 0x40 SWAP6 SWAP4 SWAP2 SWAP5 SWAP3 SWAP6 MLOAD SWAP2 PUSH2 0x1E5E PUSH1 0xC0 DUP5 PUSH2 0x450C JUMP JUMPDEST DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP6 DUP7 MSTORE PUSH1 0x40 DUP3 ADD SWAP5 DUP6 MSTORE PUSH1 0x60 DUP3 ADD SWAP3 CALLER DUP5 MSTORE PUSH1 0x80 DUP4 ADD SWAP2 CALLER DUP4 MSTORE PUSH1 0xA0 DUP5 ADD SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP3 AND DUP5 MSTORE PUSH2 0x801 PUSH2 0x5161 JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x71E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x71E JUMPI PUSH1 0xCA SLOAD PUSH1 0x40 MLOAD PUSH1 0x10 SWAP2 SWAP1 SWAP2 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x71E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x71E JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x719 JUMPI PUSH1 0x40 DUP3 DUP2 SWAP3 DUP2 MSTORE PUSH2 0x168 PUSH1 0x20 MSTORE KECCAK256 PUSH1 0xFF PUSH1 0x1 DUP3 SLOAD SWAP3 ADD SLOAD AND DUP3 MLOAD SWAP2 DUP3 MSTORE ISZERO ISZERO PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0xA80 JUMPI PUSH2 0x1F23 CALLDATASIZE PUSH1 0x4 PUSH2 0x43BB JUMP JUMPDEST SWAP3 SWAP1 SWAP2 SWAP6 SWAP4 PUSH2 0x1F35 PUSH1 0x40 MLOAD SWAP7 DUP8 PUSH2 0x450C JUMP JUMPDEST DUP6 MSTORE PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 DUP5 ADD SWAP5 DUP6 MSTORE PUSH1 0x60 DUP5 ADD MSTORE CALLER PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x1F6B PUSH2 0x5161 JUMP JUMPDEST PUSH2 0x1F73 PUSH2 0x5E26 JUMP JUMPDEST PUSH2 0x1F7B PUSH2 0x4ED8 JUMP JUMPDEST PUSH2 0x1F9F PUSH2 0x1F89 DUP5 MLOAD DUP4 PUSH2 0x4AF9 JUMP JUMPDEST MLOAD SWAP2 PUSH2 0x1F96 DUP4 DUP7 MLOAD PUSH2 0x55E9 JUMP JUMPDEST PUSH2 0x17C SLOAD PUSH2 0x522B JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 PUSH2 0x1FC0 PUSH2 0x11A4 DUP6 PUSH2 0x119F DUP7 PUSH1 0x20 DUP12 SWAP10 SWAP9 SWAP10 ADD MLOAD PUSH2 0x4C20 JUMP JUMPDEST DIV SWAP6 MLOAD DUP1 DUP8 GT PUSH2 0x2176 JUMPI POP SWAP2 PUSH8 0xDE0B6B3A7640000 PUSH2 0x2002 PUSH2 0x2009 SWAP4 PUSH2 0x1FFC PUSH2 0x1FF1 PUSH2 0x2045 SWAP8 PUSH1 0x20 DUP12 ADD MLOAD SWAP7 PUSH2 0x526E JUMP JUMPDEST SWAP2 PUSH2 0x866 DUP6 DUP13 PUSH2 0x4C20 JUMP JUMPDEST SWAP4 PUSH2 0x4C20 JUMP JUMPDEST DIV SWAP1 PUSH2 0x4AEC JUMP JUMPDEST SWAP2 PUSH2 0x2012 PUSH2 0x4F72 JUMP JUMPDEST POP PUSH1 0x80 DUP5 ADD MLOAD PUSH1 0xC0 DUP6 ADD MLOAD PUSH2 0x173 SLOAD PUSH2 0x203B SWAP3 SWAP1 SWAP2 DUP7 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 AND PUSH2 0x52A9 JUMP JUMPDEST SWAP2 DUP6 SWAP5 SWAP2 SWAP5 PUSH2 0x4A4E JUMP JUMPDEST SWAP5 PUSH1 0x60 DUP2 ADD MLOAD DUP1 DUP8 LT PUSH2 0x2158 JUMPI POP DUP6 ISZERO PUSH2 0x6E9 JUMPI PUSH2 0x2130 PUSH2 0xC8F SWAP4 PUSH2 0x2117 PUSH2 0xCAC SWAP8 DUP10 DUP12 DUP7 MLOAD PUSH32 0x754F66F66F0AFCD87E3EDD11C0796FEF32599EFE490000FDB0F014E3AD9560FA PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x80 DUP11 ADD MLOAD AND SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0xA0 DUP12 ADD MLOAD AND SWAP5 PUSH2 0x20FA PUSH1 0x20 DUP13 ADD MLOAD SWAP2 DUP14 DUP1 MLOAD PUSH1 0x20 DUP3 ADD MLOAD SWAP1 PUSH1 0x60 PUSH1 0x40 DUP5 ADD MLOAD SWAP4 ADD MLOAD SWAP4 PUSH1 0x40 MLOAD SWAP8 DUP9 SWAP8 DUP9 SWAP4 SWAP1 SWAP8 SWAP7 SWAP6 SWAP3 PUSH1 0xC0 SWAP6 SWAP3 PUSH1 0xE0 DUP7 ADD SWAP10 DUP7 MSTORE PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP1 LOG4 PUSH1 0x20 DUP6 ADD MLOAD PUSH1 0x80 DUP7 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 SWAP1 PUSH2 0x57A7 JUMP JUMPDEST DUP3 MLOAD PUSH1 0x80 DUP5 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 SWAP1 DUP11 SWAP1 PUSH2 0x5713 JUMP JUMPDEST PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0xA0 DUP3 ADD MLOAD PUSH1 0xC0 SWAP1 SWAP3 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP3 DUP9 SWAP3 SWAP1 DUP3 AND SWAP2 AND PUSH2 0x5812 JUMP JUMPDEST PUSH1 0x44 SWAP1 DUP8 PUSH1 0x40 MLOAD SWAP2 PUSH4 0x54CDE313 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x44 SWAP1 DUP8 PUSH1 0x40 MLOAD SWAP2 PUSH4 0x7A031DA3 PUSH1 0xE1 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x71E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x71E JUMPI PUSH1 0x20 PUSH2 0x21BB PUSH2 0x21B5 PUSH2 0x1022 PUSH2 0x4ED8 JUMP JUMPDEST SWAP1 PUSH2 0x4CB4 JUMP JUMPDEST PUSH2 0x17C SLOAD LT ISZERO PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x71E JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x719 JUMPI PUSH1 0x40 MLOAD SWAP1 PUSH2 0x21EA PUSH1 0xA0 DUP4 PUSH2 0x450C JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 PUSH1 0x24 CALLDATALOAD DUP3 MSTORE PUSH1 0x40 DUP4 ADD SWAP1 CALLER DUP3 MSTORE PUSH1 0x60 DUP5 ADD SWAP1 CALLER DUP3 MSTORE PUSH1 0x80 DUP6 ADD SWAP1 DUP2 MSTORE PUSH2 0x2218 PUSH2 0x5161 JUMP JUMPDEST PUSH2 0x2220 PUSH2 0x5E26 JUMP JUMPDEST PUSH2 0x2228 PUSH2 0x5D04 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 PUSH2 0x2261 PUSH2 0x224D PUSH2 0x610 PUSH2 0x2259 PUSH2 0x2245 PUSH2 0x5C48 JUMP JUMPDEST DUP2 SWAP5 SWAP2 PUSH2 0x522B JUMP JUMPDEST DUP2 DUP2 SWAP4 SWAP3 SWAP6 DUP14 MLOAD PUSH2 0x5AC5 JUMP JUMPDEST DUP10 MLOAD SWAP3 PUSH2 0x526E JUMP JUMPDEST DIV DUP1 ISZERO PUSH2 0x6E9 JUMPI PUSH2 0xF02 SWAP4 PUSH2 0x2274 PUSH2 0x4F72 JUMP JUMPDEST POP PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 PUSH2 0xEF7 DUP4 DUP4 MLOAD AND DUP3 DUP6 DUP8 MLOAD AND PUSH2 0x16F SLOAD SWAP3 PUSH2 0x52A9 JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x71E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x71E JUMPI PUSH2 0x178 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x71E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x71E JUMPI PUSH1 0x20 PUSH2 0x990 CALLER CALLER PUSH1 0x4 CALLDATALOAD PUSH2 0x59E0 JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x71E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x71E JUMPI PUSH1 0x20 PUSH2 0x990 PUSH1 0x4 CALLDATALOAD PUSH2 0x4E02 JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x71E JUMPI PUSH2 0x230E CALLDATASIZE PUSH1 0x4 PUSH2 0x4472 JUMP JUMPDEST SWAP3 PUSH1 0x40 SWAP3 SWAP2 SWAP3 MLOAD SWAP1 PUSH2 0x2321 PUSH1 0xC0 DUP4 PUSH2 0x450C JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 DUP3 MSTORE PUSH1 0x40 DUP2 ADD SWAP3 DUP4 MSTORE PUSH1 0x60 DUP2 ADD CALLER DUP2 MSTORE PUSH1 0x80 DUP3 ADD SWAP6 CALLER DUP8 MSTORE PUSH1 0xA0 DUP4 ADD SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP8 AND DUP3 MSTORE PUSH2 0x2359 PUSH2 0x5161 JUMP JUMPDEST PUSH2 0x2361 PUSH2 0x5E26 JUMP JUMPDEST PUSH2 0x2369 PUSH2 0x5D04 JUMP JUMPDEST PUSH2 0x2371 PUSH2 0x5C48 JUMP JUMPDEST SWAP8 SWAP1 SWAP9 PUSH2 0x237F DUP7 MLOAD DUP11 PUSH2 0x4AF9 JUMP JUMPDEST MLOAD SWAP10 PUSH2 0x238C DUP12 DUP9 MLOAD PUSH2 0x55E9 JUMP JUMPDEST PUSH2 0x2399 DUP11 PUSH2 0x17C SLOAD PUSH2 0x522B JUMP JUMPDEST POP POP PUSH2 0x23A9 PUSH2 0xB2B DUP10 MLOAD SWAP12 PUSH2 0x4B0D JUMP JUMPDEST SWAP1 PUSH8 0xDE0B6B3A763FFFF NOT DUP2 ADD SWAP1 DUP2 GT PUSH2 0x241B JUMPI SWAP1 PUSH2 0xB83 DUP13 PUSH2 0x866 PUSH2 0x23DD DUP15 SWAP16 PUSH2 0xBBC SWAP14 SWAP15 SWAP16 PUSH2 0x23FB SWAP8 PUSH2 0x866 SWAP2 PUSH2 0x4C20 JUMP JUMPDEST SWAP4 PUSH2 0x23F5 PUSH8 0xDE0B6B3A7640000 SWAP2 PUSH2 0x866 DUP4 DUP9 PUSH2 0x4C20 JUMP JUMPDEST SWAP16 PUSH2 0x4C20 JUMP JUMPDEST SWAP5 PUSH2 0x2404 PUSH2 0x4F72 JUMP JUMPDEST POP PUSH2 0xBB1 DUP4 DUP3 MLOAD AND DUP8 DUP6 DUP9 MLOAD AND PUSH2 0x174 SLOAD SWAP3 PUSH2 0x52A9 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x71E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x71E JUMPI PUSH1 0x20 PUSH2 0x17C SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x71E JUMPI PUSH2 0x245F CALLDATASIZE PUSH1 0x4 PUSH2 0x4560 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 SWAP5 SWAP3 SWAP4 SWAP3 PUSH2 0x2472 PUSH1 0xC0 DUP5 PUSH2 0x450C JUMP JUMPDEST DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP3 DUP4 MSTORE PUSH1 0x40 DUP3 ADD SWAP4 DUP5 MSTORE PUSH1 0x60 DUP3 ADD SWAP1 CALLER DUP3 MSTORE PUSH1 0x80 DUP4 ADD SWAP7 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP8 AND DUP9 MSTORE DUP7 PUSH1 0xA0 DUP6 ADD SWAP3 AND DUP3 MSTORE PUSH2 0x2359 PUSH2 0x5161 JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x71E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x71E JUMPI PUSH2 0x24C5 PUSH2 0x5E26 JUMP JUMPDEST PUSH1 0xCA SLOAD PUSH1 0x10 DUP2 SWAP1 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x2533 JUMPI PUSH1 0xFF DUP2 AND ISZERO PUSH2 0x2521 JUMPI PUSH2 0x100 SWAP1 PUSH2 0xFF00 NOT AND OR PUSH1 0xCA SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH1 0x20 PUSH1 0x40 MLOAD CALLER DUP2 MSTORE LOG1 PUSH1 0x40 MLOAD RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x866099C3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1D77D477 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x71E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x71E JUMPI PUSH1 0x20 PUSH2 0x990 PUSH2 0x21B5 PUSH2 0x1022 PUSH2 0x4ED8 JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x71E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x71E JUMPI PUSH2 0x1E9 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x71E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x71E JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH2 0x17A SWAP1 DUP2 SLOAD DUP4 LT ISZERO PUSH2 0x71E JUMPI PUSH1 0x20 PUSH2 0x1061 DUP5 DUP5 PUSH2 0x43E9 JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x71E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x71E JUMPI PUSH2 0x25D9 PUSH2 0x5D98 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH2 0x17B SSTORE PUSH1 0x40 MLOAD RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0xA80 JUMPI PUSH2 0x25F7 CALLDATASIZE PUSH1 0x4 PUSH2 0x43BB JUMP JUMPDEST SWAP3 SWAP1 SWAP2 SWAP6 SWAP4 PUSH2 0x2609 PUSH1 0x40 MLOAD SWAP7 DUP8 PUSH2 0x450C JUMP JUMPDEST DUP6 MSTORE PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 DUP5 ADD SWAP5 DUP6 MSTORE PUSH1 0x60 DUP5 ADD MSTORE CALLER PUSH1 0x80 DUP5 ADD DUP2 SWAP1 MSTORE PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x1F6B PUSH2 0x5161 JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x71E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x71E JUMPI PUSH2 0x2659 PUSH2 0x5D98 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH2 0x172 SSTORE PUSH1 0x40 MLOAD RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x71E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x71E JUMPI PUSH1 0x20 PUSH2 0x1B6 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x71E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x71E JUMPI PUSH2 0x269E PUSH2 0x5D98 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH2 0x173 SSTORE PUSH1 0x40 MLOAD RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x71E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x71E JUMPI PUSH1 0x20 PUSH2 0x166 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x71E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x71E JUMPI PUSH1 0x20 PUSH2 0x174 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x71E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x71E JUMPI PUSH2 0x2702 PUSH2 0x5D98 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH2 0x16D SSTORE PUSH1 0x40 MLOAD RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x71E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x71E JUMPI PUSH1 0x20 PUSH2 0x16B SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x71E JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x71E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0xA4 CALLDATALOAD DUP2 DUP2 AND SWAP3 SWAP1 DUP4 SWAP1 SUB PUSH2 0x719 JUMPI PUSH1 0xC4 CALLDATALOAD DUP3 DUP2 AND DUP1 SWAP2 SUB PUSH2 0x719 JUMPI PUSH2 0x147D PUSH1 0x40 MLOAD PUSH2 0x2774 PUSH2 0x100 DUP3 PUSH2 0x450C JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD DUP2 MSTORE DUP5 PUSH1 0x20 DUP3 ADD SWAP7 PUSH1 0x24 CALLDATALOAD DUP9 MSTORE PUSH1 0x40 DUP4 ADD PUSH1 0x44 CALLDATALOAD DUP2 MSTORE PUSH1 0x60 DUP5 ADD PUSH1 0x64 CALLDATALOAD DUP2 MSTORE PUSH1 0x80 DUP6 ADD SWAP2 PUSH1 0x84 CALLDATALOAD DUP4 MSTORE PUSH1 0xA0 DUP7 ADD SWAP11 CALLER DUP13 MSTORE PUSH1 0xC0 DUP8 ADD SWAP5 DUP6 MSTORE DUP13 DUP8 ADD SWAP9 DUP10 MSTORE PUSH2 0x27BD PUSH2 0x5161 JUMP JUMPDEST PUSH2 0x27C5 PUSH2 0x5E26 JUMP JUMPDEST PUSH2 0x27CD PUSH2 0x4F72 JUMP JUMPDEST POP PUSH1 0x40 MLOAD SWAP7 PUSH4 0x1C280CE1 PUSH1 0xE0 SHL PUSH1 0x20 DUP10 ADD MSTORE MLOAD PUSH1 0x24 DUP9 ADD MSTORE MLOAD PUSH1 0x44 DUP8 ADD MSTORE MLOAD PUSH1 0x64 DUP7 ADD MSTORE MLOAD PUSH1 0x84 DUP6 ADD MSTORE MLOAD PUSH1 0xA4 DUP5 ADD MSTORE DUP2 DUP9 MLOAD AND PUSH1 0xC4 DUP5 ADD MSTORE MLOAD AND PUSH1 0xE4 DUP3 ADD MSTORE DUP5 DUP4 MLOAD AND PUSH2 0x104 SWAP1 DUP2 DUP4 ADD MSTORE DUP2 MSTORE PUSH2 0x1472 PUSH2 0x124 DUP3 PUSH2 0x450C JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x71E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x71E JUMPI PUSH2 0x2841 PUSH2 0x5D98 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH2 0x170 SSTORE PUSH1 0x40 MLOAD RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x71E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x71E JUMPI PUSH1 0x20 PUSH2 0x17B SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x71E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x71E JUMPI PUSH2 0x2885 PUSH2 0x5D98 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xFF NOT PUSH1 0xCA SLOAD AND OR PUSH1 0xCA SSTORE PUSH1 0x40 MLOAD RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x71E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x71E JUMPI PUSH1 0x20 PUSH2 0x28B2 PUSH2 0x5C48 JUMP JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x71E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x71E JUMPI PUSH2 0x161 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x71E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x71E JUMPI PUSH2 0x165 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x71E JUMPI PUSH2 0x1D4D PUSH2 0x2923 CALLDATASIZE PUSH1 0x4 PUSH2 0x4472 JUMP JUMPDEST SWAP1 SWAP3 SWAP4 SWAP2 PUSH1 0x40 MLOAD SWAP5 PUSH2 0x2936 PUSH1 0xC0 DUP8 PUSH2 0x450C JUMP JUMPDEST DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP1 DUP2 MSTORE PUSH1 0x40 DUP6 ADD SWAP4 DUP5 MSTORE CALLER PUSH1 0x60 DUP7 ADD DUP2 DUP2 MSTORE PUSH1 0x80 DUP8 ADD SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0xA0 DUP9 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP4 SWAP2 SWAP3 PUSH2 0x1CDD PUSH2 0x5161 JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x71E JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x71E JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x719 JUMPI PUSH2 0x990 PUSH1 0x20 SWAP2 CALLER PUSH1 0x4 CALLDATALOAD PUSH2 0x59E0 JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x71E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x71E JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0xCA SLOAD PUSH1 0x8 SHR AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x71E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x71E JUMPI PUSH2 0x29E6 PUSH2 0x5E26 JUMP JUMPDEST PUSH2 0x17F DUP1 SLOAD NUMBER LT PUSH2 0x2C77 JUMPI PUSH2 0x29FE PUSH2 0x17E SLOAD NUMBER PUSH2 0x4AEC JUMP JUMPDEST SWAP1 SSTORE PUSH32 0xD3C59BDA47E141A8EC5A33D241B7F71B86E30D359F83A9227D912858B60404FC DUP2 PUSH1 0x40 MLOAD LOG1 DUP1 PUSH2 0x169 SLOAD PUSH2 0x2A34 DUP2 PUSH2 0x4CF6 JUMP JUMPDEST SWAP1 DUP4 JUMPDEST DUP2 DUP2 LT PUSH2 0x2BAA JUMPI POP POP DUP2 PUSH2 0x2AB0 JUMPI JUMPDEST PUSH1 0x40 MLOAD SWAP2 PUSH1 0x40 DUP4 ADD SWAP1 DUP4 MSTORE PUSH1 0x20 SWAP1 PUSH1 0x40 DUP3 DUP6 ADD MSTORE DUP3 MLOAD DUP1 SWAP2 MSTORE DUP2 PUSH1 0x60 DUP6 ADD SWAP4 ADD SWAP2 DUP6 JUMPDEST DUP3 DUP2 LT PUSH2 0x2A9C JUMPI DUP7 PUSH32 0xAE5116A8119D08673A0F1DFA7546B95DA4BD54BB17FEDA7C61130AC7859152F6 DUP8 DUP8 SUB DUP9 LOG1 PUSH1 0x40 MLOAD RETURN JUMPDEST DUP4 MLOAD DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x2A69 JUMP JUMPDEST SWAP1 PUSH2 0x2AC8 PUSH8 0xDE0B6B3A7640000 SWAP2 PUSH2 0x16B SLOAD SWAP1 PUSH2 0x4C20 JUMP JUMPDEST DIV SWAP1 PUSH2 0x163 PUSH2 0x2AD8 DUP4 DUP3 SLOAD PUSH2 0x4A4E JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x178 SLOAD PUSH2 0x12F DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 SWAP1 PUSH1 0x2 EQ PUSH2 0x2B65 JUMPI DUP5 PUSH1 0x1 SWAP4 PUSH1 0x2 DUP5 SSTORE DUP2 PUSH2 0x2B0E JUMPI JUMPDEST POP POP POP SSTORE PUSH2 0x2A46 JUMP JUMPDEST PUSH2 0x24F SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH2 0x2B5D SWAP3 SWAP1 SWAP2 AND PUSH2 0x2B58 DUP3 PUSH1 0x64 DUP2 ADD JUMPDEST SUB PUSH1 0x1F NOT DUP2 ADD DUP5 MSTORE DUP4 PUSH2 0x450C JUMP JUMPDEST PUSH2 0x5005 JUMP JUMPDEST DUP6 DUP5 DUP2 PUSH2 0x2B05 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x2BB3 DUP2 PUSH2 0x4E02 JUMP JUMPDEST PUSH2 0x2BBD DUP2 DUP4 PUSH2 0x55E9 JUMP JUMPDEST DUP6 PUSH2 0x180 SWAP2 PUSH2 0x2BCC DUP5 DUP5 PUSH2 0x43E9 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR SWAP1 DUP3 DUP3 SGT PUSH2 0x2BE8 JUMPI JUMPDEST POP POP POP POP PUSH1 0x1 ADD PUSH2 0x2A37 JUMP JUMPDEST DUP5 PUSH2 0x2C2C DUP4 PUSH1 0x1 SWAP8 SWAP7 SWAP11 PUSH2 0x2C15 PUSH2 0x2C1B PUSH2 0x2C4B SWAP8 PUSH2 0x2C32 SWAP8 PUSH8 0xDE0B6B3A7640000 SWAP4 DUP5 SWAP2 PUSH2 0x16C SLOAD PUSH2 0x4C20 JUMP JUMPDEST DIV PUSH2 0x4C20 JUMP JUMPDEST DIV PUSH2 0x2C26 DUP6 DUP14 PUSH2 0x4AF9 JUMP JUMPDEST MSTORE PUSH2 0x4AEC JUMP JUMPDEST SWAP9 PUSH2 0x43E9 JUMP JUMPDEST DUP2 SWAP4 SWAP2 SLOAD SWAP1 PUSH1 0x3 SHL PUSH1 0x0 NOT DUP2 SHL SWAP3 DUP4 SWAP2 SHL AND SWAP2 NOT AND OR SWAP1 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x2C6E PUSH2 0x2C5A DUP3 DUP7 PUSH2 0x4AF9 JUMP JUMPDEST MLOAD DUP8 DUP5 DUP1 PUSH1 0xA0 SHL SUB PUSH2 0x179 SLOAD AND SWAP2 DUP5 PUSH2 0x5550 JUMP JUMPDEST SWAP1 DUP6 DUP8 DUP1 PUSH2 0x2BDC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x101B6859 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x71E JUMPI PUSH2 0x1D4D SWAP1 PUSH2 0x2C9E CALLDATASIZE PUSH1 0x4 PUSH2 0x4472 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP6 SWAP2 SWAP5 SWAP2 SWAP4 PUSH2 0x2CB1 PUSH1 0xC0 DUP9 PUSH2 0x450C JUMP JUMPDEST DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP3 DUP4 MSTORE PUSH1 0x40 DUP7 ADD SWAP5 DUP6 MSTORE CALLER PUSH1 0x60 DUP8 ADD SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x80 DUP9 ADD SWAP1 DUP2 MSTORE PUSH1 0xA0 DUP9 ADD SWAP4 DUP5 MSTORE SWAP4 PUSH2 0x1CDD PUSH2 0x5161 JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x71E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x71E JUMPI PUSH2 0x2D05 PUSH2 0x5D98 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH2 0x175 SSTORE PUSH1 0x40 MLOAD RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x71E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x71E JUMPI PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS SUB PUSH2 0x2D7C JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP2 MSTORE RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x555550535570677261646561626C653A206D757374206E6F742062652063616C PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6C6564207468726F7567682064656C656761746563616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 POP CALLVALUE PUSH2 0xA80 JUMPI PUSH2 0x2DF9 CALLDATASIZE PUSH1 0x4 PUSH2 0x43BB JUMP JUMPDEST SWAP2 SWAP6 SWAP1 SWAP4 PUSH2 0x2E0A PUSH1 0x40 MLOAD SWAP7 DUP8 PUSH2 0x450C JUMP JUMPDEST DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP3 DUP4 MSTORE PUSH1 0x40 DUP6 ADD SWAP6 DUP7 MSTORE PUSH1 0x60 DUP6 ADD SWAP4 DUP5 MSTORE CALLER PUSH1 0x80 DUP7 ADD DUP2 DUP2 MSTORE PUSH1 0xA0 DUP8 ADD SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0xC0 DUP9 ADD SWAP1 DUP2 MSTORE SWAP4 SWAP2 PUSH2 0x2E4C PUSH2 0x5161 JUMP JUMPDEST PUSH2 0x2E54 PUSH2 0x5E26 JUMP JUMPDEST DUP6 PUSH2 0x2EBB PUSH2 0x119F PUSH2 0x866 DUP4 PUSH2 0x1A04 DUP14 PUSH2 0x2E85 PUSH2 0x2E6E PUSH2 0x4ED8 JUMP JUMPDEST PUSH2 0x5FE PUSH2 0x2E7C DUP5 MLOAD DUP4 PUSH2 0x4AF9 JUMP JUMPDEST MLOAD DUP1 SWAP5 MLOAD PUSH2 0x55E9 JUMP JUMPDEST SWAP6 SWAP1 PUSH2 0xFF3 PUSH2 0x2EB1 PUSH2 0x2EA5 DUP6 PUSH2 0x866 PUSH8 0xDE0B6B3A7640000 DUP1 SWAP11 MLOAD PUSH2 0x4C20 JUMP JUMPDEST SWAP11 MLOAD PUSH2 0x166 SLOAD SWAP1 PUSH2 0x4C20 JUMP JUMPDEST SWAP8 PUSH2 0x163 SLOAD PUSH2 0x4A4E JUMP JUMPDEST SWAP10 MLOAD DUP1 DUP12 LT DUP1 ISZERO PUSH2 0x2F9E JUMPI JUMPDEST PUSH2 0x2F80 JUMPI POP PUSH2 0x2EEC SWAP1 PUSH2 0x2ED8 PUSH2 0x4F72 JUMP JUMPDEST POP DUP5 DUP5 MLOAD AND SWAP1 DUP6 DUP9 MLOAD AND PUSH2 0x171 SLOAD SWAP3 PUSH2 0x52A9 JUMP JUMPDEST SWAP8 SWAP2 SWAP10 SWAP1 SWAP9 MLOAD DUP1 DUP12 GT PUSH2 0x1C3E JUMPI POP SWAP3 PUSH2 0xC7C DUP6 DUP1 SWAP5 PUSH2 0x2F77 PUSH2 0xC8F SWAP11 SWAP9 SWAP6 DUP16 SWAP11 DUP10 PUSH2 0xCAC SWAP16 SWAP15 DUP1 SWAP14 DUP4 SWAP13 MLOAD PUSH32 0xB8B8E75E42A3102026137DA20C1D52F5E60A1B25D6E77AD232404575753E3FE0 DUP10 DUP13 MLOAD AND SWAP3 DUP11 DUP11 MLOAD AND SWAP5 PUSH2 0x2F67 DUP10 MLOAD SWAP2 DUP1 MLOAD SWAP1 PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x60 PUSH1 0x40 DUP4 ADD MLOAD SWAP3 ADD MLOAD SWAP3 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP7 DUP8 PUSH2 0x4F99 JUMP JUMPDEST SUB SWAP1 LOG4 MLOAD SWAP2 MLOAD DUP6 DUP9 MLOAD AND SWAP3 PUSH2 0x5713 JUMP JUMPDEST MLOAD AND DUP6 DUP14 PUSH2 0x5183 JUMP JUMPDEST PUSH1 0x44 SWAP1 DUP12 PUSH1 0x40 MLOAD SWAP2 PUSH4 0xF577BEF5 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST POP DUP11 ISZERO PUSH2 0x2EC7 JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x71E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x71E JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH2 0x177 SWAP1 DUP2 SLOAD DUP4 LT ISZERO PUSH2 0x71E JUMPI PUSH1 0x20 PUSH2 0x1061 DUP5 DUP5 PUSH2 0x43E9 JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x71E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x71E JUMPI PUSH2 0x2FEE PUSH2 0x5D98 JUMP JUMPDEST PUSH1 0xFF NOT PUSH1 0xCA SLOAD AND PUSH1 0xCA SSTORE PUSH1 0x40 MLOAD RETURN JUMPDEST DUP3 PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x71E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x4 CALLDATALOAD DUP2 DUP2 AND DUP2 SUB PUSH2 0x719 JUMPI DUP3 SWAP2 PUSH1 0x24 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x30EC JUMPI CALLDATASIZE PUSH1 0x23 DUP5 ADD SLT ISZERO PUSH2 0x30EC JUMPI DUP3 PUSH1 0x4 ADD CALLDATALOAD PUSH2 0x304C DUP2 PUSH2 0x4544 JUMP JUMPDEST SWAP3 PUSH2 0x305A PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x450C JUMP JUMPDEST DUP2 DUP5 MSTORE CALLDATASIZE PUSH1 0x24 DUP4 DUP8 ADD ADD GT PUSH2 0x30E8 JUMPI PUSH2 0x133E SWAP6 PUSH1 0x20 DUP4 PUSH2 0x30DB SWAP5 PUSH1 0x24 PUSH1 0x1 SWAP10 ADD DUP4 DUP10 ADD CALLDATACOPY DUP7 ADD ADD MSTORE DUP1 PUSH32 0x0 AND SWAP1 PUSH2 0x30B2 DUP3 ADDRESS EQ ISZERO PUSH2 0x458B JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD AND EQ PUSH2 0x45EC JUMP JUMPDEST PUSH2 0x30E3 PUSH2 0x5D98 JUMP JUMPDEST PUSH2 0x464D JUMP JUMPDEST DUP6 DUP1 REVERT JUMPDEST POP POP POP REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x71E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x71E JUMPI PUSH1 0x20 PUSH2 0x16D SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x71E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x71E JUMPI PUSH2 0x179 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x71E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x71E JUMPI PUSH1 0x20 PUSH2 0x17E SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x71E JUMPI PUSH2 0x8A6 SWAP1 PUSH2 0x316E CALLDATASIZE PUSH1 0x4 PUSH2 0x4472 JUMP JUMPDEST PUSH1 0x40 SWAP6 SWAP4 SWAP2 SWAP5 SWAP3 SWAP6 MLOAD SWAP2 PUSH2 0x3183 PUSH1 0xC0 DUP5 PUSH2 0x450C JUMP JUMPDEST DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP6 DUP7 MSTORE PUSH1 0x40 DUP3 ADD SWAP5 DUP6 MSTORE PUSH1 0x60 DUP3 ADD SWAP3 CALLER DUP5 MSTORE PUSH1 0x80 DUP4 ADD SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 AND DUP4 MSTORE PUSH1 0xA0 DUP5 ADD SWAP3 DUP3 DUP5 MSTORE PUSH2 0x801 PUSH2 0x5161 JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x71E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x71E JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH2 0x169 SWAP1 DUP2 SLOAD DUP4 LT ISZERO PUSH2 0x71E JUMPI PUSH1 0x40 PUSH2 0x31EB DUP5 DUP5 PUSH2 0x44F0 JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x71E JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x719 JUMPI PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND SWAP2 DUP3 SWAP1 SUB PUSH2 0x719 JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x3240 PUSH1 0xA0 DUP5 PUSH2 0x450C JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 PUSH1 0x24 CALLDATALOAD DUP4 MSTORE PUSH1 0x40 DUP5 ADD SWAP2 CALLER DUP4 MSTORE PUSH1 0x60 DUP6 ADD SWAP2 CALLER DUP4 MSTORE PUSH1 0x80 DUP7 ADD SWAP2 DUP3 MSTORE PUSH2 0xE82 PUSH2 0x5161 JUMP JUMPDEST SWAP1 POP CALLVALUE PUSH2 0xA80 JUMPI PUSH2 0x3280 CALLDATASIZE PUSH1 0x4 PUSH2 0x43BB JUMP JUMPDEST SWAP2 SWAP6 SWAP1 SWAP4 PUSH2 0x3291 PUSH1 0x40 MLOAD SWAP7 DUP8 PUSH2 0x450C JUMP JUMPDEST DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP3 DUP4 MSTORE PUSH1 0x40 DUP6 ADD SWAP6 DUP7 MSTORE PUSH1 0x60 DUP6 ADD SWAP4 DUP5 MSTORE CALLER PUSH1 0x80 DUP7 ADD SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0xA0 DUP8 ADD SWAP1 DUP2 MSTORE PUSH1 0xC0 DUP8 ADD DUP4 DUP2 MSTORE SWAP4 SWAP2 SWAP1 PUSH2 0x2E4C PUSH2 0x5161 JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x71E JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x719 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x44 CALLDATALOAD DUP2 DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x719 JUMPI PUSH2 0x641 SWAP1 PUSH1 0x40 MLOAD SWAP4 PUSH2 0x330F PUSH1 0xA0 DUP7 PUSH2 0x450C JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 PUSH1 0x24 CALLDATALOAD DUP6 MSTORE PUSH1 0x40 DUP7 ADD SWAP2 CALLER DUP4 MSTORE PUSH1 0x60 DUP8 ADD SWAP4 DUP5 MSTORE PUSH1 0x80 DUP8 ADD SWAP2 DUP2 DUP4 MSTORE PUSH2 0x5DC PUSH2 0x5161 JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x71E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x71E JUMPI PUSH1 0x20 PUSH2 0x170 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x71E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x71E JUMPI PUSH1 0x20 PUSH2 0x990 PUSH2 0x338B PUSH2 0x339B PUSH2 0x3395 PUSH2 0x3383 PUSH2 0x5C48 JUMP JUMPDEST SWAP4 SWAP1 SWAP4 PUSH2 0x4B0D JUMP JUMPDEST DUP2 DUP2 SWAP4 SWAP3 SWAP6 PUSH2 0x56B0 JUMP JUMPDEST SWAP3 PUSH2 0x526E JUMP JUMPDEST SWAP1 PUSH2 0x4C33 JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x71E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x71E JUMPI PUSH1 0xCA SLOAD PUSH1 0xFF DUP2 PUSH1 0x8 SHR AND ISZERO PUSH2 0x340C JUMPI PUSH1 0x10 DUP2 SWAP1 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x2533 JUMPI PUSH2 0xFF00 NOT AND PUSH1 0xCA SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH1 0x20 PUSH1 0x40 MLOAD CALLER DUP2 MSTORE LOG1 PUSH1 0x40 MLOAD RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x7C7FD079 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x71E JUMPI PUSH2 0x342F CALLDATASIZE PUSH1 0x4 PUSH2 0x44CA JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP4 PUSH2 0x343F PUSH1 0xA0 DUP7 PUSH2 0x450C JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 DUP4 MSTORE PUSH1 0x40 DUP5 ADD SWAP2 CALLER DUP4 MSTORE PUSH1 0x60 DUP6 ADD SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 AND DUP4 MSTORE DUP1 PUSH1 0x80 DUP8 ADD SWAP3 AND DUP3 MSTORE PUSH2 0xE82 PUSH2 0x5161 JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x71E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x71E JUMPI PUSH2 0x348C PUSH2 0x5D98 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH2 0x1B6 SSTORE PUSH1 0x40 MLOAD RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x71E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x71E JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND DUP3 SUB PUSH2 0x719 JUMPI PUSH2 0x133E SWAP2 PUSH2 0x34F7 DUP3 DUP6 SWAP4 PUSH32 0x0 AND SWAP1 PUSH2 0x30B2 DUP3 ADDRESS EQ ISZERO PUSH2 0x458B JUMP JUMPDEST PUSH2 0x34FF PUSH2 0x5D98 JUMP JUMPDEST PUSH2 0x3508 DUP3 PUSH2 0x4544 JUMP JUMPDEST SWAP1 PUSH2 0x3516 PUSH1 0x40 MLOAD SWAP3 DUP4 PUSH2 0x450C JUMP JUMPDEST DUP3 DUP3 MSTORE PUSH1 0x1F NOT PUSH2 0x3525 DUP5 PUSH2 0x4544 JUMP JUMPDEST ADD CALLDATASIZE PUSH1 0x20 DUP5 ADD CALLDATACOPY PUSH2 0x464D JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x71E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x71E JUMPI PUSH2 0x354A PUSH2 0x5E26 JUMP JUMPDEST PUSH2 0x17D DUP1 SLOAD PUSH1 0xFF DUP2 AND DUP1 PUSH2 0x3617 JUMPI JUMPDEST DUP1 PUSH2 0x35FD JUMPI JUMPDEST PUSH2 0x3569 JUMPI DUP3 PUSH1 0x40 MLOAD RETURN JUMPDEST PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x8B77276C97A5709F0D6DB52329848A254EB760CE8BE80D281799F633BDB69E83 DUP3 DUP3 LOG1 PUSH2 0x165 SLOAD DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 EXTCODESIZE ISZERO PUSH2 0xA80 JUMPI DUP3 PUSH1 0x4 DUP2 DUP5 DUP1 SWAP5 PUSH4 0x8456CB59 PUSH1 0xE0 SHL DUP4 MSTORE GAS CALL DUP1 ISZERO PUSH2 0x35F0 JUMPI PUSH2 0x35E0 JUMPI JUMPDEST POP POP PUSH2 0x35D9 PUSH2 0x4D28 JUMP JUMPDEST DUP2 DUP1 PUSH2 0xFDC JUMP JUMPDEST PUSH2 0x35E9 SWAP2 PUSH2 0x450C JUMP JUMPDEST DUP2 DUP2 PUSH2 0x35CF JUMP JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP PUSH2 0x360C PUSH2 0x21B5 PUSH2 0x1022 PUSH2 0x4ED8 JUMP JUMPDEST PUSH2 0x17C SLOAD LT ISZERO PUSH2 0x355F JUMP JUMPDEST POP PUSH1 0xFF DUP2 PUSH1 0x8 SHR AND ISZERO PUSH2 0x3559 JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x71E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x71E JUMPI PUSH1 0x20 PUSH2 0x171 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0xA80 JUMPI PUSH2 0x3656 CALLDATASIZE PUSH1 0x4 PUSH2 0x43BB JUMP JUMPDEST SWAP4 PUSH2 0x3667 PUSH1 0x40 SWAP5 SWAP3 SWAP5 MLOAD SWAP7 DUP8 PUSH2 0x450C JUMP JUMPDEST DUP6 MSTORE PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE CALLER PUSH1 0x80 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0xC0 DUP3 ADD MSTORE PUSH2 0x1109 PUSH2 0x5161 JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x71E JUMPI PUSH2 0x147D PUSH2 0x36AF CALLDATASIZE PUSH1 0x4 PUSH2 0x4498 JUMP JUMPDEST SWAP1 SWAP7 SWAP5 SWAP2 PUSH1 0x40 SWAP7 SWAP4 SWAP5 SWAP7 MLOAD SWAP3 PUSH2 0x36C7 PUSH2 0x100 DUP6 PUSH2 0x450C JUMP JUMPDEST DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP7 DUP8 MSTORE PUSH1 0x40 DUP4 ADD SWAP5 DUP6 MSTORE PUSH1 0x60 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x80 DUP4 ADD SWAP8 DUP9 MSTORE PUSH1 0xA0 DUP4 ADD SWAP8 CALLER DUP10 MSTORE PUSH1 0xC0 DUP5 ADD SWAP2 CALLER DUP4 MSTORE DUP11 DUP6 ADD SWAP7 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP10 DUP11 DUP1 SWAP7 AND DUP10 MSTORE PUSH2 0x27BD PUSH2 0x5161 JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x71E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x71E JUMPI PUSH1 0x20 PUSH2 0x175 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x71E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x71E JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0xA80 JUMPI PUSH2 0x375B PUSH2 0x5D98 JUMP JUMPDEST PUSH1 0xCA DUP1 SLOAD PUSH3 0x10000 PUSH1 0x1 PUSH1 0xB0 SHL SUB NOT AND PUSH1 0x10 SWAP3 SWAP1 SWAP3 SHL PUSH3 0x10000 PUSH1 0x1 PUSH1 0xB0 SHL SUB AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x40 MLOAD RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x71E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x71E JUMPI PUSH2 0x37A1 PUSH2 0x5D98 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH2 0x17C SSTORE PUSH1 0x40 MLOAD RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x71E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x71E JUMPI PUSH1 0x20 PUSH2 0x172 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x71E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x71E JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0xA80 JUMPI PUSH2 0x37FB PUSH2 0x5D98 JUMP JUMPDEST PUSH2 0x179 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x40 MLOAD RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x71E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x71E JUMPI PUSH1 0x20 PUSH1 0xFF PUSH2 0x17D SLOAD PUSH1 0x8 SHR AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x71E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x71E JUMPI PUSH2 0x3855 PUSH2 0x5D98 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH2 0x174 SSTORE PUSH1 0x40 MLOAD RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x71E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x71E JUMPI PUSH1 0x4 CALLDATALOAD DUP1 ISZERO ISZERO DUP1 SWAP2 SUB PUSH2 0xA80 JUMPI PUSH2 0x3888 PUSH2 0x5D98 JUMP JUMPDEST PUSH2 0x17D SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x71E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x71E JUMPI PUSH1 0x20 PUSH2 0x990 PUSH2 0xB2B PUSH2 0x1022 PUSH2 0x4ED8 JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x71E JUMPI PUSH2 0x147D PUSH2 0x38D2 CALLDATASIZE PUSH1 0x4 PUSH2 0x4498 JUMP JUMPDEST SWAP1 SWAP7 SWAP5 SWAP2 PUSH1 0x40 SWAP7 SWAP4 SWAP7 MLOAD SWAP3 PUSH2 0x38E9 PUSH2 0x100 DUP6 PUSH2 0x450C JUMP JUMPDEST DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP5 DUP6 MSTORE PUSH1 0x40 DUP4 ADD SWAP7 DUP8 MSTORE PUSH1 0x60 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x80 DUP4 ADD SWAP8 DUP9 MSTORE PUSH1 0xA0 DUP4 ADD SWAP8 CALLER DUP10 MSTORE PUSH1 0xC0 DUP5 ADD SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP9 DUP10 DUP1 SWAP6 AND DUP5 MSTORE DUP12 DUP7 ADD SWAP8 DUP10 DUP10 MSTORE PUSH2 0x27BD PUSH2 0x5161 JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x71E JUMPI PUSH2 0x3942 CALLDATASIZE PUSH1 0x4 PUSH2 0x4472 JUMP JUMPDEST SWAP3 PUSH1 0x40 SWAP3 SWAP2 SWAP3 MLOAD SWAP1 PUSH2 0x3955 PUSH1 0xC0 DUP4 PUSH2 0x450C JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 DUP3 MSTORE PUSH1 0x40 DUP2 ADD SWAP3 DUP4 MSTORE CALLER PUSH1 0x60 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND PUSH1 0x80 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0xA0 DUP4 ADD DUP8 DUP2 MSTORE SWAP1 SWAP7 PUSH2 0x2359 PUSH2 0x5161 JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x71E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x71E JUMPI PUSH1 0x20 PUSH2 0x17F SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x71E JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x71E JUMPI PUSH1 0x40 MLOAD PUSH2 0x39CF PUSH1 0xC0 DUP3 PUSH2 0x450C JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD DUP2 MSTORE PUSH2 0x8A6 PUSH1 0x20 DUP3 ADD SWAP3 PUSH1 0x24 CALLDATALOAD DUP5 MSTORE PUSH1 0x40 DUP4 ADD SWAP3 PUSH1 0x44 CALLDATALOAD DUP5 MSTORE PUSH1 0x60 DUP2 ADD CALLER DUP2 MSTORE PUSH1 0x80 DUP3 ADD SWAP3 CALLER DUP5 MSTORE PUSH1 0xA0 DUP4 ADD SWAP2 DUP2 DUP4 MSTORE PUSH2 0x3A0A PUSH2 0x5161 JUMP JUMPDEST PUSH2 0x3A12 PUSH2 0x5E26 JUMP JUMPDEST PUSH2 0x3A1A PUSH2 0x5D04 JUMP JUMPDEST PUSH2 0x3A68 PUSH2 0x3A48 PUSH2 0x3A55 DUP11 PUSH2 0x3A2C PUSH2 0x5C48 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x3A39 DUP11 MLOAD DUP5 PUSH2 0x4AF9 JUMP JUMPDEST MLOAD SWAP5 DUP6 SWAP4 PUSH2 0x840 DUP6 DUP14 MLOAD PUSH2 0x55E9 JUMP JUMPDEST SWAP4 SWAP1 SWAP3 DUP12 MLOAD SWAP1 MLOAD SWAP1 PUSH2 0x5640 JUMP JUMPDEST PUSH2 0x866 PUSH8 0xDE0B6B3A7640000 DUP12 MLOAD PUSH2 0x4C20 JUMP JUMPDEST SWAP5 PUSH2 0x3A71 PUSH2 0x4F72 JUMP JUMPDEST POP PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 PUSH2 0x89B DUP4 DUP3 MLOAD AND DUP9 DUP6 DUP9 MLOAD AND PUSH2 0x88E DUP11 MLOAD PUSH2 0x176 PUSH2 0x43E9 JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x71E JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x71E JUMPI PUSH1 0x40 MLOAD SWAP1 PUSH2 0x3AB4 PUSH1 0xC0 DUP4 PUSH2 0x450C JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD DUP3 MSTORE PUSH2 0x1D4D PUSH1 0x20 DUP4 ADD PUSH1 0x24 CALLDATALOAD DUP2 MSTORE PUSH1 0x40 DUP5 ADD SWAP3 PUSH1 0x44 CALLDATALOAD DUP5 MSTORE PUSH1 0x60 DUP6 ADD SWAP2 CALLER DUP4 MSTORE PUSH1 0x80 DUP7 ADD SWAP3 CALLER DUP5 MSTORE PUSH1 0xA0 DUP8 ADD SWAP3 DUP4 MSTORE PUSH2 0x3AEE PUSH2 0x5161 JUMP JUMPDEST PUSH2 0x3AF6 PUSH2 0x5E26 JUMP JUMPDEST PUSH2 0x3B31 PUSH2 0x3B01 PUSH2 0x4ED8 JUMP JUMPDEST PUSH2 0x3B1C PUSH2 0x3B0F DUP11 MLOAD DUP4 PUSH2 0x4AF9 JUMP JUMPDEST MLOAD SWAP2 PUSH2 0x5FE DUP4 DUP13 MLOAD PUSH2 0x55E9 JUMP JUMPDEST POP POP PUSH2 0x866 PUSH8 0xDE0B6B3A7640000 DUP6 MLOAD PUSH2 0x4C20 JUMP JUMPDEST SWAP2 PUSH2 0x3B3A PUSH2 0x4F72 JUMP JUMPDEST POP PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP3 PUSH2 0x1D42 DUP5 DUP5 MLOAD AND DUP3 DUP7 DUP9 MLOAD AND PUSH2 0x88E DUP14 MLOAD PUSH2 0x177 PUSH2 0x43E9 JUMP JUMPDEST SWAP1 POP CALLVALUE PUSH2 0xA80 JUMPI PUSH2 0x3BEE SWAP2 PUSH2 0x3B72 CALLDATASIZE PUSH1 0x4 PUSH2 0x4450 JUMP JUMPDEST SWAP4 SWAP2 SWAP3 PUSH2 0x3B85 PUSH1 0x40 SWAP7 SWAP3 SWAP7 MLOAD SWAP3 DUP4 PUSH2 0x450C JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 DUP4 MSTORE PUSH1 0x40 DUP2 ADD SWAP5 DUP6 MSTORE PUSH1 0x60 DUP2 ADD SWAP4 DUP5 MSTORE PUSH1 0x80 DUP2 ADD SWAP3 CALLER DUP5 MSTORE PUSH1 0xA0 DUP3 ADD SWAP1 CALLER DUP3 MSTORE PUSH1 0xC0 DUP4 ADD DUP5 DUP2 MSTORE PUSH2 0x3BBB PUSH2 0x5161 JUMP JUMPDEST PUSH2 0x3BC3 PUSH2 0x5E26 JUMP JUMPDEST PUSH2 0x3C0F PUSH2 0x3BCE PUSH2 0x4ED8 JUMP JUMPDEST PUSH2 0x119F PUSH2 0x3BF9 PUSH2 0x3BDF DUP9 MLOAD DUP5 PUSH2 0x4AF9 JUMP JUMPDEST MLOAD SWAP13 DUP14 SWAP4 PUSH2 0x1F96 DUP6 DUP12 MLOAD PUSH2 0x55E9 JUMP JUMPDEST SWAP3 DUP2 SWAP15 SWAP2 DUP9 MLOAD PUSH2 0x4C20 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 SWAP4 DUP5 SWAP2 PUSH2 0x166 SLOAD SWAP1 PUSH2 0x4C33 JUMP JUMPDEST DIV SWAP11 MLOAD DUP1 DUP13 GT PUSH2 0x3D5A JUMPI POP SWAP2 PUSH2 0x2002 DUP12 PUSH2 0x1FFC PUSH2 0x3C76 SWAP12 SWAP13 SWAP14 SWAP15 SWAP5 PUSH2 0x866 DUP6 PUSH2 0x3C3D PUSH2 0x3C43 SWAP10 DUP13 MLOAD SWAP10 PUSH2 0x526E JUMP JUMPDEST SWAP5 PUSH2 0x4C20 JUMP JUMPDEST SWAP5 PUSH2 0x3C4C PUSH2 0x4F72 JUMP JUMPDEST POP PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 PUSH2 0x3C6B DUP3 DUP11 MLOAD AND DUP9 DUP5 DUP7 MLOAD AND PUSH2 0x173 SLOAD SWAP3 PUSH2 0x52A9 JUMP JUMPDEST SWAP8 SWAP2 DUP10 SWAP11 SWAP2 SWAP11 PUSH2 0x4A4E JUMP JUMPDEST SWAP11 MLOAD DUP1 DUP13 LT PUSH2 0x3D3C JUMPI POP DUP11 ISZERO PUSH2 0x6E9 JUMPI DUP10 PUSH2 0xF81 DUP14 DUP6 SWAP5 DUP5 DUP16 SWAP10 PUSH2 0xCAC SWAP16 SWAP14 PUSH2 0x3D30 SWAP2 PUSH2 0xC8F SWAP16 DUP16 DUP16 SWAP1 SWAP2 DUP16 SWAP3 DUP10 PUSH32 0x754F66F66F0AFCD87E3EDD11C0796FEF32599EFE490000FDB0F014E3AD9560FA SWAP2 DUP16 SWAP15 DUP16 DUP1 PUSH2 0x3D21 SWAP3 MLOAD SWAP7 MLOAD AND SWAP7 MLOAD AND SWAP7 DUP9 MLOAD SWAP3 DUP1 MLOAD PUSH1 0x20 DUP3 ADD MLOAD SWAP1 PUSH1 0x60 PUSH1 0x40 DUP5 ADD MLOAD SWAP4 ADD MLOAD SWAP4 PUSH1 0x40 MLOAD SWAP8 DUP9 SWAP8 DUP9 SWAP4 SWAP1 SWAP8 SWAP7 SWAP6 SWAP3 PUSH1 0xC0 SWAP6 SWAP3 PUSH1 0xE0 DUP7 ADD SWAP10 DUP7 MSTORE PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP1 LOG4 MLOAD SWAP1 DUP9 DUP9 MLOAD AND SWAP2 PUSH2 0x57A7 JUMP JUMPDEST MLOAD SWAP2 DUP6 DUP6 MLOAD AND SWAP3 PUSH2 0x5713 JUMP JUMPDEST PUSH1 0x44 SWAP1 DUP13 PUSH1 0x40 MLOAD SWAP2 PUSH4 0x54CDE313 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x44 SWAP1 DUP13 PUSH1 0x40 MLOAD SWAP2 PUSH4 0x7A031DA3 PUSH1 0xE1 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 POP CALLVALUE PUSH2 0xA80 JUMPI PUSH2 0x3D8A CALLDATASIZE PUSH1 0x4 PUSH2 0x4450 JUMP JUMPDEST SWAP3 PUSH2 0x3D9B PUSH1 0x40 SWAP7 SWAP3 SWAP7 MLOAD SWAP6 DUP7 PUSH2 0x450C JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP2 DUP3 MSTORE PUSH1 0x40 DUP5 ADD SWAP5 DUP6 MSTORE PUSH1 0x60 DUP5 ADD SWAP3 DUP4 MSTORE PUSH1 0x80 DUP5 ADD SWAP1 CALLER DUP3 MSTORE DUP3 PUSH1 0xA0 DUP7 ADD SWAP3 CALLER DUP5 MSTORE PUSH1 0xC0 DUP8 ADD SWAP4 DUP4 DUP6 MSTORE PUSH2 0x3DD3 PUSH2 0x5161 JUMP JUMPDEST PUSH2 0x3DDB PUSH2 0x5E26 JUMP JUMPDEST PUSH2 0x3E20 PUSH2 0x119F PUSH2 0x866 DUP6 PUSH2 0x1A04 DUP13 PUSH2 0x3DF4 PUSH2 0x2E6E PUSH2 0x4ED8 JUMP JUMPDEST SWAP6 SWAP1 PUSH2 0xFF3 PUSH2 0x2EB1 PUSH2 0x3E14 DUP6 PUSH2 0x866 PUSH8 0xDE0B6B3A7640000 DUP1 SWAP11 MLOAD PUSH2 0x4C20 JUMP JUMPDEST SWAP13 MLOAD PUSH2 0x166 SLOAD SWAP1 PUSH2 0x4C20 JUMP JUMPDEST SWAP9 MLOAD DUP1 DUP11 LT DUP1 ISZERO PUSH2 0x3E76 JUMPI JUMPDEST PUSH2 0x3E58 JUMPI POP PUSH2 0x3E39 PUSH2 0x4F72 JUMP JUMPDEST POP PUSH2 0x2EEC PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 DUP5 MLOAD AND SWAP1 DUP6 DUP9 MLOAD AND PUSH2 0x171 SLOAD SWAP3 PUSH2 0x52A9 JUMP JUMPDEST PUSH1 0x44 SWAP1 DUP11 PUSH1 0x40 MLOAD SWAP2 PUSH4 0xF577BEF5 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST POP DUP10 ISZERO PUSH2 0x3E2C JUMP JUMPDEST SWAP1 POP CALLVALUE PUSH2 0xA80 JUMPI PUSH2 0x3E90 CALLDATASIZE PUSH1 0x4 PUSH2 0x4417 JUMP JUMPDEST SWAP4 SWAP1 SWAP3 SWAP7 SWAP5 PUSH2 0x3EA2 PUSH1 0x40 MLOAD SWAP8 DUP9 PUSH2 0x450C JUMP JUMPDEST DUP7 MSTORE PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x40 DUP6 ADD SWAP6 DUP7 MSTORE PUSH1 0x60 DUP6 ADD MSTORE CALLER PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0xA0 DUP6 ADD MSTORE AND PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x1F6B PUSH2 0x5161 JUMP JUMPDEST SWAP1 POP CALLVALUE PUSH2 0xA80 JUMPI PUSH2 0x3EEB CALLDATASIZE PUSH1 0x4 PUSH2 0x4417 JUMP JUMPDEST SWAP3 SWAP7 SWAP2 SWAP5 PUSH2 0x3EFC PUSH1 0x40 MLOAD SWAP8 DUP9 PUSH2 0x450C JUMP JUMPDEST DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP4 DUP5 MSTORE PUSH1 0x40 DUP7 ADD SWAP7 DUP8 MSTORE PUSH1 0x60 DUP7 ADD SWAP5 DUP6 MSTORE PUSH1 0x80 DUP7 ADD CALLER DUP2 MSTORE PUSH1 0xA0 DUP8 ADD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP4 AND DUP2 MSTORE DUP3 PUSH1 0xC0 DUP10 ADD SWAP6 AND DUP6 MSTORE PUSH2 0x2E4C PUSH2 0x5161 JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x71E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x71E JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0xA80 JUMPI PUSH2 0x3F6A PUSH2 0x5D98 JUMP JUMPDEST PUSH2 0x162 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x40 MLOAD RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x71E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x71E JUMPI PUSH2 0x3F9D PUSH2 0x5D98 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH2 0x171 SSTORE PUSH1 0x40 MLOAD RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x71E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x71E JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0xA80 JUMPI PUSH2 0x3FD8 PUSH2 0x5D98 JUMP JUMPDEST PUSH2 0x178 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x40 MLOAD RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x71E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x71E JUMPI PUSH1 0x20 PUSH2 0x1B5 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x71E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x71E JUMPI PUSH1 0x97 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x71E JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x71E JUMPI PUSH1 0x40 MLOAD SWAP1 PUSH2 0x405A PUSH1 0xA0 DUP4 PUSH2 0x450C JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD DUP3 MSTORE PUSH2 0x641 PUSH1 0x20 DUP4 ADD SWAP2 PUSH1 0x24 CALLDATALOAD DUP4 MSTORE PUSH1 0x40 DUP5 ADD CALLER DUP2 MSTORE PUSH1 0x60 DUP6 ADD SWAP2 CALLER DUP4 MSTORE PUSH1 0x80 DUP7 ADD SWAP1 DUP1 DUP3 MSTORE PUSH2 0x408B PUSH2 0x5161 JUMP JUMPDEST PUSH2 0x4093 PUSH2 0x5E26 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 PUSH2 0x40B6 PUSH2 0x610 PUSH2 0x40AD PUSH2 0x5FE PUSH2 0x4ED8 JUMP JUMPDEST DUP12 MLOAD SWAP3 SWAP2 PUSH2 0x526E JUMP JUMPDEST DIV PUSH2 0x40BF PUSH2 0x4F72 JUMP JUMPDEST POP PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 PUSH2 0x636 DUP3 DUP7 MLOAD AND DUP3 DUP5 DUP8 MLOAD AND PUSH2 0x16E SLOAD SWAP3 PUSH2 0x52A9 JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x71E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x71E JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH2 0x167 SWAP1 DUP2 SLOAD DUP4 LT ISZERO PUSH2 0x71E JUMPI PUSH1 0x20 PUSH2 0x410D DUP5 DUP5 PUSH2 0x43E9 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x71E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x71E JUMPI PUSH2 0x4140 PUSH2 0x5D98 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH2 0x16C SSTORE PUSH1 0x40 MLOAD RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x71E JUMPI PUSH2 0x416C PUSH2 0x4160 CALLDATASIZE PUSH1 0x4 PUSH2 0x43BB JUMP JUMPDEST SWAP5 SWAP1 SWAP4 SWAP2 SWAP7 PUSH1 0x80 PUSH2 0x450C JUMP JUMPDEST PUSH1 0x80 MSTORE PUSH1 0xA0 MSTORE PUSH1 0xC0 SWAP4 DUP5 MSTORE PUSH1 0xE0 MSTORE CALLER PUSH2 0x100 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x120 MSTORE PUSH2 0x140 DUP2 SWAP1 MSTORE PUSH2 0x419A PUSH2 0x5161 JUMP JUMPDEST PUSH2 0x41A2 PUSH2 0x5E26 JUMP JUMPDEST PUSH2 0x41AA PUSH2 0x5D04 JUMP JUMPDEST PUSH2 0x41B2 PUSH2 0x5C48 JUMP JUMPDEST SWAP3 PUSH2 0x4204 PUSH2 0x41D9 PUSH2 0x41C5 PUSH1 0x80 MLOAD DUP8 PUSH2 0x4AF9 JUMP JUMPDEST MLOAD SWAP6 PUSH2 0x41D3 DUP8 PUSH1 0x80 MLOAD PUSH2 0x55E9 JUMP JUMPDEST DUP5 PUSH2 0x522B JUMP JUMPDEST SWAP1 PUSH2 0x41EB DUP3 DUP3 DUP8 PUSH1 0x20 PUSH1 0x80 ADD MLOAD PUSH2 0x5AC5 JUMP JUMPDEST PUSH1 0xA0 MLOAD PUSH8 0xDE0B6B3A7640000 SWAP4 DUP5 SWAP2 PUSH2 0x610 DUP6 DUP6 PUSH2 0x526E JUMP JUMPDEST DIV SWAP5 DUP6 ISZERO PUSH2 0x6E9 JUMPI PUSH2 0x423C SWAP4 PUSH2 0x4231 PUSH2 0x11A4 DUP11 PUSH2 0x119F PUSH1 0x20 PUSH1 0x80 ADD MLOAD PUSH2 0x610 DUP9 PUSH2 0xFF3 DUP12 PUSH2 0x163 SLOAD PUSH2 0x4A4E JUMP JUMPDEST DIV SWAP8 DUP9 PUSH1 0x80 MLOAD PUSH2 0x5640 JUMP JUMPDEST MLOAD DUP1 DUP5 LT PUSH2 0x4389 JUMPI POP PUSH2 0x4272 SWAP1 PUSH2 0x4251 PUSH2 0x4F72 JUMP JUMPDEST POP PUSH2 0x100 MLOAD PUSH2 0x140 MLOAD PUSH2 0x172 SLOAD SWAP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 AND PUSH2 0x52A9 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 PUSH1 0x60 PUSH1 0x80 ADD MLOAD DUP1 DUP6 GT PUSH2 0x436A JUMPI POP PUSH2 0xCAC SWAP3 SWAP2 PUSH2 0xC8F SWAP2 PUSH1 0x80 MLOAD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x80 DUP1 ADD MLOAD AND PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0xA0 PUSH1 0x80 ADD MLOAD AND SWAP2 PUSH32 0xF4287B96E269F789F166DB491B07456566F468352771E466CE088E98D6007A0C DUP11 PUSH1 0x20 PUSH1 0x80 ADD MLOAD PUSH2 0x42F5 DUP9 MLOAD PUSH1 0x20 DUP11 ADD MLOAD PUSH1 0x40 DUP12 ADD MLOAD SWAP1 PUSH1 0x60 DUP13 ADD MLOAD SWAP3 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP7 DUP8 PUSH2 0x4F99 JUMP JUMPDEST SUB SWAP1 LOG4 PUSH1 0xA0 MLOAD PUSH2 0x100 MLOAD PUSH2 0x4316 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP4 SWAP1 PUSH2 0x57A7 JUMP JUMPDEST PUSH2 0x4332 PUSH1 0x80 MLOAD DUP3 DUP10 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0xA0 PUSH1 0x80 ADD MLOAD AND SWAP3 PUSH2 0x5550 JUMP JUMPDEST PUSH2 0x24F SLOAD PUSH2 0x434E SWAP1 DUP8 SWAP1 ADDRESS SWAP1 CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x4FC1 JUMP JUMPDEST PUSH2 0x100 MLOAD PUSH2 0x140 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP3 SWAP2 AND DUP1 PUSH2 0x5812 JUMP JUMPDEST PUSH1 0x44 SWAP1 DUP4 MLOAD PUSH1 0x40 MLOAD SWAP2 PUSH4 0xB63F1A7 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x44 SWAP1 DUP5 PUSH1 0x40 MLOAD SWAP2 PUSH4 0x272E3F59 PUSH1 0xE2 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x719 JUMPI JUMP JUMPDEST SWAP1 DUP2 PUSH1 0xA0 SWAP2 SUB SLT PUSH2 0x719 JUMPI DUP1 CALLDATALOAD SWAP2 PUSH1 0x20 DUP3 ADD CALLDATALOAD SWAP2 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP2 PUSH2 0x43E6 PUSH1 0x80 PUSH1 0x60 DUP5 ADD CALLDATALOAD SWAP4 ADD PUSH2 0x43A7 JUMP JUMPDEST SWAP1 JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x4401 JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 PUSH1 0xC0 SWAP2 SUB SLT PUSH2 0x719 JUMPI DUP2 CALLDATALOAD SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP2 PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP2 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP2 PUSH2 0x43E6 PUSH1 0xA0 PUSH2 0x4449 PUSH1 0x80 DUP6 ADD PUSH2 0x43A7 JUMP JUMPDEST SWAP4 ADD PUSH2 0x43A7 JUMP JUMPDEST SWAP2 SWAP1 DUP3 PUSH1 0x80 SWAP2 SUB SLT PUSH2 0x719 JUMPI DUP2 CALLDATALOAD SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP2 PUSH1 0x60 PUSH1 0x40 DUP4 ADD CALLDATALOAD SWAP3 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP3 PUSH1 0x80 SWAP2 SUB SLT PUSH2 0x719 JUMPI DUP2 CALLDATALOAD SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP2 PUSH2 0x43E6 PUSH1 0x60 PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP4 ADD PUSH2 0x43A7 JUMP JUMPDEST SWAP2 SWAP1 DUP3 PUSH1 0xC0 SWAP2 SUB SLT PUSH2 0x719 JUMPI DUP2 CALLDATALOAD SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP2 PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP2 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP2 PUSH2 0x43E6 PUSH1 0xA0 PUSH1 0x80 DUP5 ADD CALLDATALOAD SWAP4 ADD PUSH2 0x43A7 JUMP JUMPDEST SWAP2 SWAP1 DUP3 PUSH1 0x80 SWAP2 SUB SLT PUSH2 0x719 JUMPI DUP2 CALLDATALOAD SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP2 PUSH2 0x43E6 PUSH1 0x60 PUSH2 0x4449 PUSH1 0x40 DUP6 ADD PUSH2 0x43A7 JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x4401 JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 SHL ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x452E JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x452E JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0xA0 SWAP2 SUB SLT PUSH2 0x719 JUMPI DUP1 CALLDATALOAD SWAP2 PUSH1 0x20 DUP3 ADD CALLDATALOAD SWAP2 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP2 PUSH2 0x43E6 PUSH1 0x80 PUSH2 0x4449 PUSH1 0x60 DUP6 ADD PUSH2 0x43A7 JUMP JUMPDEST ISZERO PUSH2 0x4592 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x19195B1959D85D1958D85B1B PUSH1 0xA2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x45F3 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x6163746976652070726F7879 PUSH1 0xA0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0xFF PUSH32 0x4910FDFA16FED3260ED0E7147F7CC6DA11A60208B5B9406D12A635614FFD9143 SLOAD AND PUSH1 0x0 EQ PUSH2 0x4687 JUMPI POP PUSH2 0x4685 SWAP2 POP PUSH2 0x48A0 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x52D1902D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x20 SWAP4 SWAP2 SWAP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP2 DUP6 DUP2 PUSH1 0x4 DUP2 DUP7 GAS STATICCALL PUSH1 0x0 SWAP2 DUP2 PUSH2 0x4871 JUMPI JUMPDEST POP PUSH2 0x4717 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A206E657720696D706C656D656E74617469 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x6F6E206973206E6F742055555053 PUSH1 0x90 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP4 SWAP5 SWAP3 SWAP4 PUSH32 0xC9F76B5EC45E5CDEF99837D7B6D2467235C1DF8933C8CA56DF5C35AFA2C7D444 ADD PUSH2 0x481A JUMPI PUSH2 0x474A DUP5 PUSH2 0x48A0 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x0 DUP5 LOG2 DUP5 MLOAD ISZERO SWAP1 DUP2 ISZERO SWAP2 PUSH2 0x4812 JUMPI JUMPDEST POP PUSH2 0x478B JUMPI JUMPDEST POP POP POP POP JUMP JUMPDEST DUP3 EXTCODESIZE ISZERO PUSH2 0x47C3 JUMPI POP DUP3 PUSH1 0x0 SWAP3 DUP4 SWAP3 PUSH2 0x47B9 SWAP6 MLOAD SWAP3 ADD SWAP1 GAS DELEGATECALL PUSH2 0x47AB PUSH2 0x4942 JUMP JUMPDEST PUSH2 0x47B3 PUSH2 0x4972 JUMP JUMPDEST SWAP2 PUSH2 0x49C6 JUMP JUMPDEST POP CODESIZE DUP1 DUP1 DUP1 PUSH2 0x4785 JUMP JUMPDEST PUSH1 0x84 SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2064656C65676174652063616C6C20746F206E6F6E2D636F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1B9D1C9858DD PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 POP CODESIZE PUSH2 0x477F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A20756E737570706F727465642070726F78 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x1A58589B1955555251 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 SWAP2 DUP8 DUP3 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x4899 JUMPI JUMPDEST PUSH2 0x4888 DUP2 DUP4 PUSH2 0x450C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x71E JUMPI POP MLOAD SWAP1 CODESIZE PUSH2 0x46B6 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x487E JUMP JUMPDEST DUP1 EXTCODESIZE ISZERO PUSH2 0x48E7 JUMPI PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x1BDD08184818DBDB9D1C9858DD PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x496D JUMPI RETURNDATASIZE SWAP1 PUSH2 0x4953 DUP3 PUSH2 0x4544 JUMP JUMPDEST SWAP2 PUSH2 0x4961 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x450C JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST PUSH2 0x497C PUSH1 0x27 PUSH2 0x4544 JUMP JUMPDEST SWAP1 PUSH2 0x498A PUSH1 0x40 MLOAD SWAP3 DUP4 PUSH2 0x450C JUMP JUMPDEST PUSH1 0x27 DUP3 MSTORE PUSH7 0x819985A5B1959 PUSH1 0xCA SHL PUSH1 0x40 DUP4 PUSH32 0x416464726573733A206C6F772D6C6576656C2064656C65676174652063616C6C PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x60 SWAP2 ISZERO PUSH2 0x49D5 JUMPI POP POP SWAP1 JUMP JUMPDEST PUSH2 0x4685 SWAP2 SWAP4 SWAP3 JUMPDEST DUP1 MLOAD SWAP1 SWAP3 POP ISZERO PUSH2 0x49EF JUMPI POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE DUP2 PUSH1 0x20 DUP1 PUSH1 0x4 DUP4 ADD MSTORE DUP3 MLOAD SWAP1 DUP2 PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x0 SWAP4 JUMPDEST DUP3 DUP6 LT PUSH2 0x4A35 JUMPI POP POP PUSH1 0x44 SWAP3 POP PUSH1 0x0 DUP4 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SUB ADD SWAP1 REVERT JUMPDEST DUP5 DUP2 ADD DUP3 ADD MLOAD DUP7 DUP7 ADD PUSH1 0x44 ADD MSTORE SWAP4 DUP2 ADD SWAP4 DUP6 SWAP4 POP PUSH2 0x4A12 JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x4A5B JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x24F SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP2 PUSH1 0x20 SWAP2 DUP4 SWAP2 PUSH1 0x24 SWAP2 DUP4 SWAP2 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x4AE0 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x4AB2 JUMPI POP SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 RETURNDATASIZE DUP3 GT PUSH2 0x4AD8 JUMPI JUMPDEST DUP2 PUSH2 0x4ACB PUSH1 0x20 SWAP4 DUP4 PUSH2 0x450C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x71E JUMPI POP MLOAD SWAP1 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x4ABE JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x4A5B JUMPI JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x4401 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 PUSH1 0x0 SWAP1 PUSH2 0x169 DUP1 SLOAD SWAP1 PUSH1 0x0 SWAP3 JUMPDEST DUP3 DUP5 LT PUSH2 0x4B44 JUMPI POP POP POP POP PUSH2 0x4B40 PUSH8 0xDE0B6B3A7640000 SWAP2 PUSH2 0x16B SLOAD SWAP1 PUSH2 0x4C20 JUMP JUMPDEST DIV SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP6 PUSH2 0x4B93 DUP6 PUSH2 0x4B8D PUSH1 0x1 SWAP4 PUSH2 0xB83 PUSH2 0x4B60 DUP5 DUP9 PUSH2 0x4AF9 JUMP JUMPDEST MLOAD PUSH2 0x866 PUSH8 0xDE0B6B3A7640000 PUSH2 0x119F DUP12 PUSH2 0x4B86 PUSH2 0x4B7E DUP7 DUP12 PUSH2 0x4BB9 JUMP JUMPDEST SWAP11 SWAP1 SWAP3 PUSH2 0x44F0 JUMP JUMPDEST POP SLOAD PUSH2 0x4AEC JUMP JUMPDEST SWAP9 PUSH2 0x4AEC JUMP JUMPDEST SWAP5 ADD SWAP3 SWAP2 SWAP1 PUSH2 0x4B1E JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH1 0x0 DUP4 DUP3 ADD SWAP4 DUP5 SLT SWAP2 SLT SWAP1 DUP1 ISZERO DUP3 AND SWAP2 ISZERO AND OR PUSH2 0x4A5B JUMPI JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x4BE7 DUP2 PUSH1 0x0 SWAP6 PUSH2 0x4BDD PUSH2 0x4BD4 DUP3 PUSH2 0x180 PUSH2 0x43E9 JUMP JUMPDEST SWAP4 SWAP1 SLOAD SWAP3 PUSH2 0x4C53 JUMP JUMPDEST SWAP2 PUSH1 0x3 SHL SHR PUSH2 0x4B9D JUMP JUMPDEST PUSH1 0x0 DUP2 SGT PUSH2 0x4BF6 JUMPI JUMPDEST POP POP SWAP2 SWAP1 JUMP JUMPDEST PUSH2 0x4C18 SWAP2 SWAP5 POP PUSH2 0x2C15 SWAP3 POP DUP1 SWAP5 PUSH8 0xDE0B6B3A7640000 SWAP4 DUP5 SWAP2 PUSH2 0x16C SLOAD PUSH2 0x4C20 JUMP JUMPDEST DIV CODESIZE DUP1 PUSH2 0x4BF0 JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT DUP2 ISZERO ISZERO AND PUSH2 0x4A5B JUMPI MUL SWAP1 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x4C3D JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH2 0x4C99 SWAP1 PUSH2 0x4C93 PUSH2 0x4C86 PUSH2 0x4C7D PUSH8 0xDE0B6B3A7640000 PUSH2 0x4C76 DUP8 PUSH2 0x169 PUSH2 0x44F0 JUMP JUMPDEST POP SLOAD PUSH2 0x4C20 JUMP JUMPDEST SWAP5 PUSH2 0x181 PUSH2 0x43E9 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR DUP5 PUSH2 0x4C33 JUMP JUMPDEST SWAP3 PUSH2 0x4C33 JUMP JUMPDEST SWAP1 PUSH1 0x0 DUP3 DUP3 SUB SWAP3 SLT DUP2 DUP4 SLT DUP2 AND SWAP2 DUP4 SGT SWAP1 ISZERO AND OR PUSH2 0x4A5B JUMPI SWAP1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4CD6 JUMPI PUSH2 0x866 PUSH8 0xDE0B6B3A7640000 PUSH2 0x119F PUSH2 0x43E6 SWAP5 PUSH2 0x163 SLOAD PUSH2 0x4A4E JUMP JUMPDEST POP POP PUSH1 0x0 NOT SWAP1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x452E JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x4D00 DUP3 PUSH2 0x4CDE JUMP JUMPDEST PUSH2 0x4D0D PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x450C JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x4D1E PUSH1 0x1F NOT SWAP2 PUSH2 0x4CDE JUMP JUMPDEST ADD SWAP1 PUSH1 0x20 CALLDATASIZE SWAP2 ADD CALLDATACOPY JUMP JUMPDEST PUSH2 0x163 SLOAD DUP1 ISZERO PUSH2 0x4DFF JUMPI PUSH2 0x169 SWAP1 DUP2 SLOAD SWAP2 PUSH1 0x0 SWAP1 PUSH2 0x4D45 DUP5 PUSH2 0x4CF6 JUMP JUMPDEST SWAP1 DUP3 SWAP1 JUMPDEST DUP6 DUP3 LT PUSH2 0x4DAF JUMPI POP POP PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x4D63 JUMPI POP POP POP POP POP JUMP JUMPDEST PUSH2 0x4D7B DUP5 PUSH2 0x866 DUP6 PUSH2 0x4D75 DUP6 DUP8 PUSH2 0x4AF9 JUMP JUMPDEST MLOAD PUSH2 0x4C20 JUMP JUMPDEST SWAP1 PUSH2 0x16A SWAP2 DUP3 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0x452E JUMPI PUSH2 0x2C32 DUP2 PUSH1 0x1 SWAP6 DUP7 PUSH2 0x4DA7 SWAP5 ADD DUP2 SSTORE PUSH2 0x43E9 JUMP JUMPDEST SWAP1 SSTORE ADD PUSH2 0x4D55 JUMP JUMPDEST SWAP1 SWAP3 PUSH2 0x4DF7 PUSH1 0x1 SWAP2 PUSH2 0x4DC0 DUP7 PUSH2 0x4E02 JUMP JUMPDEST PUSH2 0x4DCA DUP8 DUP8 PUSH2 0x4AF9 JUMP JUMPDEST MSTORE PUSH2 0xB83 PUSH2 0x4DD8 DUP8 DUP7 PUSH2 0x44F0 JUMP JUMPDEST POP SLOAD PUSH2 0x866 PUSH8 0xDE0B6B3A7640000 PUSH2 0x4DF0 DUP11 DUP11 PUSH2 0x4AF9 JUMP JUMPDEST MLOAD SWAP3 PUSH2 0x4C20 JUMP JUMPDEST SWAP4 ADD SWAP1 PUSH2 0x4D49 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x4E0E SWAP1 PUSH2 0x169 PUSH2 0x44F0 JUMP JUMPDEST POP PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x4E25 DUP2 PUSH2 0x4E56 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ISZERO PUSH2 0x4E31 JUMPI POP SWAP1 JUMP JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0x7F6E4DB9 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST MLOAD SWAP1 DUP2 ISZERO ISZERO DUP3 SUB PUSH2 0x719 JUMPI JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x59E02DD7 PUSH1 0xE0 SHL DUP2 MSTORE SWAP3 SWAP2 DUP2 SWAP1 DUP5 SWAP1 PUSH1 0x4 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x4ECD JUMPI PUSH1 0x0 SWAP2 DUP3 SWAP5 PUSH2 0x4E90 JUMPI POP POP SWAP2 SWAP1 JUMP JUMPDEST SWAP1 DUP1 SWAP5 POP DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x4EC6 JUMPI JUMPDEST PUSH2 0x4EA7 DUP2 DUP4 PUSH2 0x450C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x71E JUMPI POP PUSH2 0x4EBE PUSH1 0x20 DUP4 MLOAD SWAP4 ADD PUSH2 0x4E49 JUMP JUMPDEST SWAP2 CODESIZE DUP1 PUSH2 0x4BF0 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x4E9D JUMP JUMPDEST POP MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x169 SLOAD SWAP1 PUSH2 0x4EE6 DUP3 PUSH2 0x4CF6 JUMP JUMPDEST SWAP2 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x4EF5 JUMPI POP POP JUMP JUMPDEST DUP1 PUSH2 0x4F01 PUSH1 0x1 SWAP3 PUSH2 0x4E02 JUMP JUMPDEST PUSH2 0x4F0B DUP3 DUP8 PUSH2 0x4AF9 JUMP JUMPDEST MSTORE ADD PUSH2 0x4EEA JUMP JUMPDEST ISZERO PUSH2 0x4F19 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x4F81 PUSH1 0x80 DUP4 PUSH2 0x450C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP4 DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SWAP3 PUSH1 0xA0 SWAP5 SWAP2 SWAP8 SWAP7 SWAP6 SWAP3 PUSH1 0xC0 DUP6 ADD SWAP9 DUP6 MSTORE PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP2 MSTORE PUSH2 0x4685 SWAP2 PUSH2 0x2B58 PUSH1 0x84 DUP4 PUSH2 0x450C JUMP JUMPDEST PUSH1 0x20 SWAP2 PUSH2 0x506E SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP1 PUSH2 0x5021 DUP7 PUSH2 0x4544 JUMP JUMPDEST SWAP4 PUSH2 0x502F PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x450C JUMP JUMPDEST DUP7 DUP6 MSTORE PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP8 DUP7 ADD MSTORE DUP7 DUP2 MLOAD SWAP2 ADD DUP3 DUP6 GAS CALL PUSH2 0x5068 PUSH2 0x4942 JUMP JUMPDEST SWAP2 PUSH2 0x50EF JUMP JUMPDEST DUP1 MLOAD DUP1 PUSH2 0x507A JUMPI POP POP POP JUMP JUMPDEST DUP2 DUP4 SWAP2 DUP2 ADD SUB SLT PUSH2 0x719 JUMPI DUP2 PUSH2 0x5090 SWAP2 ADD PUSH2 0x4E49 JUMP JUMPDEST ISZERO PUSH2 0x5098 JUMPI POP JUMP JUMPDEST PUSH1 0x84 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST SWAP2 SWAP3 PUSH1 0x60 SWAP2 ISZERO PUSH2 0x5154 JUMPI POP POP DUP2 MLOAD ISZERO PUSH2 0x5106 JUMPI POP SWAP1 JUMP JUMPDEST EXTCODESIZE ISZERO PUSH2 0x510F JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 SWAP4 SWAP3 PUSH2 0x4685 SWAP3 POP PUSH2 0x49DC JUMP JUMPDEST PUSH1 0xFF PUSH2 0x17D SLOAD PUSH1 0x8 SHR AND PUSH2 0x5171 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1CA61D77 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x51E9 SWAP3 PUSH1 0x20 SWAP3 PUSH2 0x166 PUSH2 0x5198 DUP5 DUP3 SLOAD PUSH2 0x4AEC JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x51A8 PUSH2 0x163 SWAP2 DUP3 SLOAD PUSH2 0x4AEC JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x165 SLOAD PUSH1 0x40 MLOAD PUSH4 0x40C10F19 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 SWAP4 DUP5 SWAP3 SWAP1 SWAP2 AND SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 DUP3 SWAP1 PUSH1 0x44 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x4AE0 JUMPI PUSH2 0x51FA JUMPI POP JUMP JUMPDEST PUSH1 0x20 DUP2 RETURNDATASIZE DUP3 GT PUSH2 0x5223 JUMPI JUMPDEST DUP2 PUSH2 0x5212 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x450C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x719 JUMPI PUSH2 0x4DFF SWAP1 PUSH2 0x4E49 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x5205 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x5236 SWAP1 PUSH2 0x4B0D JUMP JUMPDEST SWAP2 SWAP1 SWAP3 PUSH2 0x5243 DUP4 DUP6 PUSH2 0x4CB4 JUMP JUMPDEST SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0x5250 JUMPI POP POP JUMP JUMPDEST PUSH1 0x44 SWAP3 POP PUSH1 0x40 MLOAD SWAP2 PUSH4 0x79121201 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 PUSH2 0x166 SLOAD SWAP1 DUP2 ISZERO PUSH2 0x529A JUMPI PUSH8 0xDE0B6B3A7640000 PUSH2 0x119F PUSH2 0x43E6 SWAP5 PUSH2 0xFF3 PUSH2 0x866 SWAP5 PUSH2 0x163 SLOAD PUSH2 0x4A4E JUMP JUMPDEST POP POP POP PUSH8 0xDE0B6B3A7640000 SWAP1 JUMP JUMPDEST SWAP3 SWAP1 SWAP4 SWAP2 PUSH1 0x0 SWAP2 PUSH1 0x0 SWAP2 DUP3 SWAP7 PUSH2 0x52BD PUSH2 0x4F72 JUMP JUMPDEST SWAP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP6 SWAP1 DUP4 AND DUP1 PUSH2 0x54CD JUMPI JUMPDEST POP DUP3 PUSH2 0x161 SLOAD AND DUP4 PUSH1 0x40 MLOAD SWAP4 PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP6 MSTORE AND DUP1 PUSH1 0x4 DUP6 ADD MSTORE ADDRESS PUSH1 0x24 DUP6 ADD MSTORE PUSH1 0x20 SWAP5 DUP6 DUP6 PUSH1 0x44 DUP2 DUP7 GAS STATICCALL SWAP5 DUP6 ISZERO PUSH2 0x54C2 JUMPI DUP5 SWAP6 PUSH2 0x5493 JUMPI JUMPDEST POP DUP5 PUSH2 0x536E JUMPI JUMPDEST POP POP POP POP POP DUP7 ADD MLOAD ISZERO PUSH2 0x532A JUMPI JUMPDEST POP POP POP SWAP3 SWAP2 SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 POP PUSH2 0x5342 PUSH8 0xDE0B6B3A7640000 SWAP3 DUP4 SWAP3 PUSH2 0x4C20 JUMP JUMPDEST DIV DUP1 DUP6 MSTORE SWAP1 DUP3 ISZERO PUSH2 0x5366 JUMPI PUSH2 0x535E SWAP3 DIV SWAP1 DUP2 PUSH1 0x40 DUP7 ADD MSTORE PUSH2 0x4AEC JUMP JUMPDEST CODESIZE DUP1 DUP1 PUSH2 0x5322 JUMP JUMPDEST POP SWAP1 POP PUSH2 0x535E JUMP JUMPDEST PUSH2 0x537C SWAP1 PUSH2 0x162 SLOAD AND PUSH2 0x4E56 JUMP JUMPDEST SWAP3 SWAP1 SWAP3 ISZERO PUSH2 0x5314 JUMPI SWAP1 SWAP2 SWAP3 SWAP4 SWAP12 POP DUP5 DUP12 PUSH2 0x53B6 DUP6 PUSH8 0xDE0B6B3A7640000 PUSH2 0x53B0 PUSH2 0x53A6 DUP14 DUP14 PUSH2 0x4C20 JUMP JUMPDEST PUSH2 0x175 SLOAD SWAP1 PUSH2 0x4C20 JUMP JUMPDEST DIV PUSH2 0x4C33 JUMP JUMPDEST DUP2 DUP4 ADD DUP2 DUP2 MSTORE SWAP6 SWAP1 DUP12 ISZERO PUSH2 0x5489 JUMPI POP PUSH2 0x53E1 SWAP2 PUSH2 0x53D5 PUSH1 0x60 SWAP3 DUP14 PUSH2 0x4C33 JUMP JUMPDEST SWAP2 DUP3 SWAP2 ADD MSTORE DUP6 MLOAD PUSH2 0x4AEC JUMP JUMPDEST DUP1 SWAP14 JUMPDEST LT SWAP3 DUP4 ISZERO PUSH2 0x5410 JUMPI JUMPDEST POP POP POP PUSH2 0x53FD JUMPI JUMPDEST DUP1 DUP1 DUP1 PUSH2 0x5314 JUMP JUMPDEST DUP2 SWAP3 SWAP10 POP MSTORE DUP1 PUSH1 0x60 DUP9 ADD MSTORE SWAP7 CODESIZE DUP1 PUSH2 0x53F5 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 POP PUSH1 0x24 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x547E JUMPI SWAP1 DUP12 SWAP2 DUP5 SWAP2 PUSH2 0x5449 JUMPI JUMPDEST POP LT CODESIZE DUP5 DUP2 PUSH2 0x53ED JUMP JUMPDEST DUP1 SWAP3 POP DUP6 DUP1 SWAP3 POP RETURNDATASIZE DUP4 GT PUSH2 0x5477 JUMPI JUMPDEST PUSH2 0x5462 DUP2 DUP4 PUSH2 0x450C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x5473 JUMPI DUP11 SWAP1 MLOAD CODESIZE PUSH2 0x543F JUMP JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x5458 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP2 POP POP DUP1 SWAP14 PUSH2 0x53E4 JUMP JUMPDEST SWAP1 SWAP5 POP DUP6 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x54BB JUMPI JUMPDEST PUSH2 0x54AB DUP2 DUP4 PUSH2 0x450C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x14FB JUMPI MLOAD SWAP4 CODESIZE PUSH2 0x530D JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x54A1 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP7 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 SWAP6 POP PUSH1 0x20 DUP4 PUSH2 0x1E9 SLOAD AND SWAP2 PUSH1 0x24 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x64A731E9 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL DUP1 ISZERO PUSH2 0x5545 JUMPI DUP7 SWAP1 PUSH2 0x5512 JUMPI JUMPDEST PUSH2 0x550B SWAP2 POP DUP5 PUSH2 0x4C20 JUMP JUMPDEST SWAP5 CODESIZE PUSH2 0x52D1 JUMP JUMPDEST POP PUSH1 0x20 DUP2 RETURNDATASIZE DUP3 GT PUSH2 0x553D JUMPI JUMPDEST DUP2 PUSH2 0x552B PUSH1 0x20 SWAP4 DUP4 PUSH2 0x450C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x30E8 JUMPI PUSH2 0x550B SWAP1 MLOAD PUSH2 0x5500 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x551E JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x55C8 SWAP4 PUSH2 0x558F PUSH1 0x0 SWAP3 PUSH1 0x20 SWAP6 PUSH2 0x5569 DUP3 PUSH2 0x169 PUSH2 0x44F0 JUMP JUMPDEST POP PUSH2 0x5575 DUP8 DUP3 SLOAD PUSH2 0x4AEC JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x5585 PUSH2 0x163 SWAP2 DUP3 SLOAD PUSH2 0x4AEC JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x167 PUSH2 0x43E9 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x40C10F19 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP1 SWAP5 DUP6 SWAP4 SWAP3 DUP5 SWAP3 SWAP1 SWAP2 DUP4 SWAP1 PUSH1 0x44 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP4 PUSH1 0x3 SWAP2 SWAP1 SWAP2 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL DUP1 ISZERO PUSH2 0x4AE0 JUMPI PUSH2 0x51FA JUMPI POP JUMP JUMPDEST PUSH2 0x2C32 PUSH2 0x563C SWAP2 PUSH2 0x55FA DUP5 DUP3 PUSH2 0x4C53 JUMP JUMPDEST PUSH2 0x5632 PUSH2 0x5609 DUP4 PUSH2 0x180 PUSH2 0x43E9 JUMP JUMPDEST PUSH2 0x561C DUP3 SWAP5 SWAP3 SLOAD SWAP3 DUP4 DUP4 PUSH1 0x3 SHL SHR PUSH2 0x4B9D JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x3 SHL PUSH1 0x0 NOT DUP2 SHL SWAP3 DUP4 SWAP2 SHL AND SWAP2 NOT AND OR SWAP1 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x181 PUSH2 0x43E9 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST SWAP3 PUSH2 0x98A DUP4 PUSH2 0x5652 SWAP7 SWAP5 SWAP4 SWAP8 SWAP6 PUSH2 0x5BA0 JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0x565D JUMPI POP POP JUMP JUMPDEST PUSH1 0x44 SWAP3 POP PUSH1 0x40 MLOAD SWAP2 PUSH4 0xC39B739F PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST SWAP4 PUSH2 0x568A SWAP4 PUSH2 0x119F SWAP3 SWAP6 PUSH2 0x56B0 JUMP JUMPDEST PUSH8 0xDE0B6B3A763FFFF NOT DUP3 ADD SWAP2 DUP3 GT PUSH2 0x4A5B JUMPI PUSH8 0xDE0B6B3A7640000 SWAP2 PUSH2 0x4B40 SWAP2 PUSH2 0x4C33 JUMP JUMPDEST SWAP1 SWAP2 DUP2 PUSH2 0x56BD DUP3 DUP6 PUSH2 0x4CB4 JUMP JUMPDEST GT ISZERO PUSH2 0x56E9 JUMPI PUSH2 0x43E6 SWAP3 PUSH2 0x1A04 PUSH8 0xDE0B6B3A7640000 PUSH2 0x119F PUSH2 0x56E3 SWAP5 PUSH2 0x163 SLOAD PUSH2 0x4A4E JUMP JUMPDEST SWAP1 PUSH2 0x4A4E JUMP JUMPDEST POP POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x43E6 SWAP2 PUSH1 0x0 DUP1 PUSH2 0x5701 PUSH2 0x4972 JUMP JUMPDEST SWAP4 PUSH1 0x20 DUP2 MLOAD SWAP2 ADD DUP5 GAS DELEGATECALL PUSH2 0x5068 PUSH2 0x4942 JUMP JUMPDEST PUSH2 0x5741 SWAP2 SWAP4 SWAP3 PUSH2 0x5725 DUP3 PUSH2 0x169 PUSH2 0x44F0 JUMP JUMPDEST POP PUSH2 0x5731 DUP7 DUP3 SLOAD PUSH2 0x4A4E JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x5585 PUSH2 0x163 SWAP2 DUP3 SLOAD PUSH2 0x4A4E JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x3 SWAP2 SWAP1 SWAP2 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 EXTCODESIZE ISZERO PUSH2 0x719 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2770A7EB PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE SWAP1 PUSH1 0x0 SWAP1 DUP3 SWAP1 DUP2 DUP4 DUP2 PUSH1 0x44 DUP2 ADD JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x4AE0 JUMPI PUSH2 0x579C JUMPI POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4685 SWAP2 PUSH2 0x450C JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x166 PUSH2 0x57B7 DUP5 DUP3 SLOAD PUSH2 0x4A4E JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x57C7 PUSH2 0x163 SWAP2 DUP3 SLOAD PUSH2 0x4A4E JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x165 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 EXTCODESIZE ISZERO PUSH2 0x719 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2770A7EB PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE SWAP1 PUSH1 0x0 SWAP1 DUP3 SWAP1 DUP2 DUP4 DUP2 PUSH1 0x44 DUP2 ADD PUSH2 0x578B JUMP JUMPDEST DUP5 MLOAD SWAP3 SWAP5 SWAP2 SWAP4 SWAP3 ISZERO PUSH2 0x5989 JUMPI POP PUSH8 0xDE0B6B3A7640000 PUSH2 0x5837 PUSH2 0x16D SLOAD DUP4 MLOAD SWAP1 PUSH2 0x4C20 JUMP JUMPDEST DIV SWAP2 PUSH2 0x163 PUSH2 0x5847 DUP5 DUP3 SLOAD PUSH2 0x4AEC JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 PUSH2 0x5862 DUP3 PUSH2 0x178 SLOAD AND SWAP5 DUP5 MLOAD PUSH2 0x4A4E JUMP JUMPDEST PUSH2 0x12F SWAP4 PUSH1 0x2 DUP6 SLOAD EQ PUSH2 0x2B65 JUMPI PUSH1 0x1 SWAP6 PUSH1 0x40 SWAP3 PUSH1 0x2 DUP8 SSTORE DUP1 PUSH2 0x5943 JUMPI JUMPDEST POP POP ADD MLOAD SWAP1 PUSH1 0x2 DUP5 SSTORE DUP2 PUSH2 0x58FB JUMPI JUMPDEST POP POP POP SSTORE JUMPDEST PUSH2 0x12F SWAP1 PUSH1 0x2 DUP3 SLOAD EQ PUSH2 0x2B65 JUMPI PUSH1 0x1 SWAP3 PUSH1 0x2 DUP4 SSTORE DUP1 PUSH2 0x58B1 JUMPI POP POP SSTORE JUMP JUMPDEST PUSH2 0x24F SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x44 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x58F8 SWAP2 SWAP1 PUSH1 0xA0 DUP6 SWAP1 SHL DUP6 SWAP1 SUB AND PUSH2 0x2B58 DUP3 PUSH1 0x64 DUP2 ADD PUSH2 0x2B4A JUMP JUMPDEST SSTORE JUMP JUMPDEST PUSH2 0x24F SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH2 0x593B SWAP3 SWAP1 SWAP2 AND PUSH2 0x2B58 DUP3 PUSH1 0x64 DUP2 ADD PUSH2 0x2B4A JUMP JUMPDEST CODESIZE DUP1 DUP1 PUSH2 0x588E JUMP JUMPDEST PUSH2 0x24F SLOAD DUP5 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x44 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x5982 SWAP2 SWAP1 DUP7 AND PUSH2 0x2B58 DUP3 PUSH1 0x64 DUP2 ADD PUSH2 0x2B4A JUMP JUMPDEST CODESIZE DUP1 PUSH2 0x587F JUMP JUMPDEST PUSH2 0x178 SLOAD PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x59B8 SWAP5 SWAP3 SWAP4 PUSH1 0x60 SWAP3 SWAP1 SWAP2 PUSH2 0x59B0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH2 0x59BD JUMP JUMPDEST ADD MLOAD SWAP2 PUSH2 0x59BD JUMP JUMPDEST PUSH2 0x5893 JUMP JUMPDEST SWAP2 SWAP1 DUP2 PUSH2 0x59C9 JUMPI POP POP POP JUMP JUMPDEST PUSH2 0x161 SLOAD PUSH2 0x4685 SWAP4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x4FC1 JUMP JUMPDEST PUSH2 0x5A49 SWAP1 SWAP3 SWAP2 SWAP3 PUSH2 0x59EF PUSH2 0x5E26 JUMP JUMPDEST PUSH2 0x59F8 ADDRESS PUSH2 0x4A71 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xE01DCE2D PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND PUSH1 0x44 DUP4 ADD MSTORE DUP4 DUP6 AND PUSH1 0x64 DUP4 ADD MSTORE PUSH1 0x84 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 MSTORE PUSH2 0x5A3E PUSH1 0xA4 DUP3 PUSH2 0x450C JUMP JUMPDEST DUP4 PUSH2 0x21C SLOAD AND PUSH2 0x56F1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP1 MLOAD DUP2 ADD SUB SLT PUSH2 0x719 JUMPI PUSH1 0x20 ADD MLOAD SWAP2 PUSH2 0x12F SWAP1 PUSH1 0x2 DUP3 SLOAD EQ PUSH2 0x2B65 JUMPI DUP4 PUSH1 0x1 SWAP4 PUSH1 0x2 DUP5 SSTORE DUP2 PUSH2 0x5A7D JUMPI JUMPDEST POP POP POP SSTORE SWAP1 JUMP JUMPDEST PUSH2 0x24F SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH2 0x5ABD SWAP3 SWAP1 SWAP2 AND PUSH2 0x2B58 DUP3 PUSH1 0x64 DUP2 ADD PUSH2 0x2B4A JUMP JUMPDEST CODESIZE DUP4 DUP2 PUSH2 0x5A76 JUMP JUMPDEST SWAP3 DUP1 PUSH2 0x3395 PUSH2 0x339B SWAP3 DUP6 PUSH2 0x5AD9 SWAP7 SWAP6 PUSH2 0x56B0 JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0x5AE4 JUMPI POP POP JUMP JUMPDEST PUSH1 0x44 SWAP3 POP PUSH1 0x40 MLOAD SWAP2 PUSH4 0xA5DB715D PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0xE0 DUP2 ADD SWAP3 SWAP2 PUSH1 0xC0 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 PUSH2 0x5B1F DUP4 PUSH2 0x43A7 JUMP JUMPDEST AND DUP6 MSTORE PUSH2 0x5B2E PUSH1 0x20 DUP4 ADD PUSH2 0x43A7 JUMP JUMPDEST AND PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 DUP2 ADD CALLDATALOAD PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP2 ADD CALLDATALOAD PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x80 DUP2 ADD CALLDATALOAD PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP2 ADD CALLDATALOAD PUSH1 0xA0 DUP6 ADD MSTORE ADD CALLDATALOAD SWAP2 ADD MSTORE JUMP JUMPDEST PUSH2 0x17F SLOAD DUP1 NUMBER LT ISZERO PUSH2 0x5B7A JUMPI PUSH2 0x43E6 SWAP1 NUMBER SWAP1 PUSH2 0x4A4E JUMP JUMPDEST POP PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD PUSH2 0x5B8F PUSH1 0x40 DUP3 PUSH2 0x450C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1 DUP3 SWAP5 DUP1 SLOAD DUP5 MSTORE ADD SLOAD SWAP2 ADD MSTORE JUMP JUMPDEST PUSH2 0x5BAC DUP2 PUSH2 0x17A PUSH2 0x43E9 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR SWAP2 PUSH2 0x1B4 SWAP2 PUSH2 0x5BC2 DUP2 DUP5 PUSH2 0x44F0 JUMP JUMPDEST POP SLOAD SWAP3 PUSH2 0x1B5 SLOAD NUMBER LT ISZERO PUSH2 0x5BED JUMPI JUMPDEST POP POP DUP1 DUP3 LT ISZERO PUSH2 0x5BE8 JUMPI PUSH2 0x866 SWAP1 PUSH2 0x43E6 SWAP4 PUSH2 0x4C20 JUMP JUMPDEST POP POP SWAP1 JUMP JUMPDEST DUP3 SWAP4 POP PUSH2 0x5C01 PUSH2 0x5C0C SWAP4 SWAP3 PUSH2 0x5C07 SWAP3 PUSH2 0x44F0 JUMP JUMPDEST POP PUSH2 0x5B80 JUMP JUMPDEST PUSH2 0x5C14 JUMP JUMPDEST SWAP1 CODESIZE DUP1 PUSH2 0x5BD1 JUMP JUMPDEST PUSH1 0x20 DUP2 MLOAD SWAP2 ADD DUP1 MLOAD SWAP3 PUSH8 0xDE0B6B3A7640000 SWAP4 DUP5 SUB SWAP1 DUP5 DUP3 GT PUSH2 0x4A5B JUMPI PUSH2 0x5C41 PUSH2 0xB83 SWAP3 PUSH2 0x4B40 SWAP6 PUSH2 0x4C20 JUMP JUMPDEST SWAP3 MLOAD PUSH2 0x4C20 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x169 SWAP2 DUP3 SLOAD SWAP3 PUSH2 0x5C5B DUP5 PUSH2 0x4CF6 JUMP JUMPDEST SWAP4 DUP3 SWAP2 JUMPDEST DUP6 DUP3 DUP5 LT PUSH2 0x5C8A JUMPI POP POP POP POP DUP2 ISZERO PUSH2 0x5C7E JUMPI SWAP1 PUSH2 0x5C7B SWAP2 PUSH2 0x4C33 JUMP JUMPDEST SWAP2 JUMP JUMPDEST POP POP PUSH2 0x17B SLOAD PUSH1 0x1 SHL SWAP2 JUMP JUMPDEST PUSH2 0x119F PUSH2 0x5CF5 DUP6 SWAP8 SWAP7 PUSH2 0xB83 PUSH2 0x5CC4 PUSH2 0x5CEC DUP10 PUSH2 0x866 DUP10 PUSH2 0x119F PUSH2 0x5CD6 DUP5 PUSH1 0x1 SWAP14 SWAP15 SWAP16 SWAP13 PUSH2 0x5CBA PUSH2 0x5CFB SWAP15 PUSH2 0x4E02 JUMP JUMPDEST SWAP9 DUP10 SWAP8 DUP9 SWAP3 PUSH2 0x4AF9 JUMP JUMPDEST MSTORE PUSH2 0x5CCF DUP7 DUP3 PUSH2 0x4BB9 JUMP JUMPDEST POP SWAP4 PUSH2 0x44F0 JUMP JUMPDEST POP PUSH2 0x119F PUSH8 0xDE0B6B3A7640000 SWAP4 DUP5 SWAP3 SLOAD PUSH2 0x4AEC JUMP JUMPDEST SWAP5 DUP6 SWAP2 DUP13 PUSH2 0x5BA0 JUMP JUMPDEST SWAP6 PUSH2 0x4AEC JUMP JUMPDEST SWAP5 ADD SWAP2 SWAP1 PUSH2 0x5C5F JUMP JUMPDEST PUSH2 0x1B5 DUP1 SLOAD NUMBER LT ISZERO PUSH2 0x5D13 JUMPI POP JUMP JUMPDEST PUSH2 0x169 SLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x5D2D JUMPI POP POP PUSH2 0x1B6 SLOAD NUMBER ADD SWAP1 SSTORE JUMP JUMPDEST DUP1 DUP1 PUSH32 0x19156E9379C7BBBCE8F646CE5EE30BA860B8F954717405F3D5859A6C1A21AE60 PUSH1 0x1 SWAP4 PUSH2 0x1B4 PUSH2 0x5D63 PUSH2 0x5C01 DUP4 DUP4 PUSH2 0x44F0 JUMP JUMPDEST SWAP1 PUSH2 0x5D81 PUSH2 0x5D79 PUSH2 0x5D73 DUP6 PUSH2 0x4E02 JUMP JUMPDEST DUP5 PUSH2 0x5C14 JUMP JUMPDEST SWAP4 DUP5 SWAP3 PUSH2 0x44F0 JUMP JUMPDEST POP SSTORE MLOAD PUSH1 0x40 SWAP2 DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE LOG2 ADD PUSH2 0x5D1A JUMP JUMPDEST PUSH1 0x97 SLOAD PUSH1 0x40 MLOAD PUSH4 0xD994D6D5 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x4AE0 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x5DED JUMPI JUMPDEST POP ISZERO PUSH2 0x5DDB JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1DD1B1B5 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0x20 DUP3 RETURNDATASIZE DUP3 GT PUSH2 0x5E1E JUMPI JUMPDEST DUP2 PUSH2 0x5E06 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x450C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x71E JUMPI POP PUSH2 0x5E18 SWAP1 PUSH2 0x4E49 JUMP JUMPDEST CODESIZE PUSH2 0x5DD3 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x5DF9 JUMP JUMPDEST PUSH1 0xFF PUSH1 0xCA SLOAD PUSH1 0x8 SHR AND PUSH2 0x5E35 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x783BB6C9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH8 0xDE0B6B3A7640000 LT PUSH2 0x18F5 JUMPI JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4B 0xF7 CODESIZE 0xB4 0xDD 0x5D JUMP DUP9 CODESIZE OR PUSH21 0xC55328B432339D4CACA63AC8B94C19A3AF11BD2C3E PUSH5 0x736F6C6343 STOP ADDMOD LT STOP CALLER PUSH1 0xA0 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0xDD JUMPI ADDRESS PUSH1 0x80 MSTORE PUSH1 0x0 SLOAD SWAP1 PUSH1 0xFF DUP3 PUSH1 0x8 SHR AND PUSH2 0x8B JUMPI POP PUSH1 0xFF DUP1 DUP3 AND LT PUSH2 0x50 JUMPI JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F24 SWAP1 DUP2 PUSH3 0xE3 DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 DUP2 DUP2 PUSH2 0x1114 ADD MSTORE DUP2 DUP2 PUSH2 0x12B6 ADD MSTORE PUSH2 0x14CB ADD MSTORE RETURN JUMPDEST PUSH1 0xFF SWAP1 DUP2 NOT AND OR PUSH1 0x0 SSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0xFF DUP2 MSTORE LOG1 CODESIZE PUSH2 0x29 JUMP JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320696E697469 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x616C697A696E67 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1DDE6EF EQ PUSH2 0x20F3 JUMPI DUP1 PUSH4 0x1F1B684 EQ PUSH2 0x20AB JUMPI DUP1 PUSH4 0xC340A24 EQ PUSH2 0x2082 JUMPI DUP1 PUSH4 0xC36D897 EQ PUSH2 0x2063 JUMPI DUP1 PUSH4 0xD6AC463 EQ PUSH2 0x201B JUMPI DUP1 PUSH4 0xE0A8FD2 EQ PUSH2 0x1FF5 JUMPI DUP1 PUSH4 0xF1E5E2B EQ PUSH2 0x1FAD JUMPI DUP1 PUSH4 0x1867E2F5 EQ PUSH2 0x1F8E JUMPI DUP1 PUSH4 0x1C280CE1 EQ PUSH2 0x17C8 JUMPI DUP1 PUSH4 0x1FE6A7AD EQ PUSH2 0x178C JUMPI DUP1 PUSH4 0x2069F753 EQ PUSH2 0x1766 JUMPI DUP1 PUSH4 0x23B98CDE EQ PUSH2 0x173F JUMPI DUP1 PUSH4 0x27EAB2A1 EQ PUSH2 0x16F7 JUMPI DUP1 PUSH4 0x2A20D57D EQ PUSH2 0x16D8 JUMPI DUP1 PUSH4 0x2C43BD3B EQ PUSH2 0x16B2 JUMPI DUP1 PUSH4 0x2D88AF4A EQ PUSH2 0x1659 JUMPI DUP1 PUSH4 0x2DED50F0 EQ PUSH2 0x163A JUMPI DUP1 PUSH4 0x333431FD EQ PUSH2 0x161B JUMPI DUP1 PUSH4 0x33421C38 EQ PUSH2 0x1532 JUMPI DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0x1499 JUMPI DUP1 PUSH4 0x3BC4AC0A EQ PUSH2 0x1473 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x13F6 JUMPI DUP1 PUSH4 0x407F0E34 EQ PUSH2 0x13D7 JUMPI DUP1 PUSH4 0x4B746001 EQ PUSH2 0x138A JUMPI DUP1 PUSH4 0x4D977E78 EQ PUSH2 0x136B JUMPI DUP1 PUSH4 0x4E1F907A EQ PUSH2 0x1341 JUMPI DUP1 PUSH4 0x4F0F27EE EQ PUSH2 0x1322 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x122E JUMPI DUP1 PUSH4 0x5210570C EQ PUSH2 0x1206 JUMPI DUP1 PUSH4 0x5241271C EQ PUSH2 0x11D7 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x1101 JUMPI DUP1 PUSH4 0x543AEB48 EQ PUSH2 0x10DB JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x10B5 JUMPI DUP1 PUSH4 0x60009E0B EQ PUSH2 0x108B JUMPI DUP1 PUSH4 0x647846A5 EQ PUSH2 0x1061 JUMPI DUP1 PUSH4 0x662013F4 EQ PUSH2 0x103D JUMPI DUP1 PUSH4 0x68274357 EQ PUSH2 0x1012 JUMPI DUP1 PUSH4 0x6B5488DF EQ PUSH2 0xFF3 JUMPI DUP1 PUSH4 0x70713468 EQ PUSH2 0xFCD JUMPI DUP1 PUSH4 0x7554FFFD EQ PUSH2 0xFAE JUMPI DUP1 PUSH4 0x7750BA0C EQ PUSH2 0xF88 JUMPI DUP1 PUSH4 0x79F9A91C EQ PUSH2 0xF69 JUMPI DUP1 PUSH4 0x7A193C31 EQ PUSH2 0xF4A JUMPI DUP1 PUSH4 0x7A4FF1D9 EQ PUSH2 0xF24 JUMPI DUP1 PUSH4 0x7A727FE8 EQ PUSH2 0xF05 JUMPI DUP1 PUSH4 0x7AF5758C EQ PUSH2 0xEDF JUMPI DUP1 PUSH4 0x7CBA2383 EQ PUSH2 0xEB9 JUMPI DUP1 PUSH4 0x7D8E0314 EQ PUSH2 0xE8A JUMPI DUP1 PUSH4 0x7F01C715 EQ PUSH2 0xE60 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0xDC7 JUMPI DUP1 PUSH4 0x8CFA4241 EQ PUSH2 0xDA8 JUMPI DUP1 PUSH4 0x904AA85B EQ PUSH2 0xD81 JUMPI DUP1 PUSH4 0x9853C35A EQ PUSH2 0xD57 JUMPI DUP1 PUSH4 0x9AD6659D EQ PUSH2 0xD32 JUMPI DUP1 PUSH4 0x9CABFC00 EQ PUSH2 0xCE5 JUMPI DUP1 PUSH4 0x9FD0506D EQ PUSH2 0xCB8 JUMPI DUP1 PUSH4 0xA8E9AC30 EQ PUSH2 0xC96 JUMPI DUP1 PUSH4 0xAEA038DC EQ PUSH2 0xC77 JUMPI DUP1 PUSH4 0xBB4872DE EQ PUSH2 0xC54 JUMPI DUP1 PUSH4 0xBECACA6B EQ PUSH2 0xC2E JUMPI DUP1 PUSH4 0xC00F538D EQ PUSH2 0xC08 JUMPI DUP1 PUSH4 0xCF351C1D EQ PUSH2 0xBC0 JUMPI DUP1 PUSH4 0xD1A0FAA0 EQ PUSH2 0xBA2 JUMPI DUP1 PUSH4 0xDB796072 EQ PUSH2 0x93D JUMPI DUP1 PUSH4 0xDE08160F EQ PUSH2 0x900 JUMPI DUP1 PUSH4 0xE01DCE2D EQ PUSH2 0x6EA JUMPI DUP1 PUSH4 0xE4C0AAF4 EQ PUSH2 0x69A JUMPI DUP1 PUSH4 0xE6B1627C EQ PUSH2 0x657 JUMPI DUP1 PUSH4 0xE7C25978 EQ PUSH2 0x633 JUMPI DUP1 PUSH4 0xF13F4054 EQ PUSH2 0x609 JUMPI DUP1 PUSH4 0xF26114AA EQ PUSH2 0x405 JUMPI DUP1 PUSH4 0xF2808778 EQ PUSH2 0x3DF JUMPI DUP1 PUSH4 0xF30B5614 EQ PUSH2 0x3C0 JUMPI DUP1 PUSH4 0xF375CFBA EQ PUSH2 0x3A1 JUMPI DUP1 PUSH4 0xFA6E83BD EQ PUSH2 0x382 JUMPI PUSH4 0xFDA70F8B EQ PUSH2 0x361 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x37F JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x37F JUMPI PUSH1 0x20 PUSH2 0x16E SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x37F JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x37F JUMPI PUSH1 0x20 PUSH2 0x16C SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x37F JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x37F JUMPI PUSH1 0x20 PUSH2 0x173 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x37F JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x37F JUMPI PUSH1 0x20 PUSH2 0x163 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x37F JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x37F JUMPI PUSH2 0x3F9 PUSH2 0x2E3F JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH2 0x16E SSTORE PUSH1 0x40 MLOAD RETURN JUMPDEST POP CALLVALUE PUSH2 0x37F JUMPI PUSH1 0xE0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x37F JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x4 CALLDATALOAD DUP2 DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x604 JUMPI DUP3 MSTORE PUSH2 0x168 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH1 0xFF PUSH1 0x1 PUSH1 0x40 MLOAD SWAP3 PUSH2 0x44C PUSH1 0x40 DUP6 PUSH2 0x215B JUMP JUMPDEST DUP1 SLOAD DUP5 MSTORE ADD SLOAD AND ISZERO DUP1 ISZERO PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x5B6 JUMPI MLOAD SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 DUP1 DUP3 AND DUP1 SWAP3 SUB PUSH2 0x604 JUMPI PUSH2 0x169 SWAP1 PUSH1 0x1 PUSH2 0x47F DUP6 DUP5 PUSH2 0x2193 JUMP JUMPDEST POP ADD SLOAD AND DUP3 SUB PUSH2 0x566 JUMPI JUMPDEST POP POP PUSH2 0x4B9 PUSH2 0x49B DUP3 PUSH2 0x17A PUSH2 0x2119 JUMP JUMPDEST PUSH1 0x44 SWAP3 SWAP2 SWAP3 CALLDATALOAD SWAP1 DUP4 SLOAD SWAP1 PUSH1 0x3 SHL PUSH1 0x0 NOT DUP2 SHL SWAP3 DUP4 SWAP2 SHL AND SWAP2 NOT AND OR SWAP1 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x4E8 PUSH2 0x4CA DUP3 PUSH2 0x176 PUSH2 0x2119 JUMP JUMPDEST PUSH1 0x64 SWAP3 SWAP2 SWAP3 CALLDATALOAD SWAP1 DUP4 SLOAD SWAP1 PUSH1 0x3 SHL PUSH1 0x0 NOT DUP2 SHL SWAP3 DUP4 SWAP2 SHL AND SWAP2 NOT AND OR SWAP1 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x517 PUSH2 0x4F9 DUP3 PUSH2 0x177 PUSH2 0x2119 JUMP JUMPDEST PUSH1 0x84 SWAP3 SWAP2 SWAP3 CALLDATALOAD SWAP1 DUP4 SLOAD SWAP1 PUSH1 0x3 SHL PUSH1 0x0 NOT DUP2 SHL SWAP3 DUP4 SWAP2 SHL AND SWAP2 NOT AND OR SWAP1 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x525 DUP2 PUSH2 0x1B4 PUSH2 0x2193 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0xC4 CALLDATALOAD SWAP2 ADD SSTORE PUSH32 0x6417E5A3C1E0E5DAE98B8FE718C4BABDFCB35E0D7B5E1B9641B5914756F5D8E3 PUSH1 0x40 MLOAD DUP1 PUSH2 0x55E PUSH1 0x4 DUP3 PUSH2 0x2B05 JUMP JUMPDEST SUB SWAP1 LOG2 PUSH1 0x40 MLOAD RETURN JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x59E02DD7 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 DUP2 PUSH1 0x4 DUP2 DUP7 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x5F9 JUMPI DUP6 SWAP2 PUSH2 0x5C8 JUMPI JUMPDEST POP ISZERO PUSH2 0x5B6 JUMPI PUSH2 0x59C DUP4 PUSH1 0x1 SWAP3 PUSH2 0x2193 JUMP JUMPDEST POP ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE CODESIZE DUP1 PUSH2 0x48A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xE6C4247B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x5EA SWAP2 POP PUSH1 0x40 RETURNDATASIZE PUSH1 0x40 GT PUSH2 0x5F2 JUMPI JUMPDEST PUSH2 0x5E2 DUP2 DUP4 PUSH2 0x215B JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x2A89 JUMP JUMPDEST SWAP1 POP CODESIZE PUSH2 0x58A JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x5D8 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x37F JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x37F JUMPI PUSH2 0x162 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x37F JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x37F JUMPI PUSH1 0x20 PUSH1 0xFF PUSH2 0x17D SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x37F JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x37F JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH2 0x1B4 SWAP1 DUP2 SLOAD DUP4 LT ISZERO PUSH2 0x37F JUMPI PUSH1 0x40 PUSH2 0x686 DUP5 DUP5 PUSH2 0x2193 JUMP JUMPDEST POP PUSH1 0x1 DUP2 SLOAD SWAP2 ADD SLOAD DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x37F JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x37F JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x6E6 JUMPI PUSH2 0x6C9 PUSH2 0x2E3F JUMP JUMPDEST PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL PUSH1 0x97 SLOAD AND OR PUSH1 0x97 SSTORE PUSH1 0x40 MLOAD RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x37F JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x37F JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x24 CALLDATALOAD DUP2 DUP2 AND SWAP3 PUSH1 0x4 CALLDATALOAD SWAP3 SWAP1 SWAP2 DUP5 DUP2 SUB PUSH2 0x604 JUMPI PUSH1 0x44 CALLDATALOAD SWAP2 DUP1 DUP4 AND DUP1 SWAP4 SUB PUSH2 0x604 JUMPI PUSH1 0x64 CALLDATALOAD SWAP5 PUSH1 0xFF PUSH2 0x17D SLOAD PUSH1 0x8 SHR AND ISZERO PUSH2 0x8EE JUMPI PUSH2 0x167 PUSH2 0x746 DUP3 DUP3 PUSH2 0x2119 JUMP JUMPDEST SWAP6 SWAP1 SLOAD SWAP9 PUSH1 0x40 MLOAD SWAP7 PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP9 MSTORE DUP2 PUSH1 0x4 DUP10 ADD MSTORE DUP8 PUSH1 0x24 DUP2 DUP9 PUSH1 0x20 SWAP15 DUP16 SWAP6 PUSH1 0x3 SHL SHR AND GAS STATICCALL SWAP7 DUP8 ISZERO PUSH2 0x8E3 JUMPI DUP9 SWAP8 PUSH2 0x8B4 JUMPI JUMPDEST POP DUP7 ISZERO PUSH2 0x896 JUMPI PUSH2 0x7B1 PUSH2 0x793 DUP6 PUSH2 0x16A PUSH2 0x2119 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR PUSH2 0x7AC PUSH8 0xDE0B6B3A7640000 DUP11 PUSH2 0x2824 JUMP JUMPDEST PUSH2 0x2837 JUMP JUMPDEST SWAP9 DUP10 DUP2 LT PUSH2 0x88C JUMPI JUMPDEST POP SWAP1 DUP4 SWAP3 SWAP2 PUSH2 0x810 SWAP5 PUSH32 0x94623CC0BDFF77F15A945C5F7C85F92E30BAEEE629058DB590CEEBA3755AD3BE PUSH1 0xC0 DUP14 DUP14 PUSH1 0x40 MLOAD SWAP2 DUP14 DUP4 MSTORE DUP3 ADD MSTORE DUP13 PUSH1 0x40 DUP3 ADD MSTORE DUP13 PUSH1 0x60 DUP3 ADD MSTORE DUP13 PUSH1 0x80 DUP3 ADD MSTORE DUP13 PUSH1 0xA0 DUP3 ADD MSTORE LOG4 PUSH2 0x2119 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND SWAP1 DUP2 EXTCODESIZE ISZERO PUSH2 0x888 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2770A7EB PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP3 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 DUP5 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x87D JUMPI PUSH2 0x868 JUMPI JUMPDEST POP POP PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH2 0x873 DUP3 DUP1 SWAP3 PUSH2 0x215B JUMP JUMPDEST PUSH2 0x37F JUMPI DUP1 PUSH2 0x85E JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST SWAP9 POP PUSH2 0x810 PUSH2 0x7BA JUMP JUMPDEST PUSH1 0x44 DUP8 PUSH1 0x40 MLOAD SWAP1 PUSH4 0x3FE8C5EB PUSH1 0xE0 SHL DUP3 MSTORE DUP1 PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 SWAP7 POP DUP10 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x8DC JUMPI JUMPDEST PUSH2 0x8CC DUP2 DUP4 PUSH2 0x215B JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x604 JUMPI MLOAD SWAP6 CODESIZE PUSH2 0x77D JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x8C2 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP11 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x31B0D35 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x37F JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x37F JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH2 0x176 SWAP1 DUP2 SLOAD DUP4 LT ISZERO PUSH2 0x37F JUMPI PUSH1 0x20 PUSH2 0x92F DUP5 DUP5 PUSH2 0x2119 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x40 MLOAD SWAP2 PUSH1 0x3 SHL SHR DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x37F JUMPI PUSH1 0xE0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x37F JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND SWAP3 SWAP2 DUP4 SWAP1 SUB PUSH2 0x604 JUMPI PUSH1 0x24 SWAP3 DUP4 CALLDATALOAD SWAP2 DUP1 DUP4 AND DUP1 SWAP4 SUB PUSH2 0x604 JUMPI DUP2 DUP5 MSTORE PUSH2 0x168 SWAP3 DUP4 PUSH1 0x20 MSTORE PUSH1 0x1 SWAP2 PUSH1 0xFF DUP4 PUSH1 0x40 DUP9 KECCAK256 ADD SLOAD AND PUSH2 0xB90 JUMPI PUSH2 0x167 SWAP4 DUP5 SLOAD SWAP6 DUP5 PUSH1 0x40 MLOAD PUSH2 0x9A8 PUSH1 0x40 DUP3 PUSH2 0x215B JUMP JUMPDEST DUP9 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 DUP3 DUP5 MSTORE DUP5 DUP12 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP11 KECCAK256 SWAP1 MLOAD DUP2 SSTORE ADD SWAP1 MLOAD ISZERO ISZERO PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 AND OR SWAP1 SSTORE DUP5 SLOAD SWAP5 PUSH1 0x1 PUSH1 0x40 SHL SWAP6 DUP7 DUP2 LT ISZERO PUSH2 0xB7D JUMPI PUSH2 0x9F1 SWAP2 DUP7 DUP3 ADD DUP2 SSTORE PUSH2 0x2119 JUMP JUMPDEST DUP2 SWAP3 SWAP2 SLOAD SWAP1 PUSH1 0x3 SHL DUP5 DUP2 SHL SWAP3 DUP4 SWAP2 SHL AND SWAP2 NOT AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH2 0xA15 PUSH1 0x40 DUP3 PUSH2 0x215B JUMP JUMPDEST DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 DUP4 MSTORE PUSH2 0x169 DUP1 SLOAD DUP7 DUP2 LT ISZERO PUSH2 0xB7D JUMPI PUSH2 0xA3A SWAP2 DUP7 DUP3 ADD DUP2 SSTORE PUSH2 0x2193 JUMP JUMPDEST PUSH2 0xB6A JUMPI DUP5 SWAP2 MLOAD DUP2 SSTORE ADD SWAP2 MLOAD AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE PUSH2 0xA6B PUSH1 0x44 CALLDATALOAD PUSH2 0x17A PUSH2 0x293C JUMP JUMPDEST PUSH2 0xA79 PUSH1 0x64 CALLDATALOAD PUSH2 0x176 PUSH2 0x293C JUMP JUMPDEST PUSH2 0xA87 PUSH1 0x84 CALLDATALOAD PUSH2 0x177 PUSH2 0x293C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA95 PUSH1 0x40 DUP3 PUSH2 0x215B JUMP JUMPDEST PUSH1 0xA4 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP1 PUSH1 0xC4 CALLDATALOAD DUP3 MSTORE PUSH2 0x1B4 DUP1 SLOAD DUP6 DUP2 LT ISZERO PUSH2 0xB57 JUMPI PUSH2 0xABF SWAP2 DUP6 DUP3 ADD DUP2 SSTORE PUSH2 0x2193 JUMP JUMPDEST SWAP3 SWAP1 SWAP3 PUSH2 0xB44 JUMPI DUP4 SWAP2 MLOAD DUP4 SSTORE MLOAD SWAP2 ADD SSTORE PUSH2 0x180 SWAP1 DUP2 SLOAD SWAP3 DUP4 LT ISZERO PUSH2 0xB31 JUMPI DUP3 ADD DUP2 SSTORE PUSH2 0xAEB SWAP2 SWAP1 PUSH2 0x2119 JUMP JUMPDEST POP POP PUSH2 0xB01 PUSH2 0xAF9 DUP3 PUSH2 0x2A35 JUMP JUMPDEST PUSH2 0x181 PUSH2 0x293C JUMP JUMPDEST PUSH32 0x6417E5A3C1E0E5DAE98B8FE718C4BABDFCB35E0D7B5E1B9641B5914756F5D8E3 PUSH1 0x40 MLOAD DUP1 PUSH2 0x55E PUSH1 0x4 DUP3 PUSH2 0x2B05 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE DUP6 DUP6 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x4 DUP8 SWAP1 MSTORE DUP8 DUP8 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE DUP9 DUP9 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x4 DUP9 SWAP1 MSTORE DUP9 DUP9 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP10 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE DUP10 DUP10 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3458F6C5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x37F JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x37F JUMPI PUSH2 0xBBB PUSH2 0x2DAB JUMP JUMPDEST PUSH1 0x40 MLOAD RETURN JUMPDEST POP CALLVALUE PUSH2 0x37F JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x37F JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x604 JUMPI PUSH2 0xBEF PUSH2 0x2E3F JUMP JUMPDEST PUSH2 0x161 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x40 MLOAD RETURN JUMPDEST POP CALLVALUE PUSH2 0x37F JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x37F JUMPI PUSH2 0xC22 PUSH2 0x2E3F JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH2 0x16F SSTORE PUSH1 0x40 MLOAD RETURN JUMPDEST POP CALLVALUE PUSH2 0x37F JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x37F JUMPI PUSH2 0xC48 PUSH2 0x2E3F JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH2 0x16B SSTORE PUSH1 0x40 MLOAD RETURN JUMPDEST POP CALLVALUE PUSH2 0x37F JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x37F JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0xCA SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x37F JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x37F JUMPI PUSH1 0x20 PUSH2 0x16F SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x37F JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x37F JUMPI PUSH1 0x20 PUSH2 0x1B5 SLOAD NUMBER LT ISZERO PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x37F JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x37F JUMPI PUSH1 0xCA SLOAD PUSH1 0x40 MLOAD PUSH1 0x10 SWAP2 SWAP1 SWAP2 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x37F JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x37F JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x604 JUMPI PUSH1 0x40 DUP3 DUP2 SWAP3 DUP2 MSTORE PUSH2 0x168 PUSH1 0x20 MSTORE KECCAK256 PUSH1 0xFF PUSH1 0x1 DUP3 SLOAD SWAP3 ADD SLOAD AND DUP3 MLOAD SWAP2 DUP3 MSTORE ISZERO ISZERO PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x37F JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x37F JUMPI PUSH1 0x20 PUSH2 0xD4D PUSH2 0x267C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x37F JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x37F JUMPI PUSH2 0x178 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x37F JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x37F JUMPI PUSH1 0x20 PUSH2 0xDA0 PUSH1 0x4 CALLDATALOAD PUSH2 0x2A35 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x37F JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x37F JUMPI PUSH1 0x20 PUSH2 0x17C SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x37F JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x37F JUMPI PUSH2 0xDE0 PUSH2 0x2ECD JUMP JUMPDEST PUSH1 0xCA SLOAD PUSH1 0x10 DUP2 SWAP1 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0xE4E JUMPI PUSH1 0xFF DUP2 AND ISZERO PUSH2 0xE3C JUMPI PUSH2 0x100 SWAP1 PUSH2 0xFF00 NOT AND OR PUSH1 0xCA SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH1 0x20 PUSH1 0x40 MLOAD CALLER DUP2 MSTORE LOG1 PUSH1 0x40 MLOAD RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x866099C3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1D77D477 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x37F JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x37F JUMPI PUSH2 0x1E9 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x37F JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x37F JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH2 0x17A SWAP1 DUP2 SLOAD DUP4 LT ISZERO PUSH2 0x37F JUMPI PUSH1 0x20 PUSH2 0x92F DUP5 DUP5 PUSH2 0x2119 JUMP JUMPDEST POP CALLVALUE PUSH2 0x37F JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x37F JUMPI PUSH2 0xED3 PUSH2 0x2E3F JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH2 0x17B SSTORE PUSH1 0x40 MLOAD RETURN JUMPDEST POP CALLVALUE PUSH2 0x37F JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x37F JUMPI PUSH2 0xEF9 PUSH2 0x2E3F JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH2 0x172 SSTORE PUSH1 0x40 MLOAD RETURN JUMPDEST POP CALLVALUE PUSH2 0x37F JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x37F JUMPI PUSH1 0x20 PUSH2 0x1B6 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x37F JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x37F JUMPI PUSH2 0xF3E PUSH2 0x2E3F JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH2 0x173 SSTORE PUSH1 0x40 MLOAD RETURN JUMPDEST POP CALLVALUE PUSH2 0x37F JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x37F JUMPI PUSH1 0x20 PUSH2 0x166 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x37F JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x37F JUMPI PUSH1 0x20 PUSH2 0x174 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x37F JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x37F JUMPI PUSH2 0xFA2 PUSH2 0x2E3F JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH2 0x16D SSTORE PUSH1 0x40 MLOAD RETURN JUMPDEST POP CALLVALUE PUSH2 0x37F JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x37F JUMPI PUSH1 0x20 PUSH2 0x16B SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x37F JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x37F JUMPI PUSH2 0xFE7 PUSH2 0x2E3F JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH2 0x170 SSTORE PUSH1 0x40 MLOAD RETURN JUMPDEST POP CALLVALUE PUSH2 0x37F JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x37F JUMPI PUSH1 0x20 PUSH2 0x17B SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x37F JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x37F JUMPI PUSH2 0x102B PUSH2 0x2E3F JUMP JUMPDEST PUSH1 0x1 PUSH1 0xFF NOT PUSH1 0xCA SLOAD AND OR PUSH1 0xCA SSTORE PUSH1 0x40 MLOAD RETURN JUMPDEST POP CALLVALUE PUSH2 0x37F JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x37F JUMPI PUSH1 0x20 PUSH2 0x1058 PUSH2 0x2CEF JUMP JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x37F JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x37F JUMPI PUSH2 0x161 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x37F JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x37F JUMPI PUSH2 0x165 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x37F JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x37F JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0xCA SLOAD PUSH1 0x8 SHR AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x37F JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x37F JUMPI PUSH2 0x10F5 PUSH2 0x2E3F JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH2 0x175 SSTORE PUSH1 0x40 MLOAD RETURN JUMPDEST POP CALLVALUE PUSH2 0x37F JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x37F JUMPI PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS SUB PUSH2 0x116C JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP2 MSTORE RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x555550535570677261646561626C653A206D757374206E6F742062652063616C PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6C6564207468726F7567682064656C656761746563616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x37F JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x37F JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH2 0x177 SWAP1 DUP2 SLOAD DUP4 LT ISZERO PUSH2 0x37F JUMPI PUSH1 0x20 PUSH2 0x92F DUP5 DUP5 PUSH2 0x2119 JUMP JUMPDEST POP CALLVALUE PUSH2 0x37F JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x37F JUMPI PUSH2 0x121F PUSH2 0x2E3F JUMP JUMPDEST PUSH1 0xFF NOT PUSH1 0xCA SLOAD AND PUSH1 0xCA SSTORE PUSH1 0x40 MLOAD RETURN JUMPDEST POP PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x37F JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x4 CALLDATALOAD DUP2 DUP2 AND DUP2 SUB PUSH2 0x604 JUMPI DUP3 SWAP2 PUSH1 0x24 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x131D JUMPI CALLDATASIZE PUSH1 0x23 DUP5 ADD SLT ISZERO PUSH2 0x131D JUMPI DUP3 PUSH1 0x4 ADD CALLDATALOAD PUSH2 0x127D DUP2 PUSH2 0x21AF JUMP JUMPDEST SWAP3 PUSH2 0x128B PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x215B JUMP JUMPDEST DUP2 DUP5 MSTORE CALLDATASIZE PUSH1 0x24 DUP4 DUP8 ADD ADD GT PUSH2 0x1319 JUMPI PUSH2 0xBBB SWAP6 PUSH1 0x20 DUP4 PUSH2 0x130C SWAP5 PUSH1 0x24 PUSH1 0x1 SWAP10 ADD DUP4 DUP10 ADD CALLDATACOPY DUP7 ADD ADD MSTORE DUP1 PUSH32 0x0 AND SWAP1 PUSH2 0x12E3 DUP3 ADDRESS EQ ISZERO PUSH2 0x21CB JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD AND EQ PUSH2 0x222C JUMP JUMPDEST PUSH2 0x1314 PUSH2 0x2E3F JUMP JUMPDEST PUSH2 0x228D JUMP JUMPDEST DUP6 DUP1 REVERT JUMPDEST POP POP POP REVERT JUMPDEST POP CALLVALUE PUSH2 0x37F JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x37F JUMPI PUSH1 0x20 PUSH2 0x16D SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x37F JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x37F JUMPI PUSH2 0x179 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x37F JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x37F JUMPI PUSH1 0x20 PUSH2 0x17E SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x37F JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x37F JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH2 0x169 SWAP1 DUP2 SLOAD DUP4 LT ISZERO PUSH2 0x37F JUMPI PUSH1 0x40 PUSH2 0x13B9 DUP5 DUP5 PUSH2 0x2193 JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x37F JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x37F JUMPI PUSH1 0x20 PUSH2 0x170 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x37F JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x37F JUMPI PUSH1 0xCA SLOAD PUSH1 0xFF DUP2 PUSH1 0x8 SHR AND ISZERO PUSH2 0x1461 JUMPI PUSH1 0x10 DUP2 SWAP1 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0xE4E JUMPI PUSH2 0xFF00 NOT AND PUSH1 0xCA SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH1 0x20 PUSH1 0x40 MLOAD CALLER DUP2 MSTORE LOG1 PUSH1 0x40 MLOAD RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x7C7FD079 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x37F JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x37F JUMPI PUSH2 0x148D PUSH2 0x2E3F JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH2 0x1B6 SSTORE PUSH1 0x40 MLOAD RETURN JUMPDEST POP CALLVALUE PUSH2 0x37F JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x37F JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND DUP3 SUB PUSH2 0x604 JUMPI PUSH2 0xBBB SWAP2 PUSH2 0x14F8 DUP3 DUP6 SWAP4 PUSH32 0x0 AND SWAP1 PUSH2 0x12E3 DUP3 ADDRESS EQ ISZERO PUSH2 0x21CB JUMP JUMPDEST PUSH2 0x1500 PUSH2 0x2E3F JUMP JUMPDEST PUSH2 0x1509 DUP3 PUSH2 0x21AF JUMP JUMPDEST SWAP1 PUSH2 0x1517 PUSH1 0x40 MLOAD SWAP3 DUP4 PUSH2 0x215B JUMP JUMPDEST DUP3 DUP3 MSTORE PUSH1 0x1F NOT PUSH2 0x1526 DUP5 PUSH2 0x21AF JUMP JUMPDEST ADD CALLDATASIZE PUSH1 0x20 DUP5 ADD CALLDATACOPY PUSH2 0x228D JUMP JUMPDEST POP CALLVALUE PUSH2 0x37F JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x37F JUMPI PUSH2 0x154B PUSH2 0x2ECD JUMP JUMPDEST PUSH2 0x17D DUP1 SLOAD PUSH1 0xFF DUP2 AND DUP1 PUSH2 0x160D JUMPI JUMPDEST DUP1 PUSH2 0x15FF JUMPI JUMPDEST PUSH2 0x156B JUMPI JUMPDEST DUP3 PUSH1 0x40 MLOAD RETURN JUMPDEST PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x8B77276C97A5709F0D6DB52329848A254EB760CE8BE80D281799F633BDB69E83 DUP3 DUP3 LOG1 PUSH2 0x165 SLOAD DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 EXTCODESIZE ISZERO PUSH2 0x6E6 JUMPI DUP3 PUSH1 0x4 DUP2 DUP5 DUP1 SWAP5 PUSH4 0x8456CB59 PUSH1 0xE0 SHL DUP4 MSTORE GAS CALL DUP1 ISZERO PUSH2 0x15F2 JUMPI PUSH2 0x15E2 JUMPI JUMPDEST POP POP PUSH2 0x15DB PUSH2 0x297B JUMP JUMPDEST CODESIZE DUP1 PUSH2 0x1565 JUMP JUMPDEST PUSH2 0x15EB SWAP2 PUSH2 0x215B JUMP JUMPDEST CODESIZE DUP2 PUSH2 0x15D1 JUMP JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP PUSH2 0x1608 PUSH2 0x267C JUMP JUMPDEST PUSH2 0x1560 JUMP JUMPDEST POP PUSH1 0xFF DUP2 PUSH1 0x8 SHR AND ISZERO PUSH2 0x155A JUMP JUMPDEST POP CALLVALUE PUSH2 0x37F JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x37F JUMPI PUSH1 0x20 PUSH2 0x171 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x37F JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x37F JUMPI PUSH1 0x20 PUSH2 0x175 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x37F JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x37F JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x6E6 JUMPI PUSH2 0x1686 PUSH2 0x2E3F JUMP JUMPDEST PUSH1 0xCA DUP1 SLOAD PUSH3 0x10000 PUSH1 0x1 PUSH1 0xB0 SHL SUB NOT AND PUSH1 0x10 SWAP3 SWAP1 SWAP3 SHL PUSH3 0x10000 PUSH1 0x1 PUSH1 0xB0 SHL SUB AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x40 MLOAD RETURN JUMPDEST POP CALLVALUE PUSH2 0x37F JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x37F JUMPI PUSH2 0x16CC PUSH2 0x2E3F JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH2 0x17C SSTORE PUSH1 0x40 MLOAD RETURN JUMPDEST POP CALLVALUE PUSH2 0x37F JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x37F JUMPI PUSH1 0x20 PUSH2 0x172 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x37F JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x37F JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x6E6 JUMPI PUSH2 0x1726 PUSH2 0x2E3F JUMP JUMPDEST PUSH2 0x179 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x40 MLOAD RETURN JUMPDEST POP CALLVALUE PUSH2 0x37F JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x37F JUMPI PUSH1 0x20 PUSH1 0xFF PUSH2 0x17D SLOAD PUSH1 0x8 SHR AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x37F JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x37F JUMPI PUSH2 0x1780 PUSH2 0x2E3F JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH2 0x174 SSTORE PUSH1 0x40 MLOAD RETURN JUMPDEST POP CALLVALUE PUSH2 0x37F JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x37F JUMPI PUSH1 0x4 CALLDATALOAD DUP1 ISZERO ISZERO DUP1 SWAP2 SUB PUSH2 0x6E6 JUMPI PUSH2 0x17B3 PUSH2 0x2E3F JUMP JUMPDEST PUSH2 0x17D SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD RETURN JUMPDEST POP PUSH2 0x100 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x6E6 JUMPI PUSH2 0x17E4 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x215B JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD DUP2 MSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x64 CALLDATALOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x84 CALLDATALOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x1BB8 JUMPI PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x1BB8 JUMPI PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 SUB PUSH2 0x6E6 JUMPI PUSH1 0xE4 CALLDATALOAD PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0x185C PUSH2 0x2B66 JUMP JUMPDEST POP PUSH1 0xFF PUSH2 0x17D SLOAD PUSH1 0x8 SHR AND PUSH2 0x1F7C JUMPI PUSH2 0x1873 PUSH2 0x2ECD JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP3 ADD MLOAD EQ PUSH2 0x1F6A JUMPI PUSH2 0x1889 DUP2 MLOAD PUSH2 0x2A35 JUMP JUMPDEST PUSH2 0x1896 PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x2A35 JUMP JUMPDEST PUSH2 0x18A1 DUP3 DUP5 MLOAD PUSH2 0x2B8D JUMP JUMPDEST PUSH2 0x18AF DUP2 PUSH1 0x20 DUP6 ADD MLOAD PUSH2 0x2B8D JUMP JUMPDEST PUSH2 0x18C9 DUP3 PUSH2 0x7AC PUSH8 0xDE0B6B3A7640000 PUSH1 0x40 DUP8 ADD MLOAD PUSH2 0x2824 JUMP JUMPDEST SWAP1 PUSH2 0x18DC DUP4 PUSH2 0x7AC DUP4 PUSH1 0x40 DUP9 ADD MLOAD PUSH2 0x2824 JUMP JUMPDEST SWAP3 PUSH1 0x60 DUP6 ADD MLOAD DUP1 DUP6 LT DUP1 ISZERO PUSH2 0x1F62 JUMPI JUMPDEST PUSH2 0x1F44 JUMPI POP PUSH2 0x190A PUSH2 0x1902 DUP4 PUSH1 0x20 DUP9 ADD MLOAD PUSH2 0x2C47 JUMP JUMPDEST SWAP2 DUP7 MLOAD PUSH2 0x2C47 JUMP JUMPDEST LT PUSH2 0x1E67 JUMPI JUMPDEST POP PUSH1 0xA0 DUP4 ADD MLOAD PUSH1 0xE0 DUP5 ADD MLOAD PUSH2 0x170 SLOAD DUP7 SWAP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP6 DUP8 SWAP6 SWAP1 SWAP5 SWAP2 SWAP4 SWAP1 SWAP2 AND SWAP2 SWAP1 PUSH2 0x1940 PUSH2 0x2B66 JUMP JUMPDEST SWAP7 DUP10 SWAP4 DUP1 PUSH2 0x1DE2 JUMPI JUMPDEST POP PUSH2 0x161 SLOAD PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP4 PUSH1 0x44 DUP2 DUP5 GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x1DD7 JUMPI DUP13 SWAP4 PUSH2 0x1D9F JUMPI JUMPDEST POP DUP3 PUSH2 0x1C6F JUMPI JUMPDEST POP POP POP PUSH1 0x20 DUP8 ADD MLOAD ISZERO PUSH2 0x1C21 JUMPI JUMPDEST POP POP POP PUSH1 0x80 DUP2 ADD MLOAD DUP1 DUP7 GT PUSH2 0x1C02 JUMPI POP DUP1 MLOAD PUSH1 0x20 DUP3 ADD MLOAD SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0xA0 DUP5 ADD MLOAD AND SWAP1 PUSH32 0xBB1E510AEF3E8A513D50818519676F83FE568EF46FBA020E92D569F16A3D1AEC PUSH1 0xE0 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0xC0 DUP8 ADD MLOAD AND SWAP5 PUSH1 0x40 DUP8 ADD MLOAD DUP11 DUP1 MLOAD PUSH1 0x20 DUP3 ADD MLOAD SWAP1 PUSH1 0x60 PUSH1 0x40 DUP5 ADD MLOAD SWAP4 ADD MLOAD SWAP4 PUSH1 0x40 MLOAD SWAP6 DUP7 MSTORE PUSH1 0x20 DUP7 ADD MSTORE DUP12 PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP3 ADD MSTORE LOG4 DUP6 PUSH1 0x20 DUP3 ADD MLOAD SWAP2 PUSH2 0x1AB3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0xC0 DUP4 ADD MLOAD AND SWAP4 PUSH1 0x20 DUP7 DUP6 PUSH2 0x169 SWAP8 PUSH2 0x1A5F DUP6 DUP11 PUSH2 0x2193 JUMP JUMPDEST POP PUSH2 0x1A6B DUP5 DUP3 SLOAD PUSH2 0x26E2 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x1A7A PUSH2 0x167 SWAP6 DUP7 PUSH2 0x2119 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x40C10F19 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP1 SWAP6 DUP7 SWAP4 SWAP3 DUP5 SWAP3 SWAP1 SWAP2 DUP4 SWAP1 PUSH1 0x44 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP4 PUSH1 0x3 SWAP2 SWAP1 SWAP2 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL DUP1 ISZERO PUSH2 0x1BF7 JUMPI PUSH2 0x1BBC JUMPI JUMPDEST PUSH2 0x1B09 SWAP2 POP DUP3 MLOAD SWAP1 PUSH2 0x1AF6 DUP3 PUSH1 0x40 DUP7 ADD MLOAD SWAP6 PUSH1 0xA0 PUSH1 0x1 DUP1 DUP3 SHL SUB SWAP2 ADD MLOAD AND SWAP8 PUSH2 0x2193 JUMP JUMPDEST POP PUSH2 0x1B02 DUP6 DUP3 SLOAD PUSH2 0x28E5 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x2119 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x3 SWAP2 SWAP1 SWAP2 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 EXTCODESIZE ISZERO PUSH2 0x1BB8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2770A7EB PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND PUSH1 0x4 DUP6 ADD MSTORE PUSH1 0x24 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 DUP5 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x1BAD JUMPI SWAP1 PUSH1 0xE0 SWAP7 PUSH1 0x60 SWAP6 SWAP5 SWAP4 SWAP3 PUSH2 0x1B9D JUMPI JUMPDEST POP POP PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 DUP5 ADD MSTORE DUP1 MLOAD DUP3 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0xA0 DUP5 ADD MSTORE ADD MLOAD PUSH1 0xC0 DUP3 ADD MSTORE RETURN JUMPDEST PUSH2 0x1BA6 SWAP2 PUSH2 0x215B JUMP JUMPDEST CODESIZE DUP1 PUSH2 0x1B68 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP3 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1BEF JUMPI JUMPDEST DUP2 PUSH2 0x1BD5 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x215B JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x888 JUMPI PUSH2 0x1BE9 PUSH2 0x1B09 SWAP3 PUSH2 0x2A7C JUMP JUMPDEST POP PUSH2 0x1AD2 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1BC8 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP7 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x44 SWAP1 DUP6 MLOAD PUSH1 0x40 MLOAD SWAP2 PUSH4 0xB63F1A7 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST PUSH8 0xDE0B6B3A7640000 SWAP3 SWAP4 SWAP8 POP SWAP1 PUSH2 0x1C38 SWAP2 PUSH2 0x2824 JUMP JUMPDEST DIV DUP1 DUP6 MSTORE SWAP1 DUP1 ISZERO PUSH2 0x1C68 JUMPI SWAP1 PUSH8 0xDE0B6B3A7640000 PUSH2 0x1C5E SWAP3 DIV SWAP1 DUP2 PUSH1 0x40 DUP8 ADD MSTORE PUSH2 0x26E2 JUMP JUMPDEST SWAP4 JUMPDEST CODESIZE DUP1 DUP1 PUSH2 0x199F JUMP JUMPDEST POP SWAP4 PUSH2 0x1C60 JUMP JUMPDEST PUSH2 0x162 SLOAD PUSH2 0x1C85 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2AA3 JUMP JUMPDEST PUSH2 0x1C90 JUMPI JUMPDEST POP PUSH2 0x1991 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP9 POP PUSH2 0x1CBF DUP2 PUSH8 0xDE0B6B3A7640000 PUSH2 0x1CB9 PUSH2 0x1CAF DUP10 DUP10 PUSH2 0x2824 JUMP JUMPDEST PUSH2 0x175 SLOAD SWAP1 PUSH2 0x2824 JUMP JUMPDEST DIV PUSH2 0x2837 JUMP JUMPDEST PUSH1 0x20 DUP12 ADD DUP2 SWAP1 MSTORE DUP7 ISZERO PUSH2 0x1D96 JUMPI POP PUSH2 0x1CDA PUSH2 0x1CEA SWAP2 DUP8 PUSH2 0x2837 JUMP JUMPDEST DUP1 PUSH1 0x60 DUP13 ADD MSTORE PUSH1 0x20 DUP12 ADD MLOAD PUSH2 0x26E2 JUMP JUMPDEST DUP1 SWAP9 JUMPDEST LT SWAP2 DUP3 ISZERO PUSH2 0x1D1B JUMPI JUMPDEST POP POP PUSH2 0x1D06 JUMPI JUMPDEST CODESIZE DUP1 DUP1 DUP1 PUSH2 0x1C8A JUMP JUMPDEST SWAP5 POP DUP8 PUSH1 0x20 DUP8 ADD MSTORE DUP8 PUSH1 0x60 DUP8 ADD MSTORE DUP8 SWAP5 PUSH2 0x1CFD JUMP JUMPDEST PUSH1 0x20 SWAP2 SWAP3 POP PUSH1 0x24 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL DUP1 ISZERO PUSH2 0x1D8B JUMPI DUP8 SWAP2 DUP12 SWAP2 PUSH2 0x1D52 JUMPI JUMPDEST POP LT CODESIZE DUP1 PUSH2 0x1CF6 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1D83 JUMPI JUMPDEST DUP2 PUSH2 0x1D6E PUSH1 0x20 SWAP4 DUP4 PUSH2 0x215B JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1D7F JUMPI DUP7 SWAP1 MLOAD CODESIZE PUSH2 0x1D49 JUMP JUMPDEST DUP10 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1D61 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP13 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 POP DUP1 SWAP9 PUSH2 0x1CED JUMP JUMPDEST SWAP1 SWAP3 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1DCF JUMPI JUMPDEST DUP2 PUSH2 0x1DBB PUSH1 0x20 SWAP4 DUP4 PUSH2 0x215B JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1DCB JUMPI MLOAD SWAP2 CODESIZE PUSH2 0x198A JUMP JUMPDEST DUP12 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1DAE JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP15 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x1E9 SLOAD PUSH1 0x40 MLOAD PUSH4 0x64A731E9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP2 SWAP5 POP SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL DUP1 ISZERO PUSH2 0x1D8B JUMPI DUP11 SWAP1 PUSH2 0x1E33 JUMPI JUMPDEST PUSH2 0x1E2C SWAP2 POP DUP3 PUSH2 0x2824 JUMP JUMPDEST SWAP3 CODESIZE PUSH2 0x1949 JUMP JUMPDEST POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1E5F JUMPI JUMPDEST DUP2 PUSH2 0x1E4D PUSH1 0x20 SWAP4 DUP4 PUSH2 0x215B JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1D7F JUMPI PUSH2 0x1E2C SWAP1 MLOAD PUSH2 0x1E21 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1E40 JUMP JUMPDEST PUSH2 0x1E83 SWAP1 PUSH2 0x1E73 PUSH2 0x2DAB JUMP JUMPDEST PUSH2 0x1E7B PUSH2 0x2CEF JUMP JUMPDEST SWAP3 SWAP1 SWAP3 PUSH2 0x2705 JUMP JUMPDEST SWAP1 PUSH2 0x1E8E DUP3 DUP3 PUSH2 0x28B8 JUMP JUMPDEST DUP5 DUP2 GT ISZERO PUSH2 0x1F26 JUMPI POP DUP3 SWAP2 PUSH2 0x1EB4 SWAP2 PUSH2 0x1EAE PUSH2 0x1EB9 SWAP6 PUSH1 0x20 DUP12 ADD MLOAD PUSH2 0x2C47 JUMP JUMPDEST SWAP6 PUSH2 0x2BE0 JUMP JUMPDEST PUSH2 0x2824 JUMP JUMPDEST SWAP1 DUP1 PUSH8 0xDE0B6B3A763FFFF NOT DUP2 ADD GT PUSH2 0x1F12 JUMPI PUSH8 0xDE0B6B3A7640000 SWAP2 PUSH2 0x1EEB SWAP2 PUSH8 0xDE0B6B3A763FFFF NOT ADD SWAP1 PUSH2 0x2837 JUMP JUMPDEST DIV DUP3 DUP2 LT ISZERO PUSH2 0x1910 JUMPI DUP3 PUSH1 0x44 SWAP2 PUSH1 0x40 MLOAD SWAP2 PUSH4 0xC39B739F PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST PUSH1 0x44 SWAP1 DUP6 PUSH1 0x40 MLOAD SWAP2 PUSH4 0x79121201 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x44 SWAP1 DUP6 PUSH1 0x40 MLOAD SWAP2 PUSH4 0x272E3F59 PUSH1 0xE2 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST POP DUP5 ISZERO PUSH2 0x18EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2A9FFAB7 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1CA61D77 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x37F JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x37F JUMPI PUSH1 0x20 PUSH2 0x17F SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x37F JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x37F JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x6E6 JUMPI PUSH2 0x1FDC PUSH2 0x2E3F JUMP JUMPDEST PUSH2 0x162 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x40 MLOAD RETURN JUMPDEST POP CALLVALUE PUSH2 0x37F JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x37F JUMPI PUSH2 0x200F PUSH2 0x2E3F JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH2 0x171 SSTORE PUSH1 0x40 MLOAD RETURN JUMPDEST POP CALLVALUE PUSH2 0x37F JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x37F JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x6E6 JUMPI PUSH2 0x204A PUSH2 0x2E3F JUMP JUMPDEST PUSH2 0x178 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x40 MLOAD RETURN JUMPDEST POP CALLVALUE PUSH2 0x37F JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x37F JUMPI PUSH1 0x20 PUSH2 0x1B5 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x37F JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x37F JUMPI PUSH1 0x97 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x37F JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x37F JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH2 0x167 SWAP1 DUP2 SLOAD DUP4 LT ISZERO PUSH2 0x37F JUMPI PUSH1 0x20 PUSH2 0x20DA DUP5 DUP5 PUSH2 0x2119 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x37F JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x37F JUMPI PUSH2 0x210D PUSH2 0x2E3F JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH2 0x16C SSTORE PUSH1 0x40 MLOAD RETURN JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x2131 JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x604 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x217D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x2131 JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 SHL ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x217D JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x21D2 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x19195B1959D85D1958D85B1B PUSH1 0xA2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2233 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x6163746976652070726F7879 PUSH1 0xA0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 SWAP3 SWAP2 PUSH1 0xFF PUSH32 0x4910FDFA16FED3260ED0E7147F7CC6DA11A60208B5B9406D12A635614FFD9143 SLOAD AND PUSH1 0x0 EQ PUSH2 0x22CA JUMPI POP PUSH2 0x22C8 SWAP2 SWAP3 POP PUSH2 0x255F JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x52D1902D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x20 SWAP5 SWAP2 SWAP4 SWAP2 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP2 DUP7 DUP2 PUSH1 0x4 DUP2 DUP7 GAS STATICCALL PUSH1 0x0 SWAP2 DUP2 PUSH2 0x2530 JUMPI JUMPDEST POP PUSH2 0x235B JUMPI DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A206E657720696D706C656D656E74617469 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x6F6E206973206E6F742055555053 PUSH1 0x90 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP4 SWAP6 SWAP5 SWAP4 PUSH32 0xC9F76B5EC45E5CDEF99837D7B6D2467235C1DF8933C8CA56DF5C35AFA2C7D444 ADD PUSH2 0x24DA JUMPI PUSH2 0x238E DUP4 PUSH2 0x255F JUMP JUMPDEST DUP4 MLOAD SWAP2 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x0 DUP5 LOG2 DUP7 MLOAD ISZERO SWAP1 DUP2 ISZERO SWAP2 PUSH2 0x24D2 JUMPI JUMPDEST POP PUSH2 0x23D0 JUMPI JUMPDEST POP POP POP POP SWAP1 POP JUMP JUMPDEST DUP2 EXTCODESIZE ISZERO PUSH2 0x2481 JUMPI POP PUSH1 0x0 DUP6 DUP2 SWAP3 DUP6 PUSH2 0x2463 SWAP8 SWAP9 MLOAD SWAP3 ADD SWAP1 GAS DELEGATECALL RETURNDATASIZE ISZERO PUSH2 0x246E JUMPI PUSH7 0x819985A5B1959 PUSH1 0xCA SHL RETURNDATASIZE SWAP3 PUSH2 0x2405 DUP5 PUSH2 0x21AF JUMP JUMPDEST SWAP4 PUSH2 0x2412 DUP3 MLOAD SWAP6 DUP7 PUSH2 0x215B JUMP JUMPDEST DUP5 MSTORE RETURNDATASIZE PUSH1 0x0 DUP7 DUP7 ADD RETURNDATACOPY JUMPDEST PUSH32 0x416464726573733A206C6F772D6C6576656C2064656C65676174652063616C6C PUSH2 0x2447 PUSH1 0x27 PUSH2 0x21AF JUMP JUMPDEST SWAP6 PUSH2 0x2454 DUP4 MLOAD SWAP8 DUP9 PUSH2 0x215B JUMP JUMPDEST PUSH1 0x27 DUP8 MSTORE DUP7 ADD MSTORE DUP5 ADD MSTORE PUSH2 0x2601 JUMP JUMPDEST POP DUP1 CODESIZE DUP1 DUP1 DUP1 PUSH2 0x23C8 JUMP JUMPDEST PUSH7 0x819985A5B1959 PUSH1 0xCA SHL PUSH1 0x60 SWAP3 PUSH2 0x241C JUMP JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2064656C65676174652063616C6C20746F206E6F6E2D636F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1B9D1C9858DD PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 POP CODESIZE PUSH2 0x23C2 JUMP JUMPDEST DUP4 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A20756E737570706F727465642070726F78 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x1A58589B1955555251 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 SWAP2 DUP9 DUP3 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x2558 JUMPI JUMPDEST PUSH2 0x2547 DUP2 DUP4 PUSH2 0x215B JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x37F JUMPI POP MLOAD SWAP1 CODESIZE PUSH2 0x22FB JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x253D JUMP JUMPDEST DUP1 EXTCODESIZE ISZERO PUSH2 0x25A6 JUMPI PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x1BDD08184818DBDB9D1C9858DD PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 SWAP2 SWAP1 ISZERO PUSH2 0x260D JUMPI POP SWAP1 JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0x261D JUMPI POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE DUP2 PUSH1 0x20 DUP1 PUSH1 0x4 DUP4 ADD MSTORE DUP3 MLOAD SWAP1 DUP2 PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x0 SWAP4 JUMPDEST DUP3 DUP6 LT PUSH2 0x2663 JUMPI POP POP PUSH1 0x44 SWAP3 POP PUSH1 0x0 DUP4 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SUB ADD SWAP1 REVERT JUMPDEST DUP5 DUP2 ADD DUP3 ADD MLOAD DUP7 DUP7 ADD PUSH1 0x44 ADD MSTORE SWAP4 DUP2 ADD SWAP4 DUP6 SWAP4 POP PUSH2 0x2640 JUMP JUMPDEST PUSH2 0x169 SLOAD PUSH2 0x2689 DUP2 PUSH2 0x290A JUMP JUMPDEST SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x26B1 JUMPI POP POP PUSH2 0x26A2 PUSH2 0x26A8 SWAP2 PUSH2 0x2705 JUMP JUMPDEST SWAP1 PUSH2 0x28B8 JUMP JUMPDEST PUSH2 0x17C SLOAD LT ISZERO SWAP1 JUMP JUMPDEST DUP1 PUSH2 0x26BD PUSH1 0x1 SWAP3 PUSH2 0x2A35 JUMP JUMPDEST PUSH2 0x26C7 DUP3 DUP7 PUSH2 0x26CE JUMP JUMPDEST MSTORE ADD PUSH2 0x268D JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x2131 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x26EF JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 SWAP2 PUSH1 0x0 SWAP1 PUSH2 0x169 DUP1 SLOAD SWAP1 PUSH1 0x0 SWAP3 JUMPDEST DUP3 DUP5 LT PUSH2 0x273C JUMPI POP POP POP POP PUSH2 0x2738 PUSH8 0xDE0B6B3A7640000 SWAP2 PUSH2 0x16B SLOAD SWAP1 PUSH2 0x2824 JUMP JUMPDEST DIV SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP6 PUSH2 0x2791 DUP6 PUSH2 0x278B PUSH1 0x1 SWAP4 PUSH2 0x2785 PUSH2 0x2758 DUP5 DUP9 PUSH2 0x26CE JUMP JUMPDEST MLOAD PUSH2 0x7AC PUSH8 0xDE0B6B3A7640000 PUSH2 0x1EB4 DUP12 PUSH2 0x277E PUSH2 0x2776 DUP7 DUP12 PUSH2 0x27B7 JUMP JUMPDEST SWAP11 SWAP1 SWAP3 PUSH2 0x2193 JUMP JUMPDEST POP SLOAD PUSH2 0x26E2 JUMP JUMPDEST SWAP1 PUSH2 0x26E2 JUMP JUMPDEST SWAP9 PUSH2 0x26E2 JUMP JUMPDEST SWAP5 ADD SWAP3 SWAP2 SWAP1 PUSH2 0x2716 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH1 0x0 DUP4 DUP3 ADD SWAP4 DUP5 SLT SWAP2 SLT SWAP1 DUP1 ISZERO DUP3 AND SWAP2 ISZERO AND OR PUSH2 0x26EF JUMPI JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x27E5 DUP2 PUSH1 0x0 SWAP6 PUSH2 0x27DB PUSH2 0x27D2 DUP3 PUSH2 0x180 PUSH2 0x2119 JUMP JUMPDEST SWAP4 SWAP1 SLOAD SWAP3 PUSH2 0x2857 JUMP JUMPDEST SWAP2 PUSH1 0x3 SHL SHR PUSH2 0x279B JUMP JUMPDEST PUSH1 0x0 DUP2 SGT PUSH2 0x27F4 JUMPI JUMPDEST POP POP SWAP2 SWAP1 JUMP JUMPDEST PUSH2 0x281C SWAP2 SWAP5 POP PUSH2 0x2816 SWAP3 POP DUP1 SWAP5 PUSH8 0xDE0B6B3A7640000 SWAP4 DUP5 SWAP2 PUSH2 0x16C SLOAD PUSH2 0x2824 JUMP JUMPDEST DIV PUSH2 0x2824 JUMP JUMPDEST DIV CODESIZE DUP1 PUSH2 0x27EE JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT DUP2 ISZERO ISZERO AND PUSH2 0x26EF JUMPI MUL SWAP1 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x2841 JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH2 0x289D SWAP1 PUSH2 0x2897 PUSH2 0x288A PUSH2 0x2881 PUSH8 0xDE0B6B3A7640000 PUSH2 0x287A DUP8 PUSH2 0x169 PUSH2 0x2193 JUMP JUMPDEST POP SLOAD PUSH2 0x2824 JUMP JUMPDEST SWAP5 PUSH2 0x181 PUSH2 0x2119 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR DUP5 PUSH2 0x2837 JUMP JUMPDEST SWAP3 PUSH2 0x2837 JUMP JUMPDEST SWAP1 PUSH1 0x0 DUP3 DUP3 SUB SWAP3 SLT DUP2 DUP4 SLT DUP2 AND SWAP2 DUP4 SGT SWAP1 ISZERO AND OR PUSH2 0x26EF JUMPI SWAP1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x28DD JUMPI PUSH2 0x7AC PUSH8 0xDE0B6B3A7640000 PUSH2 0x1EB4 PUSH2 0x28DA SWAP5 PUSH2 0x163 SLOAD PUSH2 0x28E5 JUMP JUMPDEST SWAP1 JUMP JUMPDEST POP POP PUSH1 0x0 NOT SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x26EF JUMPI JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x217D JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x2914 DUP3 PUSH2 0x28F2 JUMP JUMPDEST PUSH2 0x2921 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x215B JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x2932 PUSH1 0x1F NOT SWAP2 PUSH2 0x28F2 JUMP JUMPDEST ADD SWAP1 PUSH1 0x20 CALLDATASIZE SWAP2 ADD CALLDATACOPY JUMP JUMPDEST DUP1 SLOAD SWAP1 PUSH1 0x1 PUSH1 0x40 SHL DUP3 LT ISZERO PUSH2 0x217D JUMPI DUP2 PUSH2 0x295E SWAP2 PUSH1 0x1 PUSH2 0x2977 SWAP5 ADD DUP2 SSTORE PUSH2 0x2119 JUMP JUMPDEST DUP2 SWAP4 SWAP2 SLOAD SWAP1 PUSH1 0x3 SHL PUSH1 0x0 NOT DUP2 SHL SWAP3 DUP4 SWAP2 SHL AND SWAP2 NOT AND OR SWAP1 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x163 SLOAD DUP1 ISZERO PUSH2 0x2A32 JUMPI PUSH2 0x169 SWAP1 DUP2 SLOAD SWAP2 PUSH1 0x0 SWAP1 PUSH2 0x2998 DUP5 PUSH2 0x290A JUMP JUMPDEST SWAP1 DUP3 SWAP1 JUMPDEST DUP6 DUP3 LT PUSH2 0x29E2 JUMPI POP POP PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x29B6 JUMPI POP POP POP POP POP JUMP JUMPDEST DUP1 PUSH2 0x29DC PUSH2 0x29D4 DUP7 PUSH2 0x7AC DUP8 PUSH2 0x29CE PUSH1 0x1 SWAP8 DUP10 PUSH2 0x26CE JUMP JUMPDEST MLOAD PUSH2 0x2824 JUMP JUMPDEST PUSH2 0x16A PUSH2 0x293C JUMP JUMPDEST ADD PUSH2 0x29A8 JUMP JUMPDEST SWAP1 SWAP3 PUSH2 0x2A2A PUSH1 0x1 SWAP2 PUSH2 0x29F3 DUP7 PUSH2 0x2A35 JUMP JUMPDEST PUSH2 0x29FD DUP8 DUP8 PUSH2 0x26CE JUMP JUMPDEST MSTORE PUSH2 0x2785 PUSH2 0x2A0B DUP8 DUP7 PUSH2 0x2193 JUMP JUMPDEST POP SLOAD PUSH2 0x7AC PUSH8 0xDE0B6B3A7640000 PUSH2 0x2A23 DUP11 DUP11 PUSH2 0x26CE JUMP JUMPDEST MLOAD SWAP3 PUSH2 0x2824 JUMP JUMPDEST SWAP4 ADD SWAP1 PUSH2 0x299C JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x2A41 SWAP1 PUSH2 0x169 PUSH2 0x2193 JUMP JUMPDEST POP PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2A58 DUP2 PUSH2 0x2AA3 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ISZERO PUSH2 0x2A64 JUMPI POP SWAP1 JUMP JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0x7F6E4DB9 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST MLOAD SWAP1 DUP2 ISZERO ISZERO DUP3 SUB PUSH2 0x604 JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 PUSH1 0x40 SWAP2 SUB SLT PUSH2 0x604 JUMPI PUSH2 0x28DA PUSH1 0x20 DUP4 MLOAD SWAP4 ADD PUSH2 0x2A7C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x59E02DD7 PUSH1 0xE0 SHL DUP2 MSTORE SWAP3 SWAP2 DUP4 SWAP1 PUSH1 0x4 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x2AF9 JUMPI PUSH1 0x0 SWAP1 DUP2 SWAP4 PUSH2 0x2ADA JUMPI POP SWAP2 SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x2AF5 SWAP2 SWAP3 POP PUSH1 0x40 RETURNDATASIZE DUP2 GT PUSH2 0x5F2 JUMPI PUSH2 0x5E2 DUP2 DUP4 PUSH2 0x215B JUMP JUMPDEST SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0xE0 DUP2 ADD SWAP3 SWAP2 PUSH1 0xC0 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 PUSH2 0x2B22 DUP4 PUSH2 0x2147 JUMP JUMPDEST AND DUP6 MSTORE PUSH2 0x2B31 PUSH1 0x20 DUP4 ADD PUSH2 0x2147 JUMP JUMPDEST AND PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 DUP2 ADD CALLDATALOAD PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP2 ADD CALLDATALOAD PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x80 DUP2 ADD CALLDATALOAD PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP2 ADD CALLDATALOAD PUSH1 0xA0 DUP6 ADD MSTORE ADD CALLDATALOAD SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x2B75 PUSH1 0x80 DUP4 PUSH2 0x215B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP4 DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST PUSH2 0x295E PUSH2 0x2977 SWAP2 PUSH2 0x2B9E DUP5 DUP3 PUSH2 0x2857 JUMP JUMPDEST PUSH2 0x2BD6 PUSH2 0x2BAD DUP4 PUSH2 0x180 PUSH2 0x2119 JUMP JUMPDEST PUSH2 0x2BC0 DUP3 SWAP5 SWAP3 SLOAD SWAP3 DUP4 DUP4 PUSH1 0x3 SHL SHR PUSH2 0x279B JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x3 SHL PUSH1 0x0 NOT DUP2 SHL SWAP3 DUP4 SWAP2 SHL AND SWAP2 NOT AND OR SWAP1 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x181 PUSH2 0x2119 JUMP JUMPDEST SWAP1 SWAP2 DUP2 PUSH2 0x2BED DUP3 DUP6 PUSH2 0x28B8 JUMP JUMPDEST GT ISZERO PUSH2 0x2C1F JUMPI PUSH2 0x28DA SWAP3 PUSH2 0x2C13 PUSH8 0xDE0B6B3A7640000 PUSH2 0x1EB4 PUSH2 0x2C19 SWAP5 PUSH2 0x163 SLOAD PUSH2 0x28E5 JUMP JUMPDEST SWAP3 PUSH2 0x2824 JUMP JUMPDEST SWAP1 PUSH2 0x28E5 JUMP JUMPDEST POP POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD PUSH2 0x2C36 PUSH1 0x40 DUP3 PUSH2 0x215B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1 DUP3 SWAP5 DUP1 SLOAD DUP5 MSTORE ADD SLOAD SWAP2 ADD MSTORE JUMP JUMPDEST PUSH2 0x2C53 DUP2 PUSH2 0x17A PUSH2 0x2119 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR SWAP2 PUSH2 0x1B4 SWAP2 PUSH2 0x2C69 DUP2 DUP5 PUSH2 0x2193 JUMP JUMPDEST POP SLOAD SWAP3 PUSH2 0x1B5 SLOAD NUMBER LT ISZERO PUSH2 0x2C94 JUMPI JUMPDEST POP POP DUP1 DUP3 LT ISZERO PUSH2 0x2C8F JUMPI PUSH2 0x7AC SWAP1 PUSH2 0x28DA SWAP4 PUSH2 0x2824 JUMP JUMPDEST POP POP SWAP1 JUMP JUMPDEST DUP3 SWAP4 POP PUSH2 0x2CA8 PUSH2 0x2CB3 SWAP4 SWAP3 PUSH2 0x2CAE SWAP3 PUSH2 0x2193 JUMP JUMPDEST POP PUSH2 0x2C27 JUMP JUMPDEST PUSH2 0x2CBB JUMP JUMPDEST SWAP1 CODESIZE DUP1 PUSH2 0x2C78 JUMP JUMPDEST PUSH1 0x20 DUP2 MLOAD SWAP2 ADD DUP1 MLOAD SWAP3 PUSH8 0xDE0B6B3A7640000 SWAP4 DUP5 SUB SWAP1 DUP5 DUP3 GT PUSH2 0x26EF JUMPI PUSH2 0x2CE8 PUSH2 0x2785 SWAP3 PUSH2 0x2738 SWAP6 PUSH2 0x2824 JUMP JUMPDEST SWAP3 MLOAD PUSH2 0x2824 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x169 SWAP2 DUP3 SLOAD SWAP3 PUSH2 0x2D02 DUP5 PUSH2 0x290A JUMP JUMPDEST SWAP4 DUP3 SWAP2 JUMPDEST DUP6 DUP3 DUP5 LT PUSH2 0x2D31 JUMPI POP POP POP POP DUP2 ISZERO PUSH2 0x2D25 JUMPI SWAP1 PUSH2 0x2D22 SWAP2 PUSH2 0x2837 JUMP JUMPDEST SWAP2 JUMP JUMPDEST POP POP PUSH2 0x17B SLOAD PUSH1 0x1 SHL SWAP2 JUMP JUMPDEST PUSH2 0x1EB4 PUSH2 0x2D9C DUP6 SWAP8 SWAP7 PUSH2 0x2785 PUSH2 0x2D6B PUSH2 0x2D93 DUP10 PUSH2 0x7AC DUP10 PUSH2 0x1EB4 PUSH2 0x2D7D DUP5 PUSH1 0x1 SWAP14 SWAP15 SWAP16 SWAP13 PUSH2 0x2D61 PUSH2 0x2DA2 SWAP15 PUSH2 0x2A35 JUMP JUMPDEST SWAP9 DUP10 SWAP8 DUP9 SWAP3 PUSH2 0x26CE JUMP JUMPDEST MSTORE PUSH2 0x2D76 DUP7 DUP3 PUSH2 0x27B7 JUMP JUMPDEST POP SWAP4 PUSH2 0x2193 JUMP JUMPDEST POP PUSH2 0x1EB4 PUSH8 0xDE0B6B3A7640000 SWAP4 DUP5 SWAP3 SLOAD PUSH2 0x26E2 JUMP JUMPDEST SWAP5 DUP6 SWAP2 DUP13 PUSH2 0x2C47 JUMP JUMPDEST SWAP6 PUSH2 0x26E2 JUMP JUMPDEST SWAP5 ADD SWAP2 SWAP1 PUSH2 0x2D06 JUMP JUMPDEST PUSH2 0x1B5 DUP1 SLOAD NUMBER LT ISZERO PUSH2 0x2DBA JUMPI POP JUMP JUMPDEST PUSH2 0x169 SLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x2DD4 JUMPI POP POP PUSH2 0x1B6 SLOAD NUMBER ADD SWAP1 SSTORE JUMP JUMPDEST DUP1 DUP1 PUSH32 0x19156E9379C7BBBCE8F646CE5EE30BA860B8F954717405F3D5859A6C1A21AE60 PUSH1 0x1 SWAP4 PUSH2 0x1B4 PUSH2 0x2E0A PUSH2 0x2CA8 DUP4 DUP4 PUSH2 0x2193 JUMP JUMPDEST SWAP1 PUSH2 0x2E28 PUSH2 0x2E20 PUSH2 0x2E1A DUP6 PUSH2 0x2A35 JUMP JUMPDEST DUP5 PUSH2 0x2CBB JUMP JUMPDEST SWAP4 DUP5 SWAP3 PUSH2 0x2193 JUMP JUMPDEST POP SSTORE MLOAD PUSH1 0x40 SWAP2 DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE LOG2 ADD PUSH2 0x2DC1 JUMP JUMPDEST PUSH1 0x97 SLOAD PUSH1 0x40 MLOAD PUSH4 0xD994D6D5 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x2AF9 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x2E94 JUMPI JUMPDEST POP ISZERO PUSH2 0x2E82 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1DD1B1B5 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0x20 DUP3 RETURNDATASIZE DUP3 GT PUSH2 0x2EC5 JUMPI JUMPDEST DUP2 PUSH2 0x2EAD PUSH1 0x20 SWAP4 DUP4 PUSH2 0x215B JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x37F JUMPI POP PUSH2 0x2EBF SWAP1 PUSH2 0x2A7C JUMP JUMPDEST CODESIZE PUSH2 0x2E7A JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x2EA0 JUMP JUMPDEST PUSH1 0xFF PUSH1 0xCA SLOAD PUSH1 0x8 SHR AND PUSH2 0x2EDC JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x783BB6C9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 KECCAK256 ORIGIN ISZERO 0xD5 SELFDESTRUCT DUP2 CREATE 0xD0 SIGNEXTEND 0x2C 0xE5 SLOAD CALLDATALOAD 0xE7 0xFB 0xC5 0xCC 0x4A 0xF7 0x2B 0xC SWAP10 0xC0 PUSH28 0x76F51EFAD7F947AD64736F6C63430008100033608060405234620003 0xB6 JUMPI PUSH3 0x14 PUSH3 0x3BB JUMP JUMPDEST PUSH3 0x1E PUSH3 0x3BB JUMP JUMPDEST DUP2 MLOAD SWAP1 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 DUP2 GT PUSH3 0x2B6 JUMPI PUSH1 0x3 SWAP2 DUP3 SLOAD SWAP3 PUSH1 0x1 SWAP3 DUP4 DUP6 DUP2 SHR SWAP6 AND SWAP6 DUP7 ISZERO PUSH3 0x3AB JUMPI JUMPDEST PUSH1 0x20 SWAP7 DUP8 DUP8 LT EQ PUSH3 0x395 JUMPI DUP2 SWAP1 PUSH1 0x1F SWAP7 DUP8 DUP2 GT PUSH3 0x33F JUMPI JUMPDEST POP DUP8 SWAP1 DUP8 DUP4 GT PUSH1 0x1 EQ PUSH3 0x2D8 JUMPI PUSH1 0x0 SWAP3 PUSH3 0x2CC JUMPI JUMPDEST POP POP PUSH1 0x0 NOT DUP3 DUP5 SHL SHR NOT AND SWAP1 DUP5 SHL OR DUP2 SSTORE JUMPDEST DUP6 MLOAD SWAP2 DUP3 GT PUSH3 0x2B6 JUMPI PUSH1 0x4 SWAP6 DUP7 SLOAD DUP5 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH3 0x2AB JUMPI JUMPDEST DUP8 DUP3 LT EQ PUSH3 0x296 JUMPI DUP6 DUP2 GT PUSH3 0x24B JUMPI JUMPDEST POP DUP6 SWAP1 DUP6 DUP5 GT PUSH1 0x1 EQ PUSH3 0x1E0 JUMPI SWAP4 DUP4 SWAP5 SWAP2 DUP5 SWAP3 PUSH1 0x0 SWAP6 PUSH3 0x1D4 JUMPI JUMPDEST POP POP SHL SWAP3 PUSH1 0x0 NOT SWAP2 SHL SHR NOT AND OR DUP4 SSTORE JUMPDEST PUSH1 0x12 PUSH1 0xFF NOT PUSH1 0x5 SLOAD AND OR PUSH1 0x5 SSTORE CALLER ISZERO PUSH3 0x193 JUMPI POP PUSH1 0x2 SLOAD PUSH28 0x6DF37F675EF6EADF5AB9A2072D44268D97DF837E6748956E5C6C2117 SWAP3 DUP4 DUP3 ADD DUP1 SWAP3 GT PUSH3 0x17E JUMPI POP PUSH1 0x0 SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 PUSH1 0x2 SSTORE CALLER DUP4 MSTORE DUP3 DUP2 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP5 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP4 DUP5 MSTORE CALLER SWAP4 LOG3 PUSH1 0x40 MLOAD PUSH2 0xC41 SWAP1 DUP2 PUSH3 0x3F2 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x11 SWAP1 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x64 SWAP3 SWAP2 PUSH1 0x40 MLOAD SWAP3 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP5 MSTORE DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST ADD MLOAD SWAP4 POP CODESIZE DUP1 PUSH3 0xDB JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x1F NOT DUP5 AND SWAP3 DUP9 PUSH1 0x0 MSTORE DUP5 DUP9 PUSH1 0x0 KECCAK256 SWAP5 PUSH1 0x0 JUMPDEST DUP11 DUP10 DUP4 DUP4 LT PUSH3 0x233 JUMPI POP POP POP LT PUSH3 0x218 JUMPI JUMPDEST POP POP POP POP DUP2 SHL ADD DUP4 SSTORE PUSH3 0xEB JUMP JUMPDEST ADD MLOAD SWAP1 PUSH1 0xF8 DUP5 PUSH1 0x0 NOT SWAP3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 DUP1 PUSH3 0x209 JUMP JUMPDEST DUP7 DUP7 ADD MLOAD DUP10 SSTORE SWAP1 SWAP8 ADD SWAP7 SWAP5 DUP6 ADD SWAP5 DUP9 SWAP4 POP ADD PUSH3 0x1F5 JUMP JUMPDEST DUP8 PUSH1 0x0 MSTORE DUP7 PUSH1 0x0 KECCAK256 DUP7 DUP1 DUP7 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 DUP10 DUP8 LT PUSH3 0x28C JUMPI JUMPDEST ADD PUSH1 0x5 SHR ADD SWAP1 DUP6 SWAP1 JUMPDEST DUP3 DUP2 LT PUSH3 0x27F JUMPI POP POP PUSH3 0xBE JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE ADD DUP6 SWAP1 PUSH3 0x26F JUMP JUMPDEST SWAP3 POP DUP2 SWAP3 PUSH3 0x266 JUMP JUMPDEST PUSH1 0x22 DUP9 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH3 0xAC JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0x7D JUMP JUMPDEST SWAP1 DUP7 SWAP4 POP PUSH1 0x1F NOT DUP4 AND SWAP2 DUP6 PUSH1 0x0 MSTORE DUP10 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x0 JUMPDEST DUP12 DUP3 DUP3 LT PUSH3 0x328 JUMPI POP POP DUP5 GT PUSH3 0x30F JUMPI JUMPDEST POP POP POP DUP2 SHL ADD DUP2 SSTORE PUSH3 0x8F JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT DUP4 DUP7 SHL PUSH1 0xF8 AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x301 JUMP JUMPDEST DUP4 DUP6 ADD MLOAD DUP7 SSTORE DUP11 SWAP8 SWAP1 SWAP6 ADD SWAP5 SWAP4 DUP5 ADD SWAP4 ADD PUSH3 0x2EE JUMP JUMPDEST SWAP1 SWAP2 POP DUP4 PUSH1 0x0 MSTORE DUP8 PUSH1 0x0 KECCAK256 DUP8 DUP1 DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 DUP11 DUP7 LT PUSH3 0x38B JUMPI JUMPDEST SWAP2 DUP9 SWAP2 DUP7 SWAP6 SWAP5 SWAP4 ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH3 0x37B JUMPI POP POP PUSH3 0x66 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP DUP9 SWAP2 ADD PUSH3 0x36B JUMP JUMPDEST SWAP3 POP DUP2 SWAP3 PUSH3 0x35D JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP5 PUSH1 0x7F AND SWAP5 PUSH3 0x4C JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 SWAP1 DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH3 0x2B6 JUMPI PUSH1 0x40 MSTORE PUSH1 0x9 DUP3 MSTORE PUSH9 0x45524332304D6F636B PUSH1 0xB8 SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP INVALID PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATASIZE LT ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x6FDDE03 EQ PUSH2 0x647 JUMPI POP DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x613 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x5F4 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x5A6 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x556 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x496 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x479 JUMPI DUP1 PUSH4 0x5C2F5E26 EQ PUSH2 0x445 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x40D JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x3D3 JUMPI DUP1 PUSH4 0x7A1395AA EQ PUSH2 0x3A7 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x287 JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x255 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1A5 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x166 JUMPI DUP1 PUSH4 0xACE28FA5 EQ PUSH2 0x140 JUMPI PUSH4 0xDD62ED3E EQ PUSH2 0xE9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x13C JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x13C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 CALLDATALOAD DUP2 DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x138 JUMPI PUSH1 0x24 CALLDATALOAD SWAP2 DUP3 AND DUP1 SWAP3 SUB PUSH2 0x138 JUMPI SWAP3 DUP3 SWAP2 PUSH1 0x20 SWAP5 DUP3 MSTORE PUSH1 0x1 DUP6 MSTORE DUP3 DUP3 KECCAK256 SWAP1 DUP3 MSTORE DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP4 DUP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x162 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x162 JUMPI PUSH1 0x20 SWAP1 PUSH1 0xFF PUSH1 0x5 SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x13C JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x13C JUMPI CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP4 SUB PUSH2 0x1A2 JUMPI POP PUSH2 0x199 PUSH1 0x20 SWAP3 PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0xBB7 JUMP JUMPDEST SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST DUP1 REVERT JUMPDEST POP DUP3 CALLVALUE PUSH2 0x1A2 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1A2 JUMPI DUP2 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP2 DUP3 DUP5 SUB PUSH2 0x1A2 JUMPI DUP5 SWAP1 PUSH1 0x24 CALLDATALOAD SWAP4 CALLER DUP3 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP3 DUP3 KECCAK256 SWAP1 DUP3 MSTORE PUSH1 0x20 MSTORE KECCAK256 SLOAD SWAP1 DUP3 DUP3 LT PUSH2 0x204 JUMPI PUSH1 0x20 DUP6 PUSH2 0x1FD DUP6 DUP6 SUB DUP8 CALLER PUSH2 0x916 JUMP JUMPDEST MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x84 SWAP1 PUSH1 0x20 DUP7 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST POP CALLVALUE PUSH2 0x13C JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x13C JUMPI CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x13C JUMPI PUSH2 0x284 SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0xAB0 JUMP JUMPDEST MLOAD RETURN JUMPDEST POP SWAP2 SWAP1 CALLVALUE PUSH2 0x162 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x162 JUMPI DUP1 MLOAD SWAP1 DUP3 DUP5 SLOAD PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP1 DUP4 AND SWAP3 DUP4 ISZERO PUSH2 0x39D JUMPI JUMPDEST PUSH1 0x20 SWAP4 DUP5 DUP5 LT DUP2 EQ PUSH2 0x38A JUMPI DUP4 DUP9 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x36E JUMPI POP PUSH1 0x1 EQ PUSH2 0x319 JUMPI JUMPDEST POP POP POP DUP3 SWAP1 SUB PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT DUP4 DUP6 LT OR PUSH2 0x306 JUMPI POP DUP3 SWAP2 DUP3 PUSH2 0x302 SWAP3 MSTORE DUP3 PUSH2 0x73C JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x41 DUP6 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP8 DUP8 MSTORE SWAP2 SWAP3 POP DUP6 SWAP2 DUP4 PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B JUMPDEST DUP4 DUP6 LT PUSH2 0x35A JUMPI POP POP POP POP DUP4 ADD ADD CODESIZE DUP1 DUP1 PUSH2 0x2D0 JUMP JUMPDEST DUP1 SLOAD DUP9 DUP7 ADD DUP4 ADD MSTORE SWAP4 ADD SWAP3 DUP5 SWAP1 DUP3 ADD PUSH2 0x344 JUMP JUMPDEST PUSH1 0xFF NOT AND DUP8 DUP6 ADD MSTORE POP POP ISZERO ISZERO PUSH1 0x5 SHL DUP5 ADD ADD SWAP1 POP CODESIZE DUP1 DUP1 PUSH2 0x2D0 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP10 MSTORE PUSH1 0x22 DUP11 MSTORE PUSH1 0x24 DUP10 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x2B1 JUMP JUMPDEST POP CALLVALUE PUSH2 0x13C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x13C JUMPI CALLDATALOAD PUSH1 0xFF DUP2 AND DUP1 SWAP2 SUB PUSH2 0x13C JUMPI PUSH1 0xFF NOT PUSH1 0x5 SLOAD AND OR PUSH1 0x5 SSTORE MLOAD RETURN JUMPDEST POP CALLVALUE PUSH2 0x13C JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x13C JUMPI CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x13C JUMPI PUSH2 0x284 SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x408 DUP3 CALLER DUP4 PUSH2 0xA18 JUMP JUMPDEST PUSH2 0xAB0 JUMP JUMPDEST POP CALLVALUE PUSH2 0x13C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x13C JUMPI CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x13C JUMPI DUP3 DUP3 SWAP2 PUSH1 0x20 SWAP5 MSTORE DUP1 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x13C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x13C JUMPI CALLDATALOAD PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x13C JUMPI PUSH2 0xFF00 PUSH1 0x5 SLOAD SWAP2 PUSH1 0x8 SHL AND SWAP1 PUSH2 0xFF00 NOT AND OR PUSH1 0x5 SSTORE MLOAD RETURN JUMPDEST POP CALLVALUE PUSH2 0x13C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x13C JUMPI PUSH2 0x284 SWAP1 CALLDATALOAD CALLER PUSH2 0xAB0 JUMP JUMPDEST POP CALLVALUE PUSH2 0x13C JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x13C JUMPI DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP2 SWAP1 DUP3 SWAP1 SUB PUSH2 0x138 JUMPI PUSH1 0x24 CALLDATALOAD SWAP1 DUP3 ISZERO PUSH2 0x513 JUMPI POP PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x20 DUP3 PUSH2 0x4F8 DUP8 SWAP5 PUSH1 0x2 SLOAD PUSH2 0x785 JUMP JUMPDEST PUSH1 0x2 SSTORE DUP5 DUP5 MSTORE DUP4 DUP3 MSTORE DUP6 DUP5 KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE DUP6 MLOAD SWAP1 DUP2 MSTORE LOG3 MLOAD RETURN JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x20 DUP6 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP CALLVALUE PUSH2 0x13C JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x13C JUMPI CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP1 DUP3 SUB PUSH2 0x138 JUMPI SWAP1 PUSH2 0x59F PUSH1 0x20 SWAP5 PUSH2 0x1FD SWAP4 CALLER DUP3 MSTORE PUSH1 0x1 DUP8 MSTORE DUP6 DUP3 KECCAK256 SWAP1 DUP3 MSTORE DUP7 MSTORE DUP5 PUSH1 0x24 CALLDATALOAD SWAP2 KECCAK256 SLOAD PUSH2 0x785 JUMP JUMPDEST SWAP1 CALLER PUSH2 0x916 JUMP JUMPDEST POP CALLVALUE PUSH2 0x13C JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x13C JUMPI CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 DUP5 AND DUP5 SUB PUSH2 0x1A2 JUMPI PUSH1 0x24 CALLDATALOAD SWAP2 DUP3 AND DUP3 SUB PUSH2 0x1A2 JUMPI POP PUSH1 0x20 SWAP3 PUSH2 0x1FD SWAP2 PUSH1 0x44 CALLDATALOAD SWAP2 PUSH2 0x5EF DUP4 CALLER DUP4 PUSH2 0xA18 JUMP JUMPDEST PUSH2 0x7A8 JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x162 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x162 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x2 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x13C JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x13C JUMPI CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP4 SUB PUSH2 0x1A2 JUMPI POP PUSH2 0x1FD PUSH1 0x20 SWAP3 PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x916 JUMP JUMPDEST DUP5 SWAP2 POP DUP4 CALLVALUE PUSH2 0x13C JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x13C JUMPI DUP3 PUSH1 0x3 SLOAD PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP1 DUP4 AND SWAP3 DUP4 ISZERO PUSH2 0x732 JUMPI JUMPDEST PUSH1 0x20 SWAP4 DUP5 DUP5 LT DUP2 EQ PUSH2 0x38A JUMPI DUP4 DUP9 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x716 JUMPI POP PUSH1 0x1 EQ PUSH2 0x6C0 JUMPI POP POP POP DUP3 SWAP1 SUB PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT DUP4 DUP6 LT OR PUSH2 0x306 JUMPI POP DUP3 SWAP2 DUP3 PUSH2 0x302 SWAP3 MSTORE DUP3 PUSH2 0x73C JUMP JUMPDEST PUSH1 0x3 DUP8 MSTORE SWAP2 SWAP3 POP DUP6 SWAP2 DUP4 PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B JUMPDEST DUP4 DUP6 LT PUSH2 0x702 JUMPI POP POP POP POP DUP4 ADD ADD DUP6 DUP1 DUP1 PUSH2 0x2D0 JUMP JUMPDEST DUP1 SLOAD DUP9 DUP7 ADD DUP4 ADD MSTORE SWAP4 ADD SWAP3 DUP5 SWAP1 DUP3 ADD PUSH2 0x6EC JUMP JUMPDEST PUSH1 0xFF NOT AND DUP8 DUP6 ADD MSTORE POP POP ISZERO ISZERO PUSH1 0x5 SHL DUP5 ADD ADD SWAP1 POP DUP6 DUP1 DUP1 PUSH2 0x2D0 JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x670 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP2 DUP4 ADD DUP2 SWAP1 MSTORE SWAP1 SWAP4 SWAP3 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x771 JUMPI POP POP PUSH1 0x40 SWAP3 SWAP4 POP PUSH1 0x0 DUP4 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 ADD DUP7 ADD MLOAD DUP5 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP6 ADD PUSH2 0x74F JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x792 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 DUP3 ISZERO PUSH2 0x8C3 JUMPI AND SWAP2 DUP3 ISZERO PUSH2 0x872 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP2 DUP1 DUP4 LT PUSH2 0x81E JUMPI PUSH1 0x40 DUP3 DUP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP6 DUP8 PUSH1 0x20 SWAP7 MSTORE DUP3 DUP7 MSTORE SUB DUP3 DUP3 KECCAK256 SSTORE DUP7 DUP2 MSTORE KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 DUP3 ISZERO PUSH2 0x9C7 JUMPI AND SWAP2 DUP3 ISZERO PUSH2 0x977 JUMPI PUSH1 0x20 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 DUP4 PUSH1 0x0 MSTORE PUSH1 0x1 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP6 PUSH1 0x0 MSTORE DUP3 MSTORE DUP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 DUP3 AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP3 PUSH1 0x0 NOT DUP5 SUB PUSH2 0xA50 JUMPI JUMPDEST POP POP POP POP JUMP JUMPDEST DUP1 DUP5 LT PUSH2 0xA6B JUMPI PUSH2 0xA62 SWAP4 SUB SWAP2 PUSH2 0x916 JUMP JUMPDEST CODESIZE DUP1 DUP1 DUP1 PUSH2 0xA4A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0xB68 JUMPI PUSH1 0x0 SWAP2 DUP2 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SLOAD DUP2 DUP2 LT PUSH2 0xB18 JUMPI DUP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 PUSH1 0x20 SWAP3 DUP6 DUP8 MSTORE DUP7 DUP5 MSTORE SUB PUSH1 0x40 DUP7 KECCAK256 SSTORE DUP1 PUSH1 0x2 SLOAD SUB PUSH1 0x2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0xFF PUSH1 0x5 SLOAD PUSH1 0x8 SHR AND PUSH1 0x3 DUP2 LT ISZERO PUSH2 0xBF5 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0xBED JUMPI PUSH1 0x2 EQ PUSH2 0xBE8 JUMPI PUSH2 0xBE3 SWAP2 CALLER PUSH2 0x7A8 JUMP JUMPDEST PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEE 0x4A BLOCKHASH GAS PUSH18 0xFB04972B1BB8D2B872C05694E3061B67CF27 0x5F DUP16 SWAP13 REVERT LOG2 DUP14 SWAP10 0x5C SWAP14 PUSH5 0x736F6C6343 STOP ADDMOD LT STOP CALLER PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH3 0x3B6 JUMPI PUSH3 0x14 PUSH3 0x3BB JUMP JUMPDEST PUSH3 0x1E PUSH3 0x3BB JUMP JUMPDEST DUP2 MLOAD SWAP1 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 DUP2 GT PUSH3 0x2B6 JUMPI PUSH1 0x3 SWAP2 DUP3 SLOAD SWAP3 PUSH1 0x1 SWAP3 DUP4 DUP6 DUP2 SHR SWAP6 AND SWAP6 DUP7 ISZERO PUSH3 0x3AB JUMPI JUMPDEST PUSH1 0x20 SWAP7 DUP8 DUP8 LT EQ PUSH3 0x395 JUMPI DUP2 SWAP1 PUSH1 0x1F SWAP7 DUP8 DUP2 GT PUSH3 0x33F JUMPI JUMPDEST POP DUP8 SWAP1 DUP8 DUP4 GT PUSH1 0x1 EQ PUSH3 0x2D8 JUMPI PUSH1 0x0 SWAP3 PUSH3 0x2CC JUMPI JUMPDEST POP POP PUSH1 0x0 NOT DUP3 DUP5 SHL SHR NOT AND SWAP1 DUP5 SHL OR DUP2 SSTORE JUMPDEST DUP6 MLOAD SWAP2 DUP3 GT PUSH3 0x2B6 JUMPI PUSH1 0x4 SWAP6 DUP7 SLOAD DUP5 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH3 0x2AB JUMPI JUMPDEST DUP8 DUP3 LT EQ PUSH3 0x296 JUMPI DUP6 DUP2 GT PUSH3 0x24B JUMPI JUMPDEST POP DUP6 SWAP1 DUP6 DUP5 GT PUSH1 0x1 EQ PUSH3 0x1E0 JUMPI SWAP4 DUP4 SWAP5 SWAP2 DUP5 SWAP3 PUSH1 0x0 SWAP6 PUSH3 0x1D4 JUMPI JUMPDEST POP POP SHL SWAP3 PUSH1 0x0 NOT SWAP2 SHL SHR NOT AND OR DUP4 SSTORE JUMPDEST PUSH1 0x12 PUSH1 0xFF NOT PUSH1 0x5 SLOAD AND OR PUSH1 0x5 SSTORE CALLER ISZERO PUSH3 0x193 JUMPI POP PUSH1 0x2 SLOAD PUSH28 0x6DF37F675EF6EADF5AB9A2072D44268D97DF837E6748956E5C6C2117 SWAP3 DUP4 DUP3 ADD DUP1 SWAP3 GT PUSH3 0x17E JUMPI POP PUSH1 0x0 SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 PUSH1 0x2 SSTORE CALLER DUP4 MSTORE DUP3 DUP2 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP5 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP4 DUP5 MSTORE CALLER SWAP4 LOG3 PUSH1 0x40 MLOAD PUSH2 0xC41 SWAP1 DUP2 PUSH3 0x3F2 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x11 SWAP1 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x64 SWAP3 SWAP2 PUSH1 0x40 MLOAD SWAP3 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP5 MSTORE DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST ADD MLOAD SWAP4 POP CODESIZE DUP1 PUSH3 0xDB JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x1F NOT DUP5 AND SWAP3 DUP9 PUSH1 0x0 MSTORE DUP5 DUP9 PUSH1 0x0 KECCAK256 SWAP5 PUSH1 0x0 JUMPDEST DUP11 DUP10 DUP4 DUP4 LT PUSH3 0x233 JUMPI POP POP POP LT PUSH3 0x218 JUMPI JUMPDEST POP POP POP POP DUP2 SHL ADD DUP4 SSTORE PUSH3 0xEB JUMP JUMPDEST ADD MLOAD SWAP1 PUSH1 0xF8 DUP5 PUSH1 0x0 NOT SWAP3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 DUP1 PUSH3 0x209 JUMP JUMPDEST DUP7 DUP7 ADD MLOAD DUP10 SSTORE SWAP1 SWAP8 ADD SWAP7 SWAP5 DUP6 ADD SWAP5 DUP9 SWAP4 POP ADD PUSH3 0x1F5 JUMP JUMPDEST DUP8 PUSH1 0x0 MSTORE DUP7 PUSH1 0x0 KECCAK256 DUP7 DUP1 DUP7 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 DUP10 DUP8 LT PUSH3 0x28C JUMPI JUMPDEST ADD PUSH1 0x5 SHR ADD SWAP1 DUP6 SWAP1 JUMPDEST DUP3 DUP2 LT PUSH3 0x27F JUMPI POP POP PUSH3 0xBE JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE ADD DUP6 SWAP1 PUSH3 0x26F JUMP JUMPDEST SWAP3 POP DUP2 SWAP3 PUSH3 0x266 JUMP JUMPDEST PUSH1 0x22 DUP9 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH3 0xAC JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0x7D JUMP JUMPDEST SWAP1 DUP7 SWAP4 POP PUSH1 0x1F NOT DUP4 AND SWAP2 DUP6 PUSH1 0x0 MSTORE DUP10 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x0 JUMPDEST DUP12 DUP3 DUP3 LT PUSH3 0x328 JUMPI POP POP DUP5 GT PUSH3 0x30F JUMPI JUMPDEST POP POP POP DUP2 SHL ADD DUP2 SSTORE PUSH3 0x8F JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT DUP4 DUP7 SHL PUSH1 0xF8 AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x301 JUMP JUMPDEST DUP4 DUP6 ADD MLOAD DUP7 SSTORE DUP11 SWAP8 SWAP1 SWAP6 ADD SWAP5 SWAP4 DUP5 ADD SWAP4 ADD PUSH3 0x2EE JUMP JUMPDEST SWAP1 SWAP2 POP DUP4 PUSH1 0x0 MSTORE DUP8 PUSH1 0x0 KECCAK256 DUP8 DUP1 DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 DUP11 DUP7 LT PUSH3 0x38B JUMPI JUMPDEST SWAP2 DUP9 SWAP2 DUP7 SWAP6 SWAP5 SWAP4 ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH3 0x37B JUMPI POP POP PUSH3 0x66 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP DUP9 SWAP2 ADD PUSH3 0x36B JUMP JUMPDEST SWAP3 POP DUP2 SWAP3 PUSH3 0x35D JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP5 PUSH1 0x7F AND SWAP5 PUSH3 0x4C JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 SWAP1 DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH3 0x2B6 JUMPI PUSH1 0x40 MSTORE PUSH1 0x9 DUP3 MSTORE PUSH9 0x45524332304D6F636B PUSH1 0xB8 SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP INVALID PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATASIZE LT ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x6FDDE03 EQ PUSH2 0x647 JUMPI POP DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x613 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x5F4 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x5A6 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x556 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x496 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x479 JUMPI DUP1 PUSH4 0x5C2F5E26 EQ PUSH2 0x445 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x40D JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x3D3 JUMPI DUP1 PUSH4 0x7A1395AA EQ PUSH2 0x3A7 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x287 JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x255 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1A5 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x166 JUMPI DUP1 PUSH4 0xACE28FA5 EQ PUSH2 0x140 JUMPI PUSH4 0xDD62ED3E EQ PUSH2 0xE9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x13C JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x13C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 CALLDATALOAD DUP2 DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x138 JUMPI PUSH1 0x24 CALLDATALOAD SWAP2 DUP3 AND DUP1 SWAP3 SUB PUSH2 0x138 JUMPI SWAP3 DUP3 SWAP2 PUSH1 0x20 SWAP5 DUP3 MSTORE PUSH1 0x1 DUP6 MSTORE DUP3 DUP3 KECCAK256 SWAP1 DUP3 MSTORE DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP4 DUP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x162 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x162 JUMPI PUSH1 0x20 SWAP1 PUSH1 0xFF PUSH1 0x5 SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x13C JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x13C JUMPI CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP4 SUB PUSH2 0x1A2 JUMPI POP PUSH2 0x199 PUSH1 0x20 SWAP3 PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0xBB7 JUMP JUMPDEST SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST DUP1 REVERT JUMPDEST POP DUP3 CALLVALUE PUSH2 0x1A2 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1A2 JUMPI DUP2 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP2 DUP3 DUP5 SUB PUSH2 0x1A2 JUMPI DUP5 SWAP1 PUSH1 0x24 CALLDATALOAD SWAP4 CALLER DUP3 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP3 DUP3 KECCAK256 SWAP1 DUP3 MSTORE PUSH1 0x20 MSTORE KECCAK256 SLOAD SWAP1 DUP3 DUP3 LT PUSH2 0x204 JUMPI PUSH1 0x20 DUP6 PUSH2 0x1FD DUP6 DUP6 SUB DUP8 CALLER PUSH2 0x916 JUMP JUMPDEST MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x84 SWAP1 PUSH1 0x20 DUP7 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST POP CALLVALUE PUSH2 0x13C JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x13C JUMPI CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x13C JUMPI PUSH2 0x284 SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0xAB0 JUMP JUMPDEST MLOAD RETURN JUMPDEST POP SWAP2 SWAP1 CALLVALUE PUSH2 0x162 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x162 JUMPI DUP1 MLOAD SWAP1 DUP3 DUP5 SLOAD PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP1 DUP4 AND SWAP3 DUP4 ISZERO PUSH2 0x39D JUMPI JUMPDEST PUSH1 0x20 SWAP4 DUP5 DUP5 LT DUP2 EQ PUSH2 0x38A JUMPI DUP4 DUP9 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x36E JUMPI POP PUSH1 0x1 EQ PUSH2 0x319 JUMPI JUMPDEST POP POP POP DUP3 SWAP1 SUB PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT DUP4 DUP6 LT OR PUSH2 0x306 JUMPI POP DUP3 SWAP2 DUP3 PUSH2 0x302 SWAP3 MSTORE DUP3 PUSH2 0x73C JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x41 DUP6 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP8 DUP8 MSTORE SWAP2 SWAP3 POP DUP6 SWAP2 DUP4 PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B JUMPDEST DUP4 DUP6 LT PUSH2 0x35A JUMPI POP POP POP POP DUP4 ADD ADD CODESIZE DUP1 DUP1 PUSH2 0x2D0 JUMP JUMPDEST DUP1 SLOAD DUP9 DUP7 ADD DUP4 ADD MSTORE SWAP4 ADD SWAP3 DUP5 SWAP1 DUP3 ADD PUSH2 0x344 JUMP JUMPDEST PUSH1 0xFF NOT AND DUP8 DUP6 ADD MSTORE POP POP ISZERO ISZERO PUSH1 0x5 SHL DUP5 ADD ADD SWAP1 POP CODESIZE DUP1 DUP1 PUSH2 0x2D0 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP10 MSTORE PUSH1 0x22 DUP11 MSTORE PUSH1 0x24 DUP10 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x2B1 JUMP JUMPDEST POP CALLVALUE PUSH2 0x13C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x13C JUMPI CALLDATALOAD PUSH1 0xFF DUP2 AND DUP1 SWAP2 SUB PUSH2 0x13C JUMPI PUSH1 0xFF NOT PUSH1 0x5 SLOAD AND OR PUSH1 0x5 SSTORE MLOAD RETURN JUMPDEST POP CALLVALUE PUSH2 0x13C JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x13C JUMPI CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x13C JUMPI PUSH2 0x284 SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x408 DUP3 CALLER DUP4 PUSH2 0xA18 JUMP JUMPDEST PUSH2 0xAB0 JUMP JUMPDEST POP CALLVALUE PUSH2 0x13C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x13C JUMPI CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x13C JUMPI DUP3 DUP3 SWAP2 PUSH1 0x20 SWAP5 MSTORE DUP1 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x13C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x13C JUMPI CALLDATALOAD PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x13C JUMPI PUSH2 0xFF00 PUSH1 0x5 SLOAD SWAP2 PUSH1 0x8 SHL AND SWAP1 PUSH2 0xFF00 NOT AND OR PUSH1 0x5 SSTORE MLOAD RETURN JUMPDEST POP CALLVALUE PUSH2 0x13C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x13C JUMPI PUSH2 0x284 SWAP1 CALLDATALOAD CALLER PUSH2 0xAB0 JUMP JUMPDEST POP CALLVALUE PUSH2 0x13C JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x13C JUMPI DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP2 SWAP1 DUP3 SWAP1 SUB PUSH2 0x138 JUMPI PUSH1 0x24 CALLDATALOAD SWAP1 DUP3 ISZERO PUSH2 0x513 JUMPI POP PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x20 DUP3 PUSH2 0x4F8 DUP8 SWAP5 PUSH1 0x2 SLOAD PUSH2 0x785 JUMP JUMPDEST PUSH1 0x2 SSTORE DUP5 DUP5 MSTORE DUP4 DUP3 MSTORE DUP6 DUP5 KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE DUP6 MLOAD SWAP1 DUP2 MSTORE LOG3 MLOAD RETURN JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x20 DUP6 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP CALLVALUE PUSH2 0x13C JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x13C JUMPI CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP1 DUP3 SUB PUSH2 0x138 JUMPI SWAP1 PUSH2 0x59F PUSH1 0x20 SWAP5 PUSH2 0x1FD SWAP4 CALLER DUP3 MSTORE PUSH1 0x1 DUP8 MSTORE DUP6 DUP3 KECCAK256 SWAP1 DUP3 MSTORE DUP7 MSTORE DUP5 PUSH1 0x24 CALLDATALOAD SWAP2 KECCAK256 SLOAD PUSH2 0x785 JUMP JUMPDEST SWAP1 CALLER PUSH2 0x916 JUMP JUMPDEST POP CALLVALUE PUSH2 0x13C JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x13C JUMPI CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 DUP5 AND DUP5 SUB PUSH2 0x1A2 JUMPI PUSH1 0x24 CALLDATALOAD SWAP2 DUP3 AND DUP3 SUB PUSH2 0x1A2 JUMPI POP PUSH1 0x20 SWAP3 PUSH2 0x1FD SWAP2 PUSH1 0x44 CALLDATALOAD SWAP2 PUSH2 0x5EF DUP4 CALLER DUP4 PUSH2 0xA18 JUMP JUMPDEST PUSH2 0x7A8 JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x162 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x162 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x2 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x13C JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x13C JUMPI CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP4 SUB PUSH2 0x1A2 JUMPI POP PUSH2 0x1FD PUSH1 0x20 SWAP3 PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x916 JUMP JUMPDEST DUP5 SWAP2 POP DUP4 CALLVALUE PUSH2 0x13C JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x13C JUMPI DUP3 PUSH1 0x3 SLOAD PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP1 DUP4 AND SWAP3 DUP4 ISZERO PUSH2 0x732 JUMPI JUMPDEST PUSH1 0x20 SWAP4 DUP5 DUP5 LT DUP2 EQ PUSH2 0x38A JUMPI DUP4 DUP9 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x716 JUMPI POP PUSH1 0x1 EQ PUSH2 0x6C0 JUMPI POP POP POP DUP3 SWAP1 SUB PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT DUP4 DUP6 LT OR PUSH2 0x306 JUMPI POP DUP3 SWAP2 DUP3 PUSH2 0x302 SWAP3 MSTORE DUP3 PUSH2 0x73C JUMP JUMPDEST PUSH1 0x3 DUP8 MSTORE SWAP2 SWAP3 POP DUP6 SWAP2 DUP4 PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B JUMPDEST DUP4 DUP6 LT PUSH2 0x702 JUMPI POP POP POP POP DUP4 ADD ADD DUP6 DUP1 DUP1 PUSH2 0x2D0 JUMP JUMPDEST DUP1 SLOAD DUP9 DUP7 ADD DUP4 ADD MSTORE SWAP4 ADD SWAP3 DUP5 SWAP1 DUP3 ADD PUSH2 0x6EC JUMP JUMPDEST PUSH1 0xFF NOT AND DUP8 DUP6 ADD MSTORE POP POP ISZERO ISZERO PUSH1 0x5 SHL DUP5 ADD ADD SWAP1 POP DUP6 DUP1 DUP1 PUSH2 0x2D0 JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x670 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP2 DUP4 ADD DUP2 SWAP1 MSTORE SWAP1 SWAP4 SWAP3 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x771 JUMPI POP POP PUSH1 0x40 SWAP3 SWAP4 POP PUSH1 0x0 DUP4 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 ADD DUP7 ADD MLOAD DUP5 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP6 ADD PUSH2 0x74F JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x792 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 DUP3 ISZERO PUSH2 0x8C3 JUMPI AND SWAP2 DUP3 ISZERO PUSH2 0x872 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP2 DUP1 DUP4 LT PUSH2 0x81E JUMPI PUSH1 0x40 DUP3 DUP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP6 DUP8 PUSH1 0x20 SWAP7 MSTORE DUP3 DUP7 MSTORE SUB DUP3 DUP3 KECCAK256 SSTORE DUP7 DUP2 MSTORE KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 DUP3 ISZERO PUSH2 0x9C7 JUMPI AND SWAP2 DUP3 ISZERO PUSH2 0x977 JUMPI PUSH1 0x20 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 DUP4 PUSH1 0x0 MSTORE PUSH1 0x1 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP6 PUSH1 0x0 MSTORE DUP3 MSTORE DUP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 DUP3 AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP3 PUSH1 0x0 NOT DUP5 SUB PUSH2 0xA50 JUMPI JUMPDEST POP POP POP POP JUMP JUMPDEST DUP1 DUP5 LT PUSH2 0xA6B JUMPI PUSH2 0xA62 SWAP4 SUB SWAP2 PUSH2 0x916 JUMP JUMPDEST CODESIZE DUP1 DUP1 DUP1 PUSH2 0xA4A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0xB68 JUMPI PUSH1 0x0 SWAP2 DUP2 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SLOAD DUP2 DUP2 LT PUSH2 0xB18 JUMPI DUP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 PUSH1 0x20 SWAP3 DUP6 DUP8 MSTORE DUP7 DUP5 MSTORE SUB PUSH1 0x40 DUP7 KECCAK256 SSTORE DUP1 PUSH1 0x2 SLOAD SUB PUSH1 0x2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0xFF PUSH1 0x5 SLOAD PUSH1 0x8 SHR AND PUSH1 0x3 DUP2 LT ISZERO PUSH2 0xBF5 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0xBED JUMPI PUSH1 0x2 EQ PUSH2 0xBE8 JUMPI PUSH2 0xBE3 SWAP2 CALLER PUSH2 0x7A8 JUMP JUMPDEST PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEE 0x4A BLOCKHASH GAS PUSH18 0xFB04972B1BB8D2B872C05694E3061B67CF27 0x5F DUP16 SWAP13 REVERT LOG2 DUP14 SWAP10 0x5C SWAP14 PUSH5 0x736F6C6343 STOP ADDMOD LT STOP CALLER PUSH1 0x80 CALLVALUE PUSH2 0x5D JUMPI PUSH1 0x1F PUSH2 0x19A CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH2 0x62 JUMPI DUP1 DUP5 SWAP3 PUSH1 0x20 SWAP5 PUSH1 0x40 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0x5D JUMPI MLOAD PUSH1 0x0 SSTORE PUSH1 0x1 PUSH1 0xFF NOT DUP2 SLOAD AND OR PUSH1 0x1 SSTORE PUSH1 0x40 MLOAD PUSH2 0x121 SWAP1 DUP2 PUSH2 0x79 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH1 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x2A3F4389 EQ PUSH1 0xD3 JUMPI POP DUP1 PUSH4 0x32145F90 EQ PUSH1 0xBB JUMPI DUP1 PUSH4 0x5095E3D9 EQ PUSH1 0x9F JUMPI DUP1 PUSH4 0x59E02DD7 EQ PUSH1 0x77 JUMPI PUSH4 0xB689D5AC EQ PUSH1 0x53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH1 0x73 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH1 0x73 JUMPI PUSH1 0x20 SWAP1 PUSH1 0xFF PUSH1 0x1 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH1 0x9C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH1 0x9C JUMPI SLOAD PUSH1 0xFF PUSH1 0x1 SLOAD AND DUP3 MLOAD SWAP2 DUP3 MSTORE ISZERO ISZERO PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH1 0x73 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH1 0x73 JUMPI PUSH1 0xFF NOT PUSH1 0x1 SLOAD AND PUSH1 0x1 SSTORE MLOAD RETURN JUMPDEST POP CALLVALUE PUSH1 0x73 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH1 0x73 JUMPI PUSH1 0x4 CALLDATALOAD DUP3 SSTORE MLOAD RETURN JUMPDEST DUP4 SWAP1 CALLVALUE PUSH1 0x73 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH1 0x73 JUMPI PUSH1 0x20 SWAP2 SLOAD DUP2 MSTORE RETURN INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDA SWAP16 0xA8 EQ 0xF MSTORE 0xEF KECCAK256 BALANCE CALL 0xEF 0xA5 SWAP3 CALLDATACOPY OR 0xBA SWAP5 LOG4 0xEC GT 0xB5 RETURN PUSH21 0x2F9C8B50BA51589E5564736F6C6343000810003360 DUP1 CALLVALUE PUSH2 0x5D JUMPI PUSH1 0x1F PUSH2 0x19A CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH2 0x62 JUMPI DUP1 DUP5 SWAP3 PUSH1 0x20 SWAP5 PUSH1 0x40 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0x5D JUMPI MLOAD PUSH1 0x0 SSTORE PUSH1 0x1 PUSH1 0xFF NOT DUP2 SLOAD AND OR PUSH1 0x1 SSTORE PUSH1 0x40 MLOAD PUSH2 0x121 SWAP1 DUP2 PUSH2 0x79 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH1 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x2A3F4389 EQ PUSH1 0xD3 JUMPI POP DUP1 PUSH4 0x32145F90 EQ PUSH1 0xBB JUMPI DUP1 PUSH4 0x5095E3D9 EQ PUSH1 0x9F JUMPI DUP1 PUSH4 0x59E02DD7 EQ PUSH1 0x77 JUMPI PUSH4 0xB689D5AC EQ PUSH1 0x53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH1 0x73 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH1 0x73 JUMPI PUSH1 0x20 SWAP1 PUSH1 0xFF PUSH1 0x1 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH1 0x9C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH1 0x9C JUMPI SLOAD PUSH1 0xFF PUSH1 0x1 SLOAD AND DUP3 MLOAD SWAP2 DUP3 MSTORE ISZERO ISZERO PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH1 0x73 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH1 0x73 JUMPI PUSH1 0xFF NOT PUSH1 0x1 SLOAD AND PUSH1 0x1 SSTORE MLOAD RETURN JUMPDEST POP CALLVALUE PUSH1 0x73 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH1 0x73 JUMPI PUSH1 0x4 CALLDATALOAD DUP3 SSTORE MLOAD RETURN JUMPDEST DUP4 SWAP1 CALLVALUE PUSH1 0x73 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH1 0x73 JUMPI PUSH1 0x20 SWAP2 SLOAD DUP2 MSTORE RETURN INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDA SWAP16 0xA8 EQ 0xF MSTORE 0xEF KECCAK256 BALANCE CALL 0xEF 0xA5 SWAP3 CALLDATACOPY OR 0xBA SWAP5 LOG4 0xEC GT 0xB5 RETURN PUSH21 0x2F9C8B50BA51589E5564736F6C6343000810003360 DUP1 CALLVALUE PUSH2 0x5D JUMPI PUSH1 0x1F PUSH2 0x19A CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH2 0x62 JUMPI DUP1 DUP5 SWAP3 PUSH1 0x20 SWAP5 PUSH1 0x40 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0x5D JUMPI MLOAD PUSH1 0x0 SSTORE PUSH1 0x1 PUSH1 0xFF NOT DUP2 SLOAD AND OR PUSH1 0x1 SSTORE PUSH1 0x40 MLOAD PUSH2 0x121 SWAP1 DUP2 PUSH2 0x79 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH1 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x2A3F4389 EQ PUSH1 0xD3 JUMPI POP DUP1 PUSH4 0x32145F90 EQ PUSH1 0xBB JUMPI DUP1 PUSH4 0x5095E3D9 EQ PUSH1 0x9F JUMPI DUP1 PUSH4 0x59E02DD7 EQ PUSH1 0x77 JUMPI PUSH4 0xB689D5AC EQ PUSH1 0x53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH1 0x73 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH1 0x73 JUMPI PUSH1 0x20 SWAP1 PUSH1 0xFF PUSH1 0x1 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH1 0x9C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH1 0x9C JUMPI SLOAD PUSH1 0xFF PUSH1 0x1 SLOAD AND DUP3 MLOAD SWAP2 DUP3 MSTORE ISZERO ISZERO PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH1 0x73 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH1 0x73 JUMPI PUSH1 0xFF NOT PUSH1 0x1 SLOAD AND PUSH1 0x1 SSTORE MLOAD RETURN JUMPDEST POP CALLVALUE PUSH1 0x73 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH1 0x73 JUMPI PUSH1 0x4 CALLDATALOAD DUP3 SSTORE MLOAD RETURN JUMPDEST DUP4 SWAP1 CALLVALUE PUSH1 0x73 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH1 0x73 JUMPI PUSH1 0x20 SWAP2 SLOAD DUP2 MSTORE RETURN INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDA SWAP16 0xA8 EQ 0xF MSTORE 0xEF KECCAK256 BALANCE CALL 0xEF 0xA5 SWAP3 CALLDATACOPY OR 0xBA SWAP5 LOG4 0xEC GT 0xB5 RETURN PUSH21 0x2F9C8B50BA51589E5564736F6C6343000810003360 DUP1 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x23 JUMPI PUSH1 0x1 PUSH1 0xFF NOT PUSH1 0x0 SLOAD AND OR PUSH1 0x0 SSTORE PUSH2 0x194 SWAP1 DUP2 PUSH2 0x29 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATASIZE LT ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x57E6C2F4 EQ PUSH2 0x13F JUMPI POP DUP1 PUSH4 0x8C777E82 EQ PUSH2 0xB4 JUMPI DUP1 PUSH4 0x9E0A8E09 EQ PUSH2 0x88 JUMPI PUSH4 0xD994D6D5 EQ PUSH2 0x4F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x84 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x84 JUMPI CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SUB PUSH2 0x80 JUMPI PUSH1 0xFF PUSH1 0x20 SWAP3 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x84 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x84 JUMPI CALLDATALOAD DUP1 ISZERO ISZERO DUP1 SWAP2 SUB PUSH2 0x84 JUMPI PUSH1 0xFF DUP1 NOT DUP5 SLOAD AND SWAP2 AND OR DUP3 SSTORE MLOAD RETURN JUMPDEST POP DUP3 SWAP1 CALLVALUE PUSH2 0x80 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x80 JUMPI DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x84 JUMPI DUP1 EXTCODESIZE ISZERO PUSH2 0x84 JUMPI SWAP1 DUP3 DUP1 SWAP3 DUP3 DUP7 MLOAD DUP1 SWAP6 DUP2 SWAP4 PUSH4 0x18518655 PUSH1 0xE2 SHL DUP4 MSTORE GAS CALL DUP1 ISZERO PUSH2 0x135 JUMPI PUSH2 0x109 JUMPI DUP3 DUP5 MLOAD RETURN JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x122 JUMPI POP DUP3 MSTORE DUP3 DUP1 DUP3 DUP5 MLOAD RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x41 SWAP1 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST DUP5 MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP5 SWAP1 CALLVALUE PUSH2 0x80 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x80 JUMPI PUSH1 0xFF PUSH1 0x20 SWAP3 SLOAD AND ISZERO ISZERO DUP2 MSTORE RETURN INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBC 0x4F 0xDA 0xE3 RETURN 0xBD PUSH26 0xEEA4F6B589F831ECBF914F3213F9E0AE823A4A30FF258D6A9F64 PUSH20 0x6F6C6343000810003360A080604052346100DC57 ADDRESS PUSH1 0x80 MSTORE PUSH1 0x0 SLOAD SWAP1 PUSH1 0xFF DUP3 PUSH1 0x8 SHR AND PUSH2 0x8A JUMPI POP PUSH1 0xFF DUP1 DUP3 AND LT PUSH2 0x4F JUMPI JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22DA SWAP1 DUP2 PUSH2 0xE2 DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 DUP2 DUP2 PUSH2 0xD56 ADD MSTORE DUP2 DUP2 PUSH2 0xE78 ADD MSTORE PUSH2 0x1059 ADD MSTORE RETURN JUMPDEST PUSH1 0xFF SWAP1 DUP2 NOT AND OR PUSH1 0x0 SSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0xFF DUP2 MSTORE LOG1 CODESIZE PUSH2 0x29 JUMP JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320696E697469 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x616C697A696E67 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1FFC9A7 EQ PUSH2 0x146A JUMPI POP DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x13D6 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x13A4 JUMPI DUP1 PUSH4 0xC340A24 EQ PUSH2 0x137A JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x135C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1295 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x1266 JUMPI DUP1 PUSH4 0x282C51F3 EQ PUSH2 0x122B JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x1170 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1154 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x10C0 JUMPI DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0x1027 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0xFD0 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0xEDB JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0xE19 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0xD43 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0xD05 JUMPI DUP1 PUSH4 0x8F15B414 EQ PUSH2 0x68E JUMPI DUP1 PUSH4 0x9010D07C EQ PUSH2 0x647 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x5F5 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x517 JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x3C2 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x3A6 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x2FA JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2BD JUMPI DUP1 PUSH4 0xCA15C873 EQ PUSH2 0x291 JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x256 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x20A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1B2 JUMPI PUSH4 0xE4C0AAF4 EQ PUSH2 0x169 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1AD JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AD JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x1AD JUMPI PUSH2 0x197 PUSH2 0x2164 JUMP JUMPDEST PUSH2 0x191 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1AD JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AD JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x4 CALLDATALOAD DUP2 DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x1AD JUMPI PUSH1 0x24 CALLDATALOAD SWAP2 DUP3 AND DUP1 SWAP3 SUB PUSH2 0x1AD JUMPI PUSH1 0x0 MSTORE PUSH1 0xCA PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1AD JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AD JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x1AD JUMPI DUP2 PUSH2 0x254 SWAP3 PUSH1 0x0 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE PUSH2 0x24F PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH2 0x15B9 JUMP JUMPDEST PUSH2 0x1698 JUMP JUMPDEST STOP JUMPDEST CALLVALUE PUSH2 0x1AD JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AD JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1AD JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AD JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x97 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1AD JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AD JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x1AD JUMPI PUSH2 0x2EF SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x1BB8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1AD JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AD JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 DUP2 SUB PUSH2 0x1AD JUMPI PUSH1 0x24 CALLDATALOAD SWAP2 CALLER PUSH1 0x0 MSTORE PUSH1 0xCA PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP2 DUP1 DUP4 LT PUSH2 0x353 JUMPI PUSH2 0x2EF SWAP3 SUB SWAP1 CALLER PUSH2 0x1D28 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1AD JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AD JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1AD JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AD JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x1AD JUMPI PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x415 PUSH32 0x3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848 PUSH2 0x15B9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4C8 JUMPI DUP1 PUSH1 0x0 MSTORE PUSH1 0xC9 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP2 DUP1 DUP4 LT PUSH2 0x478 JUMPI PUSH1 0x20 DUP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 PUSH1 0x0 SWAP6 DUP6 DUP8 MSTORE PUSH1 0xC9 DUP5 MSTORE SUB PUSH1 0x40 DUP7 KECCAK256 SSTORE DUP1 PUSH1 0xCB SLOAD SUB PUSH1 0xCB SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1AD JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AD JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0xCD SLOAD PUSH2 0x539 DUP2 PUSH2 0x1B5B JUMP JUMPDEST DUP1 DUP5 MSTORE SWAP1 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x5CE JUMPI POP PUSH1 0x1 EQ PUSH2 0x573 JUMPI JUMPDEST PUSH2 0x56F DUP5 PUSH2 0x563 DUP2 DUP7 SUB DUP3 PUSH2 0x1526 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x14FA JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0xCD PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP3 POP PUSH32 0x83978B4C69C48DD978AB43FE30F077615294F938FB7F936D9EB340E51EA7DB2E JUMPDEST DUP3 DUP5 LT PUSH2 0x5B6 JUMPI POP POP POP DUP2 ADD PUSH1 0x20 ADD PUSH2 0x563 DUP3 PUSH2 0x553 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x20 DUP6 DUP8 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP4 ADD SWAP3 DUP2 ADD PUSH2 0x59E JUMP JUMPDEST PUSH1 0xFF NOT AND PUSH1 0x20 DUP1 DUP8 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 ISZERO ISZERO PUSH1 0x5 SHL DUP6 ADD SWAP1 SWAP3 ADD SWAP3 POP PUSH2 0x563 SWAP2 POP DUP4 SWAP1 POP PUSH2 0x553 JUMP JUMPDEST CALLVALUE PUSH2 0x1AD JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AD JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x1AD JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1AD JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AD JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x97 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH2 0x675 PUSH1 0x24 CALLDATALOAD PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x1FD0 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1AD JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AD JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1AD JUMPI PUSH2 0x6BF SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x159B JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1AD JUMPI PUSH2 0x6DF SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x159B JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x44 CALLDATALOAD DUP2 DUP2 AND DUP2 SUB PUSH2 0x1AD JUMPI PUSH1 0x64 CALLDATALOAD DUP3 DUP2 AND DUP1 SWAP2 SUB PUSH2 0x1AD JUMPI PUSH1 0x0 SLOAD SWAP4 PUSH1 0xFF DUP6 PUSH1 0x8 SHR AND ISZERO SWAP5 DUP6 DUP1 SWAP7 PUSH2 0xCF8 JUMPI JUMPDEST DUP1 ISZERO PUSH2 0xCE1 JUMPI JUMPDEST ISZERO PUSH2 0xC85 JUMPI PUSH1 0xFF NOT DUP2 AND PUSH1 0x1 OR PUSH1 0x0 SSTORE DUP6 PUSH2 0xC73 JUMPI JUMPDEST POP PUSH2 0x757 PUSH1 0xFF PUSH1 0x0 SLOAD PUSH1 0x8 SHR AND PUSH2 0x749 DUP2 PUSH2 0x2204 JUMP JUMPDEST PUSH2 0x752 DUP2 PUSH2 0x2204 JUMP JUMPDEST PUSH2 0x2204 JUMP JUMPDEST DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xB68 JUMPI DUP1 PUSH2 0x774 PUSH1 0xCC SLOAD PUSH2 0x1B5B JUMP JUMPDEST SWAP3 PUSH1 0x1F SWAP4 DUP5 DUP2 GT PUSH2 0xBFD JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 DUP5 DUP4 GT PUSH1 0x1 EQ PUSH2 0xB89 JUMPI PUSH1 0x0 SWAP3 PUSH2 0xB7E JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0xCC SSTORE JUMPDEST DUP6 MLOAD SWAP6 PUSH8 0xFFFFFFFFFFFFFFFF DUP8 GT PUSH2 0xB68 JUMPI PUSH2 0x7C9 PUSH1 0xCD SLOAD PUSH2 0x1B5B JUMP JUMPDEST DUP3 DUP2 GT PUSH2 0xB06 JUMPI JUMPDEST POP PUSH1 0x20 SWAP2 DUP8 GT PUSH1 0x1 EQ PUSH2 0xA7C JUMPI SWAP6 DUP1 SWAP2 PUSH2 0x963 SWAP7 SWAP8 PUSH1 0x0 SWAP3 PUSH2 0xA71 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0xCD SSTORE JUMPDEST PUSH2 0x822 PUSH1 0xFF PUSH1 0x0 SLOAD PUSH1 0x8 SHR AND PUSH2 0x819 DUP2 PUSH2 0x2204 JUMP JUMPDEST PUSH2 0x749 DUP2 PUSH2 0x2204 JUMP JUMPDEST PUSH2 0x191 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xFFDFC1249C027F9191656349FEB0761381BB32C9F557E01F419FD08754BF5A1B PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x65 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0xA2C JUMPI JUMPDEST PUSH1 0x0 DUP1 MSTORE PUSH1 0x97 PUSH1 0x20 MSTORE PUSH2 0x8A8 DUP3 DUP5 AND PUSH32 0x683723E34A772B6E4F2C919BBA7FA32ED8EA11A8325F54DA7DB716E9D9DD98C7 PUSH2 0x1FE8 JUMP JUMPDEST POP PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP1 PUSH1 0x0 MSTORE DUP2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP5 DUP5 AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0x9E7 JUMPI JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x97 PUSH1 0x20 MSTORE PUSH2 0x907 DUP4 DUP4 AND PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x1FE8 JUMP JUMPDEST POP PUSH32 0x3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848 SWAP1 DUP2 PUSH1 0x0 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP5 DUP5 AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0x9A2 JUMPI JUMPDEST POP PUSH1 0x0 MSTORE PUSH1 0x97 PUSH1 0x20 MSTORE AND PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x1FE8 JUMP JUMPDEST POP PUSH2 0x96A JUMPI STOP JUMPDEST PUSH2 0xFF00 NOT PUSH1 0x0 SLOAD AND PUSH1 0x0 SSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE LOG1 STOP JUMPDEST DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP4 DUP4 AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE CALLER DUP4 DUP4 AND DUP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2265 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 PUSH1 0x40 MLOAD LOG4 DUP6 PUSH2 0x94F JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE DUP2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP5 DUP5 AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE CALLER DUP5 DUP5 AND DUP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2265 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 PUSH1 0x40 MLOAD LOG4 PUSH2 0x8EF JUMP JUMPDEST PUSH1 0x0 DUP1 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP4 DUP4 AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE CALLER DUP4 DUP4 AND PUSH1 0x0 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2265 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 PUSH1 0x40 MLOAD LOG4 PUSH2 0x873 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP8 DUP1 PUSH2 0x7EE JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP8 AND SWAP2 PUSH1 0xCD PUSH1 0x0 MSTORE PUSH32 0x83978B4C69C48DD978AB43FE30F077615294F938FB7F936D9EB340E51EA7DB2E SWAP3 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0xAEE JUMPI POP SWAP2 PUSH1 0x1 SWAP4 SWAP2 DUP10 PUSH2 0x963 SWAP10 SWAP11 SWAP5 LT PUSH2 0xAD5 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0xCD SSTORE PUSH2 0x804 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP8 DUP1 DUP1 PUSH2 0xAC7 JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0xAAD JUMP JUMPDEST PUSH1 0xCD PUSH1 0x0 MSTORE PUSH32 0x83978B4C69C48DD978AB43FE30F077615294F938FB7F936D9EB340E51EA7DB2E DUP4 DUP1 DUP11 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 PUSH1 0x20 DUP12 LT PUSH2 0xB5F JUMPI JUMPDEST ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0xB53 JUMPI POP PUSH2 0x7D1 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xB46 JUMP JUMPDEST SWAP3 POP DUP2 SWAP3 PUSH2 0xB3F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD MLOAD SWAP1 POP DUP9 DUP1 PUSH2 0x796 JUMP JUMPDEST PUSH1 0xCC PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2285 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP4 POP PUSH1 0x1F NOT DUP6 AND SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0xBE5 JUMPI POP SWAP1 DUP5 PUSH1 0x1 SWAP6 SWAP5 SWAP4 SWAP3 LT PUSH2 0xBCC JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0xCC SSTORE PUSH2 0x7AC JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP9 DUP1 DUP1 PUSH2 0xBBE JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0xBA8 JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0xCC PUSH1 0x0 MSTORE DUP4 DUP1 DUP5 ADD PUSH1 0x5 SHR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2285 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH2 0xC5D JUMPI JUMPDEST SWAP1 DUP5 SWAP4 SWAP3 SWAP2 ADD PUSH1 0x5 SHR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2285 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0xC4E JUMPI POP PUSH2 0x780 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP5 SWAP4 POP PUSH1 0x1 ADD PUSH2 0xC41 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2285 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 POP PUSH2 0xC26 JUMP JUMPDEST PUSH2 0xFFFF NOT AND PUSH2 0x101 OR PUSH1 0x0 SSTORE DUP7 PUSH2 0x733 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x71D JUMPI POP PUSH1 0x1 PUSH1 0xFF DUP3 AND EQ PUSH2 0x71D JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0xFF DUP3 AND LT PUSH2 0x716 JUMP JUMPDEST CALLVALUE PUSH2 0x1AD JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AD JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x1AD JUMPI PUSH1 0x0 MSTORE PUSH1 0xC9 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1AD JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AD JUMPI PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS SUB PUSH2 0xDAE JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP2 MSTORE RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x555550535570677261646561626C653A206D757374206E6F742062652063616C PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6C6564207468726F7567682064656C656761746563616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AD JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND DUP3 SUB PUSH2 0x1AD JUMPI PUSH1 0x24 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x1AD JUMPI CALLDATASIZE PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0x1AD JUMPI PUSH2 0x254 SWAP3 PUSH2 0xECE PUSH2 0xE74 PUSH1 0x1 SWAP5 CALLDATASIZE SWAP1 PUSH1 0x24 DUP2 PUSH1 0x4 ADD CALLDATALOAD SWAP2 ADD PUSH2 0x1564 JUMP JUMPDEST SWAP3 DUP1 PUSH32 0x0 AND SWAP1 PUSH2 0xEA5 DUP3 ADDRESS EQ ISZERO PUSH2 0x1722 JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD AND EQ PUSH2 0x1783 JUMP JUMPDEST PUSH2 0xED6 PUSH2 0x2164 JUMP JUMPDEST PUSH2 0x17E4 JUMP JUMPDEST CALLVALUE PUSH2 0x1AD JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AD JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x1AD JUMPI PUSH1 0x24 CALLDATALOAD PUSH2 0xF2D PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0x15B9 JUMP JUMPDEST DUP2 ISZERO PUSH2 0xF8B JUMPI PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x20 DUP3 PUSH2 0xF65 PUSH1 0x0 SWAP5 PUSH1 0xCB SLOAD PUSH2 0x1B95 JUMP JUMPDEST PUSH1 0xCB SSTORE DUP5 DUP5 MSTORE PUSH1 0xC9 DUP3 MSTORE PUSH1 0x40 DUP5 KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1AD JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AD JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 DUP2 SUB PUSH2 0x1AD JUMPI PUSH2 0x2EF SWAP2 CALLER PUSH1 0x0 MSTORE PUSH1 0xCA PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH2 0x1020 PUSH1 0x24 CALLDATALOAD PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1B95 JUMP JUMPDEST SWAP1 CALLER PUSH2 0x1D28 JUMP JUMPDEST CALLVALUE PUSH2 0x1AD JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AD JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND DUP3 SUB PUSH2 0x1AD JUMPI PUSH2 0x254 SWAP2 PUSH2 0x1086 DUP3 PUSH1 0x0 SWAP4 PUSH32 0x0 AND SWAP1 PUSH2 0xEA5 DUP3 ADDRESS EQ ISZERO PUSH2 0x1722 JUMP JUMPDEST PUSH2 0x108E PUSH2 0x2164 JUMP JUMPDEST PUSH2 0x1097 DUP3 PUSH2 0x1548 JUMP JUMPDEST SWAP1 PUSH2 0x10A5 PUSH1 0x40 MLOAD SWAP3 DUP4 PUSH2 0x1526 JUMP JUMPDEST DUP3 DUP3 MSTORE PUSH1 0x1F NOT PUSH2 0x10B4 DUP5 PUSH2 0x1548 JUMP JUMPDEST ADD CALLDATASIZE PUSH1 0x20 DUP5 ADD CALLDATACOPY PUSH2 0x17E4 JUMP JUMPDEST CALLVALUE PUSH2 0x1AD JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AD JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP1 DUP3 SUB PUSH2 0x1AD JUMPI CALLER SUB PUSH2 0x10F7 JUMPI PUSH2 0x254 SWAP1 PUSH1 0x4 CALLDATALOAD PUSH2 0x1698 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x103937B632B9903337B91039B2B633 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1AD JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AD JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1AD JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AD JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x1AD JUMPI PUSH1 0x97 DUP3 PUSH2 0x254 SWAP4 PUSH1 0x0 MSTORE PUSH1 0x20 SWAP1 PUSH1 0x65 DUP3 MSTORE PUSH2 0x11BB PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH2 0x15B9 JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x65 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP5 PUSH1 0x0 MSTORE DUP3 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0x11EB JUMPI JUMPDEST PUSH1 0x0 MSTORE MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x1FE8 JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x65 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP5 PUSH1 0x0 MSTORE DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE CALLER DUP5 DUP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2265 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 PUSH1 0x40 MLOAD LOG4 PUSH2 0x11DD JUMP JUMPDEST CALLVALUE PUSH2 0x1AD JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AD JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1AD JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AD JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1AD JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AD JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND SWAP1 DUP2 DUP4 SUB PUSH2 0x1AD JUMPI PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 AND DUP2 SUB PUSH2 0x1AD JUMPI PUSH1 0x44 CALLDATALOAD SWAP2 PUSH1 0x0 MSTORE PUSH1 0xCA PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP3 PUSH1 0x0 NOT DUP5 SUB PUSH2 0x12FB JUMPI JUMPDEST PUSH2 0x2EF SWAP4 POP PUSH2 0x1BB8 JUMP JUMPDEST DUP3 DUP5 LT PUSH2 0x1317 JUMPI PUSH2 0x1312 DUP4 PUSH2 0x2EF SWAP6 SUB CALLER DUP4 PUSH2 0x1D28 JUMP JUMPDEST PUSH2 0x12F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1AD JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AD JUMPI PUSH1 0x20 PUSH1 0xCB SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1AD JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AD JUMPI PUSH2 0x191 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1AD JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AD JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x1AD JUMPI PUSH2 0x2EF SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x1D28 JUMP JUMPDEST CALLVALUE PUSH2 0x1AD JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AD JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0xCC SLOAD PUSH2 0x13F8 DUP2 PUSH2 0x1B5B JUMP JUMPDEST DUP1 DUP5 MSTORE SWAP1 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x5CE JUMPI POP PUSH1 0x1 EQ PUSH2 0x1421 JUMPI PUSH2 0x56F DUP5 PUSH2 0x563 DUP2 DUP7 SUB DUP3 PUSH2 0x1526 JUMP JUMPDEST PUSH1 0xCC PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP3 POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2285 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE JUMPDEST DUP3 DUP5 LT PUSH2 0x1452 JUMPI POP POP POP DUP2 ADD PUSH1 0x20 ADD PUSH2 0x563 DUP3 PUSH2 0x553 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x20 DUP6 DUP8 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP4 ADD SWAP3 DUP2 ADD PUSH2 0x143A JUMP JUMPDEST CALLVALUE PUSH2 0x1AD JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AD JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP3 AND DUP1 SWAP3 SUB PUSH2 0x1AD JUMPI PUSH1 0x20 SWAP2 PUSH4 0x5A05180F PUSH1 0xE0 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x14AC JUMPI JUMPDEST POP ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x7965DB0B PUSH1 0xE0 SHL DUP2 EQ SWAP2 POP DUP2 ISZERO PUSH2 0x14C6 JUMPI JUMPDEST POP DUP4 PUSH2 0x14A5 JUMP JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP DUP4 PUSH2 0x14BF JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x14EA JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x14DA JUMP JUMPDEST PUSH1 0x40 SWAP2 PUSH1 0x20 DUP3 MSTORE PUSH2 0x151A DUP2 MLOAD DUP1 SWAP3 DUP2 PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x20 DUP7 DUP7 ADD SWAP2 ADD PUSH2 0x14D7 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xB68 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xB68 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH2 0x1570 DUP3 PUSH2 0x1548 JUMP JUMPDEST SWAP2 PUSH2 0x157E PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x1526 JUMP JUMPDEST DUP3 SWAP5 DUP2 DUP5 MSTORE DUP2 DUP4 ADD GT PUSH2 0x1AD JUMPI DUP3 DUP2 PUSH1 0x20 SWAP4 DUP5 PUSH1 0x0 SWAP7 ADD CALLDATACOPY ADD ADD MSTORE JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x1AD JUMPI DUP2 PUSH1 0x20 PUSH2 0x15B6 SWAP4 CALLDATALOAD SWAP2 ADD PUSH2 0x1564 JUMP JUMPDEST SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x65 DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE DUP2 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0x15E0 JUMPI POP POP JUMP JUMPDEST PUSH2 0x167C PUSH1 0x48 PUSH2 0x1694 SWAP4 DUP4 PUSH2 0x1602 PUSH2 0x166D SWAP6 PUSH2 0x15FC PUSH1 0x14 CALLER PUSH2 0x1E75 JUMP JUMPDEST SWAP4 PUSH2 0x1E75 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP4 PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 DUP4 DUP7 ADD MSTORE PUSH2 0x1641 DUP2 MLOAD DUP1 SWAP3 DUP6 PUSH1 0x37 DUP10 ADD SWAP2 ADD PUSH2 0x14D7 JUMP JUMPDEST DUP5 ADD SWAP2 PUSH17 0x1034B99036B4B9B9B4B733903937B6329 PUSH1 0x7D SHL PUSH1 0x37 DUP5 ADD MSTORE DUP4 MLOAD SWAP4 DUP5 SWAP2 DUP8 DUP6 ADD SWAP2 ADD PUSH2 0x14D7 JUMP JUMPDEST ADD SUB PUSH1 0x28 DUP2 ADD DUP5 MSTORE ADD DUP3 PUSH2 0x1526 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP2 DUP3 SWAP2 PUSH1 0x4 DUP4 ADD PUSH2 0x14FA JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x16D6 SWAP2 PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP2 DUP3 DUP3 KECCAK256 SWAP4 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP4 DUP5 DUP4 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF DUP4 DUP4 KECCAK256 SLOAD AND PUSH2 0x16D9 JUMPI JUMPDEST DUP2 MSTORE PUSH1 0x97 PUSH1 0x20 MSTORE KECCAK256 PUSH2 0x2074 JUMP JUMPDEST POP JUMP JUMPDEST DUP1 DUP3 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE DUP3 DUP3 KECCAK256 DUP5 DUP4 MSTORE PUSH1 0x20 MSTORE DUP3 DUP3 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE CALLER DUP5 DUP3 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B DUP6 DUP8 MLOAD LOG4 PUSH2 0x16C9 JUMP JUMPDEST ISZERO PUSH2 0x1729 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x19195B1959D85D1958D85B1B PUSH1 0xA2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x178A JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x6163746976652070726F7879 PUSH1 0xA0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 SWAP3 SWAP2 PUSH1 0xFF PUSH32 0x4910FDFA16FED3260ED0E7147F7CC6DA11A60208B5B9406D12A635614FFD9143 SLOAD AND PUSH1 0x0 EQ PUSH2 0x1821 JUMPI POP PUSH2 0x181F SWAP2 SWAP3 POP PUSH2 0x1AB9 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x52D1902D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x20 SWAP5 SWAP2 SWAP4 SWAP2 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP2 DUP7 DUP2 PUSH1 0x4 DUP2 DUP7 GAS STATICCALL PUSH1 0x0 SWAP2 DUP2 PUSH2 0x1A87 JUMPI JUMPDEST POP PUSH2 0x18B2 JUMPI DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A206E657720696D706C656D656E74617469 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x6F6E206973206E6F742055555053 PUSH1 0x90 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP4 SWAP6 SWAP5 SWAP4 PUSH32 0xC9F76B5EC45E5CDEF99837D7B6D2467235C1DF8933C8CA56DF5C35AFA2C7D444 ADD PUSH2 0x1A31 JUMPI PUSH2 0x18E5 DUP4 PUSH2 0x1AB9 JUMP JUMPDEST DUP4 MLOAD SWAP2 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x0 DUP5 LOG2 DUP7 MLOAD ISZERO SWAP1 DUP2 ISZERO SWAP2 PUSH2 0x1A29 JUMPI JUMPDEST POP PUSH2 0x1927 JUMPI JUMPDEST POP POP POP POP SWAP1 POP JUMP JUMPDEST DUP2 EXTCODESIZE ISZERO PUSH2 0x19D8 JUMPI POP PUSH1 0x0 DUP6 DUP2 SWAP3 DUP6 PUSH2 0x19BA SWAP8 SWAP9 MLOAD SWAP3 ADD SWAP1 GAS DELEGATECALL RETURNDATASIZE ISZERO PUSH2 0x19C5 JUMPI PUSH7 0x819985A5B1959 PUSH1 0xCA SHL RETURNDATASIZE SWAP3 PUSH2 0x195C DUP5 PUSH2 0x1548 JUMP JUMPDEST SWAP4 PUSH2 0x1969 DUP3 MLOAD SWAP6 DUP7 PUSH2 0x1526 JUMP JUMPDEST DUP5 MSTORE RETURNDATASIZE PUSH1 0x0 DUP7 DUP7 ADD RETURNDATACOPY JUMPDEST PUSH32 0x416464726573733A206C6F772D6C6576656C2064656C65676174652063616C6C PUSH2 0x199E PUSH1 0x27 PUSH2 0x1548 JUMP JUMPDEST SWAP6 PUSH2 0x19AB DUP4 MLOAD SWAP8 DUP9 PUSH2 0x1526 JUMP JUMPDEST PUSH1 0x27 DUP8 MSTORE DUP7 ADD MSTORE DUP5 ADD MSTORE PUSH2 0x1E2A JUMP JUMPDEST POP DUP1 CODESIZE DUP1 DUP1 DUP1 PUSH2 0x191F JUMP JUMPDEST PUSH7 0x819985A5B1959 PUSH1 0xCA SHL PUSH1 0x60 SWAP3 PUSH2 0x1973 JUMP JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2064656C65676174652063616C6C20746F206E6F6E2D636F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1B9D1C9858DD PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 POP CODESIZE PUSH2 0x1919 JUMP JUMPDEST DUP4 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A20756E737570706F727465642070726F78 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x1A58589B1955555251 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 SWAP2 DUP9 DUP3 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x1AB2 JUMPI JUMPDEST PUSH2 0x1A9E DUP2 DUP4 PUSH2 0x1526 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1AAF JUMPI POP MLOAD SWAP1 CODESIZE PUSH2 0x1852 JUMP JUMPDEST DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x1A94 JUMP JUMPDEST DUP1 EXTCODESIZE ISZERO PUSH2 0x1B00 JUMPI PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x1BDD08184818DBDB9D1C9858DD PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x1B8B JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x1B75 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x1B6A JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x1BA2 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 DUP3 ISZERO PUSH2 0x1CD5 JUMPI AND SWAP2 DUP3 ISZERO PUSH2 0x1C84 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xC9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP2 DUP1 DUP4 LT PUSH2 0x1C30 JUMPI PUSH1 0x40 DUP3 DUP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP6 DUP8 PUSH1 0x20 SWAP7 MSTORE PUSH1 0xC9 DUP7 MSTORE SUB DUP3 DUP3 KECCAK256 SSTORE DUP7 DUP2 MSTORE KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 DUP3 ISZERO PUSH2 0x1DD9 JUMPI AND SWAP2 DUP3 ISZERO PUSH2 0x1D89 JUMPI PUSH1 0x20 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 DUP4 PUSH1 0x0 MSTORE PUSH1 0xCA DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP6 PUSH1 0x0 MSTORE DUP3 MSTORE DUP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 SWAP2 SWAP1 ISZERO PUSH2 0x1E36 JUMPI POP SWAP1 JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0x1E46 JUMPI POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP1 DUP2 SWAP1 PUSH2 0x1694 SWAP1 PUSH1 0x4 DUP4 ADD PUSH2 0x14FA JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT DUP2 ISZERO ISZERO AND PUSH2 0x1BA2 JUMPI MUL SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1E81 DUP2 PUSH1 0x2 PUSH2 0x1E62 JUMP JUMPDEST SWAP2 PUSH1 0x2 DUP4 ADD DUP1 SWAP4 GT PUSH2 0x1BA2 JUMPI PUSH2 0x1EAF PUSH2 0x1E99 DUP5 PUSH2 0x1548 JUMP JUMPDEST SWAP4 PUSH2 0x1EA7 PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x1526 JUMP JUMPDEST DUP1 DUP6 MSTORE PUSH2 0x1548 JUMP JUMPDEST PUSH1 0x20 SWAP3 SWAP1 DUP5 DUP5 ADD SWAP1 PUSH1 0x1F NOT ADD CALLDATASIZE DUP3 CALLDATACOPY DUP5 MLOAD ISZERO PUSH2 0x1FBA JUMPI PUSH1 0x30 SWAP1 MSTORE8 DUP4 MLOAD SWAP1 PUSH1 0x1 SWAP2 DUP3 LT ISZERO PUSH2 0x1FBA JUMPI PUSH2 0x1EE8 SWAP1 PUSH1 0x78 PUSH1 0x21 DUP8 ADD MSTORE8 PUSH1 0x2 PUSH2 0x1E62 JUMP JUMPDEST DUP2 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x1BA2 JUMPI SWAP1 JUMPDEST DUP1 DUP3 GT PUSH2 0x1F48 JUMPI POP POP PUSH2 0x1F05 JUMPI POP SWAP1 JUMP JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE DUP1 PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 SWAP2 PUSH1 0xF DUP2 AND PUSH1 0x10 DUP2 LT ISZERO PUSH2 0x1FA5 JUMPI DUP6 MLOAD DUP5 LT ISZERO PUSH2 0x1FA5 JUMPI PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL SWAP1 BYTE DUP6 DUP5 ADD DUP6 ADD MSTORE8 PUSH1 0x4 SHR SWAP2 DUP1 ISZERO PUSH2 0x1F90 JUMPI PUSH1 0x0 NOT ADD SWAP1 PUSH2 0x1EF4 JUMP JUMPDEST PUSH1 0x24 PUSH1 0x0 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x24 PUSH1 0x0 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x1FBA JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x1 DUP4 ADD PUSH1 0x0 SWAP1 DUP3 DUP3 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 SLOAD ISZERO PUSH1 0x0 EQ PUSH2 0x206E JUMPI DUP5 SLOAD SWAP5 PUSH9 0x10000000000000000 DUP7 LT ISZERO PUSH2 0x205A JUMPI DUP4 PUSH2 0x204A PUSH2 0x2031 DUP9 PUSH1 0x1 PUSH1 0x40 SWAP9 SWAP10 SWAP11 ADD DUP6 SSTORE DUP5 PUSH2 0x1FD0 JUMP JUMPDEST DUP2 SWAP4 SWAP2 SLOAD SWAP1 PUSH1 0x3 SHL PUSH1 0x0 NOT DUP2 SHL SWAP3 DUP4 SWAP2 SHL AND SWAP2 NOT AND OR SWAP1 JUMP JUMPDEST SWAP1 SSTORE SLOAD SWAP4 DUP3 MSTORE PUSH1 0x20 MSTORE KECCAK256 SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST POP SWAP3 POP POP JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 ADD SWAP1 PUSH1 0x0 SWAP3 DUP2 DUP5 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 SLOAD SWAP1 DUP2 ISZERO ISZERO PUSH1 0x0 EQ PUSH2 0x215D JUMPI PUSH1 0x0 NOT SWAP2 DUP1 DUP4 ADD DUP2 DUP2 GT PUSH2 0x2149 JUMPI DUP3 SLOAD SWAP1 DUP5 DUP3 ADD SWAP2 DUP3 GT PUSH2 0x2135 JUMPI DUP1 DUP3 SUB PUSH2 0x2100 JUMPI JUMPDEST POP POP POP DUP1 SLOAD DUP1 ISZERO PUSH2 0x20EC JUMPI DUP3 ADD SWAP2 PUSH2 0x20CF DUP4 DUP4 PUSH2 0x1FD0 JUMP JUMPDEST SWAP1 SWAP2 DUP3 SLOAD SWAP2 PUSH1 0x3 SHL SHL NOT AND SWAP1 SSTORE SSTORE DUP3 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST PUSH2 0x2120 PUSH2 0x2110 PUSH2 0x2031 SWAP4 DUP7 PUSH2 0x1FD0 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR SWAP3 DUP4 SWAP3 DUP7 PUSH2 0x1FD0 JUMP JUMPDEST SWAP1 SSTORE DUP7 MSTORE DUP5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP7 KECCAK256 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x20B7 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP9 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP8 REVERT JUMPDEST POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x191 SLOAD PUSH1 0x40 MLOAD PUSH4 0xD994D6D5 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x21F8 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x21BA JUMPI JUMPDEST POP ISZERO PUSH2 0x21A8 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1DD1B1B5 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x20 DUP2 RETURNDATASIZE DUP3 GT PUSH2 0x21F0 JUMPI JUMPDEST DUP2 PUSH2 0x21D2 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1526 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x21EC JUMPI MLOAD SWAP1 DUP2 ISZERO ISZERO DUP3 SUB PUSH2 0x1AAF JUMPI POP CODESIZE PUSH2 0x21A0 JUMP JUMPDEST POP DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x21C5 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x220B JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT INVALID 0x2F DUP8 DUP9 GT PUSH31 0x7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D47197230 0xE1 0xE4 0xB2 SWAP16 0xC0 0xBD DUP5 0xD7 0xD7 DUP10 PUSH7 0xC0925452AFF72A 0x2A SLT ISZERO CODESIZE 0xB1 MUL GASLIMIT PUSH31 0x9EBEA26469706673582212203965DF23AB4793F168A5E2652EE2AB5F12B08D 0x29 0xD3 ORIGIN 0xC8 0x2E 0xC8 SWAP7 SLT 0xD2 0xD4 DUP11 0xB3 0x1E PUSH5 0x736F6C6343 STOP ADDMOD LT STOP CALLER PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE PUSH3 0x49 JUMPI ADDRESS PUSH1 0x80 MSTORE PUSH3 0x18 PUSH3 0x4E JUMP JUMPDEST PUSH3 0x22 PUSH3 0x4E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x254F SWAP1 DUP2 PUSH3 0xF8 DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 DUP2 DUP2 PUSH2 0xFB5 ADD MSTORE DUP2 DUP2 PUSH2 0x10D7 ADD MSTORE PUSH2 0x12C3 ADD MSTORE RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xFF DUP2 PUSH1 0x8 SHR AND PUSH3 0xA2 JUMPI PUSH1 0xFF DUP1 DUP3 AND LT PUSH3 0x6B JUMPI POP JUMP JUMPDEST PUSH1 0xFF SWAP1 DUP2 NOT AND OR PUSH1 0x0 SSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0xFF DUP2 MSTORE LOG1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320696E697469 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x616C697A696E67 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1FFC9A7 EQ PUSH2 0x16D4 JUMPI POP DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1640 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x160E JUMPI DUP1 PUSH4 0xC340A24 EQ PUSH2 0x15E4 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x15C6 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x14FF JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x14D0 JUMPI DUP1 PUSH4 0x282C51F3 EQ PUSH2 0x1495 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x13DA JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x13BE JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x132A JUMPI DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0x1291 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123A JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x113A JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x1078 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0xFA2 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0xF7E JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0xF40 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0xE8B JUMPI DUP1 PUSH4 0x8F15B414 EQ PUSH2 0x74D JUMPI DUP1 PUSH4 0x9010D07C EQ PUSH2 0x706 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x6B4 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x5D6 JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x41E JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x402 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x356 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x319 JUMPI DUP1 PUSH4 0xCA15C873 EQ PUSH2 0x2ED JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x2B2 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x266 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x20E JUMPI DUP1 PUSH4 0xE4C0AAF4 EQ PUSH2 0x1CA JUMPI PUSH4 0xE63AB1E9 EQ PUSH2 0x18A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1C5 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C5 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A DUP2 MSTORE RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1C5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C5 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x1C5 JUMPI PUSH2 0x1F8 PUSH2 0x23D9 JUMP JUMPDEST PUSH2 0x191 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE STOP JUMPDEST CALLVALUE PUSH2 0x1C5 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C5 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x4 CALLDATALOAD DUP2 DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x1C5 JUMPI PUSH1 0x24 CALLDATALOAD SWAP2 DUP3 AND DUP1 SWAP3 SUB PUSH2 0x1C5 JUMPI PUSH1 0x0 MSTORE PUSH1 0xCA PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1C5 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C5 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x1C5 JUMPI DUP2 PUSH2 0x2B0 SWAP3 PUSH1 0x0 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE PUSH2 0x2AB PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH2 0x1823 JUMP JUMPDEST PUSH2 0x1902 JUMP JUMPDEST STOP JUMPDEST CALLVALUE PUSH2 0x1C5 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C5 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1C5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C5 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x97 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1C5 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C5 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x1C5 JUMPI PUSH2 0x34B SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x1E22 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1C5 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C5 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 DUP2 SUB PUSH2 0x1C5 JUMPI PUSH1 0x24 CALLDATALOAD SWAP2 CALLER PUSH1 0x0 MSTORE PUSH1 0xCA PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP2 DUP1 DUP4 LT PUSH2 0x3AF JUMPI PUSH2 0x34B SWAP3 SUB SWAP1 CALLER PUSH2 0x1F9D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1C5 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C5 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1C5 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C5 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x1C5 JUMPI PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x471 PUSH32 0x3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848 PUSH2 0x1823 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x587 JUMPI PUSH1 0xFF PUSH2 0x1C4 SLOAD AND PUSH2 0x52F JUMPI DUP1 PUSH1 0x0 MSTORE PUSH1 0xC9 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP2 DUP1 DUP4 LT PUSH2 0x4DF JUMPI PUSH1 0x20 DUP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 PUSH1 0x0 SWAP6 DUP6 DUP8 MSTORE PUSH1 0xC9 DUP5 MSTORE SUB PUSH1 0x40 DUP7 KECCAK256 SSTORE DUP1 PUSH1 0xCB SLOAD SUB PUSH1 0xCB SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332305061757361626C653A20746F6B656E207472616E73666572207768 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1A5B19481C185D5CD959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1C5 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C5 JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0xCD SLOAD PUSH2 0x5F8 DUP2 PUSH2 0x1DC5 JUMP JUMPDEST DUP1 DUP5 MSTORE SWAP1 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x68D JUMPI POP PUSH1 0x1 EQ PUSH2 0x632 JUMPI JUMPDEST PUSH2 0x62E DUP5 PUSH2 0x622 DUP2 DUP7 SUB DUP3 PUSH2 0x1790 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x1764 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0xCD PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP3 POP PUSH32 0x83978B4C69C48DD978AB43FE30F077615294F938FB7F936D9EB340E51EA7DB2E JUMPDEST DUP3 DUP5 LT PUSH2 0x675 JUMPI POP POP POP DUP2 ADD PUSH1 0x20 ADD PUSH2 0x622 DUP3 PUSH2 0x612 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x20 DUP6 DUP8 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP4 ADD SWAP3 DUP2 ADD PUSH2 0x65D JUMP JUMPDEST PUSH1 0xFF NOT AND PUSH1 0x20 DUP1 DUP8 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 ISZERO ISZERO PUSH1 0x5 SHL DUP6 ADD SWAP1 SWAP3 ADD SWAP3 POP PUSH2 0x622 SWAP2 POP DUP4 SWAP1 POP PUSH2 0x612 JUMP JUMPDEST CALLVALUE PUSH2 0x1C5 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C5 JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x1C5 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1C5 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C5 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x97 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH2 0x734 PUSH1 0x24 CALLDATALOAD PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x2245 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1C5 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C5 JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1C5 JUMPI PUSH2 0x77E SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1805 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1C5 JUMPI PUSH2 0x79E SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1805 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x44 CALLDATALOAD DUP2 DUP2 AND DUP2 SUB PUSH2 0x1C5 JUMPI PUSH1 0x64 CALLDATALOAD DUP3 DUP2 AND DUP2 SUB PUSH2 0x1C5 JUMPI PUSH1 0x0 SLOAD SWAP4 PUSH1 0xFF DUP6 PUSH1 0x8 SHR AND ISZERO SWAP5 DUP6 DUP1 SWAP7 PUSH2 0xE7E JUMPI JUMPDEST DUP1 ISZERO PUSH2 0xE67 JUMPI JUMPDEST ISZERO PUSH2 0xE0B JUMPI PUSH1 0xFF NOT DUP2 AND PUSH1 0x1 OR PUSH1 0x0 SSTORE DUP6 PUSH2 0xDF9 JUMPI JUMPDEST POP PUSH2 0x815 PUSH1 0xFF PUSH1 0x0 SLOAD PUSH1 0x8 SHR AND PUSH2 0x807 DUP2 PUSH2 0x2479 JUMP JUMPDEST PUSH2 0x810 DUP2 PUSH2 0x2479 JUMP JUMPDEST PUSH2 0x2479 JUMP JUMPDEST DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xCEE JUMPI DUP1 PUSH2 0x832 PUSH1 0xCC SLOAD PUSH2 0x1DC5 JUMP JUMPDEST SWAP3 PUSH1 0x1F SWAP4 DUP5 DUP2 GT PUSH2 0xD83 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 DUP5 DUP4 GT PUSH1 0x1 EQ PUSH2 0xD0F JUMPI PUSH1 0x0 SWAP3 PUSH2 0xD04 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0xCC SSTORE JUMPDEST DUP6 MLOAD SWAP6 PUSH8 0xFFFFFFFFFFFFFFFF DUP8 GT PUSH2 0xCEE JUMPI PUSH2 0x887 PUSH1 0xCD SLOAD PUSH2 0x1DC5 JUMP JUMPDEST DUP3 DUP2 GT PUSH2 0xC8C JUMPI JUMPDEST POP PUSH1 0x20 SWAP2 DUP8 GT PUSH1 0x1 EQ PUSH2 0xC02 JUMPI SWAP6 DUP1 SWAP2 PUSH2 0xAA4 SWAP7 SWAP8 PUSH1 0x0 SWAP3 PUSH2 0xBF7 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0xCD SSTORE JUMPDEST PUSH2 0x8E0 PUSH1 0xFF PUSH1 0x0 SLOAD PUSH1 0x8 SHR AND PUSH2 0x8D7 DUP2 PUSH2 0x2479 JUMP JUMPDEST PUSH2 0x807 DUP2 PUSH2 0x2479 JUMP JUMPDEST PUSH2 0x191 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 DUP5 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xFFDFC1249C027F9191656349FEB0761381BB32C9F557E01F419FD08754BF5A1B PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x65 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0xBB2 JUMPI JUMPDEST PUSH1 0x0 DUP1 MSTORE PUSH1 0x97 PUSH1 0x20 MSTORE PUSH2 0x96A DUP3 DUP5 AND PUSH32 0x683723E34A772B6E4F2C919BBA7FA32ED8EA11A8325F54DA7DB716E9D9DD98C7 PUSH2 0x225D JUMP JUMPDEST POP PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP1 PUSH1 0x0 MSTORE DUP2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP5 DUP5 AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0xB6D JUMPI JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x97 PUSH1 0x20 MSTORE PUSH2 0x9C9 DUP4 DUP4 AND PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x225D JUMP JUMPDEST POP PUSH32 0x3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848 DUP1 PUSH1 0x0 MSTORE DUP2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP5 DUP5 AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0xB28 JUMPI JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x97 PUSH1 0x20 MSTORE PUSH2 0xA28 DUP4 DUP4 AND PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x225D JUMP JUMPDEST POP PUSH2 0xA3E PUSH1 0xFF PUSH1 0x0 SLOAD PUSH1 0x8 SHR AND PUSH2 0x810 DUP2 PUSH2 0x2479 JUMP JUMPDEST PUSH2 0x1C4 PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A SWAP1 DUP2 PUSH1 0x0 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP5 DUP5 AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0xAE3 JUMPI JUMPDEST POP PUSH1 0x0 MSTORE PUSH1 0x97 PUSH1 0x20 MSTORE AND PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x225D JUMP JUMPDEST POP PUSH2 0xAAB JUMPI STOP JUMPDEST PUSH2 0xFF00 NOT PUSH1 0x0 SLOAD AND PUSH1 0x0 SSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE LOG1 STOP JUMPDEST DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP4 DUP4 AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE CALLER DUP4 DUP4 AND DUP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x24DA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 PUSH1 0x40 MLOAD LOG4 DUP6 PUSH2 0xA90 JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE DUP2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP5 DUP5 AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE CALLER DUP5 DUP5 AND DUP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x24DA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 PUSH1 0x40 MLOAD LOG4 PUSH2 0xA10 JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE DUP2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP5 DUP5 AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE CALLER DUP5 DUP5 AND DUP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x24DA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 PUSH1 0x40 MLOAD LOG4 PUSH2 0x9B1 JUMP JUMPDEST PUSH1 0x0 DUP1 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP4 DUP4 AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE CALLER DUP4 DUP4 AND PUSH1 0x0 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x24DA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 PUSH1 0x40 MLOAD LOG4 PUSH2 0x935 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP8 DUP1 PUSH2 0x8AC JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP8 AND SWAP2 PUSH1 0xCD PUSH1 0x0 MSTORE PUSH32 0x83978B4C69C48DD978AB43FE30F077615294F938FB7F936D9EB340E51EA7DB2E SWAP3 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0xC74 JUMPI POP SWAP2 PUSH1 0x1 SWAP4 SWAP2 DUP10 PUSH2 0xAA4 SWAP10 SWAP11 SWAP5 LT PUSH2 0xC5B JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0xCD SSTORE PUSH2 0x8C2 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP8 DUP1 DUP1 PUSH2 0xC4D JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0xC33 JUMP JUMPDEST PUSH1 0xCD PUSH1 0x0 MSTORE PUSH32 0x83978B4C69C48DD978AB43FE30F077615294F938FB7F936D9EB340E51EA7DB2E DUP4 DUP1 DUP11 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 PUSH1 0x20 DUP12 LT PUSH2 0xCE5 JUMPI JUMPDEST ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0xCD9 JUMPI POP PUSH2 0x88F JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xCCC JUMP JUMPDEST SWAP3 POP DUP2 SWAP3 PUSH2 0xCC5 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD MLOAD SWAP1 POP DUP9 DUP1 PUSH2 0x854 JUMP JUMPDEST PUSH1 0xCC PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x24FA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP4 POP PUSH1 0x1F NOT DUP6 AND SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0xD6B JUMPI POP SWAP1 DUP5 PUSH1 0x1 SWAP6 SWAP5 SWAP4 SWAP3 LT PUSH2 0xD52 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0xCC SSTORE PUSH2 0x86A JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP9 DUP1 DUP1 PUSH2 0xD44 JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0xD2E JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0xCC PUSH1 0x0 MSTORE DUP4 DUP1 DUP5 ADD PUSH1 0x5 SHR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x24FA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH2 0xDE3 JUMPI JUMPDEST SWAP1 DUP5 SWAP4 SWAP3 SWAP2 ADD PUSH1 0x5 SHR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x24FA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0xDD4 JUMPI POP PUSH2 0x83E JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP5 SWAP4 POP PUSH1 0x1 ADD PUSH2 0xDC7 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x24FA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 POP PUSH2 0xDAC JUMP JUMPDEST PUSH2 0xFFFF NOT AND PUSH2 0x101 OR PUSH1 0x0 SSTORE DUP7 PUSH2 0x7F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7DB JUMPI POP PUSH1 0x1 PUSH1 0xFF DUP3 AND EQ PUSH2 0x7DB JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0xFF DUP3 AND LT PUSH2 0x7D4 JUMP JUMPDEST CALLVALUE PUSH2 0x1C5 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C5 JUMPI PUSH2 0xEC5 PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A PUSH2 0x1823 JUMP JUMPDEST PUSH2 0x1C4 DUP1 SLOAD PUSH1 0xFF DUP2 AND PUSH2 0xF08 JUMPI PUSH1 0x1 SWAP1 PUSH1 0xFF NOT AND OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH1 0x20 PUSH1 0x40 MLOAD CALLER DUP2 MSTORE LOG1 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1C5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C5 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x1C5 JUMPI PUSH1 0x0 MSTORE PUSH1 0xC9 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1C5 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C5 JUMPI PUSH1 0x20 PUSH1 0xFF PUSH2 0x1C4 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1C5 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C5 JUMPI PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS SUB PUSH2 0x100D JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP2 MSTORE RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x555550535570677261646561626C653A206D757374206E6F742062652063616C PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6C6564207468726F7567682064656C656761746563616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C5 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND DUP3 SUB PUSH2 0x1C5 JUMPI PUSH1 0x24 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x1C5 JUMPI CALLDATASIZE PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0x1C5 JUMPI PUSH2 0x2B0 SWAP3 PUSH2 0x112D PUSH2 0x10D3 PUSH1 0x1 SWAP5 CALLDATASIZE SWAP1 PUSH1 0x24 DUP2 PUSH1 0x4 ADD CALLDATALOAD SWAP2 ADD PUSH2 0x17CE JUMP JUMPDEST SWAP3 DUP1 PUSH32 0x0 AND SWAP1 PUSH2 0x1104 DUP3 ADDRESS EQ ISZERO PUSH2 0x198C JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD AND EQ PUSH2 0x19ED JUMP JUMPDEST PUSH2 0x1135 PUSH2 0x23D9 JUMP JUMPDEST PUSH2 0x1A4E JUMP JUMPDEST CALLVALUE PUSH2 0x1C5 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C5 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x1C5 JUMPI PUSH1 0x24 CALLDATALOAD PUSH2 0x118C PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0x1823 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x11F5 JUMPI PUSH1 0xFF PUSH2 0x1C4 SLOAD AND PUSH2 0x52F JUMPI PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x20 DUP3 PUSH2 0x11CF PUSH1 0x0 SWAP5 PUSH1 0xCB SLOAD PUSH2 0x1DFF JUMP JUMPDEST PUSH1 0xCB SSTORE DUP5 DUP5 MSTORE PUSH1 0xC9 DUP3 MSTORE PUSH1 0x40 DUP5 KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1C5 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C5 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 DUP2 SUB PUSH2 0x1C5 JUMPI PUSH2 0x34B SWAP2 CALLER PUSH1 0x0 MSTORE PUSH1 0xCA PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH2 0x128A PUSH1 0x24 CALLDATALOAD PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1DFF JUMP JUMPDEST SWAP1 CALLER PUSH2 0x1F9D JUMP JUMPDEST CALLVALUE PUSH2 0x1C5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C5 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND DUP3 SUB PUSH2 0x1C5 JUMPI PUSH2 0x2B0 SWAP2 PUSH2 0x12F0 DUP3 PUSH1 0x0 SWAP4 PUSH32 0x0 AND SWAP1 PUSH2 0x1104 DUP3 ADDRESS EQ ISZERO PUSH2 0x198C JUMP JUMPDEST PUSH2 0x12F8 PUSH2 0x23D9 JUMP JUMPDEST PUSH2 0x1301 DUP3 PUSH2 0x17B2 JUMP JUMPDEST SWAP1 PUSH2 0x130F PUSH1 0x40 MLOAD SWAP3 DUP4 PUSH2 0x1790 JUMP JUMPDEST DUP3 DUP3 MSTORE PUSH1 0x1F NOT PUSH2 0x131E DUP5 PUSH2 0x17B2 JUMP JUMPDEST ADD CALLDATASIZE PUSH1 0x20 DUP5 ADD CALLDATACOPY PUSH2 0x1A4E JUMP JUMPDEST CALLVALUE PUSH2 0x1C5 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C5 JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP1 DUP3 SUB PUSH2 0x1C5 JUMPI CALLER SUB PUSH2 0x1361 JUMPI PUSH2 0x2B0 SWAP1 PUSH1 0x4 CALLDATALOAD PUSH2 0x1902 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x103937B632B9903337B91039B2B633 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1C5 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C5 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1C5 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C5 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x1C5 JUMPI PUSH1 0x97 DUP3 PUSH2 0x2B0 SWAP4 PUSH1 0x0 MSTORE PUSH1 0x20 SWAP1 PUSH1 0x65 DUP3 MSTORE PUSH2 0x1425 PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH2 0x1823 JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x65 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP5 PUSH1 0x0 MSTORE DUP3 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0x1455 JUMPI JUMPDEST PUSH1 0x0 MSTORE MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x225D JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x65 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP5 PUSH1 0x0 MSTORE DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE CALLER DUP5 DUP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x24DA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 PUSH1 0x40 MLOAD LOG4 PUSH2 0x1447 JUMP JUMPDEST CALLVALUE PUSH2 0x1C5 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C5 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1C5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C5 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1C5 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C5 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND SWAP1 DUP2 DUP4 SUB PUSH2 0x1C5 JUMPI PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 AND DUP2 SUB PUSH2 0x1C5 JUMPI PUSH1 0x44 CALLDATALOAD SWAP2 PUSH1 0x0 MSTORE PUSH1 0xCA PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP3 PUSH1 0x0 NOT DUP5 SUB PUSH2 0x1565 JUMPI JUMPDEST PUSH2 0x34B SWAP4 POP PUSH2 0x1E22 JUMP JUMPDEST DUP3 DUP5 LT PUSH2 0x1581 JUMPI PUSH2 0x157C DUP4 PUSH2 0x34B SWAP6 SUB CALLER DUP4 PUSH2 0x1F9D JUMP JUMPDEST PUSH2 0x155B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1C5 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C5 JUMPI PUSH1 0x20 PUSH1 0xCB SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1C5 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C5 JUMPI PUSH2 0x191 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1C5 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C5 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x1C5 JUMPI PUSH2 0x34B SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x1F9D JUMP JUMPDEST CALLVALUE PUSH2 0x1C5 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C5 JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0xCC SLOAD PUSH2 0x1662 DUP2 PUSH2 0x1DC5 JUMP JUMPDEST DUP1 DUP5 MSTORE SWAP1 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x68D JUMPI POP PUSH1 0x1 EQ PUSH2 0x168B JUMPI PUSH2 0x62E DUP5 PUSH2 0x622 DUP2 DUP7 SUB DUP3 PUSH2 0x1790 JUMP JUMPDEST PUSH1 0xCC PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP3 POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x24FA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE JUMPDEST DUP3 DUP5 LT PUSH2 0x16BC JUMPI POP POP POP DUP2 ADD PUSH1 0x20 ADD PUSH2 0x622 DUP3 PUSH2 0x612 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x20 DUP6 DUP8 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP4 ADD SWAP3 DUP2 ADD PUSH2 0x16A4 JUMP JUMPDEST CALLVALUE PUSH2 0x1C5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C5 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP3 AND DUP1 SWAP3 SUB PUSH2 0x1C5 JUMPI PUSH1 0x20 SWAP2 PUSH4 0x5A05180F PUSH1 0xE0 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x1716 JUMPI JUMPDEST POP ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x7965DB0B PUSH1 0xE0 SHL DUP2 EQ SWAP2 POP DUP2 ISZERO PUSH2 0x1730 JUMPI JUMPDEST POP DUP4 PUSH2 0x170F JUMP JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP DUP4 PUSH2 0x1729 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x1754 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1744 JUMP JUMPDEST PUSH1 0x40 SWAP2 PUSH1 0x20 DUP3 MSTORE PUSH2 0x1784 DUP2 MLOAD DUP1 SWAP3 DUP2 PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x20 DUP7 DUP7 ADD SWAP2 ADD PUSH2 0x1741 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xCEE JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xCEE JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH2 0x17DA DUP3 PUSH2 0x17B2 JUMP JUMPDEST SWAP2 PUSH2 0x17E8 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x1790 JUMP JUMPDEST DUP3 SWAP5 DUP2 DUP5 MSTORE DUP2 DUP4 ADD GT PUSH2 0x1C5 JUMPI DUP3 DUP2 PUSH1 0x20 SWAP4 DUP5 PUSH1 0x0 SWAP7 ADD CALLDATACOPY ADD ADD MSTORE JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x1C5 JUMPI DUP2 PUSH1 0x20 PUSH2 0x1820 SWAP4 CALLDATALOAD SWAP2 ADD PUSH2 0x17CE JUMP JUMPDEST SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x65 DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE DUP2 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0x184A JUMPI POP POP JUMP JUMPDEST PUSH2 0x18E6 PUSH1 0x48 PUSH2 0x18FE SWAP4 DUP4 PUSH2 0x186C PUSH2 0x18D7 SWAP6 PUSH2 0x1866 PUSH1 0x14 CALLER PUSH2 0x20EA JUMP JUMPDEST SWAP4 PUSH2 0x20EA JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP4 PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 DUP4 DUP7 ADD MSTORE PUSH2 0x18AB DUP2 MLOAD DUP1 SWAP3 DUP6 PUSH1 0x37 DUP10 ADD SWAP2 ADD PUSH2 0x1741 JUMP JUMPDEST DUP5 ADD SWAP2 PUSH17 0x1034B99036B4B9B9B4B733903937B6329 PUSH1 0x7D SHL PUSH1 0x37 DUP5 ADD MSTORE DUP4 MLOAD SWAP4 DUP5 SWAP2 DUP8 DUP6 ADD SWAP2 ADD PUSH2 0x1741 JUMP JUMPDEST ADD SUB PUSH1 0x28 DUP2 ADD DUP5 MSTORE ADD DUP3 PUSH2 0x1790 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP2 DUP3 SWAP2 PUSH1 0x4 DUP4 ADD PUSH2 0x1764 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x1940 SWAP2 PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP2 DUP3 DUP3 KECCAK256 SWAP4 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP4 DUP5 DUP4 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF DUP4 DUP4 KECCAK256 SLOAD AND PUSH2 0x1943 JUMPI JUMPDEST DUP2 MSTORE PUSH1 0x97 PUSH1 0x20 MSTORE KECCAK256 PUSH2 0x22E9 JUMP JUMPDEST POP JUMP JUMPDEST DUP1 DUP3 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE DUP3 DUP3 KECCAK256 DUP5 DUP4 MSTORE PUSH1 0x20 MSTORE DUP3 DUP3 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE CALLER DUP5 DUP3 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B DUP6 DUP8 MLOAD LOG4 PUSH2 0x1933 JUMP JUMPDEST ISZERO PUSH2 0x1993 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x19195B1959D85D1958D85B1B PUSH1 0xA2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x19F4 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x6163746976652070726F7879 PUSH1 0xA0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 SWAP3 SWAP2 PUSH1 0xFF PUSH32 0x4910FDFA16FED3260ED0E7147F7CC6DA11A60208B5B9406D12A635614FFD9143 SLOAD AND PUSH1 0x0 EQ PUSH2 0x1A8B JUMPI POP PUSH2 0x1A89 SWAP2 SWAP3 POP PUSH2 0x1D23 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x52D1902D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x20 SWAP5 SWAP2 SWAP4 SWAP2 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP2 DUP7 DUP2 PUSH1 0x4 DUP2 DUP7 GAS STATICCALL PUSH1 0x0 SWAP2 DUP2 PUSH2 0x1CF1 JUMPI JUMPDEST POP PUSH2 0x1B1C JUMPI DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A206E657720696D706C656D656E74617469 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x6F6E206973206E6F742055555053 PUSH1 0x90 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP4 SWAP6 SWAP5 SWAP4 PUSH32 0xC9F76B5EC45E5CDEF99837D7B6D2467235C1DF8933C8CA56DF5C35AFA2C7D444 ADD PUSH2 0x1C9B JUMPI PUSH2 0x1B4F DUP4 PUSH2 0x1D23 JUMP JUMPDEST DUP4 MLOAD SWAP2 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x0 DUP5 LOG2 DUP7 MLOAD ISZERO SWAP1 DUP2 ISZERO SWAP2 PUSH2 0x1C93 JUMPI JUMPDEST POP PUSH2 0x1B91 JUMPI JUMPDEST POP POP POP POP SWAP1 POP JUMP JUMPDEST DUP2 EXTCODESIZE ISZERO PUSH2 0x1C42 JUMPI POP PUSH1 0x0 DUP6 DUP2 SWAP3 DUP6 PUSH2 0x1C24 SWAP8 SWAP9 MLOAD SWAP3 ADD SWAP1 GAS DELEGATECALL RETURNDATASIZE ISZERO PUSH2 0x1C2F JUMPI PUSH7 0x819985A5B1959 PUSH1 0xCA SHL RETURNDATASIZE SWAP3 PUSH2 0x1BC6 DUP5 PUSH2 0x17B2 JUMP JUMPDEST SWAP4 PUSH2 0x1BD3 DUP3 MLOAD SWAP6 DUP7 PUSH2 0x1790 JUMP JUMPDEST DUP5 MSTORE RETURNDATASIZE PUSH1 0x0 DUP7 DUP7 ADD RETURNDATACOPY JUMPDEST PUSH32 0x416464726573733A206C6F772D6C6576656C2064656C65676174652063616C6C PUSH2 0x1C08 PUSH1 0x27 PUSH2 0x17B2 JUMP JUMPDEST SWAP6 PUSH2 0x1C15 DUP4 MLOAD SWAP8 DUP9 PUSH2 0x1790 JUMP JUMPDEST PUSH1 0x27 DUP8 MSTORE DUP7 ADD MSTORE DUP5 ADD MSTORE PUSH2 0x209F JUMP JUMPDEST POP DUP1 CODESIZE DUP1 DUP1 DUP1 PUSH2 0x1B89 JUMP JUMPDEST PUSH7 0x819985A5B1959 PUSH1 0xCA SHL PUSH1 0x60 SWAP3 PUSH2 0x1BDD JUMP JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2064656C65676174652063616C6C20746F206E6F6E2D636F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1B9D1C9858DD PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 POP CODESIZE PUSH2 0x1B83 JUMP JUMPDEST DUP4 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A20756E737570706F727465642070726F78 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x1A58589B1955555251 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 SWAP2 DUP9 DUP3 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x1D1C JUMPI JUMPDEST PUSH2 0x1D08 DUP2 DUP4 PUSH2 0x1790 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1D19 JUMPI POP MLOAD SWAP1 CODESIZE PUSH2 0x1ABC JUMP JUMPDEST DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x1CFE JUMP JUMPDEST DUP1 EXTCODESIZE ISZERO PUSH2 0x1D6A JUMPI PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x1BDD08184818DBDB9D1C9858DD PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x1DF5 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x1DDF JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x1DD4 JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x1E0C JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 DUP3 ISZERO PUSH2 0x1F4A JUMPI AND SWAP2 DUP3 ISZERO PUSH2 0x1EF9 JUMPI PUSH1 0xFF PUSH2 0x1C4 SLOAD AND PUSH2 0x52F JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xC9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP2 DUP1 DUP4 LT PUSH2 0x1EA5 JUMPI PUSH1 0x40 DUP3 DUP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP6 DUP8 PUSH1 0x20 SWAP7 MSTORE PUSH1 0xC9 DUP7 MSTORE SUB DUP3 DUP3 KECCAK256 SSTORE DUP7 DUP2 MSTORE KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 DUP3 ISZERO PUSH2 0x204E JUMPI AND SWAP2 DUP3 ISZERO PUSH2 0x1FFE JUMPI PUSH1 0x20 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 DUP4 PUSH1 0x0 MSTORE PUSH1 0xCA DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP6 PUSH1 0x0 MSTORE DUP3 MSTORE DUP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 SWAP2 SWAP1 ISZERO PUSH2 0x20AB JUMPI POP SWAP1 JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0x20BB JUMPI POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP1 DUP2 SWAP1 PUSH2 0x18FE SWAP1 PUSH1 0x4 DUP4 ADD PUSH2 0x1764 JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT DUP2 ISZERO ISZERO AND PUSH2 0x1E0C JUMPI MUL SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x20F6 DUP2 PUSH1 0x2 PUSH2 0x20D7 JUMP JUMPDEST SWAP2 PUSH1 0x2 DUP4 ADD DUP1 SWAP4 GT PUSH2 0x1E0C JUMPI PUSH2 0x2124 PUSH2 0x210E DUP5 PUSH2 0x17B2 JUMP JUMPDEST SWAP4 PUSH2 0x211C PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x1790 JUMP JUMPDEST DUP1 DUP6 MSTORE PUSH2 0x17B2 JUMP JUMPDEST PUSH1 0x20 SWAP3 SWAP1 DUP5 DUP5 ADD SWAP1 PUSH1 0x1F NOT ADD CALLDATASIZE DUP3 CALLDATACOPY DUP5 MLOAD ISZERO PUSH2 0x222F JUMPI PUSH1 0x30 SWAP1 MSTORE8 DUP4 MLOAD SWAP1 PUSH1 0x1 SWAP2 DUP3 LT ISZERO PUSH2 0x222F JUMPI PUSH2 0x215D SWAP1 PUSH1 0x78 PUSH1 0x21 DUP8 ADD MSTORE8 PUSH1 0x2 PUSH2 0x20D7 JUMP JUMPDEST DUP2 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x1E0C JUMPI SWAP1 JUMPDEST DUP1 DUP3 GT PUSH2 0x21BD JUMPI POP POP PUSH2 0x217A JUMPI POP SWAP1 JUMP JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE DUP1 PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 SWAP2 PUSH1 0xF DUP2 AND PUSH1 0x10 DUP2 LT ISZERO PUSH2 0x221A JUMPI DUP6 MLOAD DUP5 LT ISZERO PUSH2 0x221A JUMPI PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL SWAP1 BYTE DUP6 DUP5 ADD DUP6 ADD MSTORE8 PUSH1 0x4 SHR SWAP2 DUP1 ISZERO PUSH2 0x2205 JUMPI PUSH1 0x0 NOT ADD SWAP1 PUSH2 0x2169 JUMP JUMPDEST PUSH1 0x24 PUSH1 0x0 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x24 PUSH1 0x0 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x222F JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x1 DUP4 ADD PUSH1 0x0 SWAP1 DUP3 DUP3 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 SLOAD ISZERO PUSH1 0x0 EQ PUSH2 0x22E3 JUMPI DUP5 SLOAD SWAP5 PUSH9 0x10000000000000000 DUP7 LT ISZERO PUSH2 0x22CF JUMPI DUP4 PUSH2 0x22BF PUSH2 0x22A6 DUP9 PUSH1 0x1 PUSH1 0x40 SWAP9 SWAP10 SWAP11 ADD DUP6 SSTORE DUP5 PUSH2 0x2245 JUMP JUMPDEST DUP2 SWAP4 SWAP2 SLOAD SWAP1 PUSH1 0x3 SHL PUSH1 0x0 NOT DUP2 SHL SWAP3 DUP4 SWAP2 SHL AND SWAP2 NOT AND OR SWAP1 JUMP JUMPDEST SWAP1 SSTORE SLOAD SWAP4 DUP3 MSTORE PUSH1 0x20 MSTORE KECCAK256 SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST POP SWAP3 POP POP JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 ADD SWAP1 PUSH1 0x0 SWAP3 DUP2 DUP5 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 SLOAD SWAP1 DUP2 ISZERO ISZERO PUSH1 0x0 EQ PUSH2 0x23D2 JUMPI PUSH1 0x0 NOT SWAP2 DUP1 DUP4 ADD DUP2 DUP2 GT PUSH2 0x23BE JUMPI DUP3 SLOAD SWAP1 DUP5 DUP3 ADD SWAP2 DUP3 GT PUSH2 0x23AA JUMPI DUP1 DUP3 SUB PUSH2 0x2375 JUMPI JUMPDEST POP POP POP DUP1 SLOAD DUP1 ISZERO PUSH2 0x2361 JUMPI DUP3 ADD SWAP2 PUSH2 0x2344 DUP4 DUP4 PUSH2 0x2245 JUMP JUMPDEST SWAP1 SWAP2 DUP3 SLOAD SWAP2 PUSH1 0x3 SHL SHL NOT AND SWAP1 SSTORE SSTORE DUP3 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST PUSH2 0x2395 PUSH2 0x2385 PUSH2 0x22A6 SWAP4 DUP7 PUSH2 0x2245 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR SWAP3 DUP4 SWAP3 DUP7 PUSH2 0x2245 JUMP JUMPDEST SWAP1 SSTORE DUP7 MSTORE DUP5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP7 KECCAK256 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x232C JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP9 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP8 REVERT JUMPDEST POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x191 SLOAD PUSH1 0x40 MLOAD PUSH4 0xD994D6D5 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x246D JUMPI PUSH1 0x0 SWAP2 PUSH2 0x242F JUMPI JUMPDEST POP ISZERO PUSH2 0x241D JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1DD1B1B5 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x20 DUP2 RETURNDATASIZE DUP3 GT PUSH2 0x2465 JUMPI JUMPDEST DUP2 PUSH2 0x2447 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1790 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x2461 JUMPI MLOAD SWAP1 DUP2 ISZERO ISZERO DUP3 SUB PUSH2 0x1D19 JUMPI POP CODESIZE PUSH2 0x2415 JUMP JUMPDEST POP DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x243A JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2480 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT INVALID 0x2F DUP8 DUP9 GT PUSH31 0x7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D47197230 0xE1 0xE4 0xB2 SWAP16 0xC0 0xBD DUP5 0xD7 0xD7 DUP10 PUSH7 0xC0925452AFF72A 0x2A SLT ISZERO CODESIZE 0xB1 MUL GASLIMIT PUSH31 0x9EBEA2646970667358221220E3C3CAA0CD698C28C4336D0F6D00B74B33F5E3 0x22 0xCF SUB 0xDA PUSH19 0xB0183D15179C0D6A64736F6C63430008100033 PUSH1 0x80 CALLVALUE PUSH2 0x8C JUMPI PUSH1 0x1F PUSH2 0x313 CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH2 0x91 JUMPI DUP1 DUP5 SWAP3 PUSH1 0x40 SWAP5 DUP6 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0x8C JUMPI DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP2 SWAP1 DUP3 SWAP1 SUB PUSH2 0x8C JUMPI PUSH1 0x20 ADD MLOAD SWAP1 DUP2 PUSH1 0x0 SIGNEXTEND DUP3 SUB PUSH2 0x8C JUMPI PUSH1 0x0 SLOAD SWAP2 PUSH1 0xA0 SHL PUSH1 0xFF PUSH1 0xA0 SHL AND SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA8 SHL SUB NOT AND OR OR PUSH1 0x0 SSTORE PUSH1 0x40 MLOAD PUSH2 0x26B SWAP1 DUP2 PUSH2 0xA8 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 SWAP2 DUP3 CALLDATASIZE LT ISZERO PUSH2 0x16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE0 SHR SWAP2 DUP3 PUSH4 0x12FC41CA EQ PUSH2 0x1EE JUMPI POP DUP2 PUSH4 0x59E02DD7 EQ PUSH2 0x70 JUMPI POP PUSH4 0xB888879E EQ PUSH2 0x46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x6C JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x6C JUMPI SWAP1 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP DUP1 REVERT JUMPDEST DUP4 SWAP2 POP CALLVALUE PUSH2 0x6C JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x6C JUMPI DUP2 SLOAD DUP4 MLOAD PUSH4 0x59E02DD7 PUSH1 0xE0 SHL DUP2 MSTORE SWAP3 DUP5 DUP5 DUP5 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND GAS STATICCALL SWAP4 DUP5 ISZERO PUSH2 0x1E2 JUMPI DUP2 SWAP1 DUP3 SWAP6 PUSH2 0x177 JUMPI JUMPDEST POP SWAP2 PUSH1 0xA0 SHR DUP3 DUP2 DUP4 SIGNEXTEND DUP4 DUP2 SGT ISZERO PUSH2 0x107 JUMPI POP POP PUSH2 0xD1 SWAP1 PUSH1 0xFF AND PUSH2 0x20E JUMP JUMPDEST SWAP3 DUP3 PUSH1 0x0 NOT DIV DUP5 GT DUP4 ISZERO ISZERO AND PUSH2 0xF4 JUMPI POP POP MUL SWAP1 JUMPDEST DUP3 MLOAD SWAP2 DUP3 MSTORE ISZERO ISZERO PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x11 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST SWAP1 SWAP3 DUP1 SWAP3 POP DUP2 SWAP7 SWAP6 SWAP5 SWAP7 SLT PUSH2 0x120 JUMPI JUMPDEST POP POP POP POP PUSH2 0xE6 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 POP PUSH1 0x7F NOT DUP2 EQ PUSH2 0x164 JUMPI PUSH2 0x13D SWAP1 DUP3 SUB PUSH1 0xFF AND PUSH2 0x20E JUMP JUMPDEST SWAP3 DUP4 ISZERO PUSH2 0x151 JUMPI POP POP DIV SWAP1 DUP4 DUP1 DUP1 DUP1 PUSH2 0x117 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x12 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x11 DUP5 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST SWAP5 POP POP DUP5 RETURNDATASIZE DUP7 GT PUSH2 0x1DB JUMPI JUMPDEST PUSH1 0x1F DUP2 ADD PUSH1 0x1F NOT AND DUP6 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP7 DUP3 LT OR PUSH2 0x1C8 JUMPI DUP7 SWAP2 DUP7 SWAP2 DUP4 MSTORE DUP2 ADD SUB SLT PUSH2 0x1C5 JUMPI PUSH1 0x20 DUP5 MLOAD SWAP5 ADD MLOAD SWAP4 DUP5 ISZERO ISZERO DUP6 SUB PUSH2 0x6C JUMPI DUP7 PUSH2 0xB2 JUMP JUMPDEST DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x41 DUP6 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x183 JUMP JUMPDEST POP DUP5 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP5 SWAP1 CALLVALUE PUSH2 0x6C JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x6C JUMPI DUP2 PUSH1 0x20 SWAP3 SLOAD PUSH1 0xA0 SHR SWAP1 SIGNEXTEND DUP2 MSTORE RETURN JUMPDEST PUSH1 0xFF AND PUSH1 0x4D DUP2 GT PUSH2 0x21F JUMPI PUSH1 0xA EXP SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE 0xE4 DUP14 0xCB PUSH19 0x7FF64C7999657A96016231BF43C6E2E8BFA366 0xA8 0x2B BALANCE 0xCF 0xC1 0xB2 0xAD 0xF7 PUSH5 0x736F6C6343 STOP ADDMOD LT STOP CALLER PUSH1 0xA0 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0xDC JUMPI ADDRESS PUSH1 0x80 MSTORE PUSH1 0x0 SLOAD SWAP1 PUSH1 0xFF DUP3 PUSH1 0x8 SHR AND PUSH2 0x8A JUMPI POP PUSH1 0xFF DUP1 DUP3 AND LT PUSH2 0x4F JUMPI JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF5B SWAP1 DUP2 PUSH2 0xE2 DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 DUP2 DUP2 PUSH2 0x53B ADD MSTORE DUP2 DUP2 PUSH2 0x6A7 ADD MSTORE PUSH2 0x7B7 ADD MSTORE RETURN JUMPDEST PUSH1 0xFF SWAP1 DUP2 NOT AND OR PUSH1 0x0 SSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0xFF DUP2 MSTORE LOG1 CODESIZE PUSH2 0x29 JUMP JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320696E697469 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x616C697A696E67 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x40 PUSH1 0x80 DUP2 MSTORE PUSH1 0x4 SWAP1 DUP2 CALLDATASIZE LT ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5216F72 EQ PUSH2 0x89B JUMPI DUP1 PUSH4 0xC340A24 EQ PUSH2 0x872 JUMPI DUP1 PUSH4 0x2D88AF4A EQ PUSH2 0x81D JUMPI DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0x786 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x70E JUMPI DUP4 DUP2 PUSH4 0x4F1EF286 EQ PUSH2 0x624 JUMPI POP DUP1 PUSH4 0x5210570C EQ PUSH2 0x5FD JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x526 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x4FF JUMPI DUP1 PUSH4 0x64A731E9 EQ PUSH2 0x4C5 JUMPI DUP1 PUSH4 0x68274357 EQ PUSH2 0x49B JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x3FA JUMPI DUP1 PUSH4 0x8B9789C9 EQ PUSH2 0x3DD JUMPI DUP1 PUSH4 0x9FD0506D EQ PUSH2 0x3B0 JUMPI DUP1 PUSH4 0xBB4872DE EQ PUSH2 0x38C JUMPI DUP1 PUSH4 0xC0C53B8B EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0xD6C9858B EQ PUSH2 0x19B JUMPI DUP1 PUSH4 0xE4C0AAF4 EQ PUSH2 0x153 JUMPI PUSH4 0xE6FD7096 EQ PUSH2 0xF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x14F JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x14F JUMPI DUP1 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND DUP4 SUB PUSH2 0x14B JUMPI PUSH2 0x12F SLOAD AND CALLER SUB PUSH2 0x134 JUMPI POP PUSH2 0x131 SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0xEDF JUMP JUMPDEST MLOAD RETURN JUMPDEST PUSH1 0x24 SWAP1 DUP4 MLOAD SWAP1 PUSH4 0x2976A2F PUSH1 0xE0 SHL DUP3 MSTORE CALLER SWAP1 DUP3 ADD MSTORE REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x14F JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x14F JUMPI CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x14F JUMPI PUSH2 0x180 PUSH2 0xDE4 JUMP JUMPDEST PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL PUSH1 0x97 SLOAD AND OR PUSH1 0x97 SSTORE MLOAD RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x1C5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1C5 JUMPI PUSH2 0x12F SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x14F JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x14F JUMPI DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND SWAP3 SWAP2 DUP4 SWAP1 SUB PUSH2 0x14B JUMPI PUSH1 0x24 CALLDATALOAD SWAP3 DUP2 DUP5 AND DUP1 SWAP5 SUB PUSH2 0x388 JUMPI PUSH1 0x44 CALLDATALOAD SWAP2 DUP3 AND DUP3 SUB PUSH2 0x388 JUMPI DUP6 SLOAD PUSH1 0xFF DUP2 PUSH1 0x8 SHR AND ISZERO SWAP4 DUP5 DUP1 SWAP6 PUSH2 0x37B JUMPI JUMPDEST DUP1 ISZERO PUSH2 0x364 JUMPI JUMPDEST ISZERO PUSH2 0x30A JUMPI POP PUSH1 0x1 SWAP3 SWAP2 PUSH2 0x29B SWAP2 DUP6 DUP6 PUSH1 0xFF NOT DUP4 AND OR DUP11 SSTORE PUSH2 0x2F9 JUMPI JUMPDEST POP PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL SWAP1 PUSH2 0x12F SWAP1 DUP3 DUP3 SLOAD AND OR SWAP1 SSTORE DUP8 SLOAD SWAP6 PUSH1 0xFF DUP8 PUSH1 0x8 SHR AND SWAP2 PUSH2 0x273 DUP4 PUSH2 0xE7F JUMP JUMPDEST PUSH2 0x27C DUP4 PUSH2 0xE7F JUMP JUMPDEST PUSH2 0x285 DUP4 PUSH2 0xE7F JUMP JUMPDEST PUSH2 0x28E DUP4 PUSH2 0xE7F JUMP JUMPDEST PUSH1 0x97 SLOAD AND OR PUSH1 0x97 SSTORE PUSH2 0xE7F JUMP JUMPDEST PUSH1 0xCA SLOAD SWAP1 PUSH3 0x10000 DUP4 PUSH1 0xB0 SHL SUB SWAP1 PUSH1 0x10 SHL AND SWAP1 PUSH2 0xFF01 DUP4 PUSH1 0xB0 SHL SUB NOT AND OR OR PUSH1 0xCA SSTORE PUSH2 0x2C5 JUMPI POP MLOAD RETURN JUMPDEST PUSH2 0xFF00 NOT AND DUP3 SSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 PUSH1 0x20 DUP3 MLOAD PUSH1 0x1 DUP2 MSTORE LOG1 MLOAD RETURN JUMPDEST PUSH2 0xFFFF NOT AND PUSH2 0x101 OR DUP9 SSTORE CODESIZE PUSH2 0x242 JUMP JUMPDEST PUSH1 0x84 SWAP1 PUSH1 0x20 DUP9 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x225 JUMPI POP PUSH1 0x1 PUSH1 0xFF DUP4 AND EQ PUSH2 0x225 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0xFF DUP4 AND LT PUSH2 0x21E JUMP JUMPDEST DUP6 DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x1C5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1C5 JUMPI PUSH1 0x20 SWAP1 PUSH1 0xFF PUSH1 0xCA SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x1C5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1C5 JUMPI PUSH1 0xCA SLOAD SWAP1 MLOAD PUSH1 0x10 SWAP2 SWAP1 SWAP2 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x14F JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x14F JUMPI PUSH2 0x131 SWAP1 CALLDATALOAD CALLER PUSH2 0xEDF JUMP JUMPDEST POP CALLVALUE PUSH2 0x14F JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x14F JUMPI PUSH1 0xCA SLOAD SWAP1 PUSH1 0xFF DUP3 PUSH1 0x8 SHR AND PUSH2 0x48D JUMPI PUSH1 0x10 DUP3 SWAP1 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x47F JUMPI PUSH1 0xFF DUP3 AND ISZERO PUSH2 0x471 JUMPI POP PUSH2 0x100 SWAP1 PUSH2 0xFF00 NOT AND OR PUSH1 0xCA SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH1 0x20 DUP3 MLOAD CALLER DUP2 MSTORE LOG1 MLOAD RETURN JUMPDEST DUP3 MLOAD PUSH4 0x866099C3 PUSH1 0xE0 SHL DUP2 MSTORE REVERT JUMPDEST DUP3 MLOAD PUSH4 0x1D77D477 PUSH1 0xE2 SHL DUP2 MSTORE REVERT JUMPDEST DUP3 MLOAD PUSH4 0x783BB6C9 PUSH1 0xE1 SHL DUP2 MSTORE REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x1C5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1C5 JUMPI PUSH2 0x4B5 PUSH2 0xDE4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xFF NOT PUSH1 0xCA SLOAD AND OR PUSH1 0xCA SSTORE MLOAD RETURN JUMPDEST POP CALLVALUE PUSH2 0x14F JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x14F JUMPI CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x14F JUMPI DUP3 DUP3 SWAP2 PUSH1 0x20 SWAP5 MSTORE PUSH2 0x130 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x1C5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1C5 JUMPI PUSH1 0x20 SWAP1 PUSH1 0xFF PUSH1 0xCA SLOAD PUSH1 0x8 SHR AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP DUP3 CALLVALUE PUSH2 0x5FA JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x5FA JUMPI POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS SUB PUSH2 0x592 JUMPI PUSH1 0x20 DUP3 MLOAD PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP2 MSTORE RETURN JUMPDEST PUSH1 0x20 PUSH1 0x84 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x555550535570677261646561626C653A206D757374206E6F742062652063616C PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6C6564207468726F7567682064656C656761746563616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x1C5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1C5 JUMPI PUSH2 0x617 PUSH2 0xDE4 JUMP JUMPDEST PUSH1 0xFF NOT PUSH1 0xCA SLOAD AND PUSH1 0xCA SSTORE MLOAD RETURN JUMPDEST SWAP2 SWAP1 POP DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1C5 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 DUP2 AND DUP2 SUB PUSH2 0x70A JUMPI PUSH1 0x24 CALLDATALOAD SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT PUSH2 0x14B JUMPI CALLDATASIZE PUSH1 0x23 DUP6 ADD SLT ISZERO PUSH2 0x14B JUMPI DUP4 ADD CALLDATALOAD PUSH2 0x66F DUP2 PUSH2 0x917 JUMP JUMPDEST SWAP3 PUSH2 0x67C DUP8 MLOAD SWAP5 DUP6 PUSH2 0x8DF JUMP JUMPDEST DUP2 DUP5 MSTORE CALLDATASIZE PUSH1 0x24 DUP4 DUP8 ADD ADD GT PUSH2 0x388 JUMPI PUSH2 0x131 SWAP6 PUSH1 0x20 DUP4 PUSH2 0x6FD SWAP5 PUSH1 0x24 PUSH1 0x1 SWAP10 ADD DUP4 DUP10 ADD CALLDATACOPY DUP7 ADD ADD MSTORE DUP1 PUSH32 0x0 AND SWAP1 PUSH2 0x6D4 DUP3 ADDRESS EQ ISZERO PUSH2 0x933 JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD AND EQ PUSH2 0x994 JUMP JUMPDEST PUSH2 0x705 PUSH2 0xDE4 JUMP JUMPDEST PUSH2 0x9F5 JUMP JUMPDEST DUP4 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x14F JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x14F JUMPI PUSH1 0xCA SLOAD SWAP1 PUSH1 0xFF DUP3 PUSH1 0x8 SHR AND ISZERO PUSH2 0x778 JUMPI PUSH1 0x10 DUP3 SWAP1 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x47F JUMPI POP PUSH2 0xFF00 NOT AND PUSH1 0xCA SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH1 0x20 DUP3 MLOAD CALLER DUP2 MSTORE LOG1 MLOAD RETURN JUMPDEST DUP3 MLOAD PUSH4 0x7C7FD079 PUSH1 0xE0 SHL DUP2 MSTORE REVERT JUMPDEST POP CALLVALUE PUSH2 0x14F JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x14F JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP4 SWAP1 CALLDATALOAD DUP3 DUP2 AND DUP2 SUB PUSH2 0x1C5 JUMPI PUSH2 0x7E4 DUP4 PUSH2 0x131 SWAP5 PUSH32 0x0 AND SWAP1 PUSH2 0x6D4 DUP3 ADDRESS EQ ISZERO PUSH2 0x933 JUMP JUMPDEST PUSH2 0x7EC PUSH2 0xDE4 JUMP JUMPDEST PUSH2 0x7F5 DUP3 PUSH2 0x917 JUMP JUMPDEST SWAP1 PUSH2 0x802 DUP6 MLOAD SWAP3 DUP4 PUSH2 0x8DF JUMP JUMPDEST DUP3 DUP3 MSTORE PUSH1 0x1F NOT PUSH2 0x811 DUP5 PUSH2 0x917 JUMP JUMPDEST ADD CALLDATASIZE PUSH1 0x20 DUP5 ADD CALLDATACOPY PUSH2 0x9F5 JUMP JUMPDEST POP CALLVALUE PUSH2 0x14F JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x14F JUMPI CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x14F JUMPI PUSH2 0x848 PUSH2 0xDE4 JUMP JUMPDEST PUSH1 0xCA DUP1 SLOAD PUSH3 0x10000 PUSH1 0x1 PUSH1 0xB0 SHL SUB NOT AND PUSH1 0x10 SWAP3 SWAP1 SWAP3 SHL PUSH3 0x10000 PUSH1 0x1 PUSH1 0xB0 SHL SUB AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE MLOAD RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x1C5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1C5 JUMPI PUSH1 0x97 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x14F JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x14F JUMPI CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x14F JUMPI PUSH2 0x8C8 PUSH2 0xDE4 JUMP JUMPDEST PUSH2 0x12F DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE MLOAD RETURN JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x901 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x901 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x93A JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x19195B1959D85D1958D85B1B PUSH1 0xA2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x99B JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x6163746976652070726F7879 PUSH1 0xA0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 SWAP3 SWAP2 PUSH1 0xFF PUSH32 0x4910FDFA16FED3260ED0E7147F7CC6DA11A60208B5B9406D12A635614FFD9143 SLOAD AND PUSH1 0x0 EQ PUSH2 0xA32 JUMPI POP PUSH2 0xA30 SWAP2 SWAP3 POP PUSH2 0xCC7 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x52D1902D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x20 SWAP5 SWAP2 SWAP4 SWAP2 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP2 DUP7 DUP2 PUSH1 0x4 DUP2 DUP7 GAS STATICCALL PUSH1 0x0 SWAP2 DUP2 PUSH2 0xC98 JUMPI JUMPDEST POP PUSH2 0xAC3 JUMPI DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A206E657720696D706C656D656E74617469 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x6F6E206973206E6F742055555053 PUSH1 0x90 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP4 SWAP6 SWAP5 SWAP4 PUSH32 0xC9F76B5EC45E5CDEF99837D7B6D2467235C1DF8933C8CA56DF5C35AFA2C7D444 ADD PUSH2 0xC42 JUMPI PUSH2 0xAF6 DUP4 PUSH2 0xCC7 JUMP JUMPDEST DUP4 MLOAD SWAP2 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x0 DUP5 LOG2 DUP7 MLOAD ISZERO SWAP1 DUP2 ISZERO SWAP2 PUSH2 0xC3A JUMPI JUMPDEST POP PUSH2 0xB38 JUMPI JUMPDEST POP POP POP POP SWAP1 POP JUMP JUMPDEST DUP2 EXTCODESIZE ISZERO PUSH2 0xBE9 JUMPI POP PUSH1 0x0 DUP6 DUP2 SWAP3 DUP6 PUSH2 0xBCB SWAP8 SWAP9 MLOAD SWAP3 ADD SWAP1 GAS DELEGATECALL RETURNDATASIZE ISZERO PUSH2 0xBD6 JUMPI PUSH7 0x819985A5B1959 PUSH1 0xCA SHL RETURNDATASIZE SWAP3 PUSH2 0xB6D DUP5 PUSH2 0x917 JUMP JUMPDEST SWAP4 PUSH2 0xB7A DUP3 MLOAD SWAP6 DUP7 PUSH2 0x8DF JUMP JUMPDEST DUP5 MSTORE RETURNDATASIZE PUSH1 0x0 DUP7 DUP7 ADD RETURNDATACOPY JUMPDEST PUSH32 0x416464726573733A206C6F772D6C6576656C2064656C65676174652063616C6C PUSH2 0xBAF PUSH1 0x27 PUSH2 0x917 JUMP JUMPDEST SWAP6 PUSH2 0xBBC DUP4 MLOAD SWAP8 DUP9 PUSH2 0x8DF JUMP JUMPDEST PUSH1 0x27 DUP8 MSTORE DUP7 ADD MSTORE DUP5 ADD MSTORE PUSH2 0xD69 JUMP JUMPDEST POP DUP1 CODESIZE DUP1 DUP1 DUP1 PUSH2 0xB30 JUMP JUMPDEST PUSH7 0x819985A5B1959 PUSH1 0xCA SHL PUSH1 0x60 SWAP3 PUSH2 0xB84 JUMP JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2064656C65676174652063616C6C20746F206E6F6E2D636F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1B9D1C9858DD PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 POP CODESIZE PUSH2 0xB2A JUMP JUMPDEST DUP4 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A20756E737570706F727465642070726F78 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x1A58589B1955555251 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 SWAP2 DUP9 DUP3 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0xCC0 JUMPI JUMPDEST PUSH2 0xCAF DUP2 DUP4 PUSH2 0x8DF JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x5FA JUMPI POP MLOAD SWAP1 CODESIZE PUSH2 0xA63 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xCA5 JUMP JUMPDEST DUP1 EXTCODESIZE ISZERO PUSH2 0xD0E JUMPI PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x1BDD08184818DBDB9D1C9858DD PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 SWAP2 SWAP1 ISZERO PUSH2 0xD75 JUMPI POP SWAP1 JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0xD85 JUMPI POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE DUP2 PUSH1 0x20 DUP1 PUSH1 0x4 DUP4 ADD MSTORE DUP3 MLOAD SWAP1 DUP2 PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x0 SWAP4 JUMPDEST DUP3 DUP6 LT PUSH2 0xDCB JUMPI POP POP PUSH1 0x44 SWAP3 POP PUSH1 0x0 DUP4 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SUB ADD SWAP1 REVERT JUMPDEST DUP5 DUP2 ADD DUP3 ADD MLOAD DUP7 DUP7 ADD PUSH1 0x44 ADD MSTORE SWAP4 DUP2 ADD SWAP4 DUP6 SWAP4 POP PUSH2 0xDA8 JUMP JUMPDEST PUSH1 0x97 SLOAD PUSH1 0x40 MLOAD PUSH4 0xD994D6D5 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xE73 JUMPI PUSH1 0x0 SWAP2 PUSH2 0xE39 JUMPI JUMPDEST POP ISZERO PUSH2 0xE27 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1DD1B1B5 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x20 DUP2 RETURNDATASIZE DUP3 GT PUSH2 0xE6B JUMPI JUMPDEST DUP2 PUSH2 0xE51 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x8DF JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1C5 JUMPI MLOAD SWAP1 DUP2 ISZERO ISZERO DUP3 SUB PUSH2 0x5FA JUMPI POP CODESIZE PUSH2 0xE1F JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xE44 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST ISZERO PUSH2 0xE86 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x20 PUSH32 0xEDB810B4A4BA5AB81B2765B443D63011146E0D69F7604EA7205676BAE0995B3 SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP3 DUP4 PUSH1 0x0 MSTORE PUSH2 0x130 DUP3 MSTORE DUP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG2 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH11 0x3C0561C23EFCFFD20309D9 0x26 DUP5 SWAP9 0x4B NUMBER SGT RETURN CREATE2 0x5D PUSH4 0xF5538715 GASPRICE SWAP16 SHR PUSH30 0xA8F064736F6C634300081000330000000000000000000000000000000000 ",
      "sourceMap": "1051:6554:55:-:0;;;;;1828:23;1051:6554;;-1:-1:-1;;;;;;1051:6554:55;;;;;;;;1861:39;1051:6554;;;;1898:1;1051:6554;;;;-1:-1:-1;;1921:18:55;;;;;-1:-1:-1;;;;;1921:18:55;;;;;;;;;;;;;;;;;;;;;;1051:6554;;;;;-1:-1:-1;;;;;1051:6554:55;;;;;;;;;;;;1959:15;;;;;;-1:-1:-1;;;;;1959:15:55;;;;;;;;;;;;;;;;;;;;;;;1949:25;1051:6554;;;;-1:-1:-1;;;;;1051:6554:55;;;;;;;;;;;;;1995:15;;;;-1:-1:-1;;;;;1995:15:55;;;;;;;;;;;;;;;;;;;;;;1898:1;1051:6554;;;;-1:-1:-1;;;;;1051:6554:55;;;;;;;;;;;;2044:30;;;-1:-1:-1;;;;;2044:30:55;;;;;;;;;1051:6554;2044:30;;;;;2066:7;1051:6554;;2044:30;;;;;;;;;2020:54;1051:6554;;;;-1:-1:-1;;;;;1051:6554:55;;;;;;;;;;;;2121:11;;;;;-1:-1:-1;;;;;2121:11:55;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1051:6554:55;2100:34;;1051:6554;;2100:34;:::i;:::-;1051:6554;;2084:51;1051:6554;;;2084:51;1051:6554;;;2188:15;;;;;;;;1051:6554;1921:18;;;;2188:15;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1051:6554:55;2167:38;;1051:6554;;2167:38;:::i;:::-;1051:6554;;;;;;;;;;;2263:18;;;;;-1:-1:-1;;;;;2263:18:55;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1051:6554:55;2242:41;;1051:6554;;2242:41;:::i;:::-;1051:6554;;2216:68;1051:6554;;;2216:68;1051:6554;;;2321:22;;;;;;;;1051:6554;1921:18;;;;2321:22;;;;;;;;;;;;;;;;;;;2294:50;1051:6554;;;;-1:-1:-1;;;;;1051:6554:55;;;;;;;;;;;;2399:16;;;;;1051:6554;;-1:-1:-1;;;;;2399:16:55;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1051:6554:55;2378:39;;1051:6554;;2378:39;:::i;:::-;1051:6554;;;2354:64;1051:6554;;;2354:64;1051:6554;;;;;;;;;2459:102;;;;;1051:6554;;;;;;;;;;;;;;;2459:102;;2501:10;2020:54;2459:102;;1051:6554;;;;;2501:10;1051:6554;;;;2459:102;;;;;;;;-1:-1:-1;2084:51:55;1051:6554;;;;;;;-1:-1:-1;;;;;;1051:6554:55;;;;;;;;;2611:65;;;;;1051:6554;;;;;;;;;;;;;;2611:65;;1051:6554;2020:54;2611:65;;1051:6554;2294:50;1051:6554;;;;-1:-1:-1;;;1051:6554:55;;;;;;;;;1898:1;1051:6554;;;;-1:-1:-1;;;1051:6554:55;;;;;;;;;;;;2611:65;;;;;;;;-1:-1:-1;;;1898:1:55;1051:6554;;2020:54;1051:6554;-1:-1:-1;;;;;1051:6554:55;;;;;2084:51;1051:6554;1828:23;1051:6554;1861:39;1051:6554;;;;;;;;;;;;;;;3183:13;;2066:7;;3183:13;:::i;:::-;3224;2066:7;1051:6554;3224:13;:::i;:::-;3286:2;3269:13;2066:7;1898:1;3269:13;:::i;:::-;1128:8;1051:6554;3325:13;2066:7;1949:25;3325:13;:::i;:::-;1128:8;1051:6554;3383:13;2066:7;1949:25;3383:13;:::i;:::-;1128:8;3444:13;1051:6554;3444:13;2066:7;1051:6554;3444:13;:::i;:::-;1128:8;3505:13;1051:6554;3505:13;2066:7;1051:6554;3505:13;:::i;:::-;1128:8;3566:13;1051:6554;3566:13;2066:7;1051:6554;3566:13;:::i;:::-;1128:8;3629:13;1051:6554;3629:13;2066:7;1828:23;3629:13;:::i;:::-;1128:8;3690:13;1051:6554;3690:13;2066:7;1828:23;3690:13;:::i;:::-;1128:8;3748:13;3286:2;3748:13;2066:7;1949:25;3748:13;:::i;:::-;1128:8;3805:13;3286:2;3805:13;2066:7;1051:6554;3805:13;:::i;:::-;1128:8;1051:6554;1128:8;3286:2;3870:13;2066:7;1949:25;3870:13;:::i;:::-;1128:8;1051:6554;1128:8;;;1051:6554;;1128:8;1051:6554;1128:8;;:::i;:::-;1051:6554;1128:8;;1051:6554;;;;2794:1147;;1128:8;1051:6554;;2794:1147;;1128:8;1051:6554;;2794:1147;;1128:8;1051:6554;;2794:1147;;1128:8;1051:6554;2794:1147;;;1128:8;1051:6554;;2794:1147;;1128:8;1051:6554;;2794:1147;;1128:8;2794:1147;1051:6554;2794:1147;;1128:8;2794:1147;1051:6554;2794:1147;;1128:8;2794:1147;1051:6554;2794:1147;;1128:8;2794:1147;1051:6554;2794:1147;;1128:8;2794:1147;1051:6554;2794:1147;;1128:8;2794:1147;1051:6554;2794:1147;;1128:8;2794:1147;1051:6554;2794:1147;;1128:8;2794:1147;1051:6554;2794:1147;;1128:8;1051:6554;1128:8;2794:1147;1051:6554;2794:1147;;1128:8;1051:6554;1128:8;2794:1147;1051:6554;2794:1147;;1128:8;3919:7;2794:1147;1051:6554;2794:1147;;1128:8;1051:6554;;;;;;;;;;;;;;2294:50;1051:6554;;;;;;;2354:64;1051:6554;;;;;1128:8;;1051:6554;1128:8;;:::i;:::-;1051:6554;1128:8;;;1051:6554;4010:333;;1128:8;2501:10;1051:6554;4010:333;;1128:8;1051:6554;4010:333;;1128:8;4281:6;1051:6554;4010:333;;1128:8;1051:6554;4010:333;;1128:8;1051:6554;;;;;1949:25;1051:6554;;;;1128:8;;1051:6554;1128:8;;:::i;:::-;;;1051:6554;4406:140;;1128:8;1051:6554;;-1:-1:-1;;;;;1051:6554:55;;4556:38;;;;;1051:6554;;;-1:-1:-1;;;4556:38:55;;1128:8;;;;;;-1:-1:-1;;;;;1051:6554:55;;;2020:54;4556:38;;1051:6554;;1128:8;;;;1051:6554;;;1128:8;;1051:6554;1128:8;;;;1051:6554;;;1128:8;;1051:6554;;1128:8;;;;1051:6554;;;1128:8;;1051:6554;;1128:8;;;;1051:6554;;;1128:8;;1051:6554;;1128:8;;;;1051:6554;1128:8;;1051:6554;;1128:8;;;1051:6554;1128:8;;1051:6554;;1128:8;;;1051:6554;1128:8;;1051:6554;2794:1147;1128:8;;;1051:6554;1128:8;;1051:6554;2794:1147;1128:8;;;;;;1051:6554;2794:1147;1128:8;;;;;;1051:6554;2794:1147;1128:8;;;;;;1051:6554;2794:1147;1128:8;;;;;;1051:6554;2794:1147;1128:8;;;;;;1051:6554;2794:1147;1128:8;;;;;;1051:6554;2794:1147;1128:8;;;;;;1051:6554;2794:1147;1128:8;;;;;;1051:6554;2794:1147;1128:8;;;;;;1051:6554;2794:1147;1128:8;;;;;;;1051:6554;1128:8;;;;1051:6554;;1128:8;;;1051:6554;1128:8;;;;1051:6554;;1128:8;;;1051:6554;1128:8;;;1051:6554;;1128:8;;;1051:6554;1128:8;;;;;;;1051:6554;1128:8;;;1051:6554;;1128:8;;;1051:6554;4406:140;;;;1128:8;1051:6554;1128:8;;;1051:6554;;;;;;1128:8;;1051:6554;;;;4556:38;;;;;;;;-1:-1:-1;;2216:68:55;1128:8;1051:6554;;;;1949:25;1051:6554;-1:-1:-1;;;;;1051:6554:55;;;;;;;;;;;;;4604:90;;;;;1051:6554;;;;;;;;;;;;;;;4604:90;;2020:54;4604:90;;1051:6554;2501:10;1051:6554;1128:8;;1051:6554;;1128:8;;1051:6554;;1128:8;;1051:6554;4604:90;;;;;;;;-1:-1:-1;4907:13:55;;;2066:7;1949:25;4907:13;:::i;:::-;4946;1051:6554;4946:13;2066:7;1949:25;4946:13;:::i;:::-;1128:8;1051:6554;5000:13;2066:7;1949:25;5000:13;:::i;:::-;1128:8;5047:15;2066:7;5047:3;:15;:::i;:::-;5086:13;1051:6554;5086:13;2066:7;1949:25;5086:13;:::i;:::-;1128:8;1051:6554;;;1128:8;;1051:6554;1128:8;;:::i;:::-;;;;4780:345;1051:6554;4780:345;;1128:8;1051:6554;4780:345;;1128:8;1051:6554;4780:345;;1128:8;1051:6554;4780:345;;1128:8;1051:6554;4780:345;;1128:8;1051:6554;4780:345;;1128:8;1949:25;3286:2;1051:6554;5438:42;1246:1;;;1051:6554;;-1:-1:-1;;;;;5562:13:55;;;;;;;;-1:-1:-1;5562:13:55;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1051:6554:55;5541:36;;1051:6554;;5541:36;:::i;:::-;1051:6554;;;;;;;;;-1:-1:-1;;;;;1051:6554:55;;;;;5623:65;;;;;1051:6554;;;;;;5623:65;;1051:6554;2020:54;5623:65;;1246:1;2294:50;1051:6554;1246:1;;1051:6554;-1:-1:-1;;;1051:6554:55;;;1246:1;1051:6554;;1246:1;;;1898;1051:6554;1246:1;;1051:6554;-1:-1:-1;;;1051:6554:55;;;1246:1;1051:6554;1246:1;;1051:6554;;1246:1;;1051:6554;5623:65;;1051:6554;5623:65;;;;;;;;;;;;;;-1:-1:-1;;;1128:8:55;;1051:6554;;;-1:-1:-1;;;;;2044:30:55;5851:29;;;;;;;-1:-1:-1;5851:29:55;;;2044:30;;;;5851:29;;1246:1;2044:30;5851:29;;1246:1;1051:6554;2044:30;;5851:29;;;;;;;;;;;-1:-1:-1;;;;;1051:6554:55;;;;4780:345;;1128:8;1051:6554;;;;5891:44;;;;;1051:6554;;;-1:-1:-1;;;5891:44:55;;1246:1;;-1:-1:-1;;;;;1051:6554:55;;;2020:54;5891:44;;1051:6554;;4780:345;;1246:1;1051:6554;;1246:1;;1051:6554;4780:345;;;1246:1;1051:6554;1246:1;;1051:6554;;4780:345;;1246:1;1051:6554;1246:1;;1051:6554;;4780:345;;1246:1;1051:6554;1246:1;;1051:6554;;4780:345;;1246:1;1051:6554;1246:1;;1051:6554;;4780:345;;;1246:1;1051:6554;1246:1;;1051:6554;;;;;;;;;;;;5891:44;;;;;;;;-1:-1:-1;;;3286:2:55;1051:6554;-1:-1:-1;;1246:1:55;;;;1051:6554;1246:1;3286:2;1246:1;1949:25;1051:6554;;;-1:-1:-1;;;5239:32:55;;5265:4;2020:54;5239:32;;1051:6554;;;-1:-1:-1;;;;;1051:6554:55;;;;;;5239:32;;;;;;;;;;;-1:-1:-1;5226:46:55;;;;;;1051:6554;;;;;;;;;;;;;5226:46;;2020:54;5226:46;;1051:6554;5226:46;;;;;;;;-1:-1:-1;5283:12:55;5292:2;5283:12;:::i;:::-;5305:11;2354:64;5305:11;:::i;:::-;1051:6554;;;;;;;;;5226:46;;;;;;:::i;:::-;1051:6554;;5226:46;;;1051:6554;;;5226:46;1051:6554;;;;;;;;;5226:46;1051:6554;;;5239:32;;;;1051:6554;5239:32;;1051:6554;5239:32;;;;;;1051:6554;5239:32;;;:::i;:::-;;;1128:8;;;;;5239:32;;;;;;;-1:-1:-1;5239:32:55;;;1051:6554;;;;;;;;;1246:1;-1:-1:-1;;;1128:8:55;;;2020:54;1128:8;1051:6554;;1128:8;5891:44;;;;;:::i;:::-;1051:6554;;5891:44;;;;5851:29;-1:-1:-1;;;1051:6554:55;;;2020:54;1051:6554;;;;5623:65;;;;;:::i;:::-;1051:6554;;5623:65;;;;1051:6554;;;;5623:65;1051:6554;;;5562:13;1051:6554;;;;;;;;;;;1246:1;1051:6554;;-1:-1:-1;;;1246:1:55;;1051:6554;2020:54;1246:1;;;;1051:6554;1246:1;;1051:6554;1246:1;1051:6554;;;1246:1;1051:6554;;1246:1;4604:90;;;;;:::i;:::-;1051:6554;;4604:90;;;;;1051:6554;;;4556:38;;;;;:::i;:::-;1051:6554;;4556:38;;;;2611:65;;;;;:::i;:::-;1051:6554;;2611:65;;;;;1051:6554;;;;2459:102;;;;:::i;:::-;;;;;2399:16;-1:-1:-1;;;1051:6554:55;;;2020:54;1051:6554;;;;2044:30;-1:-1:-1;;;1051:6554:55;;;;;;;;1995:15;-1:-1:-1;;;1051:6554:55;;;;;;;;;;;;;-1:-1:-1;;1051:6554:55;;;;-1:-1:-1;;;;;1051:6554:55;;;;;;;;1921:18;1051:6554;:::o;:::-;;;;;;;;;;;;1128:8;1246:1;;;1128:8;;;;;;;;;;;:::o;:::-;1051:6554;;;1246:1;1128:8;;;;;1246:1;1128:8;6249:500;1246:1;6309:11;1051:6554;6309:31;1292:1;;;1051:6554;;;;;-1:-1:-1;;;;;1921:18:55;6397:15;;;;;1051:6554;;6397:15;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1051:6554:55;;;;6504:27;;;;;1128:8;6492:2;1051:6554;;;;;;;6504:27;;1128:8;1292:1;1128:8;6504:27;;;;;;;1292:1;;6504:27;;;;;;;;;;;;;;;6249:500;1128:8;;6542:10;1128:8;1051:6554;;;;6625:30;;;;;;;;;;;;;;1292:1;6625:30;;;;;;6647:7;1051:6554;;6625:30;;;;;;;;;;1292:1;6662:2;1292:1;1128:8;1292:1;;;;1051:6554;;;6600:77;;;;;;;;;;;;;;;;;;;1128:8;6600:77;;;;1051:6554;;;1128:8;1292:1;;;;;;6600:77;;;;;;;;;;6542:167;;;;;1051:6554;;-1:-1:-1;;;6542:167:55;;;;;1051:6554;;;;;1292:1;;;1051:6554;1292:1;;;;1051:6554;;;;1292:1;;1051:6554;;;;6542:167;;;;;;;;;;;;;6249:500;1292:1;;6309:11;1292:1;;1921:18;1292:1;;;;;1051:6554;1292:1;;;6309:11;1292:1;;;;;;-1:-1:-1;;6309:11:55;1292:1;;;;;;-1:-1:-1;;;;;;1292:1:55;;;;;;6249:500::o;1292:1::-;-1:-1:-1;;;1292:1:55;;;;;1051:6554;1292:1;;-1:-1:-1;;;1051:6554:55;;;;;;;6542:167;;;;;:::i;:::-;1051:6554;;6542:167;;;;;1051:6554;;;;;;;;6542:167;1051:6554;;;6600:77;1051:6554;;;;;;;;;6600:77;-1:-1:-1;;;1051:6554:55;;;;;;;;1292:1;-1:-1:-1;;;1128:8:55;;;;;1051:6554;;1128:8;6625:30;1051:6554;;;;;;;;;6625:30;-1:-1:-1;;;1051:6554:55;;;;;;;;6504:27;;;;;;;;:::i;:::-;;;;;6397:15;1051:6554;;;;;;;;;1292:1;1051:6554;;-1:-1:-1;;;1292:1:55;;;;;;;;;;;1051:6554;1292:1;1051:6554;;;1292:1;;;;7317:142;1051:6554;;7415:36;;;;;-1:-1:-1;;;;;7415:36:55;;;;;;;;1051:6554;7415:36;;;;;;1051:6554;;;;;;;;;;;;;;;-1:-1:-1;1051:6554:55;;;;7415:36;;;-1:-1:-1;7415:36:55;;;;;1051:6554;7317:142;:::o;7415:36::-;1051:6554;;;-1:-1:-1;1051:6554:55;;;;"
    },
    "deployedBytecode": {
      "functionDebugData": {
        "abi_decode_bool_fromMemory": {
          "entryPoint": 3148,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_address_uint256": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 3,
          "returnSlots": 1
        },
        "checked_mul_uint256": {
          "entryPoint": 3128,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "finalize_allocation": {
          "entryPoint": 2944,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 0
        },
        "increment_uint96": {
          "entryPoint": 3001,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "mod_uint256": {
          "entryPoint": 3048,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "storage_array_index_access_contract_ERC20Mock_dyn_ptr": {
          "entryPoint": 3081,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 2
        }
      },
      "generatedSources": [],
      "immutableReferences": {},
      "linkReferences": {},
      "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH3 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x24035D38 EQ PUSH3 0x814 JUMPI DUP1 PUSH4 0x3295B14F EQ PUSH3 0x718 JUMPI DUP1 PUSH4 0x499E3B16 EQ PUSH3 0x582 JUMPI DUP1 PUSH4 0xA1791617 EQ PUSH3 0x3D1 JUMPI DUP1 PUSH4 0xB75205CB EQ PUSH3 0x334 JUMPI PUSH4 0xE0955452 EQ PUSH3 0x66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH3 0x331 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH3 0x331 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP1 SWAP2 SUB PUSH3 0x32C JUMPI PUSH1 0x5 PUSH1 0xC SLOAD LT ISZERO PUSH3 0x2E7 JUMPI PUSH1 0x40 MLOAD PUSH2 0x1033 SWAP1 DUP2 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF SWAP3 DUP3 DUP3 LT DUP5 DUP4 GT OR PUSH3 0x2D3 JUMPI SWAP1 DUP3 SWAP2 PUSH3 0x1061 DUP4 CODECOPY SUB SWAP1 DUP5 CREATE SWAP2 DUP3 ISZERO PUSH3 0x263 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP2 DUP3 EXTCODESIZE ISZERO PUSH3 0x2CF JUMPI PUSH1 0xFF PUSH1 0x18 PUSH1 0x40 MLOAD SWAP4 PUSH4 0x3D09CAD5 PUSH1 0xE1 SHL DUP6 MSTORE MOD AND SWAP1 DUP2 PUSH1 0x4 DUP5 ADD MSTORE DUP6 PUSH1 0x24 SWAP4 DUP2 DUP2 DUP7 DUP2 DUP4 DUP11 GAS CALL DUP1 ISZERO PUSH3 0x258 JUMPI PUSH3 0x2B2 JUMPI JUMPDEST POP POP DUP5 PUSH1 0xB SLOAD AND SWAP1 PUSH1 0x40 MLOAD PUSH2 0x19A DUP1 DUP3 ADD SWAP1 DUP3 DUP3 LT DUP5 DUP4 GT OR PUSH3 0x29F JUMPI PUSH1 0x20 SWAP2 DUP4 SWAP2 PUSH3 0x2094 DUP4 CODECOPY PUSH8 0xDE0B6B3A7640000 DUP2 MSTORE SUB ADD SWAP1 DUP9 CREATE SWAP1 DUP2 ISZERO PUSH3 0x294 JUMPI DUP4 PUSH1 0x12 SUB PUSH1 0xFF DUP2 GT PUSH3 0x281 JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH2 0x313 DUP1 DUP6 ADD SWAP4 DUP5 GT DUP6 DUP6 LT OR PUSH3 0x26E JUMPI SWAP3 PUSH1 0xFF PUSH1 0x40 SWAP4 DUP12 DUP8 SWAP7 SWAP5 DUP15 SWAP11 SWAP10 SWAP9 SWAP6 PUSH3 0x4784 DUP8 CODECOPY AND DUP4 MSTORE AND DUP8 SIGNEXTEND PUSH1 0x20 DUP3 ADD MSTORE SUB ADD SWAP1 DUP5 CREATE DUP1 ISZERO PUSH3 0x263 JUMPI DUP2 EXTCODESIZE ISZERO PUSH3 0x254 JUMPI PUSH1 0x64 DUP8 SWAP2 DUP6 DUP1 SWAP5 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP6 DUP7 SWAP5 PUSH4 0x966D3F23 PUSH1 0xE0 SHL DUP7 MSTORE DUP13 PUSH1 0x4 DUP8 ADD MSTORE AND DUP11 DUP6 ADD MSTORE PUSH1 0x44 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH3 0x258 JUMPI PUSH3 0x23B JUMPI JUMPDEST POP POP PUSH1 0xC SLOAD SWAP1 PUSH9 0x10000000000000000 DUP3 LT ISZERO PUSH3 0x229 JUMPI POP DUP1 PUSH1 0x1 PUSH3 0x20E SWAP3 ADD PUSH1 0xC SSTORE PUSH1 0xC PUSH3 0xC09 JUMP JUMPDEST SWAP1 SWAP3 DUP4 SLOAD SWAP2 PUSH1 0x3 SHL SWAP1 DUP2 SHL SWAP3 DUP4 SWAP2 SHL AND SWAP2 NOT AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE DUP5 REVERT JUMPDEST DUP2 PUSH3 0x247 SWAP2 PUSH3 0xB80 JUMP JUMPDEST PUSH3 0x254 JUMPI DUP4 CODESIZE PUSH3 0x1E1 JUMP JUMPDEST DUP4 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP12 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE DUP8 DUP12 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP10 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE DUP6 DUP10 REVERT JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP10 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP11 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE DUP7 DUP11 REVERT JUMPDEST DUP2 PUSH3 0x2BE SWAP2 PUSH3 0xB80 JUMP JUMPDEST PUSH3 0x2CB JUMPI DUP6 CODESIZE PUSH3 0x111 JUMP JUMPDEST DUP6 DUP1 REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6D61782061737365747320616C72656164792061646465640000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH3 0x331 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0x331 JUMPI PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0x25CA7A87 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x4 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH3 0x258 JUMPI DUP3 SWAP2 PUSH3 0x392 JUMPI JUMPDEST PUSH1 0x20 DUP3 PUSH8 0xDE0B6B3A7640000 PUSH1 0x40 MLOAD SWAP2 EQ DUP2 MSTORE RETURN JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE DUP3 GT PUSH3 0x3C8 JUMPI JUMPDEST DUP2 PUSH3 0x3AF PUSH1 0x20 SWAP4 DUP4 PUSH3 0xB80 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH3 0x3C4 JUMPI PUSH1 0x20 SWAP2 POP MLOAD CODESIZE PUSH3 0x37D JUMP JUMPDEST POP DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH3 0x3A0 JUMP JUMPDEST POP CALLVALUE PUSH3 0x331 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH3 0x331 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP1 SWAP2 SUB PUSH3 0x32C JUMPI DUP2 SWAP1 PUSH3 0x414 PUSH3 0x40C PUSH1 0x24 CALLDATALOAD SWAP3 PUSH1 0xC SLOAD SWAP1 PUSH3 0xBE8 JUMP JUMPDEST PUSH1 0xC PUSH3 0xC09 JUMP JUMPDEST SWAP1 SLOAD DUP4 SLOAD PUSH1 0x40 MLOAD PUSH4 0x60009E0B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP4 SWAP2 PUSH1 0x20 SWAP2 SWAP1 DUP3 SWAP1 DUP3 SWAP1 PUSH1 0x4 SWAP1 DUP3 SWAP1 DUP11 AND GAS STATICCALL DUP1 ISZERO PUSH3 0x294 JUMPI DUP6 DUP4 SWAP2 DUP10 SWAP1 PUSH3 0x53C JUMPI JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 DUP11 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 SWAP3 POP DUP3 SWAP1 DUP2 DUP11 DUP11 DUP3 PUSH1 0x44 DUP2 ADD JUMPDEST SUB SWAP4 AND GAS CALL DUP1 ISZERO PUSH3 0x294 JUMPI PUSH3 0x507 JUMPI JUMPDEST POP POP DUP4 PUSH1 0xB SLOAD AND SWAP1 DUP2 EXTCODESIZE ISZERO PUSH3 0x2CB JUMPI DUP6 PUSH1 0x64 SWAP3 DUP2 SWAP6 PUSH1 0x40 MLOAD SWAP8 DUP9 SWAP7 DUP8 SWAP6 PUSH4 0x1298C1FF PUSH1 0xE2 SHL DUP8 MSTORE PUSH1 0x3 SHL SHR AND PUSH1 0x4 DUP6 ADD MSTORE PUSH1 0x24 DUP5 ADD MSTORE DUP2 PUSH1 0x44 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH3 0x258 JUMPI PUSH3 0x4EE JUMPI JUMPDEST POP PUSH1 0x40 MLOAD RETURN JUMPDEST DUP2 PUSH3 0x4FA SWAP2 PUSH3 0xB80 JUMP JUMPDEST PUSH3 0x331 JUMPI DUP1 CODESIZE PUSH3 0x4E8 JUMP JUMPDEST DUP2 PUSH3 0x52B SWAP3 SWAP1 RETURNDATASIZE LT PUSH3 0x534 JUMPI JUMPDEST PUSH3 0x522 DUP2 DUP4 PUSH3 0xB80 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH3 0xC4C JUMP JUMPDEST POP CODESIZE DUP1 PUSH3 0x49C JUMP JUMPDEST POP RETURNDATASIZE PUSH3 0x516 JUMP JUMPDEST POP POP DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH3 0x57A JUMPI JUMPDEST PUSH3 0x555 DUP2 DUP4 PUSH3 0xB80 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH3 0x576 JUMPI MLOAD DUP6 DUP2 AND DUP2 SUB PUSH3 0x576 JUMPI DUP2 DUP6 PUSH3 0x48A SWAP3 PUSH3 0x453 JUMP JUMPDEST DUP7 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH3 0x549 JUMP JUMPDEST POP CALLVALUE PUSH3 0x331 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH3 0x331 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP1 SWAP2 SUB PUSH3 0x32C JUMPI DUP2 SWAP1 PUSH3 0x5BD PUSH3 0x40C PUSH1 0x24 CALLDATALOAD SWAP3 PUSH1 0xC SLOAD SWAP1 PUSH3 0xBE8 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SHR DUP2 AND SWAP1 PUSH3 0x5DE PUSH1 0x2 DUP5 PUSH3 0xC38 JUMP JUMPDEST DUP3 EXTCODESIZE ISZERO PUSH3 0x2CF JUMPI PUSH1 0x40 MLOAD PUSH4 0x40C10F19 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP5 DUP2 PUSH1 0x44 DUP2 DUP4 DUP8 GAS CALL SWAP1 DUP2 ISZERO PUSH3 0x6EF JUMPI DUP6 SWAP2 PUSH3 0x6FA JUMPI JUMPDEST POP POP PUSH3 0x662 PUSH1 0x20 DUP3 PUSH1 0xB SLOAD AND PUSH3 0x634 PUSH1 0x2 DUP8 PUSH3 0xC38 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE SWAP2 DUP3 SWAP1 DUP2 SWAP1 PUSH1 0x44 DUP3 ADD SWAP1 JUMP JUMPDEST SUB DUP2 DUP9 DUP8 GAS CALL DUP1 ISZERO PUSH3 0x6EF JUMPI PUSH3 0x6CC JUMPI JUMPDEST POP PUSH1 0xB SLOAD AND SWAP2 PUSH3 0x688 PUSH1 0x2 DUP3 PUSH3 0xC38 JUMP JUMPDEST SWAP3 DUP1 EXTCODESIZE ISZERO PUSH3 0x2CF JUMPI DUP5 SWAP3 DUP4 PUSH1 0x64 SWAP3 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP6 DUP7 SWAP5 PUSH4 0x64184531 PUSH1 0xE1 SHL DUP7 MSTORE PUSH1 0x4 DUP7 ADD MSTORE PUSH1 0x24 DUP6 ADD MSTORE PUSH1 0x44 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH3 0x258 JUMPI PUSH3 0x4EE JUMPI POP PUSH1 0x40 MLOAD RETURN JUMPDEST PUSH3 0x6E7 SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH3 0x534 JUMPI PUSH3 0x522 DUP2 DUP4 PUSH3 0xB80 JUMP JUMPDEST POP CODESIZE PUSH3 0x675 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP2 PUSH3 0x706 SWAP2 PUSH3 0xB80 JUMP JUMPDEST PUSH3 0x713 JUMPI DUP4 CODESIZE PUSH3 0x61A JUMP JUMPDEST POP POP POP REVERT JUMPDEST POP CALLVALUE PUSH3 0x331 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH3 0x331 JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP1 DUP3 AND DUP3 SUB PUSH3 0x32C JUMPI PUSH3 0x74D DUP4 SWAP3 PUSH3 0xBB9 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 DUP5 SLOAD AND PUSH1 0x40 PUSH3 0x76A PUSH1 0xA SLOAD PUSH1 0x4 CALLDATALOAD PUSH3 0xBE8 JUMP JUMPDEST PUSH1 0x24 DUP3 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x4B746001 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH3 0x6EF JUMPI DUP6 SWAP2 PUSH3 0x7CF JUMPI JUMPDEST POP AND SWAP2 DUP3 EXTCODESIZE ISZERO PUSH3 0x713 JUMPI PUSH1 0x24 DUP5 SWAP3 DUP4 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH4 0x32145F9 PUSH1 0xE4 SHL DUP6 MSTORE AND PUSH1 0x4 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH3 0x258 JUMPI PUSH3 0x4EE JUMPI POP PUSH1 0x40 MLOAD RETURN JUMPDEST SWAP1 POP PUSH1 0x40 DUP2 RETURNDATASIZE PUSH1 0x40 GT PUSH3 0x80B JUMPI JUMPDEST DUP2 PUSH3 0x7ED PUSH1 0x40 SWAP4 DUP4 PUSH3 0xB80 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH3 0x2CF JUMPI PUSH1 0x20 ADD MLOAD DUP2 DUP2 AND DUP2 SUB PUSH3 0x2CF JUMPI CODESIZE PUSH3 0x793 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH3 0x7DE JUMP JUMPDEST POP CALLVALUE PUSH3 0x331 JUMPI CALLDATASIZE PUSH1 0x3 NOT ADD PUSH2 0x100 DUP2 SLT PUSH3 0x3C4 JUMPI PUSH1 0xE0 SGT PUSH3 0x331 JUMPI PUSH3 0x840 PUSH1 0xE0 PUSH1 0x80 PUSH3 0xB80 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH3 0x3C4 JUMPI PUSH1 0x80 MSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH3 0x3C4 JUMPI PUSH1 0xA0 MSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0xC0 MSTORE PUSH1 0x64 CALLDATALOAD PUSH1 0xE0 MSTORE PUSH1 0x84 CALLDATALOAD PUSH2 0x100 MSTORE PUSH1 0xA4 CALLDATALOAD PUSH2 0x120 MSTORE PUSH1 0xC4 CALLDATALOAD PUSH2 0x140 MSTORE PUSH1 0xE4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP2 AND SWAP1 SUB PUSH3 0x331 JUMPI PUSH1 0x5 PUSH1 0xA SLOAD LT ISZERO PUSH3 0xB44 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH2 0x23BC DUP2 ADD LT PUSH8 0xFFFFFFFFFFFFFFFF PUSH2 0x23BC DUP4 ADD GT OR PUSH3 0xB30 JUMPI PUSH2 0x23BC PUSH3 0x23C8 DUP3 CODECOPY DUP1 PUSH2 0x23BC DUP2 ADD SUB SWAP1 DUP3 CREATE DUP1 ISZERO PUSH3 0xAF8 JUMPI PUSH1 0x40 MLOAD SWAP1 DUP2 PUSH2 0x3FA DUP2 ADD LT PUSH8 0xFFFFFFFFFFFFFFFF PUSH2 0x3FA DUP5 ADD GT OR PUSH3 0xB05 JUMPI PUSH2 0x3FA PUSH3 0xC67 DUP4 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3FA DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE DUP2 ADD DUP4 SWAP1 MSTORE DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 DUP3 CREATE DUP1 ISZERO PUSH3 0xAF8 JUMPI DUP2 SLOAD PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP4 SWAP3 SWAP2 DUP3 AND SWAP2 AND DUP4 EXTCODESIZE ISZERO PUSH3 0xB2C JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH4 0x23C56D05 PUSH1 0xE2 SHL DUP4 MSTORE PUSH1 0x80 PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x7 PUSH1 0x84 DUP5 ADD MSTORE PUSH7 0x2A282A37B5B2B7 PUSH1 0xC9 SHL PUSH1 0xA4 DUP5 ADD MSTORE PUSH1 0xC0 PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x2 PUSH1 0xC4 DUP5 ADD MSTORE PUSH2 0x545 PUSH1 0xF4 SHL PUSH1 0xE4 DUP5 ADD MSTORE PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP3 ADD MSTORE DUP2 DUP2 PUSH2 0x104 DUP2 DUP4 DUP8 GAS CALL DUP1 ISZERO PUSH3 0x258 JUMPI PUSH3 0xB19 JUMPI JUMPDEST POP SWAP1 PUSH1 0x80 MSTORE PUSH3 0x9D7 PUSH1 0xE4 CALLDATALOAD PUSH3 0xBB9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 PUSH2 0x19A DUP2 ADD LT PUSH8 0xFFFFFFFFFFFFFFFF PUSH2 0x19A DUP5 ADD GT OR PUSH3 0xB05 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP1 PUSH2 0x19A PUSH3 0x222E DUP5 CODECOPY AND PUSH2 0x19A DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH2 0x19A DUP2 ADD SUB ADD SWAP1 DUP3 CREATE DUP1 ISZERO PUSH3 0xAF8 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0xA0 MSTORE DUP2 SLOAD DUP3 SWAP2 AND DUP1 EXTCODESIZE ISZERO PUSH3 0xAF5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x6DBCB039 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x80 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0xA0 MLOAD AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0xC0 MLOAD PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0xE0 MLOAD PUSH1 0x64 DUP3 ADD MSTORE PUSH2 0x100 MLOAD PUSH1 0x84 DUP3 ADD MSTORE PUSH2 0x120 MLOAD PUSH1 0xA4 DUP3 ADD MSTORE PUSH2 0x140 MLOAD PUSH1 0xC4 DUP3 ADD MSTORE SWAP1 DUP3 SWAP1 DUP3 SWAP1 PUSH1 0xE4 SWAP1 DUP3 SWAP1 DUP5 SWAP1 GAS CALL DUP1 ISZERO PUSH3 0x258 JUMPI PUSH3 0xADC JUMPI JUMPDEST POP POP PUSH1 0xA SLOAD PUSH1 0x0 NOT DUP2 EQ PUSH3 0xAC8 JUMPI PUSH1 0x1 ADD PUSH1 0xA SSTORE PUSH1 0x40 MLOAD RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST DUP2 PUSH3 0xAE8 SWAP2 PUSH3 0xB80 JUMP JUMPDEST PUSH3 0x331 JUMPI DUP1 CODESIZE PUSH3 0xAAE JUMP JUMPDEST POP REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST DUP2 PUSH3 0xB25 SWAP2 PUSH3 0xB80 JUMP JUMPDEST CODESIZE PUSH3 0x9C5 JUMP JUMPDEST DUP3 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x1B585E08151408185B1C9958591E481859191959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH3 0xBA3 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP1 SWAP2 AND SWAP1 DUP2 EQ PUSH3 0xBD2 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 ISZERO PUSH3 0xBF3 JUMPI MOD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH3 0xC22 JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT DUP2 ISZERO ISZERO AND PUSH3 0xBD2 JUMPI MUL SWAP1 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH3 0x32C JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH3 0x32C JUMPI SWAP1 JUMP INVALID PUSH1 0x40 PUSH1 0x80 DUP2 MSTORE PUSH2 0x3FA DUP1 CODESIZE SUB DUP1 PUSH2 0x15 DUP2 PUSH2 0x1FC JUMP JUMPDEST SWAP3 DUP4 CODECOPY DUP2 ADD SWAP1 DUP3 DUP2 DUP4 SUB SLT PUSH2 0x1F7 JUMPI DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP1 DUP4 SUB PUSH2 0x1F7 JUMPI PUSH1 0x20 DUP3 DUP2 ADD MLOAD SWAP1 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x1F7 JUMPI ADD SWAP3 DUP5 PUSH1 0x1F DUP6 ADD SLT ISZERO PUSH2 0x1F7 JUMPI DUP4 MLOAD SWAP4 PUSH2 0x6F PUSH2 0x6A DUP7 PUSH2 0x237 JUMP JUMPDEST PUSH2 0x1FC JUMP JUMPDEST SWAP5 DUP1 DUP7 MSTORE DUP5 DUP7 ADD SWAP7 DUP6 DUP3 DUP5 ADD ADD GT PUSH2 0x1F7 JUMPI DUP7 DUP6 PUSH2 0x8D SWAP4 ADD PUSH2 0x252 JUMP JUMPDEST DUP1 EXTCODESIZE ISZERO PUSH2 0x19D JUMPI PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP4 OR SWAP1 SSTORE DUP6 MLOAD PUSH1 0x0 SWAP3 SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 DUP5 SWAP1 LOG2 DUP4 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x196 JUMPI JUMPDEST PUSH2 0x10D JUMPI JUMPDEST DUP6 MLOAD PUSH1 0xD1 SWAP1 DUP2 PUSH2 0x329 DUP3 CODECOPY RETURN JUMPDEST DUP2 DUP1 PUSH2 0x181 SWAP7 PUSH2 0x120 PUSH2 0x6A PUSH1 0x27 PUSH2 0x237 JUMP JUMPDEST SWAP7 PUSH1 0x27 DUP9 MSTORE PUSH32 0x416464726573733A206C6F772D6C6576656C2064656C65676174652063616C6C DUP8 DUP10 ADD MSTORE PUSH7 0x819985A5B1959 PUSH1 0xCA SHL DUP11 DUP10 ADD MSTORE MLOAD SWAP1 DUP5 GAS DELEGATECALL SWAP2 RETURNDATASIZE ISZERO PUSH2 0x18C JUMPI RETURNDATASIZE SWAP1 PUSH2 0x173 PUSH2 0x6A DUP4 PUSH2 0x237 JUMP JUMPDEST SWAP2 DUP3 MSTORE DUP2 SWAP5 RETURNDATASIZE SWAP3 ADD RETURNDATACOPY PUSH2 0x275 JUMP JUMPDEST POP CODESIZE DUP1 DUP1 DUP1 DUP1 PUSH2 0x100 JUMP JUMPDEST POP PUSH1 0x60 SWAP3 POP PUSH2 0x275 JUMP JUMPDEST POP DUP2 PUSH2 0xFB JUMP JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x1BDD08184818DBDB9D1C9858DD PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP2 SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH2 0x221 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x221 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x265 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x255 JUMP JUMPDEST SWAP2 SWAP3 SWAP1 ISZERO PUSH2 0x2D7 JUMPI POP DUP2 MLOAD ISZERO PUSH2 0x289 JUMPI POP SWAP1 JUMP JUMPDEST EXTCODESIZE ISZERO PUSH2 0x292 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP3 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x2EA JUMPI POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x44 PUSH1 0x40 MLOAD DUP1 SWAP3 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH1 0x20 PUSH1 0x4 DUP4 ADD MSTORE PUSH2 0x31A DUP2 MLOAD DUP1 SWAP3 DUP2 PUSH1 0x24 DUP7 ADD MSTORE PUSH1 0x20 DUP7 DUP7 ADD SWAP2 ADD PUSH2 0x252 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SUB ADD SWAP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLDATASIZE ISZERO PUSH1 0x54 JUMPI PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLDATASIZE DUP3 DUP1 CALLDATACOPY DUP2 CALLDATASIZE SWAP2 GAS DELEGATECALL RETURNDATASIZE DUP3 DUP1 RETURNDATACOPY ISZERO PUSH1 0x50 JUMPI RETURNDATASIZE SWAP1 RETURN JUMPDEST RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLDATASIZE DUP3 DUP1 CALLDATACOPY DUP2 CALLDATASIZE SWAP2 GAS DELEGATECALL RETURNDATASIZE DUP3 DUP1 RETURNDATACOPY ISZERO PUSH1 0x50 JUMPI RETURNDATASIZE SWAP1 RETURN INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 XOR 0xDC PUSH19 0x6F6B01BDC8879DCCEFC8F28189750CC03DA1A4 SUB 0x2D SWAP1 CALLDATACOPY 0xCB 0xE5 SHL OR 0xCE PUSH5 0x736F6C6343 STOP ADDMOD LT STOP CALLER PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH3 0x3B6 JUMPI PUSH3 0x14 PUSH3 0x3BB JUMP JUMPDEST PUSH3 0x1E PUSH3 0x3BB JUMP JUMPDEST DUP2 MLOAD SWAP1 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 DUP2 GT PUSH3 0x2B6 JUMPI PUSH1 0x3 SWAP2 DUP3 SLOAD SWAP3 PUSH1 0x1 SWAP3 DUP4 DUP6 DUP2 SHR SWAP6 AND SWAP6 DUP7 ISZERO PUSH3 0x3AB JUMPI JUMPDEST PUSH1 0x20 SWAP7 DUP8 DUP8 LT EQ PUSH3 0x395 JUMPI DUP2 SWAP1 PUSH1 0x1F SWAP7 DUP8 DUP2 GT PUSH3 0x33F JUMPI JUMPDEST POP DUP8 SWAP1 DUP8 DUP4 GT PUSH1 0x1 EQ PUSH3 0x2D8 JUMPI PUSH1 0x0 SWAP3 PUSH3 0x2CC JUMPI JUMPDEST POP POP PUSH1 0x0 NOT DUP3 DUP5 SHL SHR NOT AND SWAP1 DUP5 SHL OR DUP2 SSTORE JUMPDEST DUP6 MLOAD SWAP2 DUP3 GT PUSH3 0x2B6 JUMPI PUSH1 0x4 SWAP6 DUP7 SLOAD DUP5 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH3 0x2AB JUMPI JUMPDEST DUP8 DUP3 LT EQ PUSH3 0x296 JUMPI DUP6 DUP2 GT PUSH3 0x24B JUMPI JUMPDEST POP DUP6 SWAP1 DUP6 DUP5 GT PUSH1 0x1 EQ PUSH3 0x1E0 JUMPI SWAP4 DUP4 SWAP5 SWAP2 DUP5 SWAP3 PUSH1 0x0 SWAP6 PUSH3 0x1D4 JUMPI JUMPDEST POP POP SHL SWAP3 PUSH1 0x0 NOT SWAP2 SHL SHR NOT AND OR DUP4 SSTORE JUMPDEST PUSH1 0x12 PUSH1 0xFF NOT PUSH1 0x5 SLOAD AND OR PUSH1 0x5 SSTORE CALLER ISZERO PUSH3 0x193 JUMPI POP PUSH1 0x2 SLOAD PUSH28 0x6DF37F675EF6EADF5AB9A2072D44268D97DF837E6748956E5C6C2117 SWAP3 DUP4 DUP3 ADD DUP1 SWAP3 GT PUSH3 0x17E JUMPI POP PUSH1 0x0 SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 PUSH1 0x2 SSTORE CALLER DUP4 MSTORE DUP3 DUP2 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP5 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP4 DUP5 MSTORE CALLER SWAP4 LOG3 PUSH1 0x40 MLOAD PUSH2 0xC41 SWAP1 DUP2 PUSH3 0x3F2 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x11 SWAP1 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x64 SWAP3 SWAP2 PUSH1 0x40 MLOAD SWAP3 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP5 MSTORE DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST ADD MLOAD SWAP4 POP CODESIZE DUP1 PUSH3 0xDB JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x1F NOT DUP5 AND SWAP3 DUP9 PUSH1 0x0 MSTORE DUP5 DUP9 PUSH1 0x0 KECCAK256 SWAP5 PUSH1 0x0 JUMPDEST DUP11 DUP10 DUP4 DUP4 LT PUSH3 0x233 JUMPI POP POP POP LT PUSH3 0x218 JUMPI JUMPDEST POP POP POP POP DUP2 SHL ADD DUP4 SSTORE PUSH3 0xEB JUMP JUMPDEST ADD MLOAD SWAP1 PUSH1 0xF8 DUP5 PUSH1 0x0 NOT SWAP3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 DUP1 PUSH3 0x209 JUMP JUMPDEST DUP7 DUP7 ADD MLOAD DUP10 SSTORE SWAP1 SWAP8 ADD SWAP7 SWAP5 DUP6 ADD SWAP5 DUP9 SWAP4 POP ADD PUSH3 0x1F5 JUMP JUMPDEST DUP8 PUSH1 0x0 MSTORE DUP7 PUSH1 0x0 KECCAK256 DUP7 DUP1 DUP7 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 DUP10 DUP8 LT PUSH3 0x28C JUMPI JUMPDEST ADD PUSH1 0x5 SHR ADD SWAP1 DUP6 SWAP1 JUMPDEST DUP3 DUP2 LT PUSH3 0x27F JUMPI POP POP PUSH3 0xBE JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE ADD DUP6 SWAP1 PUSH3 0x26F JUMP JUMPDEST SWAP3 POP DUP2 SWAP3 PUSH3 0x266 JUMP JUMPDEST PUSH1 0x22 DUP9 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH3 0xAC JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0x7D JUMP JUMPDEST SWAP1 DUP7 SWAP4 POP PUSH1 0x1F NOT DUP4 AND SWAP2 DUP6 PUSH1 0x0 MSTORE DUP10 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x0 JUMPDEST DUP12 DUP3 DUP3 LT PUSH3 0x328 JUMPI POP POP DUP5 GT PUSH3 0x30F JUMPI JUMPDEST POP POP POP DUP2 SHL ADD DUP2 SSTORE PUSH3 0x8F JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT DUP4 DUP7 SHL PUSH1 0xF8 AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x301 JUMP JUMPDEST DUP4 DUP6 ADD MLOAD DUP7 SSTORE DUP11 SWAP8 SWAP1 SWAP6 ADD SWAP5 SWAP4 DUP5 ADD SWAP4 ADD PUSH3 0x2EE JUMP JUMPDEST SWAP1 SWAP2 POP DUP4 PUSH1 0x0 MSTORE DUP8 PUSH1 0x0 KECCAK256 DUP8 DUP1 DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 DUP11 DUP7 LT PUSH3 0x38B JUMPI JUMPDEST SWAP2 DUP9 SWAP2 DUP7 SWAP6 SWAP5 SWAP4 ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH3 0x37B JUMPI POP POP PUSH3 0x66 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP DUP9 SWAP2 ADD PUSH3 0x36B JUMP JUMPDEST SWAP3 POP DUP2 SWAP3 PUSH3 0x35D JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP5 PUSH1 0x7F AND SWAP5 PUSH3 0x4C JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 SWAP1 DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH3 0x2B6 JUMPI PUSH1 0x40 MSTORE PUSH1 0x9 DUP3 MSTORE PUSH9 0x45524332304D6F636B PUSH1 0xB8 SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP INVALID PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATASIZE LT ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x6FDDE03 EQ PUSH2 0x647 JUMPI POP DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x613 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x5F4 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x5A6 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x556 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x496 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x479 JUMPI DUP1 PUSH4 0x5C2F5E26 EQ PUSH2 0x445 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x40D JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x3D3 JUMPI DUP1 PUSH4 0x7A1395AA EQ PUSH2 0x3A7 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x287 JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x255 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1A5 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x166 JUMPI DUP1 PUSH4 0xACE28FA5 EQ PUSH2 0x140 JUMPI PUSH4 0xDD62ED3E EQ PUSH2 0xE9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x13C JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x13C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 CALLDATALOAD DUP2 DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x138 JUMPI PUSH1 0x24 CALLDATALOAD SWAP2 DUP3 AND DUP1 SWAP3 SUB PUSH2 0x138 JUMPI SWAP3 DUP3 SWAP2 PUSH1 0x20 SWAP5 DUP3 MSTORE PUSH1 0x1 DUP6 MSTORE DUP3 DUP3 KECCAK256 SWAP1 DUP3 MSTORE DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP4 DUP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x162 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x162 JUMPI PUSH1 0x20 SWAP1 PUSH1 0xFF PUSH1 0x5 SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x13C JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x13C JUMPI CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP4 SUB PUSH2 0x1A2 JUMPI POP PUSH2 0x199 PUSH1 0x20 SWAP3 PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0xBB7 JUMP JUMPDEST SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST DUP1 REVERT JUMPDEST POP DUP3 CALLVALUE PUSH2 0x1A2 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1A2 JUMPI DUP2 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP2 DUP3 DUP5 SUB PUSH2 0x1A2 JUMPI DUP5 SWAP1 PUSH1 0x24 CALLDATALOAD SWAP4 CALLER DUP3 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP3 DUP3 KECCAK256 SWAP1 DUP3 MSTORE PUSH1 0x20 MSTORE KECCAK256 SLOAD SWAP1 DUP3 DUP3 LT PUSH2 0x204 JUMPI PUSH1 0x20 DUP6 PUSH2 0x1FD DUP6 DUP6 SUB DUP8 CALLER PUSH2 0x916 JUMP JUMPDEST MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x84 SWAP1 PUSH1 0x20 DUP7 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST POP CALLVALUE PUSH2 0x13C JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x13C JUMPI CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x13C JUMPI PUSH2 0x284 SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0xAB0 JUMP JUMPDEST MLOAD RETURN JUMPDEST POP SWAP2 SWAP1 CALLVALUE PUSH2 0x162 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x162 JUMPI DUP1 MLOAD SWAP1 DUP3 DUP5 SLOAD PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP1 DUP4 AND SWAP3 DUP4 ISZERO PUSH2 0x39D JUMPI JUMPDEST PUSH1 0x20 SWAP4 DUP5 DUP5 LT DUP2 EQ PUSH2 0x38A JUMPI DUP4 DUP9 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x36E JUMPI POP PUSH1 0x1 EQ PUSH2 0x319 JUMPI JUMPDEST POP POP POP DUP3 SWAP1 SUB PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT DUP4 DUP6 LT OR PUSH2 0x306 JUMPI POP DUP3 SWAP2 DUP3 PUSH2 0x302 SWAP3 MSTORE DUP3 PUSH2 0x73C JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x41 DUP6 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP8 DUP8 MSTORE SWAP2 SWAP3 POP DUP6 SWAP2 DUP4 PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B JUMPDEST DUP4 DUP6 LT PUSH2 0x35A JUMPI POP POP POP POP DUP4 ADD ADD CODESIZE DUP1 DUP1 PUSH2 0x2D0 JUMP JUMPDEST DUP1 SLOAD DUP9 DUP7 ADD DUP4 ADD MSTORE SWAP4 ADD SWAP3 DUP5 SWAP1 DUP3 ADD PUSH2 0x344 JUMP JUMPDEST PUSH1 0xFF NOT AND DUP8 DUP6 ADD MSTORE POP POP ISZERO ISZERO PUSH1 0x5 SHL DUP5 ADD ADD SWAP1 POP CODESIZE DUP1 DUP1 PUSH2 0x2D0 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP10 MSTORE PUSH1 0x22 DUP11 MSTORE PUSH1 0x24 DUP10 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x2B1 JUMP JUMPDEST POP CALLVALUE PUSH2 0x13C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x13C JUMPI CALLDATALOAD PUSH1 0xFF DUP2 AND DUP1 SWAP2 SUB PUSH2 0x13C JUMPI PUSH1 0xFF NOT PUSH1 0x5 SLOAD AND OR PUSH1 0x5 SSTORE MLOAD RETURN JUMPDEST POP CALLVALUE PUSH2 0x13C JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x13C JUMPI CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x13C JUMPI PUSH2 0x284 SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x408 DUP3 CALLER DUP4 PUSH2 0xA18 JUMP JUMPDEST PUSH2 0xAB0 JUMP JUMPDEST POP CALLVALUE PUSH2 0x13C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x13C JUMPI CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x13C JUMPI DUP3 DUP3 SWAP2 PUSH1 0x20 SWAP5 MSTORE DUP1 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x13C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x13C JUMPI CALLDATALOAD PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x13C JUMPI PUSH2 0xFF00 PUSH1 0x5 SLOAD SWAP2 PUSH1 0x8 SHL AND SWAP1 PUSH2 0xFF00 NOT AND OR PUSH1 0x5 SSTORE MLOAD RETURN JUMPDEST POP CALLVALUE PUSH2 0x13C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x13C JUMPI PUSH2 0x284 SWAP1 CALLDATALOAD CALLER PUSH2 0xAB0 JUMP JUMPDEST POP CALLVALUE PUSH2 0x13C JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x13C JUMPI DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP2 SWAP1 DUP3 SWAP1 SUB PUSH2 0x138 JUMPI PUSH1 0x24 CALLDATALOAD SWAP1 DUP3 ISZERO PUSH2 0x513 JUMPI POP PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x20 DUP3 PUSH2 0x4F8 DUP8 SWAP5 PUSH1 0x2 SLOAD PUSH2 0x785 JUMP JUMPDEST PUSH1 0x2 SSTORE DUP5 DUP5 MSTORE DUP4 DUP3 MSTORE DUP6 DUP5 KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE DUP6 MLOAD SWAP1 DUP2 MSTORE LOG3 MLOAD RETURN JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x20 DUP6 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP CALLVALUE PUSH2 0x13C JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x13C JUMPI CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP1 DUP3 SUB PUSH2 0x138 JUMPI SWAP1 PUSH2 0x59F PUSH1 0x20 SWAP5 PUSH2 0x1FD SWAP4 CALLER DUP3 MSTORE PUSH1 0x1 DUP8 MSTORE DUP6 DUP3 KECCAK256 SWAP1 DUP3 MSTORE DUP7 MSTORE DUP5 PUSH1 0x24 CALLDATALOAD SWAP2 KECCAK256 SLOAD PUSH2 0x785 JUMP JUMPDEST SWAP1 CALLER PUSH2 0x916 JUMP JUMPDEST POP CALLVALUE PUSH2 0x13C JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x13C JUMPI CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 DUP5 AND DUP5 SUB PUSH2 0x1A2 JUMPI PUSH1 0x24 CALLDATALOAD SWAP2 DUP3 AND DUP3 SUB PUSH2 0x1A2 JUMPI POP PUSH1 0x20 SWAP3 PUSH2 0x1FD SWAP2 PUSH1 0x44 CALLDATALOAD SWAP2 PUSH2 0x5EF DUP4 CALLER DUP4 PUSH2 0xA18 JUMP JUMPDEST PUSH2 0x7A8 JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x162 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x162 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x2 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x13C JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x13C JUMPI CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP4 SUB PUSH2 0x1A2 JUMPI POP PUSH2 0x1FD PUSH1 0x20 SWAP3 PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x916 JUMP JUMPDEST DUP5 SWAP2 POP DUP4 CALLVALUE PUSH2 0x13C JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x13C JUMPI DUP3 PUSH1 0x3 SLOAD PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP1 DUP4 AND SWAP3 DUP4 ISZERO PUSH2 0x732 JUMPI JUMPDEST PUSH1 0x20 SWAP4 DUP5 DUP5 LT DUP2 EQ PUSH2 0x38A JUMPI DUP4 DUP9 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x716 JUMPI POP PUSH1 0x1 EQ PUSH2 0x6C0 JUMPI POP POP POP DUP3 SWAP1 SUB PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT DUP4 DUP6 LT OR PUSH2 0x306 JUMPI POP DUP3 SWAP2 DUP3 PUSH2 0x302 SWAP3 MSTORE DUP3 PUSH2 0x73C JUMP JUMPDEST PUSH1 0x3 DUP8 MSTORE SWAP2 SWAP3 POP DUP6 SWAP2 DUP4 PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B JUMPDEST DUP4 DUP6 LT PUSH2 0x702 JUMPI POP POP POP POP DUP4 ADD ADD DUP6 DUP1 DUP1 PUSH2 0x2D0 JUMP JUMPDEST DUP1 SLOAD DUP9 DUP7 ADD DUP4 ADD MSTORE SWAP4 ADD SWAP3 DUP5 SWAP1 DUP3 ADD PUSH2 0x6EC JUMP JUMPDEST PUSH1 0xFF NOT AND DUP8 DUP6 ADD MSTORE POP POP ISZERO ISZERO PUSH1 0x5 SHL DUP5 ADD ADD SWAP1 POP DUP6 DUP1 DUP1 PUSH2 0x2D0 JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x670 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP2 DUP4 ADD DUP2 SWAP1 MSTORE SWAP1 SWAP4 SWAP3 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x771 JUMPI POP POP PUSH1 0x40 SWAP3 SWAP4 POP PUSH1 0x0 DUP4 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 ADD DUP7 ADD MLOAD DUP5 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP6 ADD PUSH2 0x74F JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x792 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 DUP3 ISZERO PUSH2 0x8C3 JUMPI AND SWAP2 DUP3 ISZERO PUSH2 0x872 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP2 DUP1 DUP4 LT PUSH2 0x81E JUMPI PUSH1 0x40 DUP3 DUP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP6 DUP8 PUSH1 0x20 SWAP7 MSTORE DUP3 DUP7 MSTORE SUB DUP3 DUP3 KECCAK256 SSTORE DUP7 DUP2 MSTORE KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 DUP3 ISZERO PUSH2 0x9C7 JUMPI AND SWAP2 DUP3 ISZERO PUSH2 0x977 JUMPI PUSH1 0x20 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 DUP4 PUSH1 0x0 MSTORE PUSH1 0x1 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP6 PUSH1 0x0 MSTORE DUP3 MSTORE DUP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 DUP3 AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP3 PUSH1 0x0 NOT DUP5 SUB PUSH2 0xA50 JUMPI JUMPDEST POP POP POP POP JUMP JUMPDEST DUP1 DUP5 LT PUSH2 0xA6B JUMPI PUSH2 0xA62 SWAP4 SUB SWAP2 PUSH2 0x916 JUMP JUMPDEST CODESIZE DUP1 DUP1 DUP1 PUSH2 0xA4A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0xB68 JUMPI PUSH1 0x0 SWAP2 DUP2 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SLOAD DUP2 DUP2 LT PUSH2 0xB18 JUMPI DUP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 PUSH1 0x20 SWAP3 DUP6 DUP8 MSTORE DUP7 DUP5 MSTORE SUB PUSH1 0x40 DUP7 KECCAK256 SSTORE DUP1 PUSH1 0x2 SLOAD SUB PUSH1 0x2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0xFF PUSH1 0x5 SLOAD PUSH1 0x8 SHR AND PUSH1 0x3 DUP2 LT ISZERO PUSH2 0xBF5 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0xBED JUMPI PUSH1 0x2 EQ PUSH2 0xBE8 JUMPI PUSH2 0xBE3 SWAP2 CALLER PUSH2 0x7A8 JUMP JUMPDEST PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEE 0x4A BLOCKHASH GAS PUSH18 0xFB04972B1BB8D2B872C05694E3061B67CF27 0x5F DUP16 SWAP13 REVERT LOG2 DUP14 SWAP10 0x5C SWAP14 PUSH5 0x736F6C6343 STOP ADDMOD LT STOP CALLER PUSH1 0x80 CALLVALUE PUSH2 0x5D JUMPI PUSH1 0x1F PUSH2 0x19A CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH2 0x62 JUMPI DUP1 DUP5 SWAP3 PUSH1 0x20 SWAP5 PUSH1 0x40 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0x5D JUMPI MLOAD PUSH1 0x0 SSTORE PUSH1 0x1 PUSH1 0xFF NOT DUP2 SLOAD AND OR PUSH1 0x1 SSTORE PUSH1 0x40 MLOAD PUSH2 0x121 SWAP1 DUP2 PUSH2 0x79 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH1 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x2A3F4389 EQ PUSH1 0xD3 JUMPI POP DUP1 PUSH4 0x32145F90 EQ PUSH1 0xBB JUMPI DUP1 PUSH4 0x5095E3D9 EQ PUSH1 0x9F JUMPI DUP1 PUSH4 0x59E02DD7 EQ PUSH1 0x77 JUMPI PUSH4 0xB689D5AC EQ PUSH1 0x53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH1 0x73 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH1 0x73 JUMPI PUSH1 0x20 SWAP1 PUSH1 0xFF PUSH1 0x1 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH1 0x9C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH1 0x9C JUMPI SLOAD PUSH1 0xFF PUSH1 0x1 SLOAD AND DUP3 MLOAD SWAP2 DUP3 MSTORE ISZERO ISZERO PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH1 0x73 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH1 0x73 JUMPI PUSH1 0xFF NOT PUSH1 0x1 SLOAD AND PUSH1 0x1 SSTORE MLOAD RETURN JUMPDEST POP CALLVALUE PUSH1 0x73 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH1 0x73 JUMPI PUSH1 0x4 CALLDATALOAD DUP3 SSTORE MLOAD RETURN JUMPDEST DUP4 SWAP1 CALLVALUE PUSH1 0x73 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH1 0x73 JUMPI PUSH1 0x20 SWAP2 SLOAD DUP2 MSTORE RETURN INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDA SWAP16 0xA8 EQ 0xF MSTORE 0xEF KECCAK256 BALANCE CALL 0xEF 0xA5 SWAP3 CALLDATACOPY OR 0xBA SWAP5 LOG4 0xEC GT 0xB5 RETURN PUSH21 0x2F9C8B50BA51589E5564736F6C6343000810003360 DUP1 CALLVALUE PUSH2 0x5D JUMPI PUSH1 0x1F PUSH2 0x19A CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH2 0x62 JUMPI DUP1 DUP5 SWAP3 PUSH1 0x20 SWAP5 PUSH1 0x40 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0x5D JUMPI MLOAD PUSH1 0x0 SSTORE PUSH1 0x1 PUSH1 0xFF NOT DUP2 SLOAD AND OR PUSH1 0x1 SSTORE PUSH1 0x40 MLOAD PUSH2 0x121 SWAP1 DUP2 PUSH2 0x79 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH1 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x2A3F4389 EQ PUSH1 0xD3 JUMPI POP DUP1 PUSH4 0x32145F90 EQ PUSH1 0xBB JUMPI DUP1 PUSH4 0x5095E3D9 EQ PUSH1 0x9F JUMPI DUP1 PUSH4 0x59E02DD7 EQ PUSH1 0x77 JUMPI PUSH4 0xB689D5AC EQ PUSH1 0x53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH1 0x73 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH1 0x73 JUMPI PUSH1 0x20 SWAP1 PUSH1 0xFF PUSH1 0x1 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH1 0x9C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH1 0x9C JUMPI SLOAD PUSH1 0xFF PUSH1 0x1 SLOAD AND DUP3 MLOAD SWAP2 DUP3 MSTORE ISZERO ISZERO PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH1 0x73 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH1 0x73 JUMPI PUSH1 0xFF NOT PUSH1 0x1 SLOAD AND PUSH1 0x1 SSTORE MLOAD RETURN JUMPDEST POP CALLVALUE PUSH1 0x73 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH1 0x73 JUMPI PUSH1 0x4 CALLDATALOAD DUP3 SSTORE MLOAD RETURN JUMPDEST DUP4 SWAP1 CALLVALUE PUSH1 0x73 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH1 0x73 JUMPI PUSH1 0x20 SWAP2 SLOAD DUP2 MSTORE RETURN INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDA SWAP16 0xA8 EQ 0xF MSTORE 0xEF KECCAK256 BALANCE CALL 0xEF 0xA5 SWAP3 CALLDATACOPY OR 0xBA SWAP5 LOG4 0xEC GT 0xB5 RETURN PUSH21 0x2F9C8B50BA51589E5564736F6C6343000810003360 LOG0 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0xDC JUMPI ADDRESS PUSH1 0x80 MSTORE PUSH1 0x0 SLOAD SWAP1 PUSH1 0xFF DUP3 PUSH1 0x8 SHR AND PUSH2 0x8A JUMPI POP PUSH1 0xFF DUP1 DUP3 AND LT PUSH2 0x4F JUMPI JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22DA SWAP1 DUP2 PUSH2 0xE2 DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 DUP2 DUP2 PUSH2 0xD56 ADD MSTORE DUP2 DUP2 PUSH2 0xE78 ADD MSTORE PUSH2 0x1059 ADD MSTORE RETURN JUMPDEST PUSH1 0xFF SWAP1 DUP2 NOT AND OR PUSH1 0x0 SSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0xFF DUP2 MSTORE LOG1 CODESIZE PUSH2 0x29 JUMP JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320696E697469 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x616C697A696E67 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1FFC9A7 EQ PUSH2 0x146A JUMPI POP DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x13D6 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x13A4 JUMPI DUP1 PUSH4 0xC340A24 EQ PUSH2 0x137A JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x135C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1295 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x1266 JUMPI DUP1 PUSH4 0x282C51F3 EQ PUSH2 0x122B JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x1170 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1154 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x10C0 JUMPI DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0x1027 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0xFD0 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0xEDB JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0xE19 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0xD43 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0xD05 JUMPI DUP1 PUSH4 0x8F15B414 EQ PUSH2 0x68E JUMPI DUP1 PUSH4 0x9010D07C EQ PUSH2 0x647 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x5F5 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x517 JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x3C2 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x3A6 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x2FA JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2BD JUMPI DUP1 PUSH4 0xCA15C873 EQ PUSH2 0x291 JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x256 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x20A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1B2 JUMPI PUSH4 0xE4C0AAF4 EQ PUSH2 0x169 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1AD JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AD JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x1AD JUMPI PUSH2 0x197 PUSH2 0x2164 JUMP JUMPDEST PUSH2 0x191 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1AD JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AD JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x4 CALLDATALOAD DUP2 DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x1AD JUMPI PUSH1 0x24 CALLDATALOAD SWAP2 DUP3 AND DUP1 SWAP3 SUB PUSH2 0x1AD JUMPI PUSH1 0x0 MSTORE PUSH1 0xCA PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1AD JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AD JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x1AD JUMPI DUP2 PUSH2 0x254 SWAP3 PUSH1 0x0 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE PUSH2 0x24F PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH2 0x15B9 JUMP JUMPDEST PUSH2 0x1698 JUMP JUMPDEST STOP JUMPDEST CALLVALUE PUSH2 0x1AD JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AD JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1AD JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AD JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x97 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1AD JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AD JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x1AD JUMPI PUSH2 0x2EF SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x1BB8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1AD JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AD JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 DUP2 SUB PUSH2 0x1AD JUMPI PUSH1 0x24 CALLDATALOAD SWAP2 CALLER PUSH1 0x0 MSTORE PUSH1 0xCA PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP2 DUP1 DUP4 LT PUSH2 0x353 JUMPI PUSH2 0x2EF SWAP3 SUB SWAP1 CALLER PUSH2 0x1D28 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1AD JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AD JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1AD JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AD JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x1AD JUMPI PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x415 PUSH32 0x3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848 PUSH2 0x15B9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4C8 JUMPI DUP1 PUSH1 0x0 MSTORE PUSH1 0xC9 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP2 DUP1 DUP4 LT PUSH2 0x478 JUMPI PUSH1 0x20 DUP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 PUSH1 0x0 SWAP6 DUP6 DUP8 MSTORE PUSH1 0xC9 DUP5 MSTORE SUB PUSH1 0x40 DUP7 KECCAK256 SSTORE DUP1 PUSH1 0xCB SLOAD SUB PUSH1 0xCB SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1AD JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AD JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0xCD SLOAD PUSH2 0x539 DUP2 PUSH2 0x1B5B JUMP JUMPDEST DUP1 DUP5 MSTORE SWAP1 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x5CE JUMPI POP PUSH1 0x1 EQ PUSH2 0x573 JUMPI JUMPDEST PUSH2 0x56F DUP5 PUSH2 0x563 DUP2 DUP7 SUB DUP3 PUSH2 0x1526 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x14FA JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0xCD PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP3 POP PUSH32 0x83978B4C69C48DD978AB43FE30F077615294F938FB7F936D9EB340E51EA7DB2E JUMPDEST DUP3 DUP5 LT PUSH2 0x5B6 JUMPI POP POP POP DUP2 ADD PUSH1 0x20 ADD PUSH2 0x563 DUP3 PUSH2 0x553 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x20 DUP6 DUP8 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP4 ADD SWAP3 DUP2 ADD PUSH2 0x59E JUMP JUMPDEST PUSH1 0xFF NOT AND PUSH1 0x20 DUP1 DUP8 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 ISZERO ISZERO PUSH1 0x5 SHL DUP6 ADD SWAP1 SWAP3 ADD SWAP3 POP PUSH2 0x563 SWAP2 POP DUP4 SWAP1 POP PUSH2 0x553 JUMP JUMPDEST CALLVALUE PUSH2 0x1AD JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AD JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x1AD JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1AD JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AD JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x97 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH2 0x675 PUSH1 0x24 CALLDATALOAD PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x1FD0 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1AD JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AD JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1AD JUMPI PUSH2 0x6BF SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x159B JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1AD JUMPI PUSH2 0x6DF SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x159B JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x44 CALLDATALOAD DUP2 DUP2 AND DUP2 SUB PUSH2 0x1AD JUMPI PUSH1 0x64 CALLDATALOAD DUP3 DUP2 AND DUP1 SWAP2 SUB PUSH2 0x1AD JUMPI PUSH1 0x0 SLOAD SWAP4 PUSH1 0xFF DUP6 PUSH1 0x8 SHR AND ISZERO SWAP5 DUP6 DUP1 SWAP7 PUSH2 0xCF8 JUMPI JUMPDEST DUP1 ISZERO PUSH2 0xCE1 JUMPI JUMPDEST ISZERO PUSH2 0xC85 JUMPI PUSH1 0xFF NOT DUP2 AND PUSH1 0x1 OR PUSH1 0x0 SSTORE DUP6 PUSH2 0xC73 JUMPI JUMPDEST POP PUSH2 0x757 PUSH1 0xFF PUSH1 0x0 SLOAD PUSH1 0x8 SHR AND PUSH2 0x749 DUP2 PUSH2 0x2204 JUMP JUMPDEST PUSH2 0x752 DUP2 PUSH2 0x2204 JUMP JUMPDEST PUSH2 0x2204 JUMP JUMPDEST DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xB68 JUMPI DUP1 PUSH2 0x774 PUSH1 0xCC SLOAD PUSH2 0x1B5B JUMP JUMPDEST SWAP3 PUSH1 0x1F SWAP4 DUP5 DUP2 GT PUSH2 0xBFD JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 DUP5 DUP4 GT PUSH1 0x1 EQ PUSH2 0xB89 JUMPI PUSH1 0x0 SWAP3 PUSH2 0xB7E JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0xCC SSTORE JUMPDEST DUP6 MLOAD SWAP6 PUSH8 0xFFFFFFFFFFFFFFFF DUP8 GT PUSH2 0xB68 JUMPI PUSH2 0x7C9 PUSH1 0xCD SLOAD PUSH2 0x1B5B JUMP JUMPDEST DUP3 DUP2 GT PUSH2 0xB06 JUMPI JUMPDEST POP PUSH1 0x20 SWAP2 DUP8 GT PUSH1 0x1 EQ PUSH2 0xA7C JUMPI SWAP6 DUP1 SWAP2 PUSH2 0x963 SWAP7 SWAP8 PUSH1 0x0 SWAP3 PUSH2 0xA71 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0xCD SSTORE JUMPDEST PUSH2 0x822 PUSH1 0xFF PUSH1 0x0 SLOAD PUSH1 0x8 SHR AND PUSH2 0x819 DUP2 PUSH2 0x2204 JUMP JUMPDEST PUSH2 0x749 DUP2 PUSH2 0x2204 JUMP JUMPDEST PUSH2 0x191 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xFFDFC1249C027F9191656349FEB0761381BB32C9F557E01F419FD08754BF5A1B PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x65 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0xA2C JUMPI JUMPDEST PUSH1 0x0 DUP1 MSTORE PUSH1 0x97 PUSH1 0x20 MSTORE PUSH2 0x8A8 DUP3 DUP5 AND PUSH32 0x683723E34A772B6E4F2C919BBA7FA32ED8EA11A8325F54DA7DB716E9D9DD98C7 PUSH2 0x1FE8 JUMP JUMPDEST POP PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP1 PUSH1 0x0 MSTORE DUP2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP5 DUP5 AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0x9E7 JUMPI JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x97 PUSH1 0x20 MSTORE PUSH2 0x907 DUP4 DUP4 AND PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x1FE8 JUMP JUMPDEST POP PUSH32 0x3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848 SWAP1 DUP2 PUSH1 0x0 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP5 DUP5 AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0x9A2 JUMPI JUMPDEST POP PUSH1 0x0 MSTORE PUSH1 0x97 PUSH1 0x20 MSTORE AND PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x1FE8 JUMP JUMPDEST POP PUSH2 0x96A JUMPI STOP JUMPDEST PUSH2 0xFF00 NOT PUSH1 0x0 SLOAD AND PUSH1 0x0 SSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE LOG1 STOP JUMPDEST DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP4 DUP4 AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE CALLER DUP4 DUP4 AND DUP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2265 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 PUSH1 0x40 MLOAD LOG4 DUP6 PUSH2 0x94F JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE DUP2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP5 DUP5 AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE CALLER DUP5 DUP5 AND DUP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2265 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 PUSH1 0x40 MLOAD LOG4 PUSH2 0x8EF JUMP JUMPDEST PUSH1 0x0 DUP1 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP4 DUP4 AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE CALLER DUP4 DUP4 AND PUSH1 0x0 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2265 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 PUSH1 0x40 MLOAD LOG4 PUSH2 0x873 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP8 DUP1 PUSH2 0x7EE JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP8 AND SWAP2 PUSH1 0xCD PUSH1 0x0 MSTORE PUSH32 0x83978B4C69C48DD978AB43FE30F077615294F938FB7F936D9EB340E51EA7DB2E SWAP3 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0xAEE JUMPI POP SWAP2 PUSH1 0x1 SWAP4 SWAP2 DUP10 PUSH2 0x963 SWAP10 SWAP11 SWAP5 LT PUSH2 0xAD5 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0xCD SSTORE PUSH2 0x804 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP8 DUP1 DUP1 PUSH2 0xAC7 JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0xAAD JUMP JUMPDEST PUSH1 0xCD PUSH1 0x0 MSTORE PUSH32 0x83978B4C69C48DD978AB43FE30F077615294F938FB7F936D9EB340E51EA7DB2E DUP4 DUP1 DUP11 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 PUSH1 0x20 DUP12 LT PUSH2 0xB5F JUMPI JUMPDEST ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0xB53 JUMPI POP PUSH2 0x7D1 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xB46 JUMP JUMPDEST SWAP3 POP DUP2 SWAP3 PUSH2 0xB3F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD MLOAD SWAP1 POP DUP9 DUP1 PUSH2 0x796 JUMP JUMPDEST PUSH1 0xCC PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2285 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP4 POP PUSH1 0x1F NOT DUP6 AND SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0xBE5 JUMPI POP SWAP1 DUP5 PUSH1 0x1 SWAP6 SWAP5 SWAP4 SWAP3 LT PUSH2 0xBCC JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0xCC SSTORE PUSH2 0x7AC JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP9 DUP1 DUP1 PUSH2 0xBBE JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0xBA8 JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0xCC PUSH1 0x0 MSTORE DUP4 DUP1 DUP5 ADD PUSH1 0x5 SHR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2285 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH2 0xC5D JUMPI JUMPDEST SWAP1 DUP5 SWAP4 SWAP3 SWAP2 ADD PUSH1 0x5 SHR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2285 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0xC4E JUMPI POP PUSH2 0x780 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP5 SWAP4 POP PUSH1 0x1 ADD PUSH2 0xC41 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2285 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 POP PUSH2 0xC26 JUMP JUMPDEST PUSH2 0xFFFF NOT AND PUSH2 0x101 OR PUSH1 0x0 SSTORE DUP7 PUSH2 0x733 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x71D JUMPI POP PUSH1 0x1 PUSH1 0xFF DUP3 AND EQ PUSH2 0x71D JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0xFF DUP3 AND LT PUSH2 0x716 JUMP JUMPDEST CALLVALUE PUSH2 0x1AD JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AD JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x1AD JUMPI PUSH1 0x0 MSTORE PUSH1 0xC9 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1AD JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AD JUMPI PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS SUB PUSH2 0xDAE JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP2 MSTORE RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x555550535570677261646561626C653A206D757374206E6F742062652063616C PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6C6564207468726F7567682064656C656761746563616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AD JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND DUP3 SUB PUSH2 0x1AD JUMPI PUSH1 0x24 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x1AD JUMPI CALLDATASIZE PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0x1AD JUMPI PUSH2 0x254 SWAP3 PUSH2 0xECE PUSH2 0xE74 PUSH1 0x1 SWAP5 CALLDATASIZE SWAP1 PUSH1 0x24 DUP2 PUSH1 0x4 ADD CALLDATALOAD SWAP2 ADD PUSH2 0x1564 JUMP JUMPDEST SWAP3 DUP1 PUSH32 0x0 AND SWAP1 PUSH2 0xEA5 DUP3 ADDRESS EQ ISZERO PUSH2 0x1722 JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD AND EQ PUSH2 0x1783 JUMP JUMPDEST PUSH2 0xED6 PUSH2 0x2164 JUMP JUMPDEST PUSH2 0x17E4 JUMP JUMPDEST CALLVALUE PUSH2 0x1AD JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AD JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x1AD JUMPI PUSH1 0x24 CALLDATALOAD PUSH2 0xF2D PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0x15B9 JUMP JUMPDEST DUP2 ISZERO PUSH2 0xF8B JUMPI PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x20 DUP3 PUSH2 0xF65 PUSH1 0x0 SWAP5 PUSH1 0xCB SLOAD PUSH2 0x1B95 JUMP JUMPDEST PUSH1 0xCB SSTORE DUP5 DUP5 MSTORE PUSH1 0xC9 DUP3 MSTORE PUSH1 0x40 DUP5 KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1AD JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AD JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 DUP2 SUB PUSH2 0x1AD JUMPI PUSH2 0x2EF SWAP2 CALLER PUSH1 0x0 MSTORE PUSH1 0xCA PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH2 0x1020 PUSH1 0x24 CALLDATALOAD PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1B95 JUMP JUMPDEST SWAP1 CALLER PUSH2 0x1D28 JUMP JUMPDEST CALLVALUE PUSH2 0x1AD JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AD JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND DUP3 SUB PUSH2 0x1AD JUMPI PUSH2 0x254 SWAP2 PUSH2 0x1086 DUP3 PUSH1 0x0 SWAP4 PUSH32 0x0 AND SWAP1 PUSH2 0xEA5 DUP3 ADDRESS EQ ISZERO PUSH2 0x1722 JUMP JUMPDEST PUSH2 0x108E PUSH2 0x2164 JUMP JUMPDEST PUSH2 0x1097 DUP3 PUSH2 0x1548 JUMP JUMPDEST SWAP1 PUSH2 0x10A5 PUSH1 0x40 MLOAD SWAP3 DUP4 PUSH2 0x1526 JUMP JUMPDEST DUP3 DUP3 MSTORE PUSH1 0x1F NOT PUSH2 0x10B4 DUP5 PUSH2 0x1548 JUMP JUMPDEST ADD CALLDATASIZE PUSH1 0x20 DUP5 ADD CALLDATACOPY PUSH2 0x17E4 JUMP JUMPDEST CALLVALUE PUSH2 0x1AD JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AD JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP1 DUP3 SUB PUSH2 0x1AD JUMPI CALLER SUB PUSH2 0x10F7 JUMPI PUSH2 0x254 SWAP1 PUSH1 0x4 CALLDATALOAD PUSH2 0x1698 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x103937B632B9903337B91039B2B633 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1AD JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AD JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1AD JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AD JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x1AD JUMPI PUSH1 0x97 DUP3 PUSH2 0x254 SWAP4 PUSH1 0x0 MSTORE PUSH1 0x20 SWAP1 PUSH1 0x65 DUP3 MSTORE PUSH2 0x11BB PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH2 0x15B9 JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x65 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP5 PUSH1 0x0 MSTORE DUP3 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0x11EB JUMPI JUMPDEST PUSH1 0x0 MSTORE MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x1FE8 JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x65 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP5 PUSH1 0x0 MSTORE DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE CALLER DUP5 DUP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2265 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 PUSH1 0x40 MLOAD LOG4 PUSH2 0x11DD JUMP JUMPDEST CALLVALUE PUSH2 0x1AD JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AD JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1AD JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AD JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1AD JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AD JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND SWAP1 DUP2 DUP4 SUB PUSH2 0x1AD JUMPI PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 AND DUP2 SUB PUSH2 0x1AD JUMPI PUSH1 0x44 CALLDATALOAD SWAP2 PUSH1 0x0 MSTORE PUSH1 0xCA PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP3 PUSH1 0x0 NOT DUP5 SUB PUSH2 0x12FB JUMPI JUMPDEST PUSH2 0x2EF SWAP4 POP PUSH2 0x1BB8 JUMP JUMPDEST DUP3 DUP5 LT PUSH2 0x1317 JUMPI PUSH2 0x1312 DUP4 PUSH2 0x2EF SWAP6 SUB CALLER DUP4 PUSH2 0x1D28 JUMP JUMPDEST PUSH2 0x12F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1AD JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AD JUMPI PUSH1 0x20 PUSH1 0xCB SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1AD JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AD JUMPI PUSH2 0x191 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1AD JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AD JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x1AD JUMPI PUSH2 0x2EF SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x1D28 JUMP JUMPDEST CALLVALUE PUSH2 0x1AD JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AD JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0xCC SLOAD PUSH2 0x13F8 DUP2 PUSH2 0x1B5B JUMP JUMPDEST DUP1 DUP5 MSTORE SWAP1 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x5CE JUMPI POP PUSH1 0x1 EQ PUSH2 0x1421 JUMPI PUSH2 0x56F DUP5 PUSH2 0x563 DUP2 DUP7 SUB DUP3 PUSH2 0x1526 JUMP JUMPDEST PUSH1 0xCC PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP3 POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2285 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE JUMPDEST DUP3 DUP5 LT PUSH2 0x1452 JUMPI POP POP POP DUP2 ADD PUSH1 0x20 ADD PUSH2 0x563 DUP3 PUSH2 0x553 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x20 DUP6 DUP8 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP4 ADD SWAP3 DUP2 ADD PUSH2 0x143A JUMP JUMPDEST CALLVALUE PUSH2 0x1AD JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AD JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP3 AND DUP1 SWAP3 SUB PUSH2 0x1AD JUMPI PUSH1 0x20 SWAP2 PUSH4 0x5A05180F PUSH1 0xE0 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x14AC JUMPI JUMPDEST POP ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x7965DB0B PUSH1 0xE0 SHL DUP2 EQ SWAP2 POP DUP2 ISZERO PUSH2 0x14C6 JUMPI JUMPDEST POP DUP4 PUSH2 0x14A5 JUMP JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP DUP4 PUSH2 0x14BF JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x14EA JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x14DA JUMP JUMPDEST PUSH1 0x40 SWAP2 PUSH1 0x20 DUP3 MSTORE PUSH2 0x151A DUP2 MLOAD DUP1 SWAP3 DUP2 PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x20 DUP7 DUP7 ADD SWAP2 ADD PUSH2 0x14D7 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xB68 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xB68 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH2 0x1570 DUP3 PUSH2 0x1548 JUMP JUMPDEST SWAP2 PUSH2 0x157E PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x1526 JUMP JUMPDEST DUP3 SWAP5 DUP2 DUP5 MSTORE DUP2 DUP4 ADD GT PUSH2 0x1AD JUMPI DUP3 DUP2 PUSH1 0x20 SWAP4 DUP5 PUSH1 0x0 SWAP7 ADD CALLDATACOPY ADD ADD MSTORE JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x1AD JUMPI DUP2 PUSH1 0x20 PUSH2 0x15B6 SWAP4 CALLDATALOAD SWAP2 ADD PUSH2 0x1564 JUMP JUMPDEST SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x65 DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE DUP2 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0x15E0 JUMPI POP POP JUMP JUMPDEST PUSH2 0x167C PUSH1 0x48 PUSH2 0x1694 SWAP4 DUP4 PUSH2 0x1602 PUSH2 0x166D SWAP6 PUSH2 0x15FC PUSH1 0x14 CALLER PUSH2 0x1E75 JUMP JUMPDEST SWAP4 PUSH2 0x1E75 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP4 PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 DUP4 DUP7 ADD MSTORE PUSH2 0x1641 DUP2 MLOAD DUP1 SWAP3 DUP6 PUSH1 0x37 DUP10 ADD SWAP2 ADD PUSH2 0x14D7 JUMP JUMPDEST DUP5 ADD SWAP2 PUSH17 0x1034B99036B4B9B9B4B733903937B6329 PUSH1 0x7D SHL PUSH1 0x37 DUP5 ADD MSTORE DUP4 MLOAD SWAP4 DUP5 SWAP2 DUP8 DUP6 ADD SWAP2 ADD PUSH2 0x14D7 JUMP JUMPDEST ADD SUB PUSH1 0x28 DUP2 ADD DUP5 MSTORE ADD DUP3 PUSH2 0x1526 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP2 DUP3 SWAP2 PUSH1 0x4 DUP4 ADD PUSH2 0x14FA JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x16D6 SWAP2 PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP2 DUP3 DUP3 KECCAK256 SWAP4 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP4 DUP5 DUP4 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF DUP4 DUP4 KECCAK256 SLOAD AND PUSH2 0x16D9 JUMPI JUMPDEST DUP2 MSTORE PUSH1 0x97 PUSH1 0x20 MSTORE KECCAK256 PUSH2 0x2074 JUMP JUMPDEST POP JUMP JUMPDEST DUP1 DUP3 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE DUP3 DUP3 KECCAK256 DUP5 DUP4 MSTORE PUSH1 0x20 MSTORE DUP3 DUP3 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE CALLER DUP5 DUP3 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B DUP6 DUP8 MLOAD LOG4 PUSH2 0x16C9 JUMP JUMPDEST ISZERO PUSH2 0x1729 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x19195B1959D85D1958D85B1B PUSH1 0xA2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x178A JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x6163746976652070726F7879 PUSH1 0xA0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 SWAP3 SWAP2 PUSH1 0xFF PUSH32 0x4910FDFA16FED3260ED0E7147F7CC6DA11A60208B5B9406D12A635614FFD9143 SLOAD AND PUSH1 0x0 EQ PUSH2 0x1821 JUMPI POP PUSH2 0x181F SWAP2 SWAP3 POP PUSH2 0x1AB9 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x52D1902D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x20 SWAP5 SWAP2 SWAP4 SWAP2 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP2 DUP7 DUP2 PUSH1 0x4 DUP2 DUP7 GAS STATICCALL PUSH1 0x0 SWAP2 DUP2 PUSH2 0x1A87 JUMPI JUMPDEST POP PUSH2 0x18B2 JUMPI DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A206E657720696D706C656D656E74617469 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x6F6E206973206E6F742055555053 PUSH1 0x90 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP4 SWAP6 SWAP5 SWAP4 PUSH32 0xC9F76B5EC45E5CDEF99837D7B6D2467235C1DF8933C8CA56DF5C35AFA2C7D444 ADD PUSH2 0x1A31 JUMPI PUSH2 0x18E5 DUP4 PUSH2 0x1AB9 JUMP JUMPDEST DUP4 MLOAD SWAP2 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x0 DUP5 LOG2 DUP7 MLOAD ISZERO SWAP1 DUP2 ISZERO SWAP2 PUSH2 0x1A29 JUMPI JUMPDEST POP PUSH2 0x1927 JUMPI JUMPDEST POP POP POP POP SWAP1 POP JUMP JUMPDEST DUP2 EXTCODESIZE ISZERO PUSH2 0x19D8 JUMPI POP PUSH1 0x0 DUP6 DUP2 SWAP3 DUP6 PUSH2 0x19BA SWAP8 SWAP9 MLOAD SWAP3 ADD SWAP1 GAS DELEGATECALL RETURNDATASIZE ISZERO PUSH2 0x19C5 JUMPI PUSH7 0x819985A5B1959 PUSH1 0xCA SHL RETURNDATASIZE SWAP3 PUSH2 0x195C DUP5 PUSH2 0x1548 JUMP JUMPDEST SWAP4 PUSH2 0x1969 DUP3 MLOAD SWAP6 DUP7 PUSH2 0x1526 JUMP JUMPDEST DUP5 MSTORE RETURNDATASIZE PUSH1 0x0 DUP7 DUP7 ADD RETURNDATACOPY JUMPDEST PUSH32 0x416464726573733A206C6F772D6C6576656C2064656C65676174652063616C6C PUSH2 0x199E PUSH1 0x27 PUSH2 0x1548 JUMP JUMPDEST SWAP6 PUSH2 0x19AB DUP4 MLOAD SWAP8 DUP9 PUSH2 0x1526 JUMP JUMPDEST PUSH1 0x27 DUP8 MSTORE DUP7 ADD MSTORE DUP5 ADD MSTORE PUSH2 0x1E2A JUMP JUMPDEST POP DUP1 CODESIZE DUP1 DUP1 DUP1 PUSH2 0x191F JUMP JUMPDEST PUSH7 0x819985A5B1959 PUSH1 0xCA SHL PUSH1 0x60 SWAP3 PUSH2 0x1973 JUMP JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2064656C65676174652063616C6C20746F206E6F6E2D636F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1B9D1C9858DD PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 POP CODESIZE PUSH2 0x1919 JUMP JUMPDEST DUP4 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A20756E737570706F727465642070726F78 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x1A58589B1955555251 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 SWAP2 DUP9 DUP3 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x1AB2 JUMPI JUMPDEST PUSH2 0x1A9E DUP2 DUP4 PUSH2 0x1526 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1AAF JUMPI POP MLOAD SWAP1 CODESIZE PUSH2 0x1852 JUMP JUMPDEST DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x1A94 JUMP JUMPDEST DUP1 EXTCODESIZE ISZERO PUSH2 0x1B00 JUMPI PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x1BDD08184818DBDB9D1C9858DD PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x1B8B JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x1B75 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x1B6A JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x1BA2 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 DUP3 ISZERO PUSH2 0x1CD5 JUMPI AND SWAP2 DUP3 ISZERO PUSH2 0x1C84 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xC9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP2 DUP1 DUP4 LT PUSH2 0x1C30 JUMPI PUSH1 0x40 DUP3 DUP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP6 DUP8 PUSH1 0x20 SWAP7 MSTORE PUSH1 0xC9 DUP7 MSTORE SUB DUP3 DUP3 KECCAK256 SSTORE DUP7 DUP2 MSTORE KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 DUP3 ISZERO PUSH2 0x1DD9 JUMPI AND SWAP2 DUP3 ISZERO PUSH2 0x1D89 JUMPI PUSH1 0x20 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 DUP4 PUSH1 0x0 MSTORE PUSH1 0xCA DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP6 PUSH1 0x0 MSTORE DUP3 MSTORE DUP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 SWAP2 SWAP1 ISZERO PUSH2 0x1E36 JUMPI POP SWAP1 JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0x1E46 JUMPI POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP1 DUP2 SWAP1 PUSH2 0x1694 SWAP1 PUSH1 0x4 DUP4 ADD PUSH2 0x14FA JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT DUP2 ISZERO ISZERO AND PUSH2 0x1BA2 JUMPI MUL SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1E81 DUP2 PUSH1 0x2 PUSH2 0x1E62 JUMP JUMPDEST SWAP2 PUSH1 0x2 DUP4 ADD DUP1 SWAP4 GT PUSH2 0x1BA2 JUMPI PUSH2 0x1EAF PUSH2 0x1E99 DUP5 PUSH2 0x1548 JUMP JUMPDEST SWAP4 PUSH2 0x1EA7 PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x1526 JUMP JUMPDEST DUP1 DUP6 MSTORE PUSH2 0x1548 JUMP JUMPDEST PUSH1 0x20 SWAP3 SWAP1 DUP5 DUP5 ADD SWAP1 PUSH1 0x1F NOT ADD CALLDATASIZE DUP3 CALLDATACOPY DUP5 MLOAD ISZERO PUSH2 0x1FBA JUMPI PUSH1 0x30 SWAP1 MSTORE8 DUP4 MLOAD SWAP1 PUSH1 0x1 SWAP2 DUP3 LT ISZERO PUSH2 0x1FBA JUMPI PUSH2 0x1EE8 SWAP1 PUSH1 0x78 PUSH1 0x21 DUP8 ADD MSTORE8 PUSH1 0x2 PUSH2 0x1E62 JUMP JUMPDEST DUP2 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x1BA2 JUMPI SWAP1 JUMPDEST DUP1 DUP3 GT PUSH2 0x1F48 JUMPI POP POP PUSH2 0x1F05 JUMPI POP SWAP1 JUMP JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE DUP1 PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 SWAP2 PUSH1 0xF DUP2 AND PUSH1 0x10 DUP2 LT ISZERO PUSH2 0x1FA5 JUMPI DUP6 MLOAD DUP5 LT ISZERO PUSH2 0x1FA5 JUMPI PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL SWAP1 BYTE DUP6 DUP5 ADD DUP6 ADD MSTORE8 PUSH1 0x4 SHR SWAP2 DUP1 ISZERO PUSH2 0x1F90 JUMPI PUSH1 0x0 NOT ADD SWAP1 PUSH2 0x1EF4 JUMP JUMPDEST PUSH1 0x24 PUSH1 0x0 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x24 PUSH1 0x0 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x1FBA JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x1 DUP4 ADD PUSH1 0x0 SWAP1 DUP3 DUP3 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 SLOAD ISZERO PUSH1 0x0 EQ PUSH2 0x206E JUMPI DUP5 SLOAD SWAP5 PUSH9 0x10000000000000000 DUP7 LT ISZERO PUSH2 0x205A JUMPI DUP4 PUSH2 0x204A PUSH2 0x2031 DUP9 PUSH1 0x1 PUSH1 0x40 SWAP9 SWAP10 SWAP11 ADD DUP6 SSTORE DUP5 PUSH2 0x1FD0 JUMP JUMPDEST DUP2 SWAP4 SWAP2 SLOAD SWAP1 PUSH1 0x3 SHL PUSH1 0x0 NOT DUP2 SHL SWAP3 DUP4 SWAP2 SHL AND SWAP2 NOT AND OR SWAP1 JUMP JUMPDEST SWAP1 SSTORE SLOAD SWAP4 DUP3 MSTORE PUSH1 0x20 MSTORE KECCAK256 SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST POP SWAP3 POP POP JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 ADD SWAP1 PUSH1 0x0 SWAP3 DUP2 DUP5 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 SLOAD SWAP1 DUP2 ISZERO ISZERO PUSH1 0x0 EQ PUSH2 0x215D JUMPI PUSH1 0x0 NOT SWAP2 DUP1 DUP4 ADD DUP2 DUP2 GT PUSH2 0x2149 JUMPI DUP3 SLOAD SWAP1 DUP5 DUP3 ADD SWAP2 DUP3 GT PUSH2 0x2135 JUMPI DUP1 DUP3 SUB PUSH2 0x2100 JUMPI JUMPDEST POP POP POP DUP1 SLOAD DUP1 ISZERO PUSH2 0x20EC JUMPI DUP3 ADD SWAP2 PUSH2 0x20CF DUP4 DUP4 PUSH2 0x1FD0 JUMP JUMPDEST SWAP1 SWAP2 DUP3 SLOAD SWAP2 PUSH1 0x3 SHL SHL NOT AND SWAP1 SSTORE SSTORE DUP3 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST PUSH2 0x2120 PUSH2 0x2110 PUSH2 0x2031 SWAP4 DUP7 PUSH2 0x1FD0 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR SWAP3 DUP4 SWAP3 DUP7 PUSH2 0x1FD0 JUMP JUMPDEST SWAP1 SSTORE DUP7 MSTORE DUP5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP7 KECCAK256 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x20B7 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP9 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP8 REVERT JUMPDEST POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x191 SLOAD PUSH1 0x40 MLOAD PUSH4 0xD994D6D5 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x21F8 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x21BA JUMPI JUMPDEST POP ISZERO PUSH2 0x21A8 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1DD1B1B5 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x20 DUP2 RETURNDATASIZE DUP3 GT PUSH2 0x21F0 JUMPI JUMPDEST DUP2 PUSH2 0x21D2 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1526 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x21EC JUMPI MLOAD SWAP1 DUP2 ISZERO ISZERO DUP3 SUB PUSH2 0x1AAF JUMPI POP CODESIZE PUSH2 0x21A0 JUMP JUMPDEST POP DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x21C5 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x220B JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT INVALID 0x2F DUP8 DUP9 GT PUSH31 0x7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D47197230 0xE1 0xE4 0xB2 SWAP16 0xC0 0xBD DUP5 0xD7 0xD7 DUP10 PUSH7 0xC0925452AFF72A 0x2A SLT ISZERO CODESIZE 0xB1 MUL GASLIMIT PUSH31 0x9EBEA26469706673582212203965DF23AB4793F168A5E2652EE2AB5F12B08D 0x29 0xD3 ORIGIN 0xC8 0x2E 0xC8 SWAP7 SLT 0xD2 0xD4 DUP11 0xB3 0x1E PUSH5 0x736F6C6343 STOP ADDMOD LT STOP CALLER PUSH1 0x80 CALLVALUE PUSH2 0x8C JUMPI PUSH1 0x1F PUSH2 0x313 CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH2 0x91 JUMPI DUP1 DUP5 SWAP3 PUSH1 0x40 SWAP5 DUP6 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0x8C JUMPI DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP2 SWAP1 DUP3 SWAP1 SUB PUSH2 0x8C JUMPI PUSH1 0x20 ADD MLOAD SWAP1 DUP2 PUSH1 0x0 SIGNEXTEND DUP3 SUB PUSH2 0x8C JUMPI PUSH1 0x0 SLOAD SWAP2 PUSH1 0xA0 SHL PUSH1 0xFF PUSH1 0xA0 SHL AND SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA8 SHL SUB NOT AND OR OR PUSH1 0x0 SSTORE PUSH1 0x40 MLOAD PUSH2 0x26B SWAP1 DUP2 PUSH2 0xA8 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 SWAP2 DUP3 CALLDATASIZE LT ISZERO PUSH2 0x16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE0 SHR SWAP2 DUP3 PUSH4 0x12FC41CA EQ PUSH2 0x1EE JUMPI POP DUP2 PUSH4 0x59E02DD7 EQ PUSH2 0x70 JUMPI POP PUSH4 0xB888879E EQ PUSH2 0x46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x6C JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x6C JUMPI SWAP1 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP DUP1 REVERT JUMPDEST DUP4 SWAP2 POP CALLVALUE PUSH2 0x6C JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x6C JUMPI DUP2 SLOAD DUP4 MLOAD PUSH4 0x59E02DD7 PUSH1 0xE0 SHL DUP2 MSTORE SWAP3 DUP5 DUP5 DUP5 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND GAS STATICCALL SWAP4 DUP5 ISZERO PUSH2 0x1E2 JUMPI DUP2 SWAP1 DUP3 SWAP6 PUSH2 0x177 JUMPI JUMPDEST POP SWAP2 PUSH1 0xA0 SHR DUP3 DUP2 DUP4 SIGNEXTEND DUP4 DUP2 SGT ISZERO PUSH2 0x107 JUMPI POP POP PUSH2 0xD1 SWAP1 PUSH1 0xFF AND PUSH2 0x20E JUMP JUMPDEST SWAP3 DUP3 PUSH1 0x0 NOT DIV DUP5 GT DUP4 ISZERO ISZERO AND PUSH2 0xF4 JUMPI POP POP MUL SWAP1 JUMPDEST DUP3 MLOAD SWAP2 DUP3 MSTORE ISZERO ISZERO PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x11 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST SWAP1 SWAP3 DUP1 SWAP3 POP DUP2 SWAP7 SWAP6 SWAP5 SWAP7 SLT PUSH2 0x120 JUMPI JUMPDEST POP POP POP POP PUSH2 0xE6 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 POP PUSH1 0x7F NOT DUP2 EQ PUSH2 0x164 JUMPI PUSH2 0x13D SWAP1 DUP3 SUB PUSH1 0xFF AND PUSH2 0x20E JUMP JUMPDEST SWAP3 DUP4 ISZERO PUSH2 0x151 JUMPI POP POP DIV SWAP1 DUP4 DUP1 DUP1 DUP1 PUSH2 0x117 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x12 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x11 DUP5 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST SWAP5 POP POP DUP5 RETURNDATASIZE DUP7 GT PUSH2 0x1DB JUMPI JUMPDEST PUSH1 0x1F DUP2 ADD PUSH1 0x1F NOT AND DUP6 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP7 DUP3 LT OR PUSH2 0x1C8 JUMPI DUP7 SWAP2 DUP7 SWAP2 DUP4 MSTORE DUP2 ADD SUB SLT PUSH2 0x1C5 JUMPI PUSH1 0x20 DUP5 MLOAD SWAP5 ADD MLOAD SWAP4 DUP5 ISZERO ISZERO DUP6 SUB PUSH2 0x6C JUMPI DUP7 PUSH2 0xB2 JUMP JUMPDEST DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x41 DUP6 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x183 JUMP JUMPDEST POP DUP5 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP5 SWAP1 CALLVALUE PUSH2 0x6C JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x6C JUMPI DUP2 PUSH1 0x20 SWAP3 SLOAD PUSH1 0xA0 SHR SWAP1 SIGNEXTEND DUP2 MSTORE RETURN JUMPDEST PUSH1 0xFF AND PUSH1 0x4D DUP2 GT PUSH2 0x21F JUMPI PUSH1 0xA EXP SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE 0xE4 DUP14 0xCB PUSH19 0x7FF64C7999657A96016231BF43C6E2E8BFA366 0xA8 0x2B BALANCE 0xCF 0xC1 0xB2 0xAD 0xF7 PUSH5 0x736F6C6343 STOP ADDMOD LT STOP CALLER LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAC 0xC3 SWAP3 GAS 0x1E 0xF6 PUSH4 0xB791966 0xCA JUMPDEST 0xE2 0x2C 0xDA 0xD3 DUP4 0xED 0xF9 LOG4 PUSH2 0x3CF0 DUP12 0xEA POP LOG4 RETURNDATACOPY CALLER SELFBALANCE DELEGATECALL PUSH5 0x736F6C6343 STOP ADDMOD LT STOP CALLER ",
      "sourceMap": "1051:6554:55:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7557:26;;;1051:6554;;;;;;;;;-1:-1:-1;;1051:6554:55;;;;;;;;;;;;;;1246:1;6309:11;1051:6554;6309:31;1292:1;;;1051:6554;;6397:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1051:6554:55;;;;6504:27;;;;;1051:6554;6492:2;1051:6554;;1246:1;;;;6504:27;;1292:1;1051:6554;6504:27;;1051:6554;6504:27;;1292:1;;;6504:27;;;;;;;;;;;;;;;1051:6554;1292:1;;;6542:10;1292:1;1051:6554;;;;6625:30;;;;;;;;;;;;;;1051:6554;6625:30;;;;;;6647:7;1246:1;;6625:30;;;;;;;;;;1292:1;6662:2;1292:1;1051:6554;1292:1;;;;1051:6554;;;6600:77;;;;;;;;;;;;;;1051:6554;;6600:77;;;;;;;;;;;;;1051:6554;1246:1;;1051:6554;1292:1;;1051:6554;1292:1;;;6600:77;;;;;;;;;6542:167;;;;;1292:1;1051:6554;;;;;;;1246:1;;;;;;;;6542:167;;;1051:6554;6542:167;;1246:1;1051:6554;1292:1;;;1246;1292;;;;6542:167;;;;;;;;1051:6554;1292:1;;6309:11;1292:1;;;;;;;;;;1051:6554;1292:1;;;6309:11;1292:1;6309:11;1292:1;:::i;:::-;;;;;;1051:6554;1292:1;;;;;;;;;;;;;;;1051:6554;;;1292:1;-1:-1:-1;;;1051:6554:55;;;;;;;6542:167;;;;;:::i;:::-;1051:6554;;6542:167;;;;1051:6554;;;;6542:167;1051:6554;;1246:1;1051:6554;;1246:1;;;;6600:77;1051:6554;;1246:1;1051:6554;;1246:1;;;;6600:77;-1:-1:-1;;;1051:6554:55;;;;;;;;1292:1;-1:-1:-1;;;1246:1:55;;;1051:6554;1246:1;1051:6554;;1246:1;6625:30;1051:6554;;1246:1;1051:6554;;1246:1;;;;6625:30;-1:-1:-1;;;1051:6554:55;;;;;;;;6504:27;;;;;:::i;:::-;1051:6554;;6504:27;;;;1051:6554;;;;6504:27;1051:6554;;;6397:15;-1:-1:-1;;;1051:6554:55;;;;;;;;1292:1;1051:6554;;-1:-1:-1;;;1292:1:55;;1051:6554;;1292:1;;;;;;;1246;1292;1246;;;1292;;;;1051:6554;;;;;;;;;;;;;;;;;;;;7557:10;1292:1;1051:6554;;-1:-1:-1;;;7557:26:55;;1051:6554;7557:26;;1051:6554;;;;;;-1:-1:-1;;;;;1051:6554:55;7557:26;;;;;;;;;;;1051:6554;7557:26;1051:6554;1128:8;1051:6554;;7557:39;;1051:6554;;;7557:26;;;;;;;;;;;;;;;;;:::i;:::-;;;1051:6554;;;;7557:26;1051:6554;;;7557:26;;;1051:6554;;;;7557:26;;;-1:-1:-1;7557:26:55;;1051:6554;;;;;;;-1:-1:-1;;1051:6554:55;;;;;;;;;;;;;;;;7141:45;7153:32;1051:6554;;;7141:11;1051:6554;7153:32;;:::i;:::-;7141:11;:45;:::i;:::-;1051:6554;;1246:1;;1051:6554;;-1:-1:-1;;;7196:19:55;;-1:-1:-1;;;;;1051:6554:55;;;;;;;;;;;;;;;;7196:19;;;;;;;;;;;;;1051:6554;7232:10;1292:1;1051:6554;;-1:-1:-1;;;7196:54:55;;1051:6554;;;-1:-1:-1;;;;;1051:6554:55;;7196:54;;1246:1;1051:6554;;;1246:1;;;;1051:6554;;-1:-1:-1;1051:6554:55;;;;;;;;;7196:54;;1051:6554;;7196:54;;;;;;;;1051:6554;1292:1;;;7232:10;1292:1;1051:6554;7260:44;;;;;;1051:6554;;;;;;;1246:1;;;;;;;;7260:44;;1051:6554;;;;;7260:44;;1246:1;1051:6554;;;1246:1;1051:6554;;;;1246:1;7260:44;;;;;;;;1051:6554;;;;;7260:44;;;;;:::i;:::-;1051:6554;;7260:44;;;;7196:54;;;;;;-1:-1:-1;7196:54:55;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;:19;;;;;;;;;;;;;;;:::i;:::-;;;1051:6554;;;;;;;;;;;;7196:19;;:54;:19;;;1051:6554;;;;7196:19;;;;;1051:6554;;;;;;;-1:-1:-1;;1051:6554:55;;;;;;;;;;;;;;;;6839:45;6851:32;1051:6554;;;6839:11;1051:6554;6851:32;;:::i;6839:45::-;1051:6554;;-1:-1:-1;;;;;1051:6554:55;;;;;;;;;6920:8;6927:1;6920:8;;:::i;:::-;6894:35;;;;;1051:6554;;-1:-1:-1;;;6894:35:55;;6913:4;1051:6554;6894:35;;1246:1;1051:6554;;;1246:1;;;;1051:6554;;;;;6894:35;;;;;;;;;;;;1051:6554;1292:1;;6939:44;1051:6554;1292:1;6961:10;1292:1;1051:6554;6974:8;6927:1;6974:8;;:::i;:::-;1051:6554;;-1:-1:-1;;;6939:44:55;;-1:-1:-1;;;;;1051:6554:55;;;;6939:44;;1246:1;1051:6554;;;1246:1;1051:6554;;;;;;;;;;6939:44;;;;;;;;;;;;;1051:6554;1292:1;6961:10;1292:1;1051:6554;7033:8;;6927:1;7033:8;;:::i;:::-;6993:49;;;;;;1051:6554;;;;;;;1246:1;;;;;;;;6993:49;;1051:6554;6993:49;;1246:1;1051:6554;;;1246:1;1051:6554;;;1246:1;6993:49;;;;;;;;1051:6554;;;;6939:44;;;1051:6554;6939:44;;;;;;;;;:::i;:::-;;;;;;1051:6554;;1246:1;1051:6554;;1246:1;;;;6894:35;;;;;:::i;:::-;1051:6554;;6894:35;;;;1051:6554;;;;;;;;;;;;-1:-1:-1;;1051:6554:55;;;;;;-1:-1:-1;;;;;1051:6554:55;;;;;;;6068:8;;;;:::i;:::-;1051:6554;;;;;1246:1;;;1051:6554;;6144:27;6149:22;1051:6554;;;6144:27;:::i;:::-;1051:6554;;;1246:1;;;;;;;6121:51;;1051:6554;6121:51;;1246:1;6121:51;;;;;;;1246:1;6121:51;;;1051:6554;;;6182:54;;;;;;1051:6554;;;;;;1246:1;;;;;;;;6182:54;;1051:6554;;6182:54;;1246:1;6182:54;;;;;;;;1051:6554;;;;6121:51;;;1051:6554;6121:51;;1051:6554;6121:51;;;;;;1051:6554;6121:51;;;:::i;:::-;;;1051:6554;;;;;;;;;;;;;;6121:51;;;;;;-1:-1:-1;6121:51:55;;1051:6554;;;;;;-1:-1:-1;;1051:6554:55;;;;;;;-1:-1:-1;1051:6554:55;;;;;;:::i;:::-;;;-1:-1:-1;;;;;1051:6554:55;;;;;;;;;;-1:-1:-1;;;;;1051:6554:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1051:6554:55;;;;;;1246:1;5438:22;1051:6554;5438:42;1246:1;;;1051:6554;;5562:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1051:6554;;7415:36;;;;;;5562:13;7415:36;;;;;;;;;;;-1:-1:-1;;;;;1051:6554:55;7415:36;;;1246:1;;;1051:6554;;;;;;;;;1246:1;;;7415:36;;;1051:6554;7415:36;;;;;;;;1246:1;;1051:6554;1246:1;-1:-1:-1;;;;;1051:6554:55;;;;;;;;;;5623:65;;;;;1051:6554;;1246:1;;;;5623:65;;1051:6554;;5623:65;;1246:1;;1051:6554;1246:1;;;-1:-1:-1;;;1051:6554:55;1246:1;;;1051:6554;;1246:1;;;;1051:6554;1246:1;;;-1:-1:-1;;;1051:6554:55;1246:1;;;1051:6554;1246:1;;;1051:6554;1246:1;;;5623:65;;1246:1;5623:65;;;;;;;;;;;1051:6554;;;;1246:1;5783:8;1051:6554;;5783:8;:::i;:::-;1051:6554;;5851:29;;;;;;5562:13;5851:29;;;;;;;-1:-1:-1;;;;;5851:29:55;;;;;1051:6554;5851:29;;;1246:1;1051:6554;5851:29;;;;;;;;;;;;;-1:-1:-1;;;;;1051:6554:55;;;;1246:1;;;1051:6554;;;5891:44;;;;;1051:6554;;-1:-1:-1;;;5891:44:55;;1051:6554;1246:1;-1:-1:-1;;;;;1051:6554:55;;;;5891:44;;1246:1;1051:6554;1246:1;1051:6554;;1246:1;;;1051:6554;1246:1;1051:6554;1246:1;;;1051:6554;1246:1;1051:6554;1246:1;;;1051:6554;1246:1;1051:6554;1246:1;;;1051:6554;1246:1;1051:6554;1246:1;;;1051:6554;1246:1;1051:6554;1246:1;;;1051:6554;;;;;;;;;;;5891:44;;;;;;;;1051:6554;-1:-1:-1;;5438:22:55;1051:6554;-1:-1:-1;;1246:1:55;;;;1051:6554;1246:1;5438:22;1246:1;1051:6554;;;1246:1;-1:-1:-1;;;1246:1:55;;;1051:6554;1246:1;1051:6554;;1246:1;5891:44;;;;;:::i;:::-;1051:6554;;5891:44;;;;;1051:6554;;5851:29;1051:6554;;;1246:1;;;;;;;;5851:29;-1:-1:-1;;;1051:6554:55;;;;;;;;5623:65;;;;;:::i;:::-;;;;;1051:6554;;;5562:13;-1:-1:-1;;;1051:6554:55;;;;;;;;1246:1;1051:6554;;-1:-1:-1;;;1246:1:55;;1051:6554;;1246:1;;;;1051:6554;1246:1;;;-1:-1:-1;;;1051:6554:55;1246:1;;;1051:6554;;1246:1;1051:6554;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;1246:1;-1:-1:-1;;;;;1051:6554:55;;;1246:1;;;;;;;;:::o;:::-;1051:6554;;;1246:1;;;;;;;;1051:6554;;;;;;;:::o;:::-;;;;;;;;;;;;1292:1;1051:6554;;1292:1;;;;;-1:-1:-1;1292:1:55;;-1:-1:-1;1292:1:55;;;-1:-1:-1;1292:1:55;:::o;:::-;1051:6554;;;1292:1;;;;;;;;1051:6554;1246:1;;;1051:6554;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;:::o"
    },
    "gasEstimates": {
      "creation": {
        "codeDepositCost": "3829600",
        "executionCost": "infinite",
        "totalCost": "infinite"
      },
      "external": {
        "addAsset(uint8)": "infinite",
        "addPeggedToken((address,address,uint256,uint256,uint256,uint256,uint256),uint96)": "infinite",
        "echidna_wrappedTokenPrice_always_ONE()": "infinite",
        "mintTC(uint8,uint256)": "infinite",
        "pokePrice(uint256,uint96)": "infinite",
        "redeemTC(uint8,uint256)": "infinite"
      },
      "internal": {
        "_deployProxy(address)": "infinite"
      }
    },
    "methodIdentifiers": {
      "addAsset(uint8)": "e0955452",
      "addPeggedToken((address,address,uint256,uint256,uint256,uint256,uint256),uint96)": "24035d38",
      "echidna_wrappedTokenPrice_always_ONE()": "b75205cb",
      "mintTC(uint8,uint256)": "499e3b16",
      "pokePrice(uint256,uint96)": "3295b14f",
      "redeemTC(uint8,uint256)": "a1791617"
    }
  },
  "metadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"decimals_\",\"type\":\"uint8\"}],\"name\":\"addAsset\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tpTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"priceProviderAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tpCtarg\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tpMintFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tpRedeemFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tpEma\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tpEmaSf\",\"type\":\"uint256\"}],\"internalType\":\"struct PeggedTokenParams\",\"name\":\"peggedTokenParams_\",\"type\":\"tuple\"},{\"internalType\":\"uint96\",\"name\":\"price_\",\"type\":\"uint96\"}],\"name\":\"addPeggedToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"echidna_wrappedTokenPrice_always_ONE\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"assetIndex_\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"qTC_\",\"type\":\"uint256\"}],\"name\":\"mintTC\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"i_\",\"type\":\"uint256\"},{\"internalType\":\"uint96\",\"name\":\"price_\",\"type\":\"uint96\"}],\"name\":\"pokePrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"assetIndex_\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"qTC_\",\"type\":\"uint256\"}],\"name\":\"redeemTC\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"EchidnaMocWrapperTester\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"This test purpose is to check that operating with assets with different decimals than 18 doesn't affect the wrapped token price\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/echidna/EchidnaMocWrapperTester.sol\":\"EchidnaMocWrapperTester\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul[j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTOtfDnca[r]Iulc]jmul[jul]VcTOculjmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (access/AccessControlEnumerable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IAccessControlEnumerableUpgradeable.sol\\\";\\nimport \\\"./AccessControlUpgradeable.sol\\\";\\nimport \\\"../utils/structs/EnumerableSetUpgradeable.sol\\\";\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Extension of {AccessControl} that allows enumerating the members of each role.\\n */\\nabstract contract AccessControlEnumerableUpgradeable is Initializable, IAccessControlEnumerableUpgradeable, AccessControlUpgradeable {\\n    function __AccessControlEnumerable_init() internal onlyInitializing {\\n    }\\n\\n    function __AccessControlEnumerable_init_unchained() internal onlyInitializing {\\n    }\\n    using EnumerableSetUpgradeable for EnumerableSetUpgradeable.AddressSet;\\n\\n    mapping(bytes32 => EnumerableSetUpgradeable.AddressSet) private _roleMembers;\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IAccessControlEnumerableUpgradeable).interfaceId || super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev Returns one of the accounts that have `role`. `index` must be a\\n     * value between 0 and {getRoleMemberCount}, non-inclusive.\\n     *\\n     * Role bearers are not sorted in any particular way, and their ordering may\\n     * change at any point.\\n     *\\n     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\\n     * you perform all queries on the same block. See the following\\n     * https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\\n     * for more information.\\n     */\\n    function getRoleMember(bytes32 role, uint256 index) public view virtual override returns (address) {\\n        return _roleMembers[role].at(index);\\n    }\\n\\n    /**\\n     * @dev Returns the number of accounts that have `role`. Can be used\\n     * together with {getRoleMember} to enumerate all bearers of a role.\\n     */\\n    function getRoleMemberCount(bytes32 role) public view virtual override returns (uint256) {\\n        return _roleMembers[role].length();\\n    }\\n\\n    /**\\n     * @dev Overload {_grantRole} to track enumerable memberships\\n     */\\n    function _grantRole(bytes32 role, address account) internal virtual override {\\n        super._grantRole(role, account);\\n        _roleMembers[role].add(account);\\n    }\\n\\n    /**\\n     * @dev Overload {_revokeRole} to track enumerable memberships\\n     */\\n    function _revokeRole(bytes32 role, address account) internal virtual override {\\n        super._revokeRole(role, account);\\n        _roleMembers[role].remove(account);\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0xc2dfd6ba9449f61b6b03b262182faf302f093a8c05dd10792aeecb4ed1663c0c\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (access/AccessControl.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IAccessControlUpgradeable.sol\\\";\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../utils/StringsUpgradeable.sol\\\";\\nimport \\\"../utils/introspection/ERC165Upgradeable.sol\\\";\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module that allows children to implement role-based access\\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\\n * members except through off-chain means by accessing the contract event logs. Some\\n * applications may benefit from on-chain enumerability, for those cases see\\n * {AccessControlEnumerable}.\\n *\\n * Roles are referred to by their `bytes32` identifier. These should be exposed\\n * in the external API and be unique. The best way to achieve this is by\\n * using `public constant` hash digests:\\n *\\n * ```\\n * bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\");\\n * ```\\n *\\n * Roles can be used to represent a set of permissions. To restrict access to a\\n * function call, use {hasRole}:\\n *\\n * ```\\n * function foo() public {\\n *     require(hasRole(MY_ROLE, msg.sender));\\n *     ...\\n * }\\n * ```\\n *\\n * Roles can be granted and revoked dynamically via the {grantRole} and\\n * {revokeRole} functions. Each role has an associated admin role, and only\\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\\n *\\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\\n * that only accounts with this role will be able to grant or revoke other\\n * roles. More complex role relationships can be created by using\\n * {_setRoleAdmin}.\\n *\\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\\n * grant and revoke this role. Extra precautions should be taken to secure\\n * accounts that have been granted it.\\n */\\nabstract contract AccessControlUpgradeable is Initializable, ContextUpgradeable, IAccessControlUpgradeable, ERC165Upgradeable {\\n    function __AccessControl_init() internal onlyInitializing {\\n    }\\n\\n    function __AccessControl_init_unchained() internal onlyInitializing {\\n    }\\n    struct RoleData {\\n        mapping(address => bool) members;\\n        bytes32 adminRole;\\n    }\\n\\n    mapping(bytes32 => RoleData) private _roles;\\n\\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\\n\\n    /**\\n     * @dev Modifier that checks that an account has a specific role. Reverts\\n     * with a standardized message including the required role.\\n     *\\n     * The format of the revert reason is given by the following regular expression:\\n     *\\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\\n     *\\n     * _Available since v4.1._\\n     */\\n    modifier onlyRole(bytes32 role) {\\n        _checkRole(role);\\n        _;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IAccessControlUpgradeable).interfaceId || super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) public view virtual override returns (bool) {\\n        return _roles[role].members[account];\\n    }\\n\\n    /**\\n     * @dev Revert with a standard message if `_msgSender()` is missing `role`.\\n     * Overriding this function changes the behavior of the {onlyRole} modifier.\\n     *\\n     * Format of the revert message is described in {_checkRole}.\\n     *\\n     * _Available since v4.6._\\n     */\\n    function _checkRole(bytes32 role) internal view virtual {\\n        _checkRole(role, _msgSender());\\n    }\\n\\n    /**\\n     * @dev Revert with a standard message if `account` is missing `role`.\\n     *\\n     * The format of the revert reason is given by the following regular expression:\\n     *\\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\\n     */\\n    function _checkRole(bytes32 role, address account) internal view virtual {\\n        if (!hasRole(role, account)) {\\n            revert(\\n                string(\\n                    abi.encodePacked(\\n                        \\\"AccessControl: account \\\",\\n                        StringsUpgradeable.toHexString(account),\\n                        \\\" is missing role \\\",\\n                        StringsUpgradeable.toHexString(uint256(role), 32)\\n                    )\\n                )\\n            );\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {\\n        return _roles[role].adminRole;\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     *\\n     * May emit a {RoleGranted} event.\\n     */\\n    function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\\n        _grantRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     *\\n     * May emit a {RoleRevoked} event.\\n     */\\n    function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\\n        _revokeRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `account`.\\n     *\\n     * May emit a {RoleRevoked} event.\\n     */\\n    function renounceRole(bytes32 role, address account) public virtual override {\\n        require(account == _msgSender(), \\\"AccessControl: can only renounce roles for self\\\");\\n\\n        _revokeRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event. Note that unlike {grantRole}, this function doesn't perform any\\n     * checks on the calling account.\\n     *\\n     * May emit a {RoleGranted} event.\\n     *\\n     * [WARNING]\\n     * ====\\n     * This function should only be called from the constructor when setting\\n     * up the initial roles for the system.\\n     *\\n     * Using this function in any other way is effectively circumventing the admin\\n     * system imposed by {AccessControl}.\\n     * ====\\n     *\\n     * NOTE: This function is deprecated in favor of {_grantRole}.\\n     */\\n    function _setupRole(bytes32 role, address account) internal virtual {\\n        _grantRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Sets `adminRole` as ``role``'s admin role.\\n     *\\n     * Emits a {RoleAdminChanged} event.\\n     */\\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\\n        bytes32 previousAdminRole = getRoleAdmin(role);\\n        _roles[role].adminRole = adminRole;\\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * Internal function without access restriction.\\n     *\\n     * May emit a {RoleGranted} event.\\n     */\\n    function _grantRole(bytes32 role, address account) internal virtual {\\n        if (!hasRole(role, account)) {\\n            _roles[role].members[account] = true;\\n            emit RoleGranted(role, account, _msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * Internal function without access restriction.\\n     *\\n     * May emit a {RoleRevoked} event.\\n     */\\n    function _revokeRole(bytes32 role, address account) internal virtual {\\n        if (hasRole(role, account)) {\\n            _roles[role].members[account] = false;\\n            emit RoleRevoked(role, account, _msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0xe8f27a3e3e25067334e76799f03d4de6d8f8535c3fc4806468228a9ebd5de51a\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/access/IAccessControlEnumerableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControlEnumerable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IAccessControlUpgradeable.sol\\\";\\n\\n/**\\n * @dev External interface of AccessControlEnumerable declared to support ERC165 detection.\\n */\\ninterface IAccessControlEnumerableUpgradeable is IAccessControlUpgradeable {\\n    /**\\n     * @dev Returns one of the accounts that have `role`. `index` must be a\\n     * value between 0 and {getRoleMemberCount}, non-inclusive.\\n     *\\n     * Role bearers are not sorted in any particular way, and their ordering may\\n     * change at any point.\\n     *\\n     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\\n     * you perform all queries on the same block. See the following\\n     * https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\\n     * for more information.\\n     */\\n    function getRoleMember(bytes32 role, uint256 index) external view returns (address);\\n\\n    /**\\n     * @dev Returns the number of accounts that have `role`. Can be used\\n     * together with {getRoleMember} to enumerate all bearers of a role.\\n     */\\n    function getRoleMemberCount(bytes32 role) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x7acbc538aad6eb4614e26612a8c5c0149bb8808db95e2638d245a8365f63e572\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControl.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev External interface of AccessControl declared to support ERC165 detection.\\n */\\ninterface IAccessControlUpgradeable {\\n    /**\\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\\n     *\\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\\n     * {RoleAdminChanged} not being emitted signaling this.\\n     *\\n     * _Available since v3.1._\\n     */\\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\\n\\n    /**\\n     * @dev Emitted when `account` is granted `role`.\\n     *\\n     * `sender` is the account that originated the contract call, an admin role\\n     * bearer except when using {AccessControl-_setupRole}.\\n     */\\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Emitted when `account` is revoked `role`.\\n     *\\n     * `sender` is the account that originated the contract call:\\n     *   - if using `revokeRole`, it is the admin role bearer\\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\\n     */\\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) external view returns (bool);\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function grantRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function revokeRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `account`.\\n     */\\n    function renounceRole(bytes32 role, address account) external;\\n}\\n\",\"keccak256\":\"0xb8f5302f12138c5561362e88a78d061573e6298b7a1a5afe84a1e2c8d4d5aeaa\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822ProxiableUpgradeable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (proxy/ERC1967/ERC1967Upgrade.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../beacon/IBeaconUpgradeable.sol\\\";\\nimport \\\"../../interfaces/draft-IERC1822Upgradeable.sol\\\";\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\nimport \\\"../../utils/StorageSlotUpgradeable.sol\\\";\\nimport \\\"../utils/Initializable.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n *\\n * _Available since v4.1._\\n *\\n * @custom:oz-upgrades-unsafe-allow delegatecall\\n */\\nabstract contract ERC1967UpgradeUpgradeable is Initializable {\\n    function __ERC1967Upgrade_init() internal onlyInitializing {\\n    }\\n\\n    function __ERC1967Upgrade_init_unchained() internal onlyInitializing {\\n    }\\n    // This is the keccak-256 hash of \\\"eip1967.proxy.rollback\\\" subtracted by 1\\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function _getImplementation() internal view returns (address) {\\n        return StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        require(AddressUpgradeable.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n        StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeTo(address newImplementation) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCall(\\n        address newImplementation,\\n        bytes memory data,\\n        bool forceCall\\n    ) internal {\\n        _upgradeTo(newImplementation);\\n        if (data.length > 0 || forceCall) {\\n            _functionDelegateCall(newImplementation, data);\\n        }\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCallUUPS(\\n        address newImplementation,\\n        bytes memory data,\\n        bool forceCall\\n    ) internal {\\n        // Upgrades from old implementations will perform a rollback test. This test requires the new\\n        // implementation to upgrade back to the old, non-ERC1822 compliant, implementation. Removing\\n        // this special case will break upgrade paths from old UUPS implementation to new ones.\\n        if (StorageSlotUpgradeable.getBooleanSlot(_ROLLBACK_SLOT).value) {\\n            _setImplementation(newImplementation);\\n        } else {\\n            try IERC1822ProxiableUpgradeable(newImplementation).proxiableUUID() returns (bytes32 slot) {\\n                require(slot == _IMPLEMENTATION_SLOT, \\\"ERC1967Upgrade: unsupported proxiableUUID\\\");\\n            } catch {\\n                revert(\\\"ERC1967Upgrade: new implementation is not UUPS\\\");\\n            }\\n            _upgradeToAndCall(newImplementation, data, forceCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Returns the current admin.\\n     */\\n    function _getAdmin() internal view returns (address) {\\n        return StorageSlotUpgradeable.getAddressSlot(_ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        require(newAdmin != address(0), \\\"ERC1967: new admin is the zero address\\\");\\n        StorageSlotUpgradeable.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {AdminChanged} event.\\n     */\\n    function _changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(_getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\\n     */\\n    bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Emitted when the beacon is upgraded.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function _getBeacon() internal view returns (address) {\\n        return StorageSlotUpgradeable.getAddressSlot(_BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        require(AddressUpgradeable.isContract(newBeacon), \\\"ERC1967: new beacon is not a contract\\\");\\n        require(\\n            AddressUpgradeable.isContract(IBeaconUpgradeable(newBeacon).implementation()),\\n            \\\"ERC1967: beacon implementation is not a contract\\\"\\n        );\\n        StorageSlotUpgradeable.getAddressSlot(_BEACON_SLOT).value = newBeacon;\\n    }\\n\\n    /**\\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\\n     *\\n     * Emits a {BeaconUpgraded} event.\\n     */\\n    function _upgradeBeaconToAndCall(\\n        address newBeacon,\\n        bytes memory data,\\n        bool forceCall\\n    ) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n        if (data.length > 0 || forceCall) {\\n            _functionDelegateCall(IBeaconUpgradeable(newBeacon).implementation(), data);\\n        }\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function _functionDelegateCall(address target, bytes memory data) private returns (bytes memory) {\\n        require(AddressUpgradeable.isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return AddressUpgradeable.verifyCallResult(success, returndata, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x315887e846f1e5f8d8fa535a229d318bb9290aaa69485117f1ee8a9a6b3be823\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeaconUpgradeable {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {BeaconProxy} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized < type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Internal function that returns the initialized version. Returns `_initialized`\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Internal function that returns the initialized version. Returns `_initializing`\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0xe798cadb41e2da274913e4b3183a80f50fb057a42238fe8467e077268100ec27\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (proxy/utils/UUPSUpgradeable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../interfaces/draft-IERC1822Upgradeable.sol\\\";\\nimport \\\"../ERC1967/ERC1967UpgradeUpgradeable.sol\\\";\\nimport \\\"./Initializable.sol\\\";\\n\\n/**\\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\\n *\\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\\n * `UUPSUpgradeable` with a custom implementation of upgrades.\\n *\\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\\n *\\n * _Available since v4.1._\\n */\\nabstract contract UUPSUpgradeable is Initializable, IERC1822ProxiableUpgradeable, ERC1967UpgradeUpgradeable {\\n    function __UUPSUpgradeable_init() internal onlyInitializing {\\n    }\\n\\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\\n    }\\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable state-variable-assignment\\n    address private immutable __self = address(this);\\n\\n    /**\\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\\n     * fail.\\n     */\\n    modifier onlyProxy() {\\n        require(address(this) != __self, \\\"Function must be called through delegatecall\\\");\\n        require(_getImplementation() == __self, \\\"Function must be called through active proxy\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\\n     * callable on the implementing contract but not through proxies.\\n     */\\n    modifier notDelegated() {\\n        require(address(this) == __self, \\\"UUPSUpgradeable: must not be called through delegatecall\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\\n     */\\n    function proxiableUUID() external view virtual override notDelegated returns (bytes32) {\\n        return _IMPLEMENTATION_SLOT;\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy to `newImplementation`.\\n     *\\n     * Calls {_authorizeUpgrade}.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function upgradeTo(address newImplementation) external virtual onlyProxy {\\n        _authorizeUpgrade(newImplementation);\\n        _upgradeToAndCallUUPS(newImplementation, new bytes(0), false);\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\\n     * encoded in `data`.\\n     *\\n     * Calls {_authorizeUpgrade}.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes memory data) external payable virtual onlyProxy {\\n        _authorizeUpgrade(newImplementation);\\n        _upgradeToAndCallUUPS(newImplementation, data, true);\\n    }\\n\\n    /**\\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\\n     * {upgradeTo} and {upgradeToAndCall}.\\n     *\\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\\n     *\\n     * ```solidity\\n     * function _authorizeUpgrade(address) internal override onlyOwner {}\\n     * ```\\n     */\\n    function _authorizeUpgrade(address newImplementation) internal virtual;\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x7967d130887c4b40666cd88f8744691d4527039a1b2a38aa0de41481ef646778\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which allows children to implement an emergency stop\\n * mechanism that can be triggered by an authorized account.\\n *\\n * This module is used through inheritance. It will make available the\\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\\n * the functions of your contract. Note that they will not be pausable by\\n * simply including this module, only once the modifiers are put in place.\\n */\\nabstract contract PausableUpgradeable is Initializable, ContextUpgradeable {\\n    /**\\n     * @dev Emitted when the pause is triggered by `account`.\\n     */\\n    event Paused(address account);\\n\\n    /**\\n     * @dev Emitted when the pause is lifted by `account`.\\n     */\\n    event Unpaused(address account);\\n\\n    bool private _paused;\\n\\n    /**\\n     * @dev Initializes the contract in unpaused state.\\n     */\\n    function __Pausable_init() internal onlyInitializing {\\n        __Pausable_init_unchained();\\n    }\\n\\n    function __Pausable_init_unchained() internal onlyInitializing {\\n        _paused = false;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is not paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    modifier whenNotPaused() {\\n        _requireNotPaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    modifier whenPaused() {\\n        _requirePaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns true if the contract is paused, and false otherwise.\\n     */\\n    function paused() public view virtual returns (bool) {\\n        return _paused;\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is paused.\\n     */\\n    function _requireNotPaused() internal view virtual {\\n        require(!paused(), \\\"Pausable: paused\\\");\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is not paused.\\n     */\\n    function _requirePaused() internal view virtual {\\n        require(paused(), \\\"Pausable: not paused\\\");\\n    }\\n\\n    /**\\n     * @dev Triggers stopped state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    function _pause() internal virtual whenNotPaused {\\n        _paused = true;\\n        emit Paused(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns to normal state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    function _unpause() internal virtual whenPaused {\\n        _paused = false;\\n        emit Unpaused(_msgSender());\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x40c636b4572ff5f1dc50cf22097e93c0723ee14eff87e99ac2b02636eeca1250\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuardUpgradeable is Initializable {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    function __ReentrancyGuard_init() internal onlyInitializing {\\n        __ReentrancyGuard_init_unchained();\\n    }\\n\\n    function __ReentrancyGuard_init_unchained() internal onlyInitializing {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x2b3005a0064cfc558bdf64b2bae94b565f4574a536aadd61c13838d4f2157790\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20Upgradeable.sol\\\";\\nimport \\\"./extensions/IERC20MetadataUpgradeable.sol\\\";\\nimport \\\"../../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20Upgradeable, IERC20MetadataUpgradeable {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * The default value of {decimals} is 18. To select a different value for\\n     * {decimals} you should overload it.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {\\n        __ERC20_init_unchained(name_, symbol_);\\n    }\\n\\n    function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\\n     * overridden;\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) public virtual override returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, amount);\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        uint256 currentAllowance = allowance(owner, spender);\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, amount);\\n\\n        uint256 fromBalance = _balances[from];\\n        require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[from] = fromBalance - amount;\\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\\n            // decrementing then incrementing.\\n            _balances[to] += amount;\\n        }\\n\\n        emit Transfer(from, to, amount);\\n\\n        _afterTokenTransfer(from, to, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        unchecked {\\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\\n            _balances[account] += amount;\\n        }\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\\n            _totalSupply -= amount;\\n        }\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\n     *\\n     * Does not update the allowance amount in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Might emit an {Approval} event.\\n     */\\n    function _spendAllowance(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - amount);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[45] private __gap;\\n}\\n\",\"keccak256\":\"0xb1d9e69cf8073efa574b31b1f840e20709139c19bfb27e60b16393d6073f3d42\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20Upgradeable {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/ERC20Pausable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../ERC20Upgradeable.sol\\\";\\nimport \\\"../../../security/PausableUpgradeable.sol\\\";\\nimport \\\"../../../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev ERC20 token with pausable token transfers, minting and burning.\\n *\\n * Useful for scenarios such as preventing trades until the end of an evaluation\\n * period, or having an emergency switch for freezing all token transfers in the\\n * event of a large bug.\\n */\\nabstract contract ERC20PausableUpgradeable is Initializable, ERC20Upgradeable, PausableUpgradeable {\\n    function __ERC20Pausable_init() internal onlyInitializing {\\n        __Pausable_init_unchained();\\n    }\\n\\n    function __ERC20Pausable_init_unchained() internal onlyInitializing {\\n    }\\n    /**\\n     * @dev See {ERC20-_beforeTokenTransfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - the contract must not be paused.\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual override {\\n        super._beforeTokenTransfer(from, to, amount);\\n\\n        require(!paused(), \\\"ERC20Pausable: token transfer while paused\\\");\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x5bba367c6c5b9bc3ffb2a87f6aa7437955f0697ab8fcd8e38d2a4985be6469fc\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20Upgradeable.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20MetadataUpgradeable is IERC20Upgradeable {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-IERC20PermitUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/draft-IERC20Permit.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n */\\ninterface IERC20PermitUpgradeable {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\\n     * given ``owner``'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0xcc70d8e2281fb3ff69e8ab242500f10142cd0a7fa8dd9e45882be270d4d09024\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20Upgradeable.sol\\\";\\nimport \\\"../extensions/draft-IERC20PermitUpgradeable.sol\\\";\\nimport \\\"../../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20Upgradeable {\\n    using AddressUpgradeable for address;\\n\\n    function safeTransfer(\\n        IERC20Upgradeable token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20Upgradeable token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20Upgradeable token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20Upgradeable token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20Upgradeable token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    function safePermit(\\n        IERC20PermitUpgradeable token,\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal {\\n        uint256 nonceBefore = token.nonces(owner);\\n        token.permit(owner, spender, value, deadline, v, r, s);\\n        uint256 nonceAfter = token.nonces(owner);\\n        require(nonceAfter == nonceBefore + 1, \\\"SafeERC20: permit did not succeed\\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20Upgradeable token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x220c4a5af915e656be2aaa85ca57505d102418e476b1e2ef6c62e0c6ac143871\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/StorageSlot.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._\\n */\\nlibrary StorageSlotUpgradeable {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x09864aea84f01e39313375b5610c73a3c1c68abbdc51e5ccdd25ff977fdadf9a\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./math/MathUpgradeable.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary StringsUpgradeable {\\n    bytes16 private constant _SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = MathUpgradeable.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, MathUpgradeable.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n}\\n\",\"keccak256\":\"0x6b9a5d35b744b25529a2856a8093e7c03fb35a34b1c4fb5499e560f8ade140da\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165Upgradeable.sol\\\";\\nimport \\\"../../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165Upgradeable is Initializable, IERC165Upgradeable {\\n    function __ERC165_init() internal onlyInitializing {\\n    }\\n\\n    function __ERC165_init_unchained() internal onlyInitializing {\\n    }\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165Upgradeable).interfaceId;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165Upgradeable {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary MathUpgradeable {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator\\n    ) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1);\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator,\\n        Rounding rounding\\n    ) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10**64) {\\n                value /= 10**64;\\n                result += 64;\\n            }\\n            if (value >= 10**32) {\\n                value /= 10**32;\\n                result += 32;\\n            }\\n            if (value >= 10**16) {\\n                value /= 10**16;\\n                result += 16;\\n            }\\n            if (value >= 10**8) {\\n                value /= 10**8;\\n                result += 8;\\n            }\\n            if (value >= 10**4) {\\n                value /= 10**4;\\n                result += 4;\\n            }\\n            if (value >= 10**2) {\\n                value /= 10**2;\\n                result += 2;\\n            }\\n            if (value >= 10**1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xc1bd5b53319c68f84e3becd75694d941e8f4be94049903232cd8bc7c535aaa5a\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/structs/EnumerableSet.sol)\\n// This file was procedurally generated from scripts/generate/templates/EnumerableSet.js.\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for managing\\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\\n * types.\\n *\\n * Sets have the following properties:\\n *\\n * - Elements are added, removed, and checked for existence in constant time\\n * (O(1)).\\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\\n *\\n * ```\\n * contract Example {\\n *     // Add the library methods\\n *     using EnumerableSet for EnumerableSet.AddressSet;\\n *\\n *     // Declare a set state variable\\n *     EnumerableSet.AddressSet private mySet;\\n * }\\n * ```\\n *\\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\\n * and `uint256` (`UintSet`) are supported.\\n *\\n * [WARNING]\\n * ====\\n * Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\\n * unusable.\\n * See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\\n *\\n * In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\\n * array of EnumerableSet.\\n * ====\\n */\\nlibrary EnumerableSetUpgradeable {\\n    // To implement this library for multiple types with as little code\\n    // repetition as possible, we write it in terms of a generic Set type with\\n    // bytes32 values.\\n    // The Set implementation uses private functions, and user-facing\\n    // implementations (such as AddressSet) are just wrappers around the\\n    // underlying Set.\\n    // This means that we can only create new EnumerableSets for types that fit\\n    // in bytes32.\\n\\n    struct Set {\\n        // Storage of set values\\n        bytes32[] _values;\\n        // Position of the value in the `values` array, plus 1 because index 0\\n        // means a value is not in the set.\\n        mapping(bytes32 => uint256) _indexes;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function _add(Set storage set, bytes32 value) private returns (bool) {\\n        if (!_contains(set, value)) {\\n            set._values.push(value);\\n            // The value is stored at length-1, but we add 1 to all indexes\\n            // and use 0 as a sentinel value\\n            set._indexes[value] = set._values.length;\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\\n        // We read and store the value's index to prevent multiple reads from the same storage slot\\n        uint256 valueIndex = set._indexes[value];\\n\\n        if (valueIndex != 0) {\\n            // Equivalent to contains(set, value)\\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\\n            // This modifies the order of the array, as noted in {at}.\\n\\n            uint256 toDeleteIndex = valueIndex - 1;\\n            uint256 lastIndex = set._values.length - 1;\\n\\n            if (lastIndex != toDeleteIndex) {\\n                bytes32 lastValue = set._values[lastIndex];\\n\\n                // Move the last value to the index where the value to delete is\\n                set._values[toDeleteIndex] = lastValue;\\n                // Update the index for the moved value\\n                set._indexes[lastValue] = valueIndex; // Replace lastValue's index to valueIndex\\n            }\\n\\n            // Delete the slot where the moved value was stored\\n            set._values.pop();\\n\\n            // Delete the index for the deleted slot\\n            delete set._indexes[value];\\n\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\\n        return set._indexes[value] != 0;\\n    }\\n\\n    /**\\n     * @dev Returns the number of values on the set. O(1).\\n     */\\n    function _length(Set storage set) private view returns (uint256) {\\n        return set._values.length;\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\\n        return set._values[index];\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function _values(Set storage set) private view returns (bytes32[] memory) {\\n        return set._values;\\n    }\\n\\n    // Bytes32Set\\n\\n    struct Bytes32Set {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\\n        return _add(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\\n        return _remove(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\\n        return _contains(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(Bytes32Set storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\\n        return _at(set._inner, index);\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\\n        bytes32[] memory store = _values(set._inner);\\n        bytes32[] memory result;\\n\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            result := store\\n        }\\n\\n        return result;\\n    }\\n\\n    // AddressSet\\n\\n    struct AddressSet {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(AddressSet storage set, address value) internal returns (bool) {\\n        return _add(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(AddressSet storage set, address value) internal returns (bool) {\\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(AddressSet storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\\n        return address(uint160(uint256(_at(set._inner, index))));\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function values(AddressSet storage set) internal view returns (address[] memory) {\\n        bytes32[] memory store = _values(set._inner);\\n        address[] memory result;\\n\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            result := store\\n        }\\n\\n        return result;\\n    }\\n\\n    // UintSet\\n\\n    struct UintSet {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\\n        return _add(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\\n        return _remove(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\\n        return _contains(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(UintSet storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\\n        return uint256(_at(set._inner, index));\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\\n        bytes32[] memory store = _values(set._inner);\\n        uint256[] memory result;\\n\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            result := store\\n        }\\n\\n        return result;\\n    }\\n}\\n\",\"keccak256\":\"0x4807db844a856813048b5af81a764fdd25a0ae8876a3132593e8d21ddc6b607c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822Proxiable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (proxy/ERC1967/ERC1967Proxy.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../Proxy.sol\\\";\\nimport \\\"./ERC1967Upgrade.sol\\\";\\n\\n/**\\n * @dev This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an\\n * implementation address that can be changed. This address is stored in storage in the location specified by\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the\\n * implementation behind the proxy.\\n */\\ncontract ERC1967Proxy is Proxy, ERC1967Upgrade {\\n    /**\\n     * @dev Initializes the upgradeable proxy with an initial implementation specified by `_logic`.\\n     *\\n     * If `_data` is nonempty, it's used as data in a delegate call to `_logic`. This will typically be an encoded\\n     * function call, and allows initializing the storage of the proxy like a Solidity constructor.\\n     */\\n    constructor(address _logic, bytes memory _data) payable {\\n        _upgradeToAndCall(_logic, _data, false);\\n    }\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function _implementation() internal view virtual override returns (address impl) {\\n        return ERC1967Upgrade._getImplementation();\\n    }\\n}\\n\",\"keccak256\":\"0xa2b22da3032e50b55f95ec1d13336102d675f341167aa76db571ef7f8bb7975d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (proxy/ERC1967/ERC1967Upgrade.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../beacon/IBeacon.sol\\\";\\nimport \\\"../../interfaces/draft-IERC1822.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/StorageSlot.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n *\\n * _Available since v4.1._\\n *\\n * @custom:oz-upgrades-unsafe-allow delegatecall\\n */\\nabstract contract ERC1967Upgrade {\\n    // This is the keccak-256 hash of \\\"eip1967.proxy.rollback\\\" subtracted by 1\\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function _getImplementation() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n        StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeTo(address newImplementation) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCall(\\n        address newImplementation,\\n        bytes memory data,\\n        bool forceCall\\n    ) internal {\\n        _upgradeTo(newImplementation);\\n        if (data.length > 0 || forceCall) {\\n            Address.functionDelegateCall(newImplementation, data);\\n        }\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCallUUPS(\\n        address newImplementation,\\n        bytes memory data,\\n        bool forceCall\\n    ) internal {\\n        // Upgrades from old implementations will perform a rollback test. This test requires the new\\n        // implementation to upgrade back to the old, non-ERC1822 compliant, implementation. Removing\\n        // this special case will break upgrade paths from old UUPS implementation to new ones.\\n        if (StorageSlot.getBooleanSlot(_ROLLBACK_SLOT).value) {\\n            _setImplementation(newImplementation);\\n        } else {\\n            try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\\n                require(slot == _IMPLEMENTATION_SLOT, \\\"ERC1967Upgrade: unsupported proxiableUUID\\\");\\n            } catch {\\n                revert(\\\"ERC1967Upgrade: new implementation is not UUPS\\\");\\n            }\\n            _upgradeToAndCall(newImplementation, data, forceCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Returns the current admin.\\n     */\\n    function _getAdmin() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(_ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        require(newAdmin != address(0), \\\"ERC1967: new admin is the zero address\\\");\\n        StorageSlot.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {AdminChanged} event.\\n     */\\n    function _changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(_getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\\n     */\\n    bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Emitted when the beacon is upgraded.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function _getBeacon() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(_BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        require(Address.isContract(newBeacon), \\\"ERC1967: new beacon is not a contract\\\");\\n        require(\\n            Address.isContract(IBeacon(newBeacon).implementation()),\\n            \\\"ERC1967: beacon implementation is not a contract\\\"\\n        );\\n        StorageSlot.getAddressSlot(_BEACON_SLOT).value = newBeacon;\\n    }\\n\\n    /**\\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\\n     *\\n     * Emits a {BeaconUpgraded} event.\\n     */\\n    function _upgradeBeaconToAndCall(\\n        address newBeacon,\\n        bytes memory data,\\n        bool forceCall\\n    ) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n        if (data.length > 0 || forceCall) {\\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xabf3f59bc0e5423eae45e459dbe92e7052c6983628d39008590edc852a62f94a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (proxy/Proxy.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\\n * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\\n * be specified by overriding the virtual {_implementation} function.\\n *\\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\\n * different contract through the {_delegate} function.\\n *\\n * The success and return data of the delegated call will be returned back to the caller of the proxy.\\n */\\nabstract contract Proxy {\\n    /**\\n     * @dev Delegates the current call to `implementation`.\\n     *\\n     * This function does not return to its internal call site, it will return directly to the external caller.\\n     */\\n    function _delegate(address implementation) internal virtual {\\n        assembly {\\n            // Copy msg.data. We take full control of memory in this inline assembly\\n            // block because it will not return to Solidity code. We overwrite the\\n            // Solidity scratch pad at memory position 0.\\n            calldatacopy(0, 0, calldatasize())\\n\\n            // Call the implementation.\\n            // out and outsize are 0 because we don't know the size yet.\\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\\n\\n            // Copy the returned data.\\n            returndatacopy(0, 0, returndatasize())\\n\\n            switch result\\n            // delegatecall returns 0 on error.\\n            case 0 {\\n                revert(0, returndatasize())\\n            }\\n            default {\\n                return(0, returndatasize())\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev This is a virtual function that should be overridden so it returns the address to which the fallback function\\n     * and {_fallback} should delegate.\\n     */\\n    function _implementation() internal view virtual returns (address);\\n\\n    /**\\n     * @dev Delegates the current call to the address returned by `_implementation()`.\\n     *\\n     * This function does not return to its internal call site, it will return directly to the external caller.\\n     */\\n    function _fallback() internal virtual {\\n        _beforeFallback();\\n        _delegate(_implementation());\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\\n     * function in the contract matches the call data.\\n     */\\n    fallback() external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if call data\\n     * is empty.\\n     */\\n    receive() external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Hook that is called before falling back to the implementation. Can happen as part of a manual `_fallback`\\n     * call, or as part of the Solidity `fallback` or `receive` functions.\\n     *\\n     * If overridden should call `super._beforeFallback()`.\\n     */\\n    function _beforeFallback() internal virtual {}\\n}\\n\",\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {BeaconProxy} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./extensions/IERC20Metadata.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * The default value of {decimals} is 18. To select a different value for\\n     * {decimals} you should overload it.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\\n     * overridden;\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) public virtual override returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, amount);\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        uint256 currentAllowance = allowance(owner, spender);\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, amount);\\n\\n        uint256 fromBalance = _balances[from];\\n        require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[from] = fromBalance - amount;\\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\\n            // decrementing then incrementing.\\n            _balances[to] += amount;\\n        }\\n\\n        emit Transfer(from, to, amount);\\n\\n        _afterTokenTransfer(from, to, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        unchecked {\\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\\n            _balances[account] += amount;\\n        }\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\\n            _totalSupply -= amount;\\n        }\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\n     *\\n     * Does not update the allowance amount in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Might emit an {Approval} event.\\n     */\\n    function _spendAllowance(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - amount);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n}\\n\",\"keccak256\":\"0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/extensions/ERC20Burnable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../ERC20.sol\\\";\\nimport \\\"../../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\\n * tokens and those that they have an allowance for, in a way that can be\\n * recognized off-chain (via event analysis).\\n */\\nabstract contract ERC20Burnable is Context, ERC20 {\\n    /**\\n     * @dev Destroys `amount` tokens from the caller.\\n     *\\n     * See {ERC20-_burn}.\\n     */\\n    function burn(uint256 amount) public virtual {\\n        _burn(_msgSender(), amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, deducting from the caller's\\n     * allowance.\\n     *\\n     * See {ERC20-_burn} and {ERC20-allowance}.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have allowance for ``accounts``'s tokens of at least\\n     * `amount`.\\n     */\\n    function burnFrom(address account, uint256 amount) public virtual {\\n        _spendAllowance(account, _msgSender(), amount);\\n        _burn(account, amount);\\n    }\\n}\\n\",\"keccak256\":\"0x0d19410453cda55960a818e02bd7c18952a5c8fe7a3036e81f0d599f34487a7b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/draft-IERC20Permit.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n */\\ninterface IERC20Permit {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\\n     * given ``owner``'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../extensions/draft-IERC20Permit.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    function safePermit(\\n        IERC20Permit token,\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal {\\n        uint256 nonceBefore = token.nonces(owner);\\n        token.permit(owner, spender, value, deadline, v, r, s);\\n        uint256 nonceAfter = token.nonces(owner);\\n        require(nonceAfter == nonceBefore + 1, \\\"SafeERC20: permit did not succeed\\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/StorageSlot.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xd5c50c54bf02740ebd122ff06832546cb5fa84486d52695a9ccfd11666e0c81d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator\\n    ) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1);\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator,\\n        Rounding rounding\\n    ) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10**64) {\\n                value /= 10**64;\\n                result += 64;\\n            }\\n            if (value >= 10**32) {\\n                value /= 10**32;\\n                result += 32;\\n            }\\n            if (value >= 10**16) {\\n                value /= 10**16;\\n                result += 16;\\n            }\\n            if (value >= 10**8) {\\n                value /= 10**8;\\n                result += 8;\\n            }\\n            if (value >= 10**4) {\\n                value /= 10**4;\\n                result += 4;\\n            }\\n            if (value >= 10**2) {\\n                value /= 10**2;\\n                result += 2;\\n            }\\n            if (value >= 10**1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\"},\"contracts/collateral/collateralBag/MocCAWrapper.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.16;\\n\\nimport { MocCARC20, IERC20, SafeERC20 } from \\\"../rc20/MocCARC20.sol\\\";\\nimport { IMocRC20, IERC20Upgradeable } from \\\"../../interfaces/IMocRC20.sol\\\";\\nimport { IPriceProvider } from \\\"../../interfaces/IPriceProvider.sol\\\";\\nimport { MocUpgradable } from \\\"../../governance/MocUpgradable.sol\\\";\\nimport { Math } from \\\"@openzeppelin/contracts/utils/math/Math.sol\\\";\\n/* solhint-disable-next-line max-line-length */\\nimport { ReentrancyGuardUpgradeable } from \\\"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\\\";\\nimport { SafeERC20Upgradeable } from \\\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\\\";\\n\\n/**\\n * @title MocCAWrapper: Moc Collateral Asset Wrapper\\n * @notice Wraps a collection of ERC20 stablecoins to a token which is used as Collateral Asset by\\n *  Moc Collateral Asset Bag protocol implementation\\n */\\ncontract MocCAWrapper is MocUpgradable, ReentrancyGuardUpgradeable {\\n    // ------- Events -------\\n    event TCMintedWithWrapper(\\n        address asset_,\\n        address indexed sender_,\\n        address indexed recipient_,\\n        uint256 qTC_,\\n        uint256 qAsset_\\n    );\\n    event TCRedeemedWithWrapper(\\n        address asset_,\\n        address indexed sender_,\\n        address indexed recipient_,\\n        uint256 qTC_,\\n        uint256 qAsset_\\n    );\\n    event TPMintedWithWrapper(\\n        address asset_,\\n        uint256 indexed i_,\\n        address indexed sender_,\\n        address indexed recipient_,\\n        uint256 qTP_,\\n        uint256 qAsset_\\n    );\\n    event TPRedeemedWithWrapper(\\n        address asset_,\\n        uint256 indexed i_,\\n        address indexed sender_,\\n        address indexed recipient_,\\n        uint256 qTP_,\\n        uint256 qAsset_\\n    );\\n    event TCandTPMintedWithWrapper(\\n        address asset_,\\n        uint256 indexed i_,\\n        address indexed sender_,\\n        address indexed recipient_,\\n        uint256 qTC_,\\n        uint256 qTP_,\\n        uint256 qAsset_\\n    );\\n    event TCandTPRedeemedWithWrapper(\\n        address asset_,\\n        uint256 indexed i_,\\n        address indexed sender_,\\n        address indexed recipient_,\\n        uint256 qTC_,\\n        uint256 qTP_,\\n        uint256 qAsset_\\n    );\\n    event TPSwappedForTPWithWrapper(\\n        address asset_,\\n        uint256 indexed iFrom_,\\n        uint256 iTo_,\\n        address indexed sender_,\\n        address indexed recipient_,\\n        uint256 qTPfrom_,\\n        uint256 qTCto_,\\n        uint256 qAsset_\\n    );\\n    event TPSwappedForTCWithWrapper(\\n        address asset_,\\n        uint256 indexed i_,\\n        address indexed sender_,\\n        address indexed recipient_,\\n        uint256 qTP_,\\n        uint256 qTC_,\\n        uint256 qAsset_\\n    );\\n    event TCSwappedForTPWithWrapper(\\n        address asset_,\\n        uint256 indexed i_,\\n        address indexed sender_,\\n        address indexed recipient_,\\n        uint256 qTC_,\\n        uint256 qTP_,\\n        uint256 qAsset_\\n    );\\n    event AssetModified(address indexed assetAddress_, address priceProviderAddress);\\n\\n    // ------- Custom Errors -------\\n    error MissingProviderPrice(address priceProviderAddress_);\\n    error InsufficientQacSent(uint256 qACsent_, uint256 qACNeeded_);\\n    error QacBelowMinimumRequired(uint256 qACmin_, uint256 qACtoRedeem_);\\n    error InsufficientFeeTokenSent(uint256 qFeeTokenSent_, uint256 qFeeTokenNeeded_);\\n\\n    // ------- Structs -------\\n    struct AssetIndex {\\n        // asset index\\n        uint256 index;\\n        // true if asset token exists\\n        bool exists;\\n        // how many decimals differs from 18. Eg: if decimals are 6, shift is 12\\n        int8 shift;\\n    }\\n\\n    // ------- Storage -------\\n\\n    // Wrapped Collateral Asset token\\n    IMocRC20 internal wcaToken;\\n    // Moc Core protocol\\n    MocCARC20 internal mocCore;\\n    // array of valid assets in the bag\\n    IERC20[] internal assets;\\n    // asset -> priceProvider\\n    mapping(address => IPriceProvider) internal priceProviderMap;\\n    // asset indexes\\n    mapping(address => AssetIndex) internal assetIndex;\\n\\n    // ------- Modifiers -------\\n    modifier validAsset(address assetAddress_) {\\n        if (!_isValidAsset(assetAddress_)) revert InvalidAddress();\\n        _;\\n    }\\n\\n    /// @custom:oz-upgrades-unsafe-allow constructor\\n    constructor() {\\n        _disableInitializers();\\n    }\\n\\n    // ------- Initializer -------\\n    /**\\n     * @notice contract initializer\\n     * @param governorAddress_ The address that will define when a change contract is authorized\\n     * @param pauserAddress_ The address that is authorized to pause this contract\\n     * @param mocCoreAddress_ Moc Core contract address\\n     * @param wcaTokenAddress_ Wrapped Collateral Asset Token contract address\\n     */\\n    function initialize(\\n        address governorAddress_,\\n        address pauserAddress_,\\n        address mocCoreAddress_,\\n        address wcaTokenAddress_\\n    ) external initializer {\\n        __MocUpgradable_init(governorAddress_, pauserAddress_);\\n        mocCore = MocCARC20(mocCoreAddress_);\\n        wcaToken = IMocRC20(wcaTokenAddress_);\\n        // infinite allowance to Moc Core\\n        SafeERC20Upgradeable.safeApprove(wcaToken, mocCoreAddress_, UINT256_MAX);\\n    }\\n\\n    // ------- Internal Functions -------\\n\\n    /**\\n     * @notice check if the asset is whitelisted\\n     * @param assetAddress_ Asset contract address\\n     * @return true if it is valid\\n     */\\n    function _isValidAsset(address assetAddress_) internal view returns (bool) {\\n        return assetIndex[assetAddress_].exists;\\n    }\\n\\n    /**\\n     * @notice get Asset price\\n     * @param assetAddress_ Asset contract address\\n     * @return price [PREC]\\n     */\\n    function _getAssetPrice(address assetAddress_) internal view returns (uint256) {\\n        (bytes32 price, bool has) = priceProviderMap[assetAddress_].peek();\\n        if (!has) revert MissingProviderPrice(address(priceProviderMap[assetAddress_]));\\n        return uint256(price);\\n    }\\n\\n    /**\\n     * @notice given an amount of Asset, calculates the equivalent value in wrapped tokens\\n     * @param assetAddress_ Asset contract address\\n     * @param assetAmount_ amount of Asset to wrap\\n     * @return wcaTokenAmount amount of wcaToken [N]\\n     */\\n    function _convertAssetToToken(\\n        address assetAddress_,\\n        uint256 assetAmount_\\n    ) internal view returns (uint256 wcaTokenAmount) {\\n        // get the wrapped token price = totalCurrency / wcaTokenTotalSupply\\n        // [PREC]\\n        uint256 wcaTokenPrice = getTokenPrice();\\n        // calculate how much currency will increment the pool\\n        // [PREC] = [N] * [PREC]\\n        uint256 currencyToAdd = assetAmount_ * _getAssetPrice(assetAddress_);\\n        // divide by wrapped token price to get the equivalent amount of tokens\\n        // [N] = [PREC] / [PREC]\\n        return currencyToAdd / wcaTokenPrice;\\n    }\\n\\n    /**\\n     * @notice given an amount of wrapped tokens, calculates the equivalent value in the given asset\\n     * @param assetAddress_ Asset contract address\\n     * @param wcaTokenAmount_ amount of wrapped tokens\\n     * @return assetAmount amount of Asset needed to wrap or unwrap the desired amount of wcaToken [N]\\n     */\\n    function _convertTokenToAsset(\\n        address assetAddress_,\\n        uint256 wcaTokenAmount_\\n    ) internal view returns (uint256 assetAmount, uint256 wcaTokenAmount) {\\n        // get the wrapped token price = totalCurrency / wcaTokenTotalSupply\\n        // [PREC]\\n        uint256 wcaTokenPrice = getTokenPrice();\\n        // multiply by wcaTokenAmount_ to get how many currency we need\\n        // [PREC] = [PREC] * [N]\\n        uint256 currencyNeeded = wcaTokenPrice * wcaTokenAmount_;\\n        // divide currencyNeeded by asset price to get how many assets we need\\n        // [N] = [PREC] / [PREC]\\n        assetAmount = currencyNeeded / _getAssetPrice(assetAddress_);\\n        // truncate wcaToken amount to align decimal places and avoid rounding error\\n        wcaTokenAmount_ = _truncate(assetAddress_, wcaTokenAmount_);\\n        return (assetAmount, wcaTokenAmount_);\\n    }\\n\\n    /**\\n     * @notice truncate amount of decimals corresponding to the Asset shift value\\n     * @dev this is necessary to avoid rounding errors when dealing with Assets with decimal places less than 18\\n     *  Eg: Asset decimals = 6; value = 10999999 => truncated = 10999900\\n     * @param assetAddress_ Asset contract address\\n     * @param value_ number to truncate\\n     * @return truncated value truncated\\n     */\\n    function _truncate(address assetAddress_, uint256 value_) internal view returns (uint256 truncated) {\\n        int8 shift = assetIndex[assetAddress_].shift;\\n        truncated = value_;\\n        if (shift > 0) {\\n            // slither-disable-next-line divide-before-multiply\\n            truncated /= 10 ** uint8(shift);\\n            truncated *= 10 ** uint8(shift);\\n        }\\n        return truncated;\\n    }\\n\\n    /**\\n     * @notice transfer Fee Tokens from the `sender_` to this contract\\n     * @param sender_ address who executes the operation\\n     * @return feeToken Fee Token contract\\n     * @return qFeeTokenAvailable minimum between the `sender_` Fee Token balance and allowance\\n     */\\n    function _transferFeeTokenFromSender(\\n        address sender_\\n    ) internal returns (IERC20 feeToken, uint256 qFeeTokenAvailable) {\\n        feeToken = mocCore.feeToken();\\n        qFeeTokenAvailable = Math.min(feeToken.allowance(sender_, address(this)), feeToken.balanceOf(sender_));\\n        if (qFeeTokenAvailable > 0) {\\n            SafeERC20.safeTransferFrom(feeToken, sender_, address(this), qFeeTokenAvailable);\\n            SafeERC20.safeApprove(feeToken, address(mocCore), qFeeTokenAvailable);\\n        }\\n        return (feeToken, qFeeTokenAvailable);\\n    }\\n\\n    /**\\n     * @notice transfer Fee Tokens from this contract to the `sender_`\\n     * @param feeToken_ Fee Token contract\\n     * @param sender_ address who executes the operation\\n     * @param qFeeTokenAvailable_ amount of Fee Token that the `sender_` has transferred to spend\\n     * @param qFeeTokenSpent_ amount of Fee Token spent by MocCore as fee payment method\\n     */\\n    function _transferFeeTokenToSender(\\n        IERC20 feeToken_,\\n        address sender_,\\n        uint256 qFeeTokenAvailable_,\\n        uint256 qFeeTokenSpent_\\n    ) internal {\\n        uint256 qFeeTokenChange = qFeeTokenAvailable_ - qFeeTokenSpent_;\\n        if (qFeeTokenChange > 0) {\\n            SafeERC20.safeTransfer(feeToken_, sender_, qFeeTokenChange);\\n            // if doesn't use all, we have to reset the allowance\\n            SafeERC20.safeApprove(feeToken_, address(mocCore), 0);\\n        }\\n    }\\n\\n    struct MintTCParams {\\n        address assetAddress;\\n        uint256 qTC;\\n        uint256 qAssetMax;\\n        address sender;\\n        address recipient;\\n        address vendor;\\n    }\\n\\n    /**\\n     * @notice caller sends Asset and recipient receives Collateral Token\\n        Requires prior sender approval of Asset to this contract \\n     * @param params_ mint TC function params\\n     * @dev\\n     *      assetAddress_ Asset contract address\\n     *      qTC_ amount of Collateral Token to mint\\n     *      qAssetMax_ maximum amount of Asset that can be spent\\n     *      sender_ address who sends the Asset\\n     *      recipient_ address who receives the Collateral Token\\n     *      vendor_ address who receives a markup. If its address(0) no markup is applied\\n     */\\n\\n    function _mintTCto(MintTCParams memory params_) internal validAsset(params_.assetAddress) {\\n        uint256 wcaMinted = _wrapTo(params_.assetAddress, params_.qAssetMax, params_.sender, address(this));\\n        // if sender has Fee Token balance and allowance, we transfer them to be used as fee payment method\\n        (IERC20 feeToken, uint256 qFeeTokenAvailable) = _transferFeeTokenFromSender(params_.sender);\\n        // mint TC to the recipient\\n        (uint256 wcaUsed, uint256 qFeeTokenUsed) = mocCore.mintTCtoViaVendor(\\n            params_.qTC,\\n            wcaMinted,\\n            params_.recipient,\\n            params_.vendor\\n        );\\n        uint256 wcaUnused = wcaMinted - wcaUsed;\\n        // send back Asset unused to the sender\\n        // we pass '0' to qAssetMin parameter because we check when minting how much is the maximum\\n        // that can be spent\\n        uint256 assetUnused = _unwrapTo(params_.assetAddress, wcaUnused, 0, address(this), params_.sender);\\n        // transfer back the unused Fee Token\\n        _transferFeeTokenToSender(feeToken, params_.sender, qFeeTokenAvailable, qFeeTokenUsed);\\n        emit TCMintedWithWrapper(\\n            params_.assetAddress,\\n            params_.sender,\\n            params_.recipient,\\n            params_.qTC,\\n            params_.qAssetMax - assetUnused\\n        );\\n    }\\n\\n    struct RedeemTCParams {\\n        address assetAddress;\\n        uint256 qTC;\\n        uint256 qAssetMin;\\n        address sender;\\n        address recipient;\\n        address vendor;\\n    }\\n\\n    /**\\n     * @notice caller sends Collateral Token and recipient receives Assets\\n     *  Requires prior sender approval of Collateral Token to this contract\\n     * @param params_ redeem TC function params\\n     * @dev\\n     *      assetAddress_ Asset contract address\\n     *      qTC_ amount of Collateral Token to redeem\\n     *      qAssetMin_ minimum expected Asset amount to be received\\n     *      sender_ address who sends the Collateral Token\\n     *      recipient_ address who receives the Asset\\n     *      vendor_ address who receives a markup. If its address(0) no markup is applied\\n     */\\n\\n    function _redeemTCto(RedeemTCParams memory params_) internal validAsset(params_.assetAddress) {\\n        // get Collateral Token contract address\\n        IERC20Upgradeable tcToken = mocCore.tcToken();\\n        // transfer Collateral Token from sender to this address\\n        SafeERC20Upgradeable.safeTransferFrom(tcToken, params_.sender, address(this), params_.qTC);\\n        // if sender has Fee Token balance and allowance, we transfer them to be used as fee payment method\\n        (IERC20 feeToken, uint256 qFeeTokenAvailable) = _transferFeeTokenFromSender(params_.sender);\\n        // redeem Collateral Token in exchange of Wrapped Collateral Asset Token\\n        // we pass '0' to qACmin parameter to do not revert by qAC below minimum since we are\\n        // checking it after with qAssetMin\\n        (uint256 wcaTokenAmountRedeemed, uint256 qFeeTokenUsed) = mocCore.redeemTCViaVendor(\\n            params_.qTC,\\n            0,\\n            params_.vendor\\n        );\\n        // send Asset to the recipient\\n        uint256 assetRedeemed = _unwrapTo(\\n            params_.assetAddress,\\n            wcaTokenAmountRedeemed,\\n            params_.qAssetMin,\\n            address(this),\\n            params_.recipient\\n        );\\n        // transfer back the unused Fee Token\\n        _transferFeeTokenToSender(feeToken, params_.sender, qFeeTokenAvailable, qFeeTokenUsed);\\n        emit TCRedeemedWithWrapper(params_.assetAddress, params_.sender, params_.recipient, params_.qTC, assetRedeemed);\\n    }\\n\\n    struct MintTPParams {\\n        address assetAddress;\\n        uint256 i;\\n        uint256 qTP;\\n        uint256 qAssetMax;\\n        address sender;\\n        address recipient;\\n        address vendor;\\n    }\\n\\n    /**\\n     * @notice caller sends Asset and recipient receives Collateral Token\\n     *  Requires prior sender approval of Asset to this contract\\n     * @param params_ mint TP function params\\n     * @dev\\n     *      assetAddress_ Asset contract address\\n     *      i_ Pegged Token index\\n     *      qTP_ amount of Collateral Token to mint\\n     *      qAssetMax_ maximum amount of Asset that can be spent\\n     *      sender_ address who sends the Asset\\n     *      recipient_ address who receives the Collateral Token\\n     *      vendor_ address who receives a markup. If its address(0) no markup is applied\\n     */\\n\\n    function _mintTPto(MintTPParams memory params_) internal validAsset(params_.assetAddress) {\\n        uint256 wcaMinted = _wrapTo(params_.assetAddress, params_.qAssetMax, params_.sender, address(this));\\n        // if sender has Fee Token balance and allowance, we transfer them to be used as fee payment method\\n        (IERC20 feeToken, uint256 qFeeTokenAvailable) = _transferFeeTokenFromSender(params_.sender);\\n        // mint TP to the recipient\\n        (uint256 wcaUsed, uint256 qFeeTokenUsed) = mocCore.mintTPtoViaVendor(\\n            params_.i,\\n            params_.qTP,\\n            wcaMinted,\\n            params_.recipient,\\n            params_.vendor\\n        );\\n        uint256 wcaUnused = wcaMinted - wcaUsed;\\n        // send back Asset unused to the sender\\n        // we pass '0' to qAssetMin parameter because we check when minting how much is the maximum\\n        // that can be spent\\n        uint256 assetUnused = _unwrapTo(params_.assetAddress, wcaUnused, 0, address(this), params_.sender);\\n        // transfer back the unused Fee Token\\n        _transferFeeTokenToSender(feeToken, params_.sender, qFeeTokenAvailable, qFeeTokenUsed);\\n        emit TPMintedWithWrapper(\\n            params_.assetAddress,\\n            params_.i,\\n            params_.sender,\\n            params_.recipient,\\n            params_.qTP,\\n            params_.qAssetMax - assetUnused\\n        );\\n    }\\n\\n    struct RedeemTPParams {\\n        address assetAddress;\\n        uint256 i;\\n        uint256 qTP;\\n        uint256 qAssetMin;\\n        address sender;\\n        address recipient;\\n        address vendor;\\n        bool isLiqRedeem;\\n    }\\n\\n    /**\\n     * @notice caller sends Pegged Token and recipient receives Assets\\n     *  Requires prior sender approval of Pegged Token to this contract\\n     * @param params_ redeem TP function params\\n     * @dev\\n     *      assetAddress_ Asset contract address\\n     *      i_ Pegged Token index\\n     *      qTP_ amount of Pegged Token to redeem\\n     *      qAssetMin_ minimum expected Asset amount to be received\\n     *      sender_ address who sends the Pegged Token\\n     *      recipient_ address who receives the Asset\\n     *      vendor_ address who receives a markup. If its address(0) no markup is applied\\n     */\\n\\n    function _redeemTPto(RedeemTPParams memory params_) internal validAsset(params_.assetAddress) {\\n        // get Pegged Token contract address\\n        IERC20Upgradeable tpToken = mocCore.tpTokens(params_.i);\\n        // When liquidating, we extract all the user's balance\\n        if (params_.isLiqRedeem) params_.qTP = tpToken.balanceOf(params_.sender);\\n        // transfer Pegged Token from sender to this address\\n        SafeERC20Upgradeable.safeTransferFrom(tpToken, params_.sender, address(this), params_.qTP);\\n        // if sender has Fee Token balance and allowance, we transfer them to be used as fee payment method\\n        (IERC20 feeToken, uint256 qFeeTokenAvailable) = _transferFeeTokenFromSender(params_.sender);\\n        // redeem Pegged Token in exchange of Wrapped Collateral Asset Token\\n        // we pass '0' to qACmin parameter to do not revert by qAC below minimum since we are\\n        // checking it after with qAssetMin\\n        uint256 wcaTokenAmountRedeemed;\\n        uint256 qFeeTokenUsed;\\n        if (params_.isLiqRedeem) wcaTokenAmountRedeemed = mocCore.liqRedeemTP(params_.i);\\n        else\\n            (wcaTokenAmountRedeemed, qFeeTokenUsed) = mocCore.redeemTPViaVendor(\\n                params_.i,\\n                params_.qTP,\\n                0,\\n                params_.vendor\\n            );\\n        // send Asset to the recipient\\n        uint256 assetRedeemed = _unwrapTo(\\n            params_.assetAddress,\\n            wcaTokenAmountRedeemed,\\n            params_.qAssetMin,\\n            address(this),\\n            params_.recipient\\n        );\\n        // transfer back the unused Fee Token\\n        _transferFeeTokenToSender(feeToken, params_.sender, qFeeTokenAvailable, qFeeTokenUsed);\\n        emit TPRedeemedWithWrapper(\\n            params_.assetAddress,\\n            params_.i,\\n            params_.sender,\\n            params_.recipient,\\n            params_.qTP,\\n            assetRedeemed\\n        );\\n    }\\n\\n    struct MintTCandTPParams {\\n        address assetAddress;\\n        uint256 i;\\n        uint256 qTP;\\n        uint256 qAssetMax;\\n        address sender;\\n        address recipient;\\n        address vendor;\\n    }\\n\\n    /**\\n     * @notice caller sends Asset and recipient receives Collateral Token and Pegged Token\\n     *  Requires prior sender approval of Collateral Asset to this contract\\n     *  This operation is done without checking coverage\\n     *  Collateral Token and Pegged Token are minted in equivalent proportions so that its price\\n     *  and global coverage are not modified.\\n     *  Reverts if qAC sent are insufficient.\\n     * @param params_ mint TC and TP function params\\n     * @dev\\n     *      assetAddress_ Asset contract address\\n     *      i_ Pegged Token index\\n     *      qTP_ amount of Pegged Token to mint\\n     *      qAssetMax_ maximum amount of Asset that can be spent\\n     *      recipient_ address who receives the Collateral Token and Pegged Token\\n     *      vendor_ address who receives a markup. If its address(0) no markup is applied\\n     */\\n\\n    function _mintTCandTPto(MintTCandTPParams memory params_) internal validAsset(params_.assetAddress) {\\n        uint256 wcaMinted = _wrapTo(params_.assetAddress, params_.qAssetMax, params_.sender, address(this));\\n        // if sender has Fee Token balance and allowance, we transfer them to be used as fee payment method\\n        (IERC20 feeToken, uint256 qFeeTokenAvailable) = _transferFeeTokenFromSender(params_.sender);\\n        // mint TC and TP to the recipient\\n        (uint256 wcaUsed, uint256 qTCminted, uint256 qFeeTokenUsed) = mocCore.mintTCandTPtoViaVendor(\\n            params_.i,\\n            params_.qTP,\\n            wcaMinted,\\n            params_.recipient,\\n            params_.vendor\\n        );\\n        // send back Asset unused to the sender\\n        // we pass '0' to qAssetMin parameter because we check when minting how much is the maximum\\n        // that can be spent\\n        uint256 assetUnused = _unwrapTo(params_.assetAddress, wcaMinted - wcaUsed, 0, address(this), params_.sender);\\n        // transfer back the unused Fee Token\\n        _transferFeeTokenToSender(feeToken, params_.sender, qFeeTokenAvailable, qFeeTokenUsed);\\n        // inside a block to avoid stack too deep error\\n        {\\n            MintTCandTPParams memory params = params_;\\n            emit TCandTPMintedWithWrapper(\\n                params.assetAddress,\\n                params.i,\\n                params.sender,\\n                params.recipient,\\n                qTCminted,\\n                params.qTP,\\n                params.qAssetMax - assetUnused\\n            );\\n        }\\n    }\\n\\n    struct RedeemTCandTPParams {\\n        address assetAddress;\\n        uint256 i;\\n        uint256 qTC;\\n        uint256 qTP;\\n        uint256 qAssetMin;\\n        address sender;\\n        address recipient;\\n        address vendor;\\n    }\\n\\n    /**\\n     * @notice caller sends Collateral Token and Pegged Token and recipient receives Assets\\n     *  Requires prior sender approval of Collateral Token and Pegged Token to this contract\\n     *  This operation is done without checking coverage\\n     *  Collateral Token and Pegged Token are redeemed in equivalent proportions so that its price\\n     *  and global coverage are not modified.\\n     *  Reverts if qTP sent are insufficient.\\n     * @param params_ redeem TC and TP function params\\n     * @dev\\n     *      assetAddress_ Asset contract address\\n     *      i_ Pegged Token index\\n     *      qTC_ maximum amount of Collateral Token to redeem\\n     *      qTP_ maximum amount of Pegged Token to redeem\\n     *      qAssetMin_ minimum amount of Asset that expect to be received\\n     *      sender_ address who sends Collateral Token and Pegged Token\\n     *      recipient_ address who receives the Asset\\n     *      vendor_ address who receives a markup. If its address(0) no markup is applied\\n     */\\n\\n    function _redeemTCandTPto(RedeemTCandTPParams memory params_) internal validAsset(params_.assetAddress) {\\n        // get Collateral Token contract address\\n        IERC20Upgradeable tcToken = mocCore.tcToken();\\n        // get Pegged Token contract address\\n        IERC20Upgradeable tpToken = mocCore.tpTokens(params_.i);\\n        // transfer Collateral Token from sender to this address\\n        SafeERC20Upgradeable.safeTransferFrom(tcToken, params_.sender, address(this), params_.qTC);\\n        // transfer Pegged Token from sender to this address\\n        SafeERC20Upgradeable.safeTransferFrom(tpToken, params_.sender, address(this), params_.qTP);\\n        // if sender has Fee Token balance and allowance, we transfer them to be used as fee payment method\\n        (IERC20 feeToken, uint256 qFeeTokenAvailable) = _transferFeeTokenFromSender(params_.sender);\\n        // redeem Collateral Token and Pegged Token in exchange of Wrapped Collateral Asset Token\\n        // we pass '0' as qACmin parameter to avoid reverting by qAC below minimum since we are\\n        // checking it after with qAssetMin\\n        (uint256 wcaTokenAmountRedeemed, uint256 qTPRedeemed, uint256 qFeeTokenUsed) = mocCore.redeemTCandTPViaVendor(\\n            params_.i,\\n            params_.qTC,\\n            params_.qTP,\\n            0,\\n            params_.vendor\\n        );\\n        // send Asset to the recipient\\n        uint256 assetRedeemed = _unwrapTo(\\n            params_.assetAddress,\\n            wcaTokenAmountRedeemed,\\n            params_.qAssetMin,\\n            address(this),\\n            params_.recipient\\n        );\\n        // transfer unused Pegged Token to the sender\\n        SafeERC20Upgradeable.safeTransfer(tpToken, params_.sender, params_.qTP - qTPRedeemed);\\n        // transfer back the unused Fee Token\\n        _transferFeeTokenToSender(feeToken, params_.sender, qFeeTokenAvailable, qFeeTokenUsed);\\n        emit TCandTPRedeemedWithWrapper(\\n            params_.assetAddress,\\n            params_.i,\\n            params_.sender,\\n            params_.recipient,\\n            params_.qTC,\\n            qTPRedeemed,\\n            assetRedeemed\\n        );\\n    }\\n\\n    struct SwapTPforTPParams {\\n        address assetAddress;\\n        uint256 iFrom;\\n        uint256 iTo;\\n        uint256 qTP;\\n        uint256 qTPmin;\\n        uint256 qAssetMax;\\n        address sender;\\n        address recipient;\\n        address vendor;\\n    }\\n\\n    /**\\n     * @notice caller sends a Pegged Token and recipient receives another one\\n     *  Requires prior sender approval of Pegged Token and Asset to this contract\\n     * @param params_ swap TP for TP function params\\n     * @dev\\n     *      assetAddress_ Asset contract address\\n     *      iFrom_ owned Pegged Token index\\n     *      iTo_ target Pegged Token index\\n     *      qTP_ amount of owned Pegged Token to swap\\n     *      qTPmin_ minimum amount of target Pegged Token that `recipient_` expects to receive\\n     *      qAssetMax_ maximum amount of Asset that can be spent in fees\\n     *      sender_ address who sends the Pegged Token\\n     *      recipient_ address who receives the target Pegged Token\\n     *      vendor_ address who receives a markup. If its address(0) no markup is applied\\n     */\\n\\n    function _swapTPforTPto(SwapTPforTPParams memory params_) internal validAsset(params_.assetAddress) {\\n        uint256 wcaMinted = _wrapTo(params_.assetAddress, params_.qAssetMax, params_.sender, address(this));\\n        // get Pegged Token contract address\\n        IERC20Upgradeable tpTokenFrom = mocCore.tpTokens(params_.iFrom);\\n        // transfer Pegged Token from sender to this address\\n        SafeERC20Upgradeable.safeTransferFrom(tpTokenFrom, params_.sender, address(this), params_.qTP);\\n        // if sender has Fee Token balance and allowance, we transfer them to be used as fee payment method\\n        (IERC20 feeToken, uint256 qFeeTokenAvailable) = _transferFeeTokenFromSender(params_.sender);\\n        // inside a block to avoid stack too deep error\\n        {\\n            SwapTPforTPParams memory params = params_;\\n            (uint256 wcaUsed, uint256 qTPMinted, uint256 qFeeTokenUsed) = mocCore.swapTPforTPtoViaVendor(\\n                params.iFrom,\\n                params.iTo,\\n                params.qTP,\\n                params.qTPmin,\\n                wcaMinted,\\n                params.recipient,\\n                params.vendor\\n            );\\n            // send back Asset unused to the sender\\n            // we pass '0' to qAssetMin parameter because we check when minting how much is the maximum\\n            // that can be spent\\n            uint256 assetUnused = _unwrapTo(params.assetAddress, wcaMinted - wcaUsed, 0, address(this), params.sender);\\n            // transfer back the unused Fee Token\\n            _transferFeeTokenToSender(feeToken, params.sender, qFeeTokenAvailable, qFeeTokenUsed);\\n            emit TPSwappedForTPWithWrapper(\\n                params.assetAddress,\\n                params.iFrom,\\n                params.iTo,\\n                params.sender,\\n                params.recipient,\\n                params.qTP,\\n                qTPMinted,\\n                params.qAssetMax - assetUnused\\n            );\\n        }\\n    }\\n\\n    struct SwapTPforTCParams {\\n        address assetAddress;\\n        uint256 i;\\n        uint256 qTP;\\n        uint256 qTCmin;\\n        uint256 qAssetMax;\\n        address sender;\\n        address recipient;\\n        address vendor;\\n    }\\n\\n    /**\\n     * @notice caller sends a Pegged Token and recipient receives Collateral Token\\n     *  Requires prior sender approval of Pegged Token and Asset to this contract\\n     * @param params_ swap TP for TC function params\\n     * @dev\\n     *      assetAddress_ Asset contract address\\n     *      i_ owned Pegged Token index\\n     *      qTP_ amount of owned Pegged Token to swap\\n     *      qTCmin_ minimum amount of Collateral Token that `recipient_` expects to receive\\n     *      qAssetMax_ maximum amount of Asset that can be spent in fees\\n     *      sender_ address who sends the Pegged Token\\n     *      recipient_ address who receives the Collateral Token\\n     *      vendor_ address who receives a markup. If its address(0) no markup is applied\\n     */\\n\\n    function _swapTPforTCto(SwapTPforTCParams memory params_) internal validAsset(params_.assetAddress) {\\n        uint256 wcaMinted = _wrapTo(params_.assetAddress, params_.qAssetMax, params_.sender, address(this));\\n        // get Pegged Token contract address\\n        IERC20Upgradeable tpToken = mocCore.tpTokens(params_.i);\\n        // transfer Pegged Token from sender to this address\\n        SafeERC20Upgradeable.safeTransferFrom(tpToken, params_.sender, address(this), params_.qTP);\\n        // if sender has Fee Token balance and allowance, we transfer them to be used as fee payment method\\n        (IERC20 feeToken, uint256 qFeeTokenAvailable) = _transferFeeTokenFromSender(params_.sender);\\n        (uint256 wcaUsed, uint256 qTCMinted, uint256 qFeeTokenUsed) = mocCore.swapTPforTCtoViaVendor(\\n            params_.i,\\n            params_.qTP,\\n            params_.qTCmin,\\n            wcaMinted,\\n            params_.recipient,\\n            params_.vendor\\n        );\\n        // send back Asset unused to the sender\\n        // we pass '0' to qAssetMin parameter because we check when minting how much is the maximum\\n        // that can be spent\\n        uint256 assetUnused = _unwrapTo(params_.assetAddress, wcaMinted - wcaUsed, 0, address(this), params_.sender);\\n        // transfer back the unused Fee Token\\n        _transferFeeTokenToSender(feeToken, params_.sender, qFeeTokenAvailable, qFeeTokenUsed);\\n        // inside a block to avoid stack too deep error\\n        {\\n            SwapTPforTCParams memory params = params_;\\n            emit TPSwappedForTCWithWrapper(\\n                params.assetAddress,\\n                params.i,\\n                params.sender,\\n                params.recipient,\\n                params.qTP,\\n                qTCMinted,\\n                params.qAssetMax - assetUnused\\n            );\\n        }\\n    }\\n\\n    struct SwapTCforTPParams {\\n        address assetAddress;\\n        uint256 i;\\n        uint256 qTC;\\n        uint256 qTPmin;\\n        uint256 qAssetMax;\\n        address sender;\\n        address recipient;\\n        address vendor;\\n    }\\n\\n    /**\\n     * @notice caller sends a Collateral Token and recipient receives Pegged Token\\n     *  Requires prior sender approval of Collateral Token and Asset to this contract\\n     * @param params_ swap TC for TP function params\\n     * @dev\\n     *      assetAddress_ Asset contract address\\n     *      i_ Pegged Token index\\n     *      qTC_ amount of Collateral Token to swap\\n     *      qTPmin_ minimum amount of Pegged Token that `recipient_` expects to receive\\n     *      qAssetMax_ maximum amount of Asset that can be spent in fees\\n     *      sender_ address who sends the Collateral Token\\n     *      recipient_ address who receives the Pegged Token\\n     *      vendor_ address who receives a markup. If its address(0) no markup is applied\\n     */\\n\\n    function _swapTCforTPto(SwapTCforTPParams memory params_) internal validAsset(params_.assetAddress) {\\n        uint256 wcaMinted = _wrapTo(params_.assetAddress, params_.qAssetMax, params_.sender, address(this));\\n        // get Collateral Token contract address\\n        IERC20Upgradeable tcToken = mocCore.tcToken();\\n        // transfer Collateral Token from sender to this address\\n        SafeERC20Upgradeable.safeTransferFrom(tcToken, params_.sender, address(this), params_.qTC);\\n        // if sender has Fee Token balance and allowance, we transfer them to be used as fee payment method\\n        (IERC20 feeToken, uint256 qFeeTokenAvailable) = _transferFeeTokenFromSender(params_.sender);\\n        (uint256 wcaUsed, uint256 qTPMinted, uint256 qFeeTokenUsed) = mocCore.swapTCforTPtoViaVendor(\\n            params_.i,\\n            params_.qTC,\\n            params_.qTPmin,\\n            wcaMinted,\\n            params_.recipient,\\n            params_.vendor\\n        );\\n        // send back Asset unused to the sender\\n        // we pass '0' to qAssetMin parameter because we check when minting how much is the maximum\\n        // that can be spent\\n        uint256 assetUnused = _unwrapTo(params_.assetAddress, wcaMinted - wcaUsed, 0, address(this), params_.sender);\\n        // transfer back the unused Fee Token\\n        _transferFeeTokenToSender(feeToken, params_.sender, qFeeTokenAvailable, qFeeTokenUsed);\\n        // inside a block to avoid stack too deep error\\n        {\\n            SwapTCforTPParams memory params = params_;\\n            emit TCSwappedForTPWithWrapper(\\n                params.assetAddress,\\n                params.i,\\n                params.sender,\\n                params.recipient,\\n                params.qTC,\\n                qTPMinted,\\n                params.qAssetMax - assetUnused\\n            );\\n        }\\n    }\\n\\n    /**\\n     * @notice caller sends Asset and recipient receives Wrapped Collateral Asset\\n     *  Requires prior sender approval of Asset to this contract\\n     * @param assetAddress_ Asset contract address\\n     * @param qAsset_ amount of Asset to be Wrapped\\n     * @param sender_ address who sends the Asset\\n     * @param recipient_ address who receives the Wrapped Collateral Asset\\n     * @return wcaTokenWrapped amount of Wrapped Collateral Asset minted to the recipient\\n     */\\n    function _wrapTo(\\n        address assetAddress_,\\n        uint256 qAsset_,\\n        address sender_,\\n        address recipient_\\n    ) internal returns (uint256 wcaTokenWrapped) {\\n        wcaTokenWrapped = _convertAssetToToken(assetAddress_, qAsset_);\\n        wcaToken.mint(recipient_, wcaTokenWrapped);\\n\\n        // transfer asset from sender to this contract\\n        SafeERC20.safeTransferFrom(IERC20(assetAddress_), sender_, address(this), qAsset_);\\n        return wcaTokenWrapped;\\n    }\\n\\n    /**\\n     * @notice given an amount of wrapped tokens `wcaTokenAmount_`, converts to the equivalent value\\n     * in the given `assetAddress_` and transfer it to the `recipient_` address\\n     * @param assetAddress_ Asset contract address\\n     * @param wcaTokenAmount_ amount of wrapped tokens\\n     * @param qAssetMin_ minimum amount of Asset that expects to be received\\n     * @param sender_ address who sends the Wrapped Collateral Asset\\n     * @param recipient_ address who receives the Asset\\n     * @return assetAmount amount of Asset redeemed to the recipient\\n     */\\n    function _unwrapTo(\\n        address assetAddress_,\\n        uint256 wcaTokenAmount_,\\n        uint256 qAssetMin_,\\n        address sender_,\\n        address recipient_\\n    ) internal nonReentrant returns (uint256 assetAmount) {\\n        // calculate the equivalent amount of Asset\\n        (assetAmount, wcaTokenAmount_) = _convertTokenToAsset(assetAddress_, wcaTokenAmount_);\\n        if (assetAmount < qAssetMin_) revert QacBelowMinimumRequired(qAssetMin_, assetAmount);\\n        // burns the wcaToken for this user, will fail if insufficient funds\\n        wcaToken.burn(sender_, wcaTokenAmount_);\\n        // transfer Asset to the recipient, will fail if not enough assetAmount\\n        SafeERC20.safeTransfer(IERC20(assetAddress_), recipient_, assetAmount);\\n        return assetAmount;\\n    }\\n\\n    // ------- Public Functions -------\\n\\n    /**\\n     * @notice get wrapped token price\\n     * @return tokenPrice [PREC]\\n     */\\n    function getTokenPrice() public view returns (uint256 tokenPrice) {\\n        uint256 tokenTotalSupply = wcaToken.totalSupply();\\n        if (tokenTotalSupply == 0) return ONE;\\n        uint256 assetsLength = assets.length;\\n        uint256 totalCurrency;\\n        // loop through all assets to calculate the total amount of currency held\\n        for (uint256 i = 0; i < assetsLength; i = unchecked_inc(i)) {\\n            IERC20 asset = assets[i];\\n            // get asset balance\\n            uint256 assetBalance = asset.balanceOf(address(this));\\n            // multiply by actual asset price and add to the accumulated total currency\\n            // [PREC] = [N] * [PREC]\\n            totalCurrency += assetBalance * _getAssetPrice(address(asset));\\n        }\\n        // [PREC] = [PREC] / [N]\\n        return totalCurrency / tokenTotalSupply;\\n    }\\n\\n    // ------- External Functions -------\\n\\n    /**\\n     * @notice given an amount of wrapped tokens `wcaTokenAmount_`, converts to the equivalent value\\n     * in the given `assetAddress_` and transfer it to the `recipient_` address\\n     * @param assetAddress_ Asset contract address\\n     * @param wcaTokenAmount_ amount of wrapped tokens\\n     * @param qAssetMin_ minimum expected Asset amount to be received\\n     * @param recipient_ address who receives the Asset\\n     */\\n    function unwrapTo(\\n        address assetAddress_,\\n        uint256 wcaTokenAmount_,\\n        uint256 qAssetMin_,\\n        address recipient_\\n    ) external validAsset(assetAddress_) {\\n        _unwrapTo(assetAddress_, wcaTokenAmount_, qAssetMin_, msg.sender, recipient_);\\n    }\\n\\n    /**\\n     * @notice adds an asset to the whitelist, or modifies PriceProvider if already exists\\n     * @param asset_ Asset contract address\\n     * @param priceProvider_ Asset Price Provider contract address\\n     * @param assetDecimals_ Asset decimal places\\n     */\\n    function addOrEditAsset(\\n        IERC20 asset_,\\n        IPriceProvider priceProvider_,\\n        uint8 assetDecimals_\\n    ) external onlyAuthorizedChanger {\\n        // verifies it is a valid priceProvider\\n        (, bool has) = priceProvider_.peek();\\n        if (!has) revert InvalidAddress();\\n        if (!assetIndex[address(asset_)].exists) {\\n            assetIndex[address(asset_)] = AssetIndex({\\n                index: uint256(assets.length),\\n                exists: true,\\n                shift: 18 - int8(assetDecimals_)\\n            });\\n            assets.push(asset_);\\n        }\\n        priceProviderMap[address(asset_)] = priceProvider_;\\n        emit AssetModified(address(asset_), address(priceProvider_));\\n    }\\n\\n    /**\\n     * @notice caller sends Asset and receives Collateral Token\\n        Requires prior sender approval of Asset to this contract \\n     * @param assetAddress_ Asset contract address\\n     * @param qTC_ amount of Collateral Token to mint\\n     * @param qAssetMax_ maximum amount of Asset that can be spent\\n     */\\n    function mintTC(address assetAddress_, uint256 qTC_, uint256 qAssetMax_) external {\\n        MintTCParams memory params = MintTCParams({\\n            assetAddress: assetAddress_,\\n            qTC: qTC_,\\n            qAssetMax: qAssetMax_,\\n            sender: msg.sender,\\n            recipient: msg.sender,\\n            vendor: address(0)\\n        });\\n        _mintTCto(params);\\n    }\\n\\n    /**\\n     * @notice caller sends Asset and receives Collateral Token\\n     *  `vendor_` receives a markup in Fee Token if possible or in qAC if not\\n     *   Requires prior sender approval of Asset to this contract\\n     * @param assetAddress_ Asset contract address\\n     * @param qTC_ amount of Collateral Token to mint\\n     * @param qAssetMax_ maximum amount of Asset that can be spent\\n     * @param vendor_ address who receives a markup\\n     */\\n    function mintTCViaVendor(address assetAddress_, uint256 qTC_, uint256 qAssetMax_, address vendor_) external {\\n        MintTCParams memory params = MintTCParams({\\n            assetAddress: assetAddress_,\\n            qTC: qTC_,\\n            qAssetMax: qAssetMax_,\\n            sender: msg.sender,\\n            recipient: msg.sender,\\n            vendor: vendor_\\n        });\\n        _mintTCto(params);\\n    }\\n\\n    /**\\n     * @notice caller sends Asset and recipient receives Collateral Token\\n        Requires prior sender approval of Asset to this contract \\n     * @param assetAddress_ Asset contract address\\n     * @param qTC_ amount of Collateral Token to mint\\n     * @param qAssetMax_ maximum amount of Asset that can be spent\\n     * @param recipient_ address who receives the Collateral Token\\n     */\\n    function mintTCto(address assetAddress_, uint256 qTC_, uint256 qAssetMax_, address recipient_) external {\\n        MintTCParams memory params = MintTCParams({\\n            assetAddress: assetAddress_,\\n            qTC: qTC_,\\n            qAssetMax: qAssetMax_,\\n            sender: msg.sender,\\n            recipient: recipient_,\\n            vendor: address(0)\\n        });\\n        _mintTCto(params);\\n    }\\n\\n    /**\\n     * @notice caller sends Asset and recipient receives Collateral Token\\n     *  `vendor_` receives a markup in Fee Token if possible or in qAC if not\\n     *   Requires prior sender approval of Asset to this contract\\n     * @param assetAddress_ Asset contract address\\n     * @param qTC_ amount of Collateral Token to mint\\n     * @param qAssetMax_ maximum amount of Asset that can be spent\\n     * @param recipient_ address who receives the Collateral Token\\n     * @param vendor_ address who receives a markup\\n     */\\n    function mintTCtoViaVendor(\\n        address assetAddress_,\\n        uint256 qTC_,\\n        uint256 qAssetMax_,\\n        address recipient_,\\n        address vendor_\\n    ) external {\\n        MintTCParams memory params = MintTCParams({\\n            assetAddress: assetAddress_,\\n            qTC: qTC_,\\n            qAssetMax: qAssetMax_,\\n            sender: msg.sender,\\n            recipient: recipient_,\\n            vendor: vendor_\\n        });\\n        _mintTCto(params);\\n    }\\n\\n    /**\\n     * @notice caller sends Collateral Token and receives Asset\\n        Requires prior sender approval of Collateral Token to this contract \\n     * @param assetAddress_ Asset contract address\\n     * @param qTC_ amount of Collateral Token to redeem\\n     * @param qAssetMin_ minimum amount of Asset that sender expects to receive\\n     */\\n    function redeemTC(address assetAddress_, uint256 qTC_, uint256 qAssetMin_) external {\\n        RedeemTCParams memory params = RedeemTCParams({\\n            assetAddress: assetAddress_,\\n            qTC: qTC_,\\n            qAssetMin: qAssetMin_,\\n            sender: msg.sender,\\n            recipient: msg.sender,\\n            vendor: address(0)\\n        });\\n        _redeemTCto(params);\\n    }\\n\\n    /**\\n     * @notice caller sends Collateral Token and receives Asset\\n     *  `vendor_` receives a markup in Fee Token if possible or in qAC if not\\n     *   Requires prior sender approval of Collateral Token to this contract\\n     * @param assetAddress_ Asset contract address\\n     * @param qTC_ amount of Collateral Token to redeem\\n     * @param qAssetMin_ minimum amount of Asset that sender expects to receive\\n     * @param vendor_ address who receives a markup\\n     */\\n    function redeemTCViaVendor(address assetAddress_, uint256 qTC_, uint256 qAssetMin_, address vendor_) external {\\n        RedeemTCParams memory params = RedeemTCParams({\\n            assetAddress: assetAddress_,\\n            qTC: qTC_,\\n            qAssetMin: qAssetMin_,\\n            sender: msg.sender,\\n            recipient: msg.sender,\\n            vendor: vendor_\\n        });\\n        _redeemTCto(params);\\n    }\\n\\n    /**\\n     * @notice caller sends Collateral Token and recipient receives Asset\\n        Requires prior sender approval of Collateral Token to this contract \\n     * @param assetAddress_ Asset contract address\\n     * @param qTC_ amount of Collateral Token to redeem\\n     * @param qAssetMin_ minimum amount of Asset that `recipient_` expects to receive\\n     * @param recipient_ address who receives the Asset\\n     */\\n    function redeemTCto(address assetAddress_, uint256 qTC_, uint256 qAssetMin_, address recipient_) external {\\n        RedeemTCParams memory params = RedeemTCParams({\\n            assetAddress: assetAddress_,\\n            qTC: qTC_,\\n            qAssetMin: qAssetMin_,\\n            sender: msg.sender,\\n            recipient: recipient_,\\n            vendor: address(0)\\n        });\\n        _redeemTCto(params);\\n    }\\n\\n    /**\\n     * @notice caller sends Collateral Token and recipient receives Asset\\n     *  `vendor_` receives a markup in Fee Token if possible or in qAC if not\\n     *   Requires prior sender approval of Collateral Token to this contract\\n     * @param assetAddress_ Asset contract address\\n     * @param qTC_ amount of Collateral Token to redeem\\n     * @param qAssetMin_ minimum amount of Asset that `recipient_` expects to receive\\n     * @param recipient_ address who receives the Asset\\n     * @param vendor_ address who receives a markup\\n     */\\n    function redeemTCtoViaVendor(\\n        address assetAddress_,\\n        uint256 qTC_,\\n        uint256 qAssetMin_,\\n        address recipient_,\\n        address vendor_\\n    ) external {\\n        RedeemTCParams memory params = RedeemTCParams({\\n            assetAddress: assetAddress_,\\n            qTC: qTC_,\\n            qAssetMin: qAssetMin_,\\n            sender: msg.sender,\\n            recipient: recipient_,\\n            vendor: vendor_\\n        });\\n        _redeemTCto(params);\\n    }\\n\\n    /**\\n     * @notice caller sends Asset and receives Collateral Token\\n        Requires prior sender approval of Asset to this contract \\n     * @param assetAddress_ Asset contract address\\n     * @param i_ Pegged Token index\\n     * @param qTP_ amount of Collateral Token to mint\\n     * @param qAssetMax_ maximum amount of Asset that can be spent\\n     */\\n    function mintTP(address assetAddress_, uint256 i_, uint256 qTP_, uint256 qAssetMax_) external {\\n        MintTPParams memory params = MintTPParams({\\n            assetAddress: assetAddress_,\\n            i: i_,\\n            qTP: qTP_,\\n            qAssetMax: qAssetMax_,\\n            sender: msg.sender,\\n            recipient: msg.sender,\\n            vendor: address(0)\\n        });\\n        _mintTPto(params);\\n    }\\n\\n    /**\\n     * @notice caller sends Asset and receives Collateral Token\\n     *  `vendor_` receives a markup in Fee Token if possible or in qAC if not\\n     *   Requires prior sender approval of Asset to this contract\\n     * @param assetAddress_ Asset contract address\\n     * @param i_ Pegged Token index\\n     * @param qTP_ amount of Collateral Token to mint\\n     * @param qAssetMax_ maximum amount of Asset that can be spent\\n     * @param vendor_ address who receives a markup\\n     */\\n    function mintTPViaVendor(\\n        address assetAddress_,\\n        uint256 i_,\\n        uint256 qTP_,\\n        uint256 qAssetMax_,\\n        address vendor_\\n    ) external {\\n        MintTPParams memory params = MintTPParams({\\n            assetAddress: assetAddress_,\\n            i: i_,\\n            qTP: qTP_,\\n            qAssetMax: qAssetMax_,\\n            sender: msg.sender,\\n            recipient: msg.sender,\\n            vendor: vendor_\\n        });\\n        _mintTPto(params);\\n    }\\n\\n    /**\\n     * @notice caller sends Asset and recipient receives Collateral Token\\n        Requires prior sender approval of Asset to this contract \\n     * @param assetAddress_ Asset contract address\\n     * @param i_ Pegged Token index\\n     * @param qTP_ amount of Collateral Token to mint\\n     * @param qAssetMax_ maximum amount of Asset that can be spent\\n     * @param recipient_ address who receives the Collateral Token\\n     */\\n    function mintTPto(\\n        address assetAddress_,\\n        uint256 i_,\\n        uint256 qTP_,\\n        uint256 qAssetMax_,\\n        address recipient_\\n    ) external {\\n        MintTPParams memory params = MintTPParams({\\n            assetAddress: assetAddress_,\\n            i: i_,\\n            qTP: qTP_,\\n            qAssetMax: qAssetMax_,\\n            sender: msg.sender,\\n            recipient: recipient_,\\n            vendor: address(0)\\n        });\\n        _mintTPto(params);\\n    }\\n\\n    /**\\n     * @notice caller sends Asset and recipient receives Collateral Token\\n     *  `vendor_` receives a markup in Fee Token if possible or in qAC if not\\n     *   Requires prior sender approval of Asset to this contract\\n     * @param assetAddress_ Asset contract address\\n     * @param i_ Pegged Token index\\n     * @param qTP_ amount of Collateral Token to mint\\n     * @param qAssetMax_ maximum amount of Asset that can be spent\\n     * @param recipient_ address who receives the Collateral Token\\n     * @param vendor_ address who receives a markup\\n     */\\n    function mintTPtoViaVendor(\\n        address assetAddress_,\\n        uint256 i_,\\n        uint256 qTP_,\\n        uint256 qAssetMax_,\\n        address recipient_,\\n        address vendor_\\n    ) external {\\n        MintTPParams memory params = MintTPParams({\\n            assetAddress: assetAddress_,\\n            i: i_,\\n            qTP: qTP_,\\n            qAssetMax: qAssetMax_,\\n            sender: msg.sender,\\n            recipient: recipient_,\\n            vendor: vendor_\\n        });\\n        _mintTPto(params);\\n    }\\n\\n    /**\\n     * @notice caller sends Pegged Token and receives Asset\\n        Requires prior sender approval of Pegged Token to this contract \\n     * @param assetAddress_ Asset contract address\\n     * @param i_ Pegged Token index\\n     * @param qTP_ amount of Pegged Token to redeem\\n     * @param qAssetMin_ minimum Asset amount that sender expects to be received\\n     */\\n    function redeemTP(address assetAddress_, uint256 i_, uint256 qTP_, uint256 qAssetMin_) external {\\n        RedeemTPParams memory params = RedeemTPParams({\\n            assetAddress: assetAddress_,\\n            i: i_,\\n            qTP: qTP_,\\n            qAssetMin: qAssetMin_,\\n            sender: msg.sender,\\n            recipient: msg.sender,\\n            vendor: address(0),\\n            isLiqRedeem: false\\n        });\\n        _redeemTPto(params);\\n    }\\n\\n    /**\\n     * @notice caller sends Pegged Token and receives Asset\\n     *  `vendor_` receives a markup in Fee Token if possible or in qAC if not\\n     *   Requires prior sender approval of Pegged Token to this contract\\n     * @param assetAddress_ Asset contract address\\n     * @param i_ Pegged Token index\\n     * @param qTP_ amount of Pegged Token to redeem\\n     * @param qAssetMin_ minimum Asset amount that sender expects to be received\\n     * @param vendor_ address who receives a markup\\n     */\\n    function redeemTPViaVendor(\\n        address assetAddress_,\\n        uint256 i_,\\n        uint256 qTP_,\\n        uint256 qAssetMin_,\\n        address vendor_\\n    ) external {\\n        RedeemTPParams memory params = RedeemTPParams({\\n            assetAddress: assetAddress_,\\n            i: i_,\\n            qTP: qTP_,\\n            qAssetMin: qAssetMin_,\\n            sender: msg.sender,\\n            recipient: msg.sender,\\n            vendor: vendor_,\\n            isLiqRedeem: false\\n        });\\n        _redeemTPto(params);\\n    }\\n\\n    /**\\n     * @notice caller sends Pegged Token and recipient receives Asset\\n        Requires prior sender approval of Pegged Token to this contract \\n     * @param assetAddress_ Asset contract address\\n     * @param i_ Pegged Token index\\n     * @param qTP_ amount of Pegged Token to redeem\\n     * @param qAssetMin_ minimum amount of Asset that `recipient_` expects to receive\\n     * @param recipient_ address who receives the Asset\\n     */\\n    function redeemTPto(\\n        address assetAddress_,\\n        uint256 i_,\\n        uint256 qTP_,\\n        uint256 qAssetMin_,\\n        address recipient_\\n    ) external {\\n        RedeemTPParams memory params = RedeemTPParams({\\n            assetAddress: assetAddress_,\\n            i: i_,\\n            qTP: qTP_,\\n            qAssetMin: qAssetMin_,\\n            sender: msg.sender,\\n            recipient: recipient_,\\n            vendor: address(0),\\n            isLiqRedeem: false\\n        });\\n        _redeemTPto(params);\\n    }\\n\\n    /**\\n     * @notice caller sends Pegged Token and recipient receives Asset\\n     *  `vendor_` receives a markup in Fee Token if possible or in qAC if not\\n     *   Requires prior sender approval of Pegged Token to this contract\\n     * @param assetAddress_ Asset contract address\\n     * @param i_ Pegged Token index\\n     * @param qTP_ amount of Pegged Token to redeem\\n     * @param qAssetMin_ minimum amount of Asset that `recipient_` expects to receive\\n     * @param recipient_ address who receives the Asset\\n     * @param vendor_ address who receives a markup\\n     */\\n    function redeemTPtoViaVendor(\\n        address assetAddress_,\\n        uint256 i_,\\n        uint256 qTP_,\\n        uint256 qAssetMin_,\\n        address recipient_,\\n        address vendor_\\n    ) external {\\n        RedeemTPParams memory params = RedeemTPParams({\\n            assetAddress: assetAddress_,\\n            i: i_,\\n            qTP: qTP_,\\n            qAssetMin: qAssetMin_,\\n            sender: msg.sender,\\n            recipient: recipient_,\\n            vendor: vendor_,\\n            isLiqRedeem: false\\n        });\\n        _redeemTPto(params);\\n    }\\n\\n    /**\\n     * @notice on liquidation, caller claims all Pegged Token `i_` and receives Asset\\n        Requires prior sender approval of Pegged Token to this contract \\n     * @param assetAddress_ Asset contract address\\n     * @param i_ Pegged Token index\\n     */\\n    function liqRedeemTP(address assetAddress_, uint256 i_) external {\\n        // qTP = 0 as it's calculated internally, liqRedeem = true\\n        RedeemTPParams memory params = RedeemTPParams({\\n            assetAddress: assetAddress_,\\n            i: i_,\\n            qTP: 0,\\n            qAssetMin: 0,\\n            sender: msg.sender,\\n            recipient: msg.sender,\\n            vendor: address(0),\\n            isLiqRedeem: true\\n        });\\n        _redeemTPto(params);\\n    }\\n\\n    /**\\n     * @notice on liquidation, caller sends Pegged Token and recipient receives Asset\\n        Requires prior sender approval of Pegged Token to this contract \\n     * @param assetAddress_ Asset contract address\\n     * @param i_ Pegged Token index\\n     * @param recipient_ address who receives the Asset\\n     */\\n    function liqRedeemTPto(address assetAddress_, uint256 i_, address recipient_) external {\\n        // qTP = 0 as it's calculated internally, liqRedeem = true\\n        RedeemTPParams memory params = RedeemTPParams({\\n            assetAddress: assetAddress_,\\n            i: i_,\\n            qTP: 0,\\n            qAssetMin: 0,\\n            sender: msg.sender,\\n            recipient: recipient_,\\n            vendor: address(0),\\n            isLiqRedeem: true\\n        });\\n        _redeemTPto(params);\\n    }\\n\\n    /**\\n     * @notice caller sends Asset and receives Collateral Token and Pegged Token\\n     *  Requires prior sender approval of Collateral Asset to this contract\\n     *  This operation is done without checking coverage\\n     *  Collateral Token and Pegged Token are minted in equivalent proportions so that its price\\n     *  and global coverage are not modified.\\n     *  Reverts if qAC sent are insufficient.\\n     * @param assetAddress_ Asset contract address\\n     * @param i_ Pegged Token index\\n     * @param qTP_ amount of Pegged Token to mint\\n     * @param qAssetMax_ maximum amount of Asset that can be spent\\n     */\\n    function mintTCandTP(address assetAddress_, uint256 i_, uint256 qTP_, uint256 qAssetMax_) external {\\n        MintTCandTPParams memory params = MintTCandTPParams({\\n            assetAddress: assetAddress_,\\n            i: i_,\\n            qTP: qTP_,\\n            qAssetMax: qAssetMax_,\\n            sender: msg.sender,\\n            recipient: msg.sender,\\n            vendor: address(0)\\n        });\\n        _mintTCandTPto(params);\\n    }\\n\\n    /**\\n     * @notice caller sends Asset and receives Collateral Token and Pegged Token\\n     *  `vendor_` receives a markup in Fee Token if possible or in qAC if not\\n     *  Requires prior sender approval of Collateral Asset to this contract\\n     *  This operation is done without checking coverage\\n     *  Collateral Token and Pegged Token are minted in equivalent proportions so that its price\\n     *  and global coverage are not modified.\\n     *  Reverts if qAC sent are insufficient.\\n     * @param assetAddress_ Asset contract address\\n     * @param i_ Pegged Token index\\n     * @param qTP_ amount of Pegged Token to mint\\n     * @param qAssetMax_ maximum amount of Asset that can be spent\\n     * @param vendor_ address who receives a markup\\n     */\\n    function mintTCandTPViaVendor(\\n        address assetAddress_,\\n        uint256 i_,\\n        uint256 qTP_,\\n        uint256 qAssetMax_,\\n        address vendor_\\n    ) external {\\n        MintTCandTPParams memory params = MintTCandTPParams({\\n            assetAddress: assetAddress_,\\n            i: i_,\\n            qTP: qTP_,\\n            qAssetMax: qAssetMax_,\\n            sender: msg.sender,\\n            recipient: msg.sender,\\n            vendor: vendor_\\n        });\\n        _mintTCandTPto(params);\\n    }\\n\\n    /**\\n     * @notice caller sends Asset and recipient receives Collateral Token and Pegged Token\\n     *  Requires prior sender approval of Collateral Asset to this contract\\n     *  This operation is done without checking coverage\\n     *  Collateral Token and Pegged Token are minted in equivalent proportions so that its price\\n     *  and global coverage are not modified.\\n     *  Reverts if qAC sent are insufficient.\\n     * @param assetAddress_ Asset contract address\\n     * @param i_ Pegged Token index\\n     * @param qTP_ amount of Pegged Token to mint\\n     * @param qAssetMax_ maximum amount of Asset that can be spent\\n     * @param recipient_ address who receives the Collateral Token and Pegged Token\\n     */\\n    function mintTCandTPto(\\n        address assetAddress_,\\n        uint256 i_,\\n        uint256 qTP_,\\n        uint256 qAssetMax_,\\n        address recipient_\\n    ) external {\\n        MintTCandTPParams memory params = MintTCandTPParams({\\n            assetAddress: assetAddress_,\\n            i: i_,\\n            qTP: qTP_,\\n            qAssetMax: qAssetMax_,\\n            sender: msg.sender,\\n            recipient: recipient_,\\n            vendor: address(0)\\n        });\\n        _mintTCandTPto(params);\\n    }\\n\\n    /**\\n     * @notice caller sends Asset and recipient receives Collateral Token and Pegged Token\\n     *  `vendor_` receives a markup in Fee Token if possible or in qAC if not\\n     *  Requires prior sender approval of Collateral Asset to this contract\\n     *  This operation is done without checking coverage\\n     *  Collateral Token and Pegged Token are minted in equivalent proportions so that its price\\n     *  and global coverage are not modified.\\n     *  Reverts if qAC sent are insufficient.\\n     * @param assetAddress_ Asset contract address\\n     * @param i_ Pegged Token index\\n     * @param qTP_ amount of Pegged Token to mint\\n     * @param qAssetMax_ maximum amount of Asset that can be spent\\n     * @param recipient_ address who receives the Collateral Token and Pegged Token\\n     * @param vendor_ address who receives a markup\\n     */\\n    function mintTCandTPtoViaVendor(\\n        address assetAddress_,\\n        uint256 i_,\\n        uint256 qTP_,\\n        uint256 qAssetMax_,\\n        address recipient_,\\n        address vendor_\\n    ) external {\\n        MintTCandTPParams memory params = MintTCandTPParams({\\n            assetAddress: assetAddress_,\\n            i: i_,\\n            qTP: qTP_,\\n            qAssetMax: qAssetMax_,\\n            sender: msg.sender,\\n            recipient: recipient_,\\n            vendor: vendor_\\n        });\\n        _mintTCandTPto(params);\\n    }\\n\\n    /**\\n     * @notice caller sends Collateral Token and Pegged Token and receives Assets\\n     *  Requires prior sender approval of Collateral Token and Pegged Token to this contract\\n     *  This operation is done without checking coverage\\n     *  Collateral Token and Pegged Token are redeemed in equivalent proportions so that its price\\n     *  and global coverage are not modified.\\n     *  Reverts if qTP sent are insufficient.\\n     * @param assetAddress_ Asset contract address\\n     * @param i_ Pegged Token index\\n     * @param qTC_ maximum amount of Collateral Token to redeem\\n     * @param qTP_ maximum amount of Pegged Token to redeem\\n     * @param qAssetMin_ minimum amount of Asset that the sender expects to receive\\n     */\\n    function redeemTCandTP(address assetAddress_, uint256 i_, uint256 qTC_, uint256 qTP_, uint256 qAssetMin_) external {\\n        RedeemTCandTPParams memory params = RedeemTCandTPParams({\\n            assetAddress: assetAddress_,\\n            i: i_,\\n            qTC: qTC_,\\n            qTP: qTP_,\\n            qAssetMin: qAssetMin_,\\n            sender: msg.sender,\\n            recipient: msg.sender,\\n            vendor: address(0)\\n        });\\n        _redeemTCandTPto(params);\\n    }\\n\\n    /**\\n     * @notice caller sends Collateral Token and Pegged Token and receives Assets\\n     *  `vendor_` receives a markup in Fee Token if possible or in qAC if not\\n     *  Requires prior sender approval of Collateral Token and Pegged Token to this contract\\n     *  This operation is done without checking coverage\\n     *  Collateral Token and Pegged Token are redeemed in equivalent proportions so that its price\\n     *  and global coverage are not modified.\\n     *  Reverts if qTP sent are insufficient.\\n     * @param assetAddress_ Asset contract address\\n     * @param i_ Pegged Token index\\n     * @param qTC_ maximum amount of Collateral Token to redeem\\n     * @param qTP_ maximum amount of Pegged Token to redeem\\n     * @param qAssetMin_ minimum amount of Asset that the sender expects to receive\\n     * @param vendor_ address who receives a markup\\n     */\\n    function redeemTCandTPViaVendor(\\n        address assetAddress_,\\n        uint256 i_,\\n        uint256 qTC_,\\n        uint256 qTP_,\\n        uint256 qAssetMin_,\\n        address vendor_\\n    ) external {\\n        RedeemTCandTPParams memory params = RedeemTCandTPParams({\\n            assetAddress: assetAddress_,\\n            i: i_,\\n            qTC: qTC_,\\n            qTP: qTP_,\\n            qAssetMin: qAssetMin_,\\n            sender: msg.sender,\\n            recipient: msg.sender,\\n            vendor: vendor_\\n        });\\n        _redeemTCandTPto(params);\\n    }\\n\\n    /**\\n     * @notice caller sends Collateral Token and Pegged Token and recipient receives Assets\\n     *  Requires prior sender approval of Collateral Token and Pegged Token to this contract\\n     *  This operation is done without checking coverage\\n     *  Collateral Token and Pegged Token are redeemed in equivalent proportions so that its price\\n     *  and global coverage are not modified.\\n     *  Reverts if qTP sent are insufficient.\\n     * @param assetAddress_ Asset contract address\\n     * @param i_ Pegged Token index\\n     * @param qTC_ maximum amount of Collateral Token to redeem\\n     * @param qTP_ maximum amount of Pegged Token to redeem\\n     * @param qAssetMin_ minimum amount of Asset that `recipient_` expects to receive\\n     * @param recipient_ address who receives the Asset\\n     */\\n    function redeemTCandTPto(\\n        address assetAddress_,\\n        uint256 i_,\\n        uint256 qTC_,\\n        uint256 qTP_,\\n        uint256 qAssetMin_,\\n        address recipient_\\n    ) external {\\n        RedeemTCandTPParams memory params = RedeemTCandTPParams({\\n            assetAddress: assetAddress_,\\n            i: i_,\\n            qTC: qTC_,\\n            qTP: qTP_,\\n            qAssetMin: qAssetMin_,\\n            sender: msg.sender,\\n            recipient: recipient_,\\n            vendor: address(0)\\n        });\\n        _redeemTCandTPto(params);\\n    }\\n\\n    /**\\n     * @notice caller sends Collateral Token and Pegged Token and recipient receives Assets\\n     *  `vendor_` receives a markup in Fee Token if possible or in qAC if not\\n     *  Requires prior sender approval of Collateral Token and Pegged Token to this contract\\n     *  This operation is done without checking coverage\\n     *  Collateral Token and Pegged Token are redeemed in equivalent proportions so that its price\\n     *  and global coverage are not modified.\\n     *  Reverts if qTP sent are insufficient.\\n     * @param assetAddress_ Asset contract address\\n     * @param i_ Pegged Token index\\n     * @param qTC_ maximum amount of Collateral Token to redeem\\n     * @param qTP_ maximum amount of Pegged Token to redeem\\n     * @param qAssetMin_ minimum amount of Asset that `recipient_` expects to receive\\n     * @param recipient_ address who receives the Asset\\n     * @param vendor_ address who receives a markup\\n     */\\n    function redeemTCandTPtoViaVendor(\\n        address assetAddress_,\\n        uint256 i_,\\n        uint256 qTC_,\\n        uint256 qTP_,\\n        uint256 qAssetMin_,\\n        address recipient_,\\n        address vendor_\\n    ) external {\\n        RedeemTCandTPParams memory params = RedeemTCandTPParams({\\n            assetAddress: assetAddress_,\\n            i: i_,\\n            qTC: qTC_,\\n            qTP: qTP_,\\n            qAssetMin: qAssetMin_,\\n            sender: msg.sender,\\n            recipient: recipient_,\\n            vendor: vendor_\\n        });\\n        _redeemTCandTPto(params);\\n    }\\n\\n    /**\\n     * @notice caller sends a Pegged Token and receives another one\\n     *  Requires prior sender approval of Pegged Token and Asset to this contract\\n     * @param assetAddress_ Asset contract address\\n     * @param iFrom_ owned Pegged Token index\\n     * @param iTo_ target Pegged Token index\\n     * @param qTP_ amount of owned Pegged Token to swap\\n     * @param qTPmin_ minimum amount of target Pegged Token that the sender expects to receive\\n     * @param qAssetMax_ maximum amount of Asset that can be spent in fees\\n     */\\n    function swapTPforTP(\\n        address assetAddress_,\\n        uint256 iFrom_,\\n        uint256 iTo_,\\n        uint256 qTP_,\\n        uint256 qTPmin_,\\n        uint256 qAssetMax_\\n    ) external {\\n        SwapTPforTPParams memory params = SwapTPforTPParams({\\n            assetAddress: assetAddress_,\\n            iFrom: iFrom_,\\n            iTo: iTo_,\\n            qTP: qTP_,\\n            qTPmin: qTPmin_,\\n            qAssetMax: qAssetMax_,\\n            sender: msg.sender,\\n            recipient: msg.sender,\\n            vendor: address(0)\\n        });\\n        _swapTPforTPto(params);\\n    }\\n\\n    /**\\n     * @notice caller sends a Pegged Token and receives another one\\n     *  `vendor_` receives a markup in Fee Token if possible or in qAC if not\\n     *  Requires prior sender approval of Pegged Token and Asset to this contract\\n     * @param assetAddress_ Asset contract address\\n     * @param iFrom_ owned Pegged Token index\\n     * @param iTo_ target Pegged Token index\\n     * @param qTP_ amount of owned Pegged Token to swap\\n     * @param qTPmin_ minimum amount of target Pegged Token that the sender expects to receive\\n     * @param qAssetMax_ maximum amount of Asset that can be spent in fees\\n     * @param vendor_ address who receives a markup\\n     */\\n    function swapTPforTPViaVendor(\\n        address assetAddress_,\\n        uint256 iFrom_,\\n        uint256 iTo_,\\n        uint256 qTP_,\\n        uint256 qTPmin_,\\n        uint256 qAssetMax_,\\n        address vendor_\\n    ) external {\\n        SwapTPforTPParams memory params = SwapTPforTPParams({\\n            assetAddress: assetAddress_,\\n            iFrom: iFrom_,\\n            iTo: iTo_,\\n            qTP: qTP_,\\n            qTPmin: qTPmin_,\\n            qAssetMax: qAssetMax_,\\n            sender: msg.sender,\\n            recipient: msg.sender,\\n            vendor: vendor_\\n        });\\n        _swapTPforTPto(params);\\n    }\\n\\n    /**\\n     * @notice caller sends a Pegged Token and recipient receives another one\\n     *  Requires prior sender approval of Pegged Token and Asset to this contract\\n     * @param assetAddress_ Asset contract address\\n     * @param iFrom_ owned Pegged Token index\\n     * @param iTo_ target Pegged Token index\\n     * @param qTP_ amount of owned Pegged Token to swap\\n     * @param qTPmin_ minimum amount of target Pegged Token that `recipient_` expects to receive\\n     * @param qAssetMax_ maximum amount of Asset that can be spent in fees\\n     * @param recipient_ address who receives the target Pegged Token\\n     */\\n    function swapTPforTPto(\\n        address assetAddress_,\\n        uint256 iFrom_,\\n        uint256 iTo_,\\n        uint256 qTP_,\\n        uint256 qTPmin_,\\n        uint256 qAssetMax_,\\n        address recipient_\\n    ) external {\\n        SwapTPforTPParams memory params = SwapTPforTPParams({\\n            assetAddress: assetAddress_,\\n            iFrom: iFrom_,\\n            iTo: iTo_,\\n            qTP: qTP_,\\n            qTPmin: qTPmin_,\\n            qAssetMax: qAssetMax_,\\n            sender: msg.sender,\\n            recipient: recipient_,\\n            vendor: address(0)\\n        });\\n        _swapTPforTPto(params);\\n    }\\n\\n    /**\\n     * @notice caller sends a Pegged Token and recipient receives another one\\n     *  `vendor_` receives a markup in Fee Token if possible or in qAC if not\\n     *  Requires prior sender approval of Pegged Token and Asset to this contract\\n     * @param assetAddress_ Asset contract address\\n     * @param iFrom_ owned Pegged Token index\\n     * @param iTo_ target Pegged Token index\\n     * @param qTP_ amount of owned Pegged Token to swap\\n     * @param qTPmin_ minimum amount of target Pegged Token that `recipient_` expects to receive\\n     * @param qAssetMax_ maximum amount of Asset that can be spent in fees\\n     * @param recipient_ address who receives the target Pegged Token\\n     * @param vendor_ address who receives a markup\\n     */\\n    function swapTPforTPtoViaVendor(\\n        address assetAddress_,\\n        uint256 iFrom_,\\n        uint256 iTo_,\\n        uint256 qTP_,\\n        uint256 qTPmin_,\\n        uint256 qAssetMax_,\\n        address recipient_,\\n        address vendor_\\n    ) external {\\n        SwapTPforTPParams memory params = SwapTPforTPParams({\\n            assetAddress: assetAddress_,\\n            iFrom: iFrom_,\\n            iTo: iTo_,\\n            qTP: qTP_,\\n            qTPmin: qTPmin_,\\n            qAssetMax: qAssetMax_,\\n            sender: msg.sender,\\n            recipient: recipient_,\\n            vendor: vendor_\\n        });\\n        _swapTPforTPto(params);\\n    }\\n\\n    /**\\n     * @notice caller sends a Pegged Token and receives Collateral Token\\n     *  Requires prior sender approval of Pegged Token and Asset to this contract\\n     * @param assetAddress_ Asset contract address\\n     * @param i_ Pegged Token index\\n     * @param qTP_ amount of Pegged Token to swap\\n     * @param qTCmin_ minimum amount of Collateral Token that the sender expects to receive\\n     * @param qAssetMax_ maximum amount of Asset that can be spent in fees\\n     */\\n    function swapTPforTC(\\n        address assetAddress_,\\n        uint256 i_,\\n        uint256 qTP_,\\n        uint256 qTCmin_,\\n        uint256 qAssetMax_\\n    ) external {\\n        SwapTPforTCParams memory params = SwapTPforTCParams({\\n            assetAddress: assetAddress_,\\n            i: i_,\\n            qTP: qTP_,\\n            qTCmin: qTCmin_,\\n            qAssetMax: qAssetMax_,\\n            sender: msg.sender,\\n            recipient: msg.sender,\\n            vendor: address(0)\\n        });\\n        _swapTPforTCto(params);\\n    }\\n\\n    /**\\n     * @notice caller sends a Pegged Token and receives Collateral Token\\n     *  `vendor_` receives a markup in Fee Token if possible or in qAC if not\\n     *  Requires prior sender approval of Pegged Token and Asset to this contract\\n     * @param assetAddress_ Asset contract address\\n     * @param i_ Pegged Token index\\n     * @param qTP_ amount of Pegged Token to swap\\n     * @param qTCmin_ minimum amount of Collateral Token that the sender expects to receive\\n     * @param qAssetMax_ maximum amount of Asset that can be spent in fees\\n     * @param vendor_ address who receives a markup\\n     */\\n    function swapTPforTCViaVendor(\\n        address assetAddress_,\\n        uint256 i_,\\n        uint256 qTP_,\\n        uint256 qTCmin_,\\n        uint256 qAssetMax_,\\n        address vendor_\\n    ) external {\\n        SwapTPforTCParams memory params = SwapTPforTCParams({\\n            assetAddress: assetAddress_,\\n            i: i_,\\n            qTP: qTP_,\\n            qTCmin: qTCmin_,\\n            qAssetMax: qAssetMax_,\\n            sender: msg.sender,\\n            recipient: msg.sender,\\n            vendor: vendor_\\n        });\\n        _swapTPforTCto(params);\\n    }\\n\\n    /**\\n     * @notice caller sends a Pegged Token and recipient receives Collateral Token\\n     *  Requires prior sender approval of Pegged Token and Asset to this contract\\n     * @param assetAddress_ Asset contract address\\n     * @param i_ Pegged Token index\\n     * @param qTP_ amount of Pegged Token to swap\\n     * @param qTCmin_ minimum amount of Collateral Token that `recipient_` expects to receive\\n     * @param qAssetMax_ maximum amount of Asset that can be spent in fees\\n     * @param recipient_ address who receives the Collateral Token\\n     */\\n    function swapTPforTCto(\\n        address assetAddress_,\\n        uint256 i_,\\n        uint256 qTP_,\\n        uint256 qTCmin_,\\n        uint256 qAssetMax_,\\n        address recipient_\\n    ) external {\\n        SwapTPforTCParams memory params = SwapTPforTCParams({\\n            assetAddress: assetAddress_,\\n            i: i_,\\n            qTP: qTP_,\\n            qTCmin: qTCmin_,\\n            qAssetMax: qAssetMax_,\\n            sender: msg.sender,\\n            recipient: recipient_,\\n            vendor: address(0)\\n        });\\n        _swapTPforTCto(params);\\n    }\\n\\n    /**\\n     * @notice caller sends a Pegged Token and recipient receives Collateral Token\\n     *  `vendor_` receives a markup in Fee Token if possible or in qAC if not\\n     *  Requires prior sender approval of Pegged Token and Asset to this contract\\n     * @param assetAddress_ Asset contract address\\n     * @param i_ Pegged Token index\\n     * @param qTP_ amount of Pegged Token to swap\\n     * @param qTCmin_ minimum amount of Collateral Token that `recipient_` expects to receive\\n     * @param qAssetMax_ maximum amount of Asset that can be spent in fees\\n     * @param recipient_ address who receives the Collateral Token\\n     * @param vendor_ address who receives a markup\\n     */\\n    function swapTPforTCtoViaVendor(\\n        address assetAddress_,\\n        uint256 i_,\\n        uint256 qTP_,\\n        uint256 qTCmin_,\\n        uint256 qAssetMax_,\\n        address recipient_,\\n        address vendor_\\n    ) external {\\n        SwapTPforTCParams memory params = SwapTPforTCParams({\\n            assetAddress: assetAddress_,\\n            i: i_,\\n            qTP: qTP_,\\n            qTCmin: qTCmin_,\\n            qAssetMax: qAssetMax_,\\n            sender: msg.sender,\\n            recipient: recipient_,\\n            vendor: vendor_\\n        });\\n        _swapTPforTCto(params);\\n    }\\n\\n    /**\\n     * @notice caller sends Collateral Token and receives Pegged Token\\n     *  Requires prior sender approval of Collateral Token and Asset to this contract\\n     * @param assetAddress_ Asset contract address\\n     * @param i_ Pegged Token index\\n     * @param qTC_ amount of Collateral Token to swap\\n     * @param qTPmin_ minimum amount of Pegged Token that the sender expects to receive\\n     * @param qAssetMax_ maximum amount of Asset that can be spent in fees\\n     */\\n    function swapTCforTP(\\n        address assetAddress_,\\n        uint256 i_,\\n        uint256 qTC_,\\n        uint256 qTPmin_,\\n        uint256 qAssetMax_\\n    ) external {\\n        SwapTCforTPParams memory params = SwapTCforTPParams({\\n            assetAddress: assetAddress_,\\n            i: i_,\\n            qTC: qTC_,\\n            qTPmin: qTPmin_,\\n            qAssetMax: qAssetMax_,\\n            sender: msg.sender,\\n            recipient: msg.sender,\\n            vendor: address(0)\\n        });\\n        _swapTCforTPto(params);\\n    }\\n\\n    /**\\n     * @notice caller sends Collateral Token and receives Pegged Token\\n     *  `vendor_` receives a markup in Fee Token if possible or in qAC if not\\n     *  Requires prior sender approval of Collateral Token and Asset to this contract\\n     * @param assetAddress_ Asset contract address\\n     * @param i_ Pegged Token index\\n     * @param qTC_ amount of Collateral Token to swap\\n     * @param qTPmin_ minimum amount of Pegged Token that the sender expects to receive\\n     * @param qAssetMax_ maximum amount of Asset that can be spent in fees\\n     * @param vendor_ address who receives a markup\\n     */\\n    function swapTCforTPViaVendor(\\n        address assetAddress_,\\n        uint256 i_,\\n        uint256 qTC_,\\n        uint256 qTPmin_,\\n        uint256 qAssetMax_,\\n        address vendor_\\n    ) external {\\n        SwapTCforTPParams memory params = SwapTCforTPParams({\\n            assetAddress: assetAddress_,\\n            i: i_,\\n            qTC: qTC_,\\n            qTPmin: qTPmin_,\\n            qAssetMax: qAssetMax_,\\n            sender: msg.sender,\\n            recipient: msg.sender,\\n            vendor: vendor_\\n        });\\n        _swapTCforTPto(params);\\n    }\\n\\n    /**\\n     * @notice caller sends a Collateral Token and recipient receives Pegged Token\\n     *  Requires prior sender approval of Collateral Token and Asset to this contract\\n     * @param assetAddress_ Asset contract address\\n     * @param i_ Pegged Token index\\n     * @param qTC_ amount of Collateral Token to swap\\n     * @param qTPmin_ minimum amount of Pegged Token that `recipient_` expects to receive\\n     * @param qAssetMax_ maximum amount of Asset that can be spent in fees\\n     * @param recipient_ address who receives the Pegged Token\\n     */\\n    function swapTCforTPto(\\n        address assetAddress_,\\n        uint256 i_,\\n        uint256 qTC_,\\n        uint256 qTPmin_,\\n        uint256 qAssetMax_,\\n        address recipient_\\n    ) external {\\n        SwapTCforTPParams memory params = SwapTCforTPParams({\\n            assetAddress: assetAddress_,\\n            i: i_,\\n            qTC: qTC_,\\n            qTPmin: qTPmin_,\\n            qAssetMax: qAssetMax_,\\n            sender: msg.sender,\\n            recipient: recipient_,\\n            vendor: address(0)\\n        });\\n        _swapTCforTPto(params);\\n    }\\n\\n    /**\\n     * @notice caller sends a Collateral Token and recipient receives Pegged Token\\n     *  `vendor_` receives a markup in Fee Token if possible or in qAC if not\\n     *  Requires prior sender approval of Collateral Token and Asset to this contract\\n     * @param assetAddress_ Asset contract address\\n     * @param i_ Pegged Token index\\n     * @param qTC_ amount of Collateral Token to swap\\n     * @param qTPmin_ minimum amount of Pegged Token that `recipient_` expects to receive\\n     * @param qAssetMax_ maximum amount of Asset that can be spent in fees\\n     * @param recipient_ address who receives the Pegged Token\\n     * @param vendor_ address who receives a markup\\n     */\\n    function swapTCforTPtoViaVendor(\\n        address assetAddress_,\\n        uint256 i_,\\n        uint256 qTC_,\\n        uint256 qTPmin_,\\n        uint256 qAssetMax_,\\n        address recipient_,\\n        address vendor_\\n    ) external {\\n        SwapTCforTPParams memory params = SwapTCforTPParams({\\n            assetAddress: assetAddress_,\\n            i: i_,\\n            qTC: qTC_,\\n            qTPmin: qTPmin_,\\n            qAssetMax: qAssetMax_,\\n            sender: msg.sender,\\n            recipient: recipient_,\\n            vendor: vendor_\\n        });\\n        _swapTCforTPto(params);\\n    }\\n\\n    /*\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x74cb6434403dc45dd0a542c832a295c47071cb6a5747b9f44fe65fd32d375815\",\"license\":\"UNLICENSED\"},\"contracts/collateral/rc20/MocCARC20.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.16;\\n\\nimport { MocCore, SafeERC20 } from \\\"../../core/MocCore.sol\\\";\\nimport { IERC20 } from \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\n/**\\n * @title MocCARC20: Moc Collateral Asset RC20\\n * @notice Moc protocol implementation using a RC20 as Collateral Asset.\\n */\\ncontract MocCARC20 is MocCore {\\n    // ------- Structs -------\\n    struct InitializeParams {\\n        InitializeCoreParams initializeCoreParams;\\n        // Collateral Asset Token contract address\\n        address acTokenAddress;\\n    }\\n\\n    // ------- Storage -------\\n    // Collateral Asset token\\n    IERC20 private acToken;\\n\\n    /// @custom:oz-upgrades-unsafe-allow constructor\\n    constructor() {\\n        _disableInitializers();\\n    }\\n\\n    // ------- Initializer -------\\n    /**\\n     * @notice contract initializer\\n     * @param initializeParams_ contract initializer params\\n     * @dev governorAddress The address that will define when a change contract is authorized\\n     *      pauserAddress The address that is authorized to pause this contract\\n     *      acTokenAddress Collateral Asset Token contract address\\n     *      tcTokenAddress Collateral Token contract address\\n     *      mocFeeFlowAddress Moc Fee Flow contract address\\n     *      mocAppreciationBeneficiaryAddress Moc appreciation beneficiary address\\n     *      protThrld protected state threshold [PREC]\\n     *      liqThrld liquidation coverage threshold [PREC]\\n     *      feeRetainer pct retain on fees to be re-injected as Collateral, while paying fees with AC [PREC]\\n     *      tcMintFee additional fee pct applied on mint Collateral Tokens operations [PREC]\\n     *      tcRedeemFee additional fee pct applied on redeem Collateral Tokens operations [PREC]\\n     *      successFee pct of the gain because Pegged Tokens devaluation that is transferred\\n     *        in Collateral Asset to Moc Fee Flow during the settlement [PREC]\\n     *      appreciationFactor pct of the gain because Pegged Tokens devaluation that is returned\\n     *        in Pegged Tokens to appreciation beneficiary during the settlement [PREC]\\n     *      emaCalculationBlockSpan amount of blocks to wait between Pegged ema calculation\\n     */\\n    function initialize(InitializeParams calldata initializeParams_) external initializer {\\n        acToken = IERC20(initializeParams_.acTokenAddress);\\n        __MocCore_init(initializeParams_.initializeCoreParams);\\n    }\\n\\n    // ------- Internal Functions -------\\n\\n    /**\\n     * @inheritdoc MocCore\\n     * @dev this function could revert during safeTransfer call.\\n     *  safeTransfer will revert if token transfer reverts or returns 0\\n     */\\n    function acTransfer(address to_, uint256 amount_) internal override nonReentrant {\\n        if (amount_ > 0) {\\n            SafeERC20.safeTransfer(acToken, to_, amount_);\\n        }\\n    }\\n\\n    /**\\n     * @inheritdoc MocCore\\n     */\\n    function acBalanceOf(address account) internal view override returns (uint256 balance) {\\n        return acToken.balanceOf(account);\\n    }\\n\\n    /**\\n     * @notice hook before any AC reception involving operation, as dealing with an RC20 Token\\n     * we need to transfer the AC amount from the user, to the contract\\n     * param qACMax_ max amount of AC available\\n     * @param qACNeeded_ amount of AC needed\\n     * @return change amount needed to be return to the sender after the operation is complete\\n     */\\n    function _onACNeededOperation(uint256 /*qACMax_*/, uint256 qACNeeded_) internal override returns (uint256 change) {\\n        SafeERC20.safeTransferFrom(acToken, msg.sender, address(this), qACNeeded_);\\n        // As we are transferring the exact needed amount, change is zero\\n        change = 0;\\n    }\\n\\n    // ------- External Functions -------\\n\\n    /**\\n     * @notice caller sends Collateral Asset and receives Collateral Token\\n        Requires prior sender approval of Collateral Asset to this contract \\n     * @param qTC_ amount of Collateral Token to mint\\n     * @param qACmax_ maximum amount of Collateral Asset that can be spent\\n     * @return qACtotalNeeded amount of AC used to mint qTC\\n     * @return qFeeToken amount of Fee Token used by sender to pay fees. 0 if qAC is used instead\\n     */\\n    function mintTC(uint256 qTC_, uint256 qACmax_) external returns (uint256 qACtotalNeeded, uint256 qFeeToken) {\\n        MintTCParams memory params = MintTCParams({\\n            qTC: qTC_,\\n            qACmax: qACmax_,\\n            sender: msg.sender,\\n            recipient: msg.sender,\\n            vendor: address(0)\\n        });\\n        return _mintTCto(params);\\n    }\\n\\n    /**\\n     * @notice caller sends Collateral Asset and receives Collateral Token\\n     *  `vendor_` receives a markup in Fee Token if possible or in qAC if not\\n     *  Requires prior sender approval of Collateral Asset to this contract\\n     * @param qTC_ amount of Collateral Token to mint\\n     * @param qACmax_ maximum amount of Collateral Asset that can be spent\\n     * @param vendor_ address who receives a markup\\n     * @return qACtotalNeeded amount of AC used to mint qTC\\n     * @return qFeeToken amount of Fee Token used by sender to pay fees. 0 if qAC is used instead\\n     */\\n    function mintTCViaVendor(\\n        uint256 qTC_,\\n        uint256 qACmax_,\\n        address vendor_\\n    ) external returns (uint256 qACtotalNeeded, uint256 qFeeToken) {\\n        MintTCParams memory params = MintTCParams({\\n            qTC: qTC_,\\n            qACmax: qACmax_,\\n            sender: msg.sender,\\n            recipient: msg.sender,\\n            vendor: vendor_\\n        });\\n        return _mintTCto(params);\\n    }\\n\\n    /**\\n     * @notice caller sends Collateral Asset and recipient receives Collateral Token\\n     *  Requires prior sender approval of Collateral Asset to this contract\\n     * @param qTC_ amount of Collateral Token to mint\\n     * @param qACmax_ maximum amount of Collateral Asset that can be spent\\n     * @param recipient_ address who receives the Collateral Token\\n     * @return qACtotalNeeded amount of AC used to mint qTC\\n     * @return qFeeToken amount of Fee Token used by sender to pay fees. 0 if qAC is used instead\\n     */\\n    function mintTCto(\\n        uint256 qTC_,\\n        uint256 qACmax_,\\n        address recipient_\\n    ) external returns (uint256 qACtotalNeeded, uint256 qFeeToken) {\\n        MintTCParams memory params = MintTCParams({\\n            qTC: qTC_,\\n            qACmax: qACmax_,\\n            sender: msg.sender,\\n            recipient: recipient_,\\n            vendor: address(0)\\n        });\\n        return _mintTCto(params);\\n    }\\n\\n    /**\\n     * @notice caller sends Collateral Asset and recipient receives Collateral Token\\n     *  `vendor_` receives a markup in Fee Token if possible or in qAC if not\\n     *   Requires prior sender approval of Collateral Asset to this contract\\n     * @param qTC_ amount of Collateral Token to mint\\n     * @param qACmax_ maximum amount of Collateral Asset that can be spent\\n     * @param recipient_ address who receives the Collateral Token\\n     * @param vendor_ address who receives a markup\\n     * @return qACtotalNeeded amount of AC used to mint qTC\\n     * @return qFeeToken amount of Fee Token used by sender to pay fees. 0 if qAC is used instead\\n     */\\n    function mintTCtoViaVendor(\\n        uint256 qTC_,\\n        uint256 qACmax_,\\n        address recipient_,\\n        address vendor_\\n    ) external returns (uint256 qACtotalNeeded, uint256 qFeeToken) {\\n        MintTCParams memory params = MintTCParams({\\n            qTC: qTC_,\\n            qACmax: qACmax_,\\n            sender: msg.sender,\\n            recipient: recipient_,\\n            vendor: vendor_\\n        });\\n        return _mintTCto(params);\\n    }\\n\\n    /**\\n     * @notice caller sends Collateral Asset and receives Pegged Token\\n        Requires prior sender approval of Collateral Asset to this contract \\n     * @param i_ Pegged Token index to mint\\n     * @param qTP_ amount of Pegged Token to mint\\n     * @param qACmax_ maximum amount of Collateral Asset that can be spent\\n     * @return qACtotalNeeded amount of AC used to mint qTP\\n     * @return qFeeToken amount of Fee Token used by sender to pay fees. 0 if qAC is used instead\\n     */\\n    function mintTP(\\n        uint256 i_,\\n        uint256 qTP_,\\n        uint256 qACmax_\\n    ) external returns (uint256 qACtotalNeeded, uint256 qFeeToken) {\\n        MintTPParams memory params = MintTPParams({\\n            i: i_,\\n            qTP: qTP_,\\n            qACmax: qACmax_,\\n            sender: msg.sender,\\n            recipient: msg.sender,\\n            vendor: address(0)\\n        });\\n        return _mintTPto(params);\\n    }\\n\\n    /**\\n     * @notice caller sends Collateral Asset and receives Pegged Token\\n     *  `vendor_` receives a markup in Fee Token if possible or in qAC if not\\n     *   Requires prior sender approval of Collateral Asset to this contract\\n     * @param i_ Pegged Token index to mint\\n     * @param qTP_ amount of Pegged Token to mint\\n     * @param qACmax_ maximum amount of Collateral Asset that can be spent\\n     * @param vendor_ address who receives a markup\\n     * @return qACtotalNeeded amount of AC used to mint qTP\\n     * @return qFeeToken amount of Fee Token used by sender to pay fees. 0 if qAC is used instead\\n     */\\n    function mintTPViaVendor(\\n        uint256 i_,\\n        uint256 qTP_,\\n        uint256 qACmax_,\\n        address vendor_\\n    ) external returns (uint256 qACtotalNeeded, uint256 qFeeToken) {\\n        MintTPParams memory params = MintTPParams({\\n            i: i_,\\n            qTP: qTP_,\\n            qACmax: qACmax_,\\n            sender: msg.sender,\\n            recipient: msg.sender,\\n            vendor: vendor_\\n        });\\n        return _mintTPto(params);\\n    }\\n\\n    /**\\n     * @notice caller sends Collateral Asset and recipient receives Pegged Token\\n        Requires prior sender approval of Collateral Asset to this contract \\n     * @param i_ Pegged Token index to mint\\n     * @param qTP_ amount of Pegged Token to mint\\n     * @param qACmax_ maximum amount of Collateral Asset that can be spent\\n     * @param recipient_ address who receives the Pegged Token\\n     * @return qACtotalNeeded amount of AC used to mint qTP\\n     * @return qFeeToken amount of Fee Token used by sender to pay fees. 0 if qAC is used instead\\n     */\\n    function mintTPto(\\n        uint256 i_,\\n        uint256 qTP_,\\n        uint256 qACmax_,\\n        address recipient_\\n    ) external returns (uint256 qACtotalNeeded, uint256 qFeeToken) {\\n        MintTPParams memory params = MintTPParams({\\n            i: i_,\\n            qTP: qTP_,\\n            qACmax: qACmax_,\\n            sender: msg.sender,\\n            recipient: recipient_,\\n            vendor: address(0)\\n        });\\n        return _mintTPto(params);\\n    }\\n\\n    /**\\n     * @notice caller sends Collateral Asset and recipient receives Pegged Token\\n     *  `vendor_` receives a markup in Fee Token if possible or in qAC if not\\n     *   Requires prior sender approval of Collateral Asset to this contract\\n     * @param i_ Pegged Token index to mint\\n     * @param qTP_ amount of Pegged Token to mint\\n     * @param qACmax_ maximum amount of Collateral Asset that can be spent\\n     * @param recipient_ address who receives the Pegged Token\\n     * @param vendor_ address who receives a markup\\n     * @return qACtotalNeeded amount of AC used to mint qTP\\n     * @return qFeeToken amount of Fee Token used by sender to pay fees. 0 if qAC is used instead\\n     */\\n    function mintTPtoViaVendor(\\n        uint256 i_,\\n        uint256 qTP_,\\n        uint256 qACmax_,\\n        address recipient_,\\n        address vendor_\\n    ) external returns (uint256 qACtotalNeeded, uint256 qFeeToken) {\\n        MintTPParams memory params = MintTPParams({\\n            i: i_,\\n            qTP: qTP_,\\n            qACmax: qACmax_,\\n            sender: msg.sender,\\n            recipient: recipient_,\\n            vendor: vendor_\\n        });\\n        return _mintTPto(params);\\n    }\\n\\n    /**\\n     * @notice caller sends Collateral Asset and receives Collateral Token and Pegged Token\\n     *  Requires prior sender approval of Collateral Asset to this contract\\n     *  This operation is done without checking coverage\\n     *  Collateral Token and Pegged Token are minted in equivalent proportions so that its price\\n     *  and global coverage are not modified.\\n     *  Reverts if qAC sent are insufficient.\\n     * @param i_ Pegged Token index\\n     * @param qTP_ amount of Pegged Token to mint\\n     * @param qACmax_ maximum amount of Collateral Asset that can be spent\\n     * @return qACtotalNeeded amount of AC used to mint Collateral Token and Pegged Token\\n     * @return qTCtoMint amount of Collateral Token minted\\n     * @return qFeeToken amount of Fee Token used by sender to pay fees. 0 if qAC is used instead\\n     */\\n    function mintTCandTP(\\n        uint256 i_,\\n        uint256 qTP_,\\n        uint256 qACmax_\\n    ) external returns (uint256 qACtotalNeeded, uint256 qTCtoMint, uint256 qFeeToken) {\\n        MintTCandTPParams memory params = MintTCandTPParams({\\n            i: i_,\\n            qTP: qTP_,\\n            qACmax: qACmax_,\\n            sender: msg.sender,\\n            recipient: msg.sender,\\n            vendor: address(0)\\n        });\\n        return _mintTCandTPto(params);\\n    }\\n\\n    /**\\n     * @notice caller sends Collateral Asset and receives Collateral Token and Pegged Token\\n     *  `vendor_` receives a markup in Fee Token if possible or in qAC if not\\n     *  Requires prior sender approval of Collateral Asset to this contract\\n     *  This operation is done without checking coverage\\n     *  Collateral Token and Pegged Token are minted in equivalent proportions so that its price\\n     *  and global coverage are not modified.\\n     *  Reverts if qAC sent are insufficient.\\n     * @param i_ Pegged Token index\\n     * @param qTP_ amount of Pegged Token to mint\\n     * @param qACmax_ maximum amount of Collateral Asset that can be spent\\n     * @param vendor_ address who receives a markup\\n     * @return qACtotalNeeded amount of AC used to mint Collateral Token and Pegged Token\\n     * @return qTCtoMint amount of Collateral Token minted\\n     * @return qFeeToken amount of Fee Token used by sender to pay fees. 0 if qAC is used instead\\n     */\\n    function mintTCandTPViaVendor(\\n        uint256 i_,\\n        uint256 qTP_,\\n        uint256 qACmax_,\\n        address vendor_\\n    ) external returns (uint256 qACtotalNeeded, uint256 qTCtoMint, uint256 qFeeToken) {\\n        MintTCandTPParams memory params = MintTCandTPParams({\\n            i: i_,\\n            qTP: qTP_,\\n            qACmax: qACmax_,\\n            sender: msg.sender,\\n            recipient: msg.sender,\\n            vendor: vendor_\\n        });\\n        return _mintTCandTPto(params);\\n    }\\n\\n    /**\\n     * @notice caller sends Collateral Asset and recipient receives Collateral Token and Pegged Token\\n     *  Requires prior sender approval of Collateral Asset to this contract\\n     *  This operation is done without checking coverage\\n     *  Collateral Token and Pegged Token are minted in equivalent proportions so that its price\\n     *  and global coverage are not modified.\\n     *  Reverts if qAC sent are insufficient.\\n     * @param i_ Pegged Token index\\n     * @param qTP_ amount of Pegged Token to mint\\n     * @param qACmax_ maximum amount of Collateral Asset that can be spent\\n     * @param recipient_ address who receives the Collateral Token and Pegged Token\\n     * @return qACtotalNeeded amount of AC used to mint Collateral Token and Pegged Token\\n     * @return qTCtoMint amount of Collateral Token minted\\n     * @return qFeeToken amount of Fee Token used by sender to pay fees. 0 if qAC is used instead\\n     */\\n    function mintTCandTPto(\\n        uint256 i_,\\n        uint256 qTP_,\\n        uint256 qACmax_,\\n        address recipient_\\n    ) external returns (uint256 qACtotalNeeded, uint256 qTCtoMint, uint256 qFeeToken) {\\n        MintTCandTPParams memory params = MintTCandTPParams({\\n            i: i_,\\n            qTP: qTP_,\\n            qACmax: qACmax_,\\n            sender: msg.sender,\\n            recipient: recipient_,\\n            vendor: address(0)\\n        });\\n        return _mintTCandTPto(params);\\n    }\\n\\n    /**\\n     * @notice caller sends Collateral Asset and recipient receives Collateral Token and Pegged Token\\n     *  `vendor_` receives a markup in Fee Token if possible or in qAC if not\\n     *  Requires prior sender approval of Collateral Asset to this contract\\n     *  This operation is done without checking coverage\\n     *  Collateral Token and Pegged Token are minted in equivalent proportions so that its price\\n     *  and global coverage are not modified.\\n     *  Reverts if qAC sent are insufficient.\\n     * @param i_ Pegged Token index\\n     * @param qTP_ amount of Pegged Token to mint\\n     * @param qACmax_ maximum amount of Collateral Asset that can be spent\\n     * @param recipient_ address who receives the Collateral Token and Pegged Token\\n     * @param vendor_ address who receives a markup\\n     * @return qACtotalNeeded amount of AC used to mint Collateral Token and Pegged Token\\n     * @return qTCtoMint amount of Collateral Token minted\\n     * @return qFeeToken amount of Fee Token used by sender to pay fees. 0 if qAC is used instead\\n     */\\n    function mintTCandTPtoViaVendor(\\n        uint256 i_,\\n        uint256 qTP_,\\n        uint256 qACmax_,\\n        address recipient_,\\n        address vendor_\\n    ) external returns (uint256 qACtotalNeeded, uint256 qTCtoMint, uint256 qFeeToken) {\\n        MintTCandTPParams memory params = MintTCandTPParams({\\n            i: i_,\\n            qTP: qTP_,\\n            qACmax: qACmax_,\\n            sender: msg.sender,\\n            recipient: recipient_,\\n            vendor: vendor_\\n        });\\n        return _mintTCandTPto(params);\\n    }\\n\\n    /**\\n     * @notice caller sends a Pegged Token and receives another one\\n     * @param iFrom_ owned Pegged Token index\\n     * @param iTo_ target Pegged Token index\\n     * @param qTP_ amount of owned Pegged Token to swap\\n     * @param qTPmin_ minimum amount of target Pegged Token that the sender expects to receive\\n     * @param qACmax_ maximum amount of Collateral Asset that can be spent in fees\\n     * @return qACFee amount of AC used to pay fee\\n     * @return qTPMinted amount of Pegged Token minted\\n     * @return qFeeToken amount of Fee Token used by sender to pay fees. 0 if qAC is used instead\\n     */\\n    function swapTPforTP(\\n        uint256 iFrom_,\\n        uint256 iTo_,\\n        uint256 qTP_,\\n        uint256 qTPmin_,\\n        uint256 qACmax_\\n    ) external returns (uint256 qACFee, uint256 qTPMinted, uint256 qFeeToken) {\\n        SwapTPforTPParams memory params = SwapTPforTPParams({\\n            iFrom: iFrom_,\\n            iTo: iTo_,\\n            qTP: qTP_,\\n            qTPmin: qTPmin_,\\n            qACmax: qACmax_,\\n            sender: msg.sender,\\n            recipient: msg.sender,\\n            vendor: address(0)\\n        });\\n        return _swapTPforTPto(params);\\n    }\\n\\n    /**\\n     * @notice caller sends a Pegged Token and receives another one\\n     *  `vendor_` receives a markup in Fee Token if possible or in qAC if not\\n     * @param iFrom_ owned Pegged Token index\\n     * @param iTo_ target Pegged Token index\\n     * @param qTP_ amount of owned Pegged Token to swap\\n     * @param qTPmin_ minimum amount of target Pegged Token that the sender expects to receive\\n     * @param qACmax_ maximum amount of Collateral Asset that can be spent in fees\\n     * @param vendor_ address who receives a markup\\n     * @return qACFee amount of AC used to pay fee\\n     * @return qTPMinted amount of Pegged Token minted\\n     * @return qFeeToken amount of Fee Token used by sender to pay fees. 0 if qAC is used instead\\n     */\\n    function swapTPforTPViaVendor(\\n        uint256 iFrom_,\\n        uint256 iTo_,\\n        uint256 qTP_,\\n        uint256 qTPmin_,\\n        uint256 qACmax_,\\n        address vendor_\\n    ) external returns (uint256 qACFee, uint256 qTPMinted, uint256 qFeeToken) {\\n        SwapTPforTPParams memory params = SwapTPforTPParams({\\n            iFrom: iFrom_,\\n            iTo: iTo_,\\n            qTP: qTP_,\\n            qTPmin: qTPmin_,\\n            qACmax: qACmax_,\\n            sender: msg.sender,\\n            recipient: msg.sender,\\n            vendor: vendor_\\n        });\\n        return _swapTPforTPto(params);\\n    }\\n\\n    /**\\n     * @notice caller sends a Pegged Token and recipient receives another one\\n     * @param iFrom_ owned Pegged Token index\\n     * @param iTo_ target Pegged Token index\\n     * @param qTP_ amount of owned Pegged Token to swap\\n     * @param qTPmin_ minimum amount of target Pegged Token that `recipient_` expects to receive\\n     * @param qACmax_ maximum amount of Collateral Asset that can be spent in fees\\n     * @param recipient_ address who receives the target Pegged Token\\n     * @return qACFee amount of AC used to pay fee\\n     * @return qTPMinted amount of Pegged Token minted\\n     * @return qFeeToken amount of Fee Token used by sender to pay fees. 0 if qAC is used instead\\n     */\\n    function swapTPforTPto(\\n        uint256 iFrom_,\\n        uint256 iTo_,\\n        uint256 qTP_,\\n        uint256 qTPmin_,\\n        uint256 qACmax_,\\n        address recipient_\\n    ) external returns (uint256 qACFee, uint256 qTPMinted, uint256 qFeeToken) {\\n        SwapTPforTPParams memory params = SwapTPforTPParams({\\n            iFrom: iFrom_,\\n            iTo: iTo_,\\n            qTP: qTP_,\\n            qTPmin: qTPmin_,\\n            qACmax: qACmax_,\\n            sender: msg.sender,\\n            recipient: recipient_,\\n            vendor: address(0)\\n        });\\n        return _swapTPforTPto(params);\\n    }\\n\\n    /**\\n     * @notice caller sends a Pegged Token and recipient receives another one\\n     *  `vendor_` receives a markup in Fee Token if possible or in qAC if not\\n     * @param iFrom_ owned Pegged Token index\\n     * @param iTo_ target Pegged Token index\\n     * @param qTP_ amount of owned Pegged Token to swap\\n     * @param qTPmin_ minimum amount of target Pegged Token that `recipient_` expects to receive\\n     * @param qACmax_ maximum amount of Collateral Asset that can be spent in fees\\n     * @param recipient_ address who receives the target Pegged Token\\n     * @param vendor_ address who receives a markup\\n     * @return qACFee amount of AC used to pay fee\\n     * @return qTPMinted amount of Pegged Token minted\\n     * @return qFeeToken amount of Fee Token used by sender to pay fees. 0 if qAC is used instead\\n     */\\n    function swapTPforTPtoViaVendor(\\n        uint256 iFrom_,\\n        uint256 iTo_,\\n        uint256 qTP_,\\n        uint256 qTPmin_,\\n        uint256 qACmax_,\\n        address recipient_,\\n        address vendor_\\n    ) external returns (uint256 qACFee, uint256 qTPMinted, uint256 qFeeToken) {\\n        SwapTPforTPParams memory params = SwapTPforTPParams({\\n            iFrom: iFrom_,\\n            iTo: iTo_,\\n            qTP: qTP_,\\n            qTPmin: qTPmin_,\\n            qACmax: qACmax_,\\n            sender: msg.sender,\\n            recipient: recipient_,\\n            vendor: vendor_\\n        });\\n        return _swapTPforTPto(params);\\n    }\\n\\n    /**\\n     * @notice caller sends a Pegged Token and receives Collateral Token\\n     * @param i_ Pegged Token index\\n     * @param qTP_ amount of owned Pegged Token to swap\\n     * @param qTCmin_ minimum amount of Collateral Token that the sender expects to receive\\n     * @param qACmax_ maximum amount of Collateral Asset that can be spent in fees\\n     * @return qACFee amount of AC used to pay fee\\n     * @return qTPMinted amount of Collateral Token minted\\n     * @return qFeeToken amount of Fee Token used by sender to pay fees. 0 if qAC is used instead\\n     */\\n    function swapTPforTC(\\n        uint256 i_,\\n        uint256 qTP_,\\n        uint256 qTCmin_,\\n        uint256 qACmax_\\n    ) external returns (uint256 qACFee, uint256 qTPMinted, uint256 qFeeToken) {\\n        SwapTPforTCParams memory params = SwapTPforTCParams({\\n            i: i_,\\n            qTP: qTP_,\\n            qTCmin: qTCmin_,\\n            qACmax: qACmax_,\\n            sender: msg.sender,\\n            recipient: msg.sender,\\n            vendor: address(0)\\n        });\\n        return _swapTPforTCto(params);\\n    }\\n\\n    /**\\n     * @notice caller sends a Pegged Token and receives Collateral Token\\n     *  `vendor_` receives a markup in Fee Token if possible or in qAC if not\\n     * @param i_ Pegged Token index\\n     * @param qTP_ amount of owned Pegged Token to swap\\n     * @param qTCmin_ minimum amount of Collateral Token that the sender expects to receive\\n     * @param qACmax_ maximum amount of Collateral Asset that can be spent in fees\\n     * @param vendor_ address who receives a markup\\n     * @return qACFee amount of AC used to pay fee\\n     * @return qTPMinted amount of Collateral Token minted\\n     * @return qFeeToken amount of Fee Token used by sender to pay fees. 0 if qAC is used instead\\n     */\\n    function swapTPforTCViaVendor(\\n        uint256 i_,\\n        uint256 qTP_,\\n        uint256 qTCmin_,\\n        uint256 qACmax_,\\n        address vendor_\\n    ) external returns (uint256 qACFee, uint256 qTPMinted, uint256 qFeeToken) {\\n        SwapTPforTCParams memory params = SwapTPforTCParams({\\n            i: i_,\\n            qTP: qTP_,\\n            qTCmin: qTCmin_,\\n            qACmax: qACmax_,\\n            sender: msg.sender,\\n            recipient: msg.sender,\\n            vendor: vendor_\\n        });\\n        return _swapTPforTCto(params);\\n    }\\n\\n    /**\\n     * @notice caller sends a Pegged Token and recipient receives Collateral Token\\n     * @param i_ Pegged Token index\\n     * @param qTP_ amount of owned Pegged Token to swap\\n     * @param qTCmin_ minimum amount of Collateral Token that `recipient_` expects to receive\\n     * @param qACmax_ maximum amount of Collateral Asset that can be spent in fees\\n     * @param recipient_ address who receives the Collateral Token\\n     * @return qACFee amount of AC used to pay fee\\n     * @return qTPMinted amount of Collateral Token minted\\n     * @return qFeeToken amount of Fee Token used by sender to pay fees. 0 if qAC is used instead\\n     */\\n    function swapTPforTCto(\\n        uint256 i_,\\n        uint256 qTP_,\\n        uint256 qTCmin_,\\n        uint256 qACmax_,\\n        address recipient_\\n    ) external returns (uint256 qACFee, uint256 qTPMinted, uint256 qFeeToken) {\\n        SwapTPforTCParams memory params = SwapTPforTCParams({\\n            i: i_,\\n            qTP: qTP_,\\n            qTCmin: qTCmin_,\\n            qACmax: qACmax_,\\n            sender: msg.sender,\\n            recipient: recipient_,\\n            vendor: address(0)\\n        });\\n        return _swapTPforTCto(params);\\n    }\\n\\n    /**\\n     * @notice caller sends a Pegged Token and recipient receives Collateral Token\\n     *  `vendor_` receives a markup in Fee Token if possible or in qAC if not\\n     * @param i_ Pegged Token index\\n     * @param qTP_ amount of owned Pegged Token to swap\\n     * @param qTCmin_ minimum amount of Collateral Token that `recipient_` expects to receive\\n     * @param qACmax_ maximum amount of Collateral Asset that can be spent in fees\\n     * @param recipient_ address who receives the Collateral Token\\n     * @param vendor_ address who receives a markup\\n     * @return qACFee amount of AC used to pay fee\\n     * @return qTPMinted amount of Collateral Token minted\\n     * @return qFeeToken amount of Fee Token used by sender to pay fees. 0 if qAC is used instead\\n     */\\n    function swapTPforTCtoViaVendor(\\n        uint256 i_,\\n        uint256 qTP_,\\n        uint256 qTCmin_,\\n        uint256 qACmax_,\\n        address recipient_,\\n        address vendor_\\n    ) external returns (uint256 qACFee, uint256 qTPMinted, uint256 qFeeToken) {\\n        SwapTPforTCParams memory params = SwapTPforTCParams({\\n            i: i_,\\n            qTP: qTP_,\\n            qTCmin: qTCmin_,\\n            qACmax: qACmax_,\\n            sender: msg.sender,\\n            recipient: recipient_,\\n            vendor: vendor_\\n        });\\n        return _swapTPforTCto(params);\\n    }\\n\\n    /**\\n     * @notice caller sends Collateral Token and receives Pegged Token\\n     * @param i_ Pegged Token index\\n     * @param qTC_ amount of Collateral Token to swap\\n     * @param qTPmin_ minimum amount of Pegged Token that the sender expects to receive\\n     * @param qACmax_ maximum amount of Collateral Asset that can be spent in fees\\n     * @return qACFee amount of AC used to pay fee\\n     * @return qTPMinted amount of Pegged Token minted\\n     * @return qFeeToken amount of Fee Token used by sender to pay fees. 0 if qAC is used instead\\n     */\\n    function swapTCforTP(\\n        uint256 i_,\\n        uint256 qTC_,\\n        uint256 qTPmin_,\\n        uint256 qACmax_\\n    ) external returns (uint256 qACFee, uint256 qTPMinted, uint256 qFeeToken) {\\n        SwapTCforTPParams memory params = SwapTCforTPParams({\\n            i: i_,\\n            qTC: qTC_,\\n            qTPmin: qTPmin_,\\n            qACmax: qACmax_,\\n            sender: msg.sender,\\n            recipient: msg.sender,\\n            vendor: address(0)\\n        });\\n        return _swapTCforTPto(params);\\n    }\\n\\n    /**\\n     * @notice caller sends Collateral Token and receives Pegged Token\\n     *  `vendor_` receives a markup in Fee Token if possible or in qAC if not\\n     * @param i_ Pegged Token index\\n     * @param qTC_ amount of Collateral Token to swap\\n     * @param qTPmin_ minimum amount of Pegged Token that the sender expects to receive\\n     * @param qACmax_ maximum amount of Collateral Asset that can be spent in fees\\n     * @param vendor_ address who receives a markup\\n     * @return qACFee amount of AC used to pay fee\\n     * @return qTPMinted amount of Pegged Token minted\\n     * @return qFeeToken amount of Fee Token used by sender to pay fees. 0 if qAC is used instead\\n     */\\n    function swapTCforTPViaVendor(\\n        uint256 i_,\\n        uint256 qTC_,\\n        uint256 qTPmin_,\\n        uint256 qACmax_,\\n        address vendor_\\n    ) external returns (uint256 qACFee, uint256 qTPMinted, uint256 qFeeToken) {\\n        SwapTCforTPParams memory params = SwapTCforTPParams({\\n            i: i_,\\n            qTC: qTC_,\\n            qTPmin: qTPmin_,\\n            qACmax: qACmax_,\\n            sender: msg.sender,\\n            recipient: msg.sender,\\n            vendor: vendor_\\n        });\\n        return _swapTCforTPto(params);\\n    }\\n\\n    /**\\n     * @notice caller sends Collateral Token and recipient receives Pegged Token\\n     * @param i_ Pegged Token index\\n     * @param qTC_ amount of Collateral Token to swap\\n     * @param qTPmin_ minimum amount of Pegged Token that `recipient_` expects to receive\\n     * @param qACmax_ maximum amount of Collateral Asset that can be spent in fees\\n     * @param recipient_ address who receives the Pegged Token\\n     * @return qACFee amount of AC used to pay fee\\n     * @return qTPMinted amount of Pegged Token minted\\n     * @return qFeeToken amount of Fee Token used by sender to pay fees. 0 if qAC is used instead\\n     */\\n    function swapTCforTPto(\\n        uint256 i_,\\n        uint256 qTC_,\\n        uint256 qTPmin_,\\n        uint256 qACmax_,\\n        address recipient_\\n    ) external returns (uint256 qACFee, uint256 qTPMinted, uint256 qFeeToken) {\\n        SwapTCforTPParams memory params = SwapTCforTPParams({\\n            i: i_,\\n            qTC: qTC_,\\n            qTPmin: qTPmin_,\\n            qACmax: qACmax_,\\n            sender: msg.sender,\\n            recipient: recipient_,\\n            vendor: address(0)\\n        });\\n        return _swapTCforTPto(params);\\n    }\\n\\n    /**\\n     * @notice caller sends Collateral Token and recipient receives Pegged Token\\n     *  `vendor_` receives a markup in Fee Token if possible or in qAC if not\\n     * @param i_ Pegged Token index\\n     * @param qTC_ amount of Collateral Token to swap\\n     * @param qTPmin_ minimum amount of Pegged Token that `recipient_` expects to receive\\n     * @param qACmax_ maximum amount of Collateral Asset that can be spent in fees\\n     * @param recipient_ address who receives the Pegged Token\\n     * @param vendor_ address who receives a markup\\n     * @return qACFee amount of AC used to pay fee\\n     * @return qTPMinted amount of Pegged Token minted\\n     * @return qFeeToken amount of Fee Token used by sender to pay fees. 0 if qAC is used instead\\n     */\\n    function swapTCforTPtoViaVendor(\\n        uint256 i_,\\n        uint256 qTC_,\\n        uint256 qTPmin_,\\n        uint256 qACmax_,\\n        address recipient_,\\n        address vendor_\\n    ) external returns (uint256 qACFee, uint256 qTPMinted, uint256 qFeeToken) {\\n        SwapTCforTPParams memory params = SwapTCforTPParams({\\n            i: i_,\\n            qTC: qTC_,\\n            qTPmin: qTPmin_,\\n            qACmax: qACmax_,\\n            sender: msg.sender,\\n            recipient: recipient_,\\n            vendor: vendor_\\n        });\\n        return _swapTCforTPto(params);\\n    }\\n\\n    /**\\n     * @notice Refreshes the AC holdings for the Bucket\\n     * @dev Intended to be use as notification after an RC20 AC transfer to this contract\\n     */\\n    function refreshACBalance() external {\\n        // On this implementation, AC token balance has full correlation with nACcb\\n        if (acBalanceOf(address(this)) - nACcb > 0) _depositAC(acBalanceOf(address(this)) - nACcb);\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x5e762a326f9588c7a0055c8dc184af7384cd001c9244592006740d9db847221f\",\"license\":\"UNLICENSED\"},\"contracts/core/MocBaseBucket.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.16;\\n\\nimport { IMocRC20 } from \\\"../interfaces/IMocRC20.sol\\\";\\nimport { MocTC } from \\\"../tokens/MocTC.sol\\\";\\nimport { IPriceProvider } from \\\"../interfaces/IPriceProvider.sol\\\";\\nimport { MocUpgradable } from \\\"../governance/MocUpgradable.sol\\\";\\n/* solhint-disable-next-line max-line-length */\\nimport { ReentrancyGuardUpgradeable } from \\\"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\\\";\\nimport { IERC20 } from \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\n/**\\n * @title MocBaseBucket: Moc Collateral Bag\\n * @notice MocBaseBucket holds Bucket Zero state, both for the Collateral Bag and PeggedTokens Items.\\n * @dev Abstracts all rw operations on the main bucket and expose all calculations relative to its state.\\n */\\nabstract contract MocBaseBucket is MocUpgradable, ReentrancyGuardUpgradeable {\\n    // ------- Events -------\\n\\n    event ContractLiquidated();\\n\\n    // ------- Custom Errors -------\\n    error MissingProviderPrice(address priceProviderAddress_);\\n    error Liquidated();\\n    error LowCoverage(uint256 cglb_, uint256 covThrld_);\\n\\n    // ------- Structs -------\\n    struct PegContainerItem {\\n        // total supply of Pegged Token\\n        uint256 nTP;\\n        // PegToken PriceFeed address\\n        IPriceProvider priceProvider;\\n    }\\n\\n    struct PeggedTokenIndex {\\n        // Pegged Token index\\n        uint256 index;\\n        // true if Pegged Token exists\\n        bool exists;\\n    }\\n\\n    struct InitializeBaseBucketParams {\\n        // Fee Token contract address\\n        address feeTokenAddress;\\n        // Fee Token price provider address\\n        address feeTokenPriceProviderAddress;\\n        // Collateral Token contract address\\n        address tcTokenAddress;\\n        // Moc Fee Flow contract address\\n        address mocFeeFlowAddress;\\n        // moc appreciation beneficiary Address\\n        address mocAppreciationBeneficiaryAddress;\\n        // protected state threshold [PREC]\\n        uint256 protThrld;\\n        // liquidation coverage threshold [PREC]\\n        uint256 liqThrld;\\n        // pct retain on fees to be re-injected as Collateral, while paying fees with AC [PREC]\\n        uint256 feeRetainer;\\n        // additional fee pct applied on mint Collateral Tokens operations [PREC]\\n        uint256 tcMintFee;\\n        // additional fee pct applied on redeem Collateral Tokens operations [PREC]\\n        uint256 tcRedeemFee;\\n        // additional fee pct applied on swap a Pegged Token for another Pegged Token [PREC]\\n        uint256 swapTPforTPFee;\\n        // additional fee pct applied on swap a Pegged Token for Collateral Token [PREC]\\n        uint256 swapTPforTCFee;\\n        // additional fee pct applied on swap Collateral Token for a Pegged Token [PREC]\\n        uint256 swapTCforTPFee;\\n        // additional fee pct applied on redeem Collateral Token and Pegged Token in one operations [PREC]\\n        uint256 redeemTCandTPFee;\\n        // additional fee pct applied on mint Collateral Token and Pegged Token in one operation [PREC]\\n        uint256 mintTCandTPFee;\\n        // pct applied on the top of the operation`s fee when using Fee Token as fee payment method [PREC]\\n        // e.g. if tcMintFee = 1%, feeTokenPct = 50% => qFeeToken = 0.5%\\n        uint256 feeTokenPct;\\n        // pct of the gain because Pegged Tokens devaluation that is transferred\\n        // in Collateral Asset to Moc Fee Flow during the settlement [PREC]\\n        uint256 successFee;\\n        // pct of the gain because Pegged Tokens devaluation that is returned\\n        // in Pegged Tokens to appreciation beneficiary during the settlement [PREC]\\n        uint256 appreciationFactor;\\n        // number of blocks between settlements\\n        uint256 bes;\\n    }\\n\\n    // ------- Storage -------\\n\\n    // Fee Token\\n    IERC20 public feeToken;\\n    // Fee Token price provider\\n    IPriceProvider public feeTokenPriceProvider;\\n    // total amount of Collateral Asset held in the Collateral Bag\\n    // WARN: On RC20 implementation, this correlates with contract acBalance\\n    uint256 public nACcb;\\n    // amount of Collateral Asset that the Vaults owe to the Collateral Bag\\n    // this variable is not used and is reserved for a future upgrade of the protocol\\n    // slither-disable-next-line constable-states\\n    uint256 internal nACioucb;\\n\\n    // Collateral Token\\n    MocTC public tcToken;\\n    // Collateral Token in the Collateral Bag\\n    uint256 public nTCcb;\\n\\n    // Pegged Tokens MocRC20 addresses\\n    IMocRC20[] public tpTokens;\\n    // Pegged Token indexes\\n    mapping(address => PeggedTokenIndex) public peggedTokenIndex;\\n    // peg container\\n    PegContainerItem[] public pegContainer;\\n    // Pegged Token prices, at which they can be redeemed after liquidation event\\n    uint256[] internal tpLiqPrices;\\n    // pct of the gain because Pegged Tokens devaluation that is transferred\\n    // in Collateral Asset to Moc Fee Flow during the settlement [PREC]\\n    uint256 public successFee;\\n    // pct of the gain because Pegged Tokens devaluation that is returned\\n    // in Pegged Tokens to appreciation beneficiary during the settlement [PREC]\\n    uint256 public appreciationFactor;\\n\\n    // ------- Storage Fees -------\\n\\n    // pct retain on fees to be re-injected as Collateral, while paying fees with AC [PREC]\\n    uint256 public feeRetainer; // 0% = 0; 1% = 10 ** 16; 100% = 10 ** 18\\n    // addition fee pct applied on Collateral Tokens mint [PREC]\\n    uint256 public tcMintFee; // 0% = 0; 1% = 10 ** 16; 100% = 10 ** 18\\n    // addition fee pct applied on Collateral Tokens redeem [PREC]\\n    uint256 public tcRedeemFee; // 0% = 0; 1% = 10 ** 16; 100% = 10 ** 18\\n    // additional fee pct applied on swap a Pegged Token for another Pegged Token [PREC]\\n    uint256 public swapTPforTPFee; // 0% = 0; 1% = 10 ** 16; 100% = 10 ** 18\\n    // additional fee pct applied on swap a Pegged Token for Collateral Token [PREC]\\n    uint256 public swapTPforTCFee; // 0% = 0; 1% = 10 ** 16; 100% = 10 ** 18\\n    // additional fee pct applied on swap Collateral Token for a Pegged Token [PREC]\\n    uint256 public swapTCforTPFee; // 0% = 0; 1% = 10 ** 16; 100% = 10 ** 18\\n    // additional fee pct applied on redeem Collateral Token and Pegged Token in one operations [PREC]\\n    uint256 public redeemTCandTPFee; // 0% = 0; 1% = 10 ** 16; 100% = 10 ** 18\\n    // additional fee pct applied on mint Collateral Token and Pegged Token in one operation [PREC]\\n    uint256 public mintTCandTPFee; // 0% = 0; 1% = 10 ** 16; 100% = 10 ** 18\\n    // pct applied on the top of the operation`s fee when using Fee Token as fee payment method [PREC]\\n    // e.g. if tcMintFee = 1%, FeeTokenPct = 50% => qFeeToken = 0.5%\\n    uint256 public feeTokenPct; // 0% = 0; 1% = 10 ** 16; 100% = 10 ** 18\\n\\n    // addition fee pct applied on Pegged Tokens mint [PREC]\\n    uint256[] public tpMintFee; // 0% = 0; 1% = 10 ** 16; 100% = 10 ** 18\\n    // addition fee pct applied on Pegged Tokens redeem [PREC]\\n    uint256[] public tpRedeemFee; // 0% = 0; 1% = 10 ** 16; 100% = 10 ** 18\\n\\n    // Moc Fee Flow contract address\\n    address public mocFeeFlowAddress;\\n    // Moc appreciation beneficiary address\\n    address public mocAppreciationBeneficiaryAddress;\\n\\n    // ------- Storage Coverage Tracking -------\\n\\n    // Target coverage for each Pegged Token [PREC]\\n    uint256[] public tpCtarg;\\n    // Coverage protected state threshold [PREC]\\n    uint256 public protThrld;\\n    // Coverage liquidation threshold [PREC]\\n    uint256 public liqThrld;\\n    // Liquidation enabled\\n    bool public liqEnabled;\\n    // Irreversible state, peg lost, contract is terminated and all funds can be withdrawn\\n    bool public liquidated;\\n\\n    // ------- Storage Settlement -------\\n\\n    // number of blocks between settlements\\n    uint256 public bes;\\n    // next settlement block\\n    uint256 public bns;\\n\\n    // ------- Storage Success Fee Tracking -------\\n\\n    // profit and loss in collateral asset for each Pegged Token because its devaluation [N]\\n    // if it is positive it is a profit that will be distributed and reset during settlement\\n    int256[] internal tpiou;\\n    // Pegged Token price used at last operation(redeem or mint) [PREC]\\n    uint256[] internal pACtpLstop;\\n\\n    // ------- Modifiers -------\\n    /// @notice functions with this modifier reverts being in liquidated state\\n    modifier notLiquidated() {\\n        _checkLiquidated();\\n        _;\\n    }\\n\\n    // ------- Initializer -------\\n    /**\\n     * @notice contract initializer\\n     * @param initializeBaseBucketParams_ contract initializer params\\n     * @dev   feeTokenAddress Fee Token contract address\\n     *        feeTokenPriceProviderAddress Fee Token price provider contract address\\n     *        tcTokenAddress Collateral Token contract address\\n     *        mocFeeFlowAddress Moc Fee Flow contract address\\n     *        mocAppreciationBeneficiaryAddress Moc appreciation beneficiary address\\n     *        protThrld protected coverage threshold [PREC]\\n     *        liqThrld liquidation coverage threshold [PREC]\\n     *        feeRetainer pct retain on fees to be re-injected as Collateral, while paying fees with AC [PREC]\\n     *        tcMintFee additional fee pct applied on mint Collateral Tokens operations [PREC]\\n     *        tcRedeemFee additional fee pct applied on redeem Collateral Tokens operations [PREC]\\n     *        swapTPforTPFee additional fee pct applied on swap a Pegged Token for another Pegged Token [PREC]\\n     *        swapTPforTCFee additional fee pct applied on swap a Pegged Token for Collateral Token [PREC]\\n     *        swapTCforTPFee additional fee pct applied on swap Collateral Token for a Pegged Token [PREC]\\n     *        redeemTCandTPFee additional fee pct applied on redeem Collateral Token and Pegged Token [PREC]\\n     *        mintTCandTPFee additional fee pct applied on mint Collateral Token and Pegged Token [PREC]\\n     *        feeTokenPct pct applied on the top of the operation`s fee when using\\n     *          Fee Token as fee payment method [PREC]\\n     *        successFee pct of the gain because Pegged Tokens devaluation that is transferred\\n     *          in Collateral Asset to Moc Fee Flow during the settlement [PREC]\\n     *        appreciationFactor pct of the gain because Pegged Tokens devaluation that is returned\\n     *          in Pegged Tokens to appreciation beneficiary during the settlement [PREC]\\n     *        bes number of blocks between settlements\\n     */\\n    function __MocBaseBucket_init_unchained(\\n        InitializeBaseBucketParams calldata initializeBaseBucketParams_\\n    ) internal onlyInitializing {\\n        if (initializeBaseBucketParams_.protThrld < ONE) revert InvalidValue();\\n        _checkLessThanOne(initializeBaseBucketParams_.feeRetainer);\\n        _checkLessThanOne(initializeBaseBucketParams_.tcMintFee);\\n        _checkLessThanOne(initializeBaseBucketParams_.tcRedeemFee);\\n        _checkLessThanOne(initializeBaseBucketParams_.swapTPforTPFee);\\n        _checkLessThanOne(initializeBaseBucketParams_.swapTPforTCFee);\\n        _checkLessThanOne(initializeBaseBucketParams_.swapTCforTPFee);\\n        _checkLessThanOne(initializeBaseBucketParams_.redeemTCandTPFee);\\n        _checkLessThanOne(initializeBaseBucketParams_.mintTCandTPFee);\\n        _checkLessThanOne(initializeBaseBucketParams_.feeTokenPct);\\n        _checkLessThanOne(initializeBaseBucketParams_.successFee + initializeBaseBucketParams_.appreciationFactor);\\n        feeToken = IERC20(initializeBaseBucketParams_.feeTokenAddress);\\n        feeTokenPriceProvider = IPriceProvider(initializeBaseBucketParams_.feeTokenPriceProviderAddress);\\n        tcToken = MocTC(initializeBaseBucketParams_.tcTokenAddress);\\n        mocFeeFlowAddress = initializeBaseBucketParams_.mocFeeFlowAddress;\\n        mocAppreciationBeneficiaryAddress = initializeBaseBucketParams_.mocAppreciationBeneficiaryAddress;\\n        protThrld = initializeBaseBucketParams_.protThrld;\\n        liqThrld = initializeBaseBucketParams_.liqThrld;\\n        feeRetainer = initializeBaseBucketParams_.feeRetainer;\\n        tcMintFee = initializeBaseBucketParams_.tcMintFee;\\n        tcRedeemFee = initializeBaseBucketParams_.tcRedeemFee;\\n        swapTPforTPFee = initializeBaseBucketParams_.swapTPforTPFee;\\n        swapTPforTCFee = initializeBaseBucketParams_.swapTPforTCFee;\\n        swapTCforTPFee = initializeBaseBucketParams_.swapTCforTPFee;\\n        redeemTCandTPFee = initializeBaseBucketParams_.redeemTCandTPFee;\\n        mintTCandTPFee = initializeBaseBucketParams_.mintTCandTPFee;\\n        feeTokenPct = initializeBaseBucketParams_.feeTokenPct;\\n        successFee = initializeBaseBucketParams_.successFee;\\n        appreciationFactor = initializeBaseBucketParams_.appreciationFactor;\\n        bes = initializeBaseBucketParams_.bes;\\n        bns = block.number + initializeBaseBucketParams_.bes;\\n        liquidated = false;\\n        liqEnabled = false;\\n    }\\n\\n    // ------- Internal Functions -------\\n\\n    /**\\n     * reverts if in liquidated state\\n     */\\n    function _checkLiquidated() internal view {\\n        if (liquidated) revert Liquidated();\\n    }\\n\\n    /**\\n     * @notice Adds Collateral Asset to the Bucket\\n     * @param qAC_ amount of Collateral Asset to add\\n     */\\n    function _depositAC(uint256 qAC_) internal {\\n        nACcb += qAC_;\\n    }\\n\\n    /**\\n     * @notice Adds Collateral Token and Collateral Asset to the Bucket\\n     * @param qTC_ amount of Collateral Token to add\\n     * @param qAC_ amount of Collateral Asset to add\\n     */\\n    function _depositTC(uint256 qTC_, uint256 qAC_) internal {\\n        nTCcb += qTC_;\\n        _depositAC(qAC_);\\n    }\\n\\n    /**\\n     * @notice Subtracts Collateral Token and Collateral Asset from the Bucket\\n     * @param qTC_ amount of Collateral Token to subtract\\n     * @param qAC_ amount of Collateral Asset to subtract\\n     */\\n    function _withdrawTC(uint256 qTC_, uint256 qAC_) internal {\\n        nTCcb -= qTC_;\\n        nACcb -= qAC_;\\n    }\\n\\n    /**\\n     * @notice Adds Pegged Token and Collateral Asset to the Bucket\\n     * @param i_ Pegged Token index\\n     * @param qTP_ amount of Pegged Token to add\\n     * @param qAC_ amount of Collateral Asset to add\\n     */\\n    function _depositTP(uint256 i_, uint256 qTP_, uint256 qAC_) internal {\\n        pegContainer[i_].nTP += qTP_;\\n        _depositAC(qAC_);\\n    }\\n\\n    /**\\n     * @notice Subtracts Pegged Token and Collateral Asset from the Bucket\\n     * @param i_ Pegged Token index\\n     * @param qTP_ amount of Pegged Token to subtract\\n     * @param qAC_ amount of Collateral Asset to subtract\\n     */\\n    function _withdrawTP(uint256 i_, uint256 qTP_, uint256 qAC_) internal {\\n        pegContainer[i_].nTP -= qTP_;\\n        nACcb -= qAC_;\\n    }\\n\\n    /**\\n     * @notice Adds Pegged Token and Collateral Asset to the Bucket and mints `qTP_` for Pegged Token `i_`\\n     * @param i_ Pegged Token index\\n     * @param qTP_ amount of Pegged Token to add\\n     * @param qAC_ amount of Collateral Asset to add\\n     * @param recipient_ the account to mint tokens to\\n     */\\n    function _depositAndMintTP(uint256 i_, uint256 qTP_, uint256 qAC_, address recipient_) internal {\\n        // add qTP and qAC to the Bucket\\n        _depositTP(i_, qTP_, qAC_);\\n        // mint qTP to the recipient\\n        tpTokens[i_].mint(recipient_, qTP_);\\n    }\\n\\n    /**\\n     * @notice subtracts Pegged Token and Collateral Asset from the Bucket and burns `qTP_` for Pegged Token `i_`\\n     * @param i_ Pegged Token index\\n     * @param qTP_ amount of Pegged Token to subtract\\n     * @param qAC_ amount of Collateral Asset to subtract\\n     * @param toBurnFrom_ the account to burn tokens from\\n     */\\n    function _withdrawAndBurnTP(uint256 i_, uint256 qTP_, uint256 qAC_, address toBurnFrom_) internal {\\n        // sub qTP and qAC from the Bucket\\n        _withdrawTP(i_, qTP_, qAC_);\\n        // burn qTP from this address\\n        tpTokens[i_].burn(toBurnFrom_, qTP_);\\n    }\\n\\n    /**\\n     * @notice Adds Collateral Token and Collateral Asset to the Bucket and mints qTCtoMint\\n     * @param qTC_ amount of Collateral Token to add\\n     * @param qAC_ amount of Collateral Asset to add\\n     * @param recipient_ the account to mint tokens to\\n     */\\n    function _depositAndMintTC(uint256 qTC_, uint256 qAC_, address recipient_) internal {\\n        // add qTC to the Bucket\\n        _depositTC(qTC_, qAC_);\\n        // mint qTC to the recipient\\n        tcToken.mint(recipient_, qTC_);\\n    }\\n\\n    /**\\n     * @notice Subtracts Collateral Token and Collateral Asset from the Bucket and burns `qTC_`\\n     * @param qTC_ amount of Collateral Token to subtract\\n     * @param qAC_ amount of Collateral Asset to subtract\\n     * @param toBurnFrom_ the account to burn tokens from\\n     */\\n    function _withdrawAndBurnTC(uint256 qTC_, uint256 qAC_, address toBurnFrom_) internal {\\n        // sub qTC and qAC from the Bucket\\n        _withdrawTC(qTC_, qAC_);\\n        // burn qTC from this address\\n        tcToken.burn(toBurnFrom_, qTC_);\\n    }\\n\\n    /**\\n     * @notice get amount of Collateral Asset available considering how many are locked by Pegged Token adjusted by EMA\\n     * @param ctargemaCA_ target coverage adjusted by the moving average of the value of the Collateral Asset [PREC]\\n     * @param lckAC_ amount of Collateral Asset locked by Pegged Token [N]\\n     * @param nACgain_ amount of collateral asset to be distributed during settlement [N]\\n     * @return lckACemaAdjusted [PREC]\\n     */\\n    function _getLckACemaAdjusted(\\n        uint256 ctargemaCA_,\\n        uint256 lckAC_,\\n        uint256 nACgain_\\n    ) internal view returns (uint256 lckACemaAdjusted) {\\n        // if coverage <= ctargemaCA, we force that there be 0 AC available due to possible rounding errors\\n        if (_getCglb(lckAC_, nACgain_) <= ctargemaCA_) return 0;\\n        // [PREC] = [N] * [PREC] - [PREC] * [N]\\n        return _getTotalACavailable(nACgain_) * PRECISION - ctargemaCA_ * lckAC_;\\n    }\\n\\n    /**\\n     * @notice get amount of Collateral Token available to redeem\\n     * @param ctargemaCA_ target coverage adjusted by the moving average of the value of the Collateral Asset [PREC]\\n     * @param lckAC_ amount of Collateral Asset locked by Pegged Token [N]\\n     * @param nACgain_ amount of collateral asset to be distributed during settlement [N]\\n     * @return tcAvailableToRedeem [N]\\n     */\\n    function _getTCAvailableToRedeem(\\n        uint256 ctargemaCA_,\\n        uint256 lckAC_,\\n        uint256 nACgain_\\n    ) internal view returns (uint256 tcAvailableToRedeem) {\\n        // [PREC]\\n        uint256 lckACemaAdjusted = _getLckACemaAdjusted(ctargemaCA_, lckAC_, nACgain_);\\n        // [N] = [PREC] / [PREC]\\n        return lckACemaAdjusted / _getPTCac(lckAC_, nACgain_);\\n    }\\n\\n    /**\\n     * @notice get amount of Pegged Token available to mint\\n     * @param ctargemaCA_ target coverage adjusted by the moving average of the value of the Collateral Asset\\n     * @param ctargemaTP_ target coverage adjusted by the moving average of the value of a Pegged Token\\n     * @param pACtp_ Collateral Asset price in amount of Pegged Token [PREC]\\n     * @param lckAC_ amount of Collateral Asset locked by Pegged Token [N]\\n     * @param nACgain_ amount of collateral asset to be distributed during settlement [N]\\n     * @return tpAvailableToMint [N]\\n     */\\n    function _getTPAvailableToMint(\\n        uint256 ctargemaCA_,\\n        uint256 ctargemaTP_,\\n        uint256 pACtp_,\\n        uint256 lckAC_,\\n        uint256 nACgain_\\n    ) internal view returns (uint256 tpAvailableToMint) {\\n        // [N] = ([PREC] * [PREC] / [PREC]) / [PREC]\\n        return ((_getLckACemaAdjusted(ctargemaCA_, lckAC_, nACgain_) * pACtp_) / (ctargemaTP_ - ONE)) / PRECISION;\\n    }\\n\\n    /**\\n     * @notice evaluates whether or not the coverage is over the cThrld_, reverts if below\\n     * @param cThrld_ coverage threshold to check for [PREC]\\n     * @param pACtps_ array of all AC prices for each TP, with [PREC]\\n     * @return lckAC amount of Collateral Asset locked by Pegged Tokens [PREC]\\n     * @return nACgain amount of collateral asset to be distributed during settlement [N]\\n     */\\n    function _evalCoverage(\\n        uint256 cThrld_,\\n        uint256[] memory pACtps_\\n    ) internal view returns (uint256 lckAC, uint256 nACgain) {\\n        (lckAC, nACgain) = _calcLckACandACgain(pACtps_);\\n        uint256 cglb = _getCglb(lckAC, nACgain);\\n        // check if coverage is above the given threshold\\n        if (cglb <= cThrld_) revert LowCoverage(cglb, cThrld_);\\n    }\\n\\n    /**\\n     * @dev Calculates price at liquidation event as a relation between Pegs total supply\\n     * and the amount of Asset Collateral available to distribute\\n     */\\n    function settleLiquidationPrices() internal {\\n        // Total amount of AC available to be redeemed\\n        uint256 totalACAvailable = nACcb;\\n        if (totalACAvailable == 0) return;\\n        uint256 pegAmount = pegContainer.length;\\n        // this could be get by getLckAC(), but given the prices are needed after,\\n        // it's better to cache them here.\\n        uint256 lckAC;\\n        // Auxiliary cache of pegs pACtp\\n        uint256[] memory pACtps = new uint256[](pegAmount);\\n        // for each peg, calculates the proportion of AC reserves it's locked\\n\\n        for (uint256 i = 0; i < pegAmount; i = unchecked_inc(i)) {\\n            pACtps[i] = getPACtp(i);\\n            // [N] = [N] * [PREC] / [PREC]\\n            lckAC += _divPrec(pegContainer[i].nTP, pACtps[i]);\\n        }\\n        for (uint256 i = 0; i < pegAmount; i = unchecked_inc(i)) {\\n            // [PREC] = [PREC] * [N] / [N];\\n            tpLiqPrices.push((pACtps[i] * lckAC) / totalACAvailable);\\n        }\\n    }\\n\\n    /**\\n     * @notice updates Pegged Token P&L and last operation price\\n     * @param i_ Pegged Token index\\n     * @param pACtp_ Pegged Token price [PREC]\\n     */\\n    function _updateTPtracking(uint256 i_, uint256 pACtp_) internal {\\n        tpiou[i_] += _calcOtfPnLTP(i_, pACtp_);\\n        pACtpLstop[i_] = pACtp_;\\n    }\\n\\n    /**\\n     * @notice calculates on the fly Pegged Token P&L\\n     * @param i_ Pegged Token index\\n     * @param pACtp_ Pegged Token price [PREC]\\n     * @return otfPnLtp [N]\\n     */\\n    function _calcOtfPnLTP(uint256 i_, uint256 pACtp_) internal view returns (int256 otfPnLtp) {\\n        // [PREC] = [N] * [PREC]\\n        uint256 nTP = pegContainer[i_].nTP * PRECISION;\\n        // [N] = [PREC] / [PREC] - [PREC] / [PREC]\\n        return int256(nTP / pACtpLstop[i_]) - int256(nTP / pACtp_);\\n    }\\n\\n    /**\\n     * @notice gets accumulated Pegged Token P&L\\n     * @param i_ Pegged Token index\\n     * @param pACtp_ Pegged Token price [PREC]\\n     * @return tpGain amount of Pegged Token to be minted during settlement [N]\\n     * @return adjPnLtpi total amount of P&L in Collateral Asset [N]\\n     */\\n    function _getPnLTP(uint256 i_, uint256 pACtp_) internal view returns (uint256 tpGain, uint256 adjPnLtpi) {\\n        // [N] = [N] + [N]\\n        int256 adjPnLtpiAux = tpiou[i_] + _calcOtfPnLTP(i_, pACtp_);\\n        if (adjPnLtpiAux > 0) {\\n            adjPnLtpi = uint256(adjPnLtpiAux);\\n            // [N] = (([PREC] * [PREC] / [PREC]) * [N]) / [PREC]\\n            tpGain = _mulPrec(_mulPrec(appreciationFactor, pACtp_), adjPnLtpi);\\n        }\\n        return (tpGain, adjPnLtpi);\\n    }\\n\\n    /**\\n     * @notice get amount of Collateral Asset locked by Pegged Token and\\n     *  amount of collateral asset to be distributed during settlement\\n     * @return lckAC [N]\\n     * @return nACgain [N]\\n     */\\n    function _getLckACandACgain() internal view returns (uint256 lckAC, uint256 nACgain) {\\n        uint256[] memory pACtps = _getPACtps();\\n        return _calcLckACandACgain(pACtps);\\n    }\\n\\n    /**\\n     * @notice calculates the amount of Collateral Asset locked by Pegged Token and\\n     *  amount of collateral asset to be distributed during settlement\\n     * @param pACtps_ array of all AC prices for each TP, with [PREC]\\n     * @return lckAC [N]\\n     * @return nACgain [N]\\n     */\\n    function _calcLckACandACgain(uint256[] memory pACtps_) internal view returns (uint256 lckAC, uint256 nACgain) {\\n        uint256 pegAmount = pegContainer.length;\\n        for (uint256 i = 0; i < pegAmount; i = unchecked_inc(i)) {\\n            uint256 pACtp = pACtps_[i];\\n            (uint256 tpGain, uint256 adjPnLtpi) = _getPnLTP(i, pACtp);\\n            // [N] = ([N] + [N]) * [PREC] / [PREC]\\n            lckAC += _divPrec(pegContainer[i].nTP + tpGain, pACtp);\\n            nACgain += adjPnLtpi;\\n        }\\n        // [N] = [N] * [PREC] / [PREC]\\n        nACgain = _mulPrec(nACgain, successFee);\\n        return (lckAC, nACgain);\\n    }\\n\\n    /**\\n     * @notice get total Collateral Asset available\\n     * @param nACgain_ amount of collateral asset to be distributed during settlement [N]\\n     * @return totalACavailable [N]\\n     */\\n    function _getTotalACavailable(uint256 nACgain_) internal view returns (uint256 totalACavailable) {\\n        // [N] = [N] - [N]\\n        return nACcb - nACgain_;\\n    }\\n\\n    /**\\n     * @notice get Collateral Token price\\n     * @param lckAC_ amount of Collateral Asset locked by Pegged Token [N]\\n     * @param nACgain_ amount of collateral asset to be distributed during settlement [N]\\n     * @return pTCac [PREC]\\n     */\\n    function _getPTCac(uint256 lckAC_, uint256 nACgain_) internal view returns (uint256 pTCac) {\\n        if (nTCcb == 0) return ONE;\\n        // [PREC] = ([N] - [N]) * [PREC]) / [N]\\n        return _divPrec((_getTotalACavailable(nACgain_) - lckAC_), nTCcb);\\n    }\\n\\n    /**\\n     * @notice get Collateral Token leverage\\n     * @param lckAC_ amount of Collateral Asset locked by Pegged Token [N]\\n     * @param nACgain_ amount of collateral asset to be distributed during settlement [N]\\n     * @return leverageTC [PREC]\\n     */\\n    function _getLeverageTC(uint256 lckAC_, uint256 nACgain_) internal view returns (uint256 leverageTC) {\\n        uint256 totalACavailable = _getTotalACavailable(nACgain_);\\n        // [PREC] = [N] * [PREC] / ([N] - [N])\\n        return _divPrec(totalACavailable, totalACavailable - lckAC_);\\n    }\\n\\n    /**\\n     * @notice get bucket global coverage\\n     * @param lckAC_ amount of Collateral Asset locked by Pegged Token [N]\\n     * @param nACgain_ amount of collateral asset to be distributed during settlement [N]\\n     * @return cglob [PREC]\\n     */\\n    function _getCglb(uint256 lckAC_, uint256 nACgain_) internal view returns (uint256 cglob) {\\n        if (lckAC_ == 0) return UINT256_MAX;\\n        // [PREC] = [N] * [PREC] / [N]\\n        return _divPrec(_getTotalACavailable(nACgain_), lckAC_);\\n    }\\n\\n    // ------- Public Functions -------\\n\\n    /**\\n     * @notice If liquidation is enabled, verifies if forced liquidation has been\\n     * reached, checking if globalCoverage <= liquidation\\n     * @return true if liquidation state is reached, false otherwise\\n     */\\n    function isLiquidationReached() public view returns (bool) {\\n        (uint256 lckAC, uint256 nACgain) = _getLckACandACgain();\\n        uint256 cglb = _getCglb(lckAC, nACgain);\\n        return cglb <= liqThrld;\\n    }\\n\\n    /**\\n     * @notice evaluates if liquidation threshold has been reached and liq is Enabled.\\n     * If so forces contracts liquidation, blocking all mint & redeem operations.\\n     *\\n     * May emit a {ContractLiquidated} event.\\n     */\\n    function evalLiquidation() external notPaused {\\n        if (liqEnabled && !liquidated && isLiquidationReached()) {\\n            liquidated = true;\\n            emit ContractLiquidated();\\n            tcToken.pause();\\n            // Freeze current Peg Price given the AC available\\n            settleLiquidationPrices();\\n        }\\n    }\\n\\n    /**\\n     * @notice get how many Pegged Token equal 1 Collateral Asset\\n     * @param i_ Pegged Token index\\n     * @return price [PREC]\\n     */\\n    function getPACtp(uint256 i_) public view virtual returns (uint256) {\\n        IPriceProvider priceProvider = pegContainer[i_].priceProvider;\\n        (uint256 price, bool has) = _peekPrice(priceProvider);\\n        if (!has) revert MissingProviderPrice(address(priceProvider));\\n        return price;\\n    }\\n\\n    /**\\n     * @notice ask to a price provider for its token price\\n     * @dev saves some contract size by using this function instead of calling the external directly\\n     * @param priceProvider_ Pegged Token index\\n     * @return price casted to uint256 [PREC]\\n     * @return has true if has a valid price\\n     */\\n    function _peekPrice(IPriceProvider priceProvider_) internal view returns (uint256, bool) {\\n        (bytes32 price, bool has) = priceProvider_.peek();\\n        return (uint256(price), has);\\n    }\\n\\n    /**\\n     * @notice gets all TP prices\\n     * @return pACtps All tps prices [PREC]\\n     */\\n    function _getPACtps() internal view returns (uint256[] memory pACtps) {\\n        uint256 pegAmount = pegContainer.length;\\n        pACtps = new uint256[](pegAmount);\\n        for (uint256 i = 0; i < pegAmount; i = unchecked_inc(i)) {\\n            pACtps[i] = getPACtp(i);\\n        }\\n    }\\n\\n    // ------- Only Authorized Changer Functions -------\\n\\n    /**\\n     * @dev sets the fee pct to be retainer on AC fees payments as AC re-injection.\\n     * @param feeRetainer_  pct retain on fees to be re-injected as Collateral, while paying fees with AC [PREC]\\n     * 0% = 0; 1% = 10 ** 16; 100% = 10 ** 18\\n     */\\n    function setFeeRetainer(uint256 feeRetainer_) external onlyAuthorizedChanger {\\n        feeRetainer = feeRetainer_;\\n    }\\n\\n    /**\\n     * @dev sets the fee charged on Token Collateral mint.\\n     * @param tcMintFee_ addition fee pct applied on Collateral Tokens mint [PREC]\\n     * 0% = 0; 1% = 10 ** 16; 100% = 10 ** 18\\n     */\\n    function setTcMintFee(uint256 tcMintFee_) external onlyAuthorizedChanger {\\n        tcMintFee = tcMintFee_;\\n    }\\n\\n    /**\\n     * @dev sets the fee charged on Token Collateral redeem.\\n     * @param tcRedeemFee_ addition fee pct applied on Collateral Tokens redeem [PREC]\\n     * 0% = 0; 1% = 10 ** 16; 100% = 10 ** 18\\n     */\\n    function setTcRedeemFee(uint256 tcRedeemFee_) external onlyAuthorizedChanger {\\n        tcRedeemFee = tcRedeemFee_;\\n    }\\n\\n    /**\\n     * @dev sets the fee charged when swap a Pegged Token for another Pegged Token.\\n     * @param swapTPforTPFee_ additional fee pct applied on swap a Pegged Token for another Pegged Token [PREC]\\n     * 0% = 0; 1% = 10 ** 16; 100% = 10 ** 18\\n     */\\n    function setSwapTPforTPFee(uint256 swapTPforTPFee_) external onlyAuthorizedChanger {\\n        swapTPforTPFee = swapTPforTPFee_;\\n    }\\n\\n    /**\\n     * @dev sets the fee charged when swap a Pegged Token for Collateral Token.\\n     * @param swapTPforTCFee_ additional fee pct applied on swap a Pegged Token for Collateral Token [PREC]\\n     * 0% = 0; 1% = 10 ** 16; 100% = 10 ** 18\\n     */\\n    function setSwapTPforTCFee(uint256 swapTPforTCFee_) external onlyAuthorizedChanger {\\n        swapTPforTCFee = swapTPforTCFee_;\\n    }\\n\\n    /**\\n     * @dev sets the fee charged when swap Collateral Token for a Pegged Token.\\n     * @param swapTCforTPFee_ additional fee pct applied on swap Collateral Token for a Pegged Token [PREC]\\n     * 0% = 0; 1% = 10 ** 16; 100% = 10 ** 18\\n     */\\n    function setSwapTCforTPFee(uint256 swapTCforTPFee_) external onlyAuthorizedChanger {\\n        swapTCforTPFee = swapTCforTPFee_;\\n    }\\n\\n    /**\\n     * @dev sets the fee charged when redeem Collateral Token and Pegged Token in one operation.\\n     * @param redeemTCandTPFee_ additional fee pct applied on redeem Collateral Token and Pegged Token [PREC]\\n     * 0% = 0; 1% = 10 ** 16; 100% = 10 ** 18\\n     */\\n    function setRedeemTCandTPFee(uint256 redeemTCandTPFee_) external onlyAuthorizedChanger {\\n        redeemTCandTPFee = redeemTCandTPFee_;\\n    }\\n\\n    /**\\n     * @dev sets the fee charged when mint Collateral Token and Pegged Token in one operation.\\n     * @param mintTCandTPFee_ additional fee pct applied on mint Collateral Token and Pegged Token [PREC]\\n     * 0% = 0; 1% = 10 ** 16; 100% = 10 ** 18\\n     */\\n    function setMintTCandTPFee(uint256 mintTCandTPFee_) external onlyAuthorizedChanger {\\n        mintTCandTPFee = mintTCandTPFee_;\\n    }\\n\\n    /**\\n     * @dev sets the fee applied on the top of the operation`s fee when using Fee Token as fee payment method.\\n     * @param feeTokenPct_ pct applied on the top of the operation`s fee when using Fee Token\\n     *  as fee payment method [PREC]\\n     *  e.g. if tcMintFee = 1%, FeeTokenPct = 50% => qFeeToken = 0.5%\\n     *  0% = 0; 1% = 10 ** 16; 100% = 10 ** 18\\n     */\\n    function setFeeTokenPct(uint256 feeTokenPct_) external onlyAuthorizedChanger {\\n        feeTokenPct = feeTokenPct_;\\n    }\\n\\n    /**\\n     * @dev sets Moc Fee Flow contract address\\n     * @param mocFeeFlowAddress_ moc Fee Flow new contract address\\n     */\\n    function setMocFeeFlowAddress(address mocFeeFlowAddress_) external onlyAuthorizedChanger {\\n        // slither-disable-next-line missing-zero-check\\n        mocFeeFlowAddress = mocFeeFlowAddress_;\\n    }\\n\\n    /**\\n     * @dev sets Moc Appreciation Beneficiary Address\\n     * @param mocAppreciationBeneficiaryAddress_ moc Appreciation Beneficiary new address\\n     */\\n    function setMocAppreciationBeneficiaryAddress(\\n        address mocAppreciationBeneficiaryAddress_\\n    ) external onlyAuthorizedChanger {\\n        // slither-disable-next-line missing-zero-check\\n        mocAppreciationBeneficiaryAddress = mocAppreciationBeneficiaryAddress_;\\n    }\\n\\n    /**\\n     * @dev sets Fee Token contract address\\n     * @param mocFeeTokenAddress_ Fee Token new contract address\\n     */\\n    function setFeeTokenAddress(address mocFeeTokenAddress_) external onlyAuthorizedChanger {\\n        // slither-disable-next-line missing-zero-check\\n        feeToken = IERC20(mocFeeTokenAddress_);\\n    }\\n\\n    /**\\n     * @dev sets Fee Token price provider contract address\\n     * @param mocFeeTokenPriceProviderAddress_ Fee Token price provider new contract address\\n     */\\n    function setFeeTokenPriceProviderAddress(address mocFeeTokenPriceProviderAddress_) external onlyAuthorizedChanger {\\n        // slither-disable-next-line missing-zero-check\\n        feeTokenPriceProvider = IPriceProvider(mocFeeTokenPriceProviderAddress_);\\n    }\\n\\n    /**\\n     * @dev sets the value of the protected threshold configuration param\\n     * @param protThrld_ coverage protected state threshold [PREC]\\n     */\\n    function setProtThrld(uint256 protThrld_) external onlyAuthorizedChanger {\\n        protThrld = protThrld_;\\n    }\\n\\n    /**\\n     * @dev sets the value of the liq threshold configuration param\\n     * @param liqThrld_ liquidation threshold\\n     */\\n    function setLiqThrld(uint256 liqThrld_) external onlyAuthorizedChanger {\\n        liqThrld = liqThrld_;\\n    }\\n\\n    /**\\n     * @dev enables and disables the liquidation mechanism.\\n     * @param liqEnabled_ is liquidation enabled\\n     */\\n    function setLiqEnabled(bool liqEnabled_) external onlyAuthorizedChanger {\\n        liqEnabled = liqEnabled_;\\n    }\\n\\n    /**\\n     * @dev sets success Fee value.\\n     * @param successFee_ pct of the gain because Pegged Tokens devaluation that is\\n     * transferred in Collateral Asset to Moc Fee Flow during the settlement [PREC]\\n     */\\n    function setSuccessFee(uint256 successFee_) external onlyAuthorizedChanger {\\n        successFee = successFee_;\\n    }\\n\\n    /**\\n     * @dev sets appreciation Factor value.\\n     * @param appreciationFactor_ pct of the gain because Pegged Tokens devaluation that is returned\\n     * in Pegged Tokens to appreciation beneficiary during the settlement [PREC]\\n     */\\n    function setAppreciationFactor(uint256 appreciationFactor_) external onlyAuthorizedChanger {\\n        appreciationFactor = appreciationFactor_;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0xac04a409254f2906a8f346d8c8c935de173f93339aea189ac2ea85ed00de8d29\",\"license\":\"UNLICENSED\"},\"contracts/core/MocCommons.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.16;\\n\\nimport { MocVendors } from \\\"../vendors/MocVendors.sol\\\";\\nimport { MocEma } from \\\"./MocEma.sol\\\";\\n\\n// ------- External Structs -------\\n\\nstruct PeggedTokenParams {\\n    // Pegged Token contract address to add\\n    address tpTokenAddress;\\n    // priceProviderAddress Pegged Token price provider contract address\\n    address priceProviderAddress;\\n    // Pegged Token target coverage [PREC]\\n    uint256 tpCtarg;\\n    // additional fee pct applied on mint [PREC]\\n    uint256 tpMintFee;\\n    // additional fee pct applied on redeem [PREC]\\n    uint256 tpRedeemFee;\\n    // initial Pegged Token exponential moving average [PREC]\\n    uint256 tpEma;\\n    // Pegged Token smoothing factor [PREC]\\n    uint256 tpEmaSf;\\n}\\n\\n//    +-----------------+\\n//    |  MocBaseBucket  |\\n//    +-----------------+\\n//            ^\\n//            | is\\n//            |\\n//    +-----------------+\\n//    |    MocEma       |\\n//    +-----------------+\\n//            ^\\n//            | is\\n//            |\\n//    +-----------------+ contains  +-----------------+\\n//    |    MocCommons   | ------>   |    MocVendors   |\\n//    +-----------------+           +-----------------+\\n//            ^\\n//            | is\\n//            | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\\n//            |                              |\\n//    +-----------------+ contains  +-----------------+\\n//    |     MocCore     | ------>   |MocCoreExpansion |\\n//    +-----------------+           +-----------------+\\n//            ^\\n//            | is\\n//            | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\\n//            |                              |\\n//    +-----------------+           +-----------------+\\n//    |  MocCACoinbase  |           |    MocCARC20    |\\n//    +-----------------+           +-----------------+\\n/**\\n * @title MocCommons\\n * @dev To bypass the 24kb size limitation on MocCore we use MocCoreExpansion contract. Some functions\\n *  are implemented there and MocCore delegates calls to it. To achieve that, we need both to have the\\n *  exact same storage layout and be able to access the same common functions.\\n *  MocCommons contract serves as the last shared ancestor in the line of inheritance for them,\\n *  and all storage variables must be either declared here or in a parent contract.\\n *  Declaring variables after this point could result in storage collisions.\\n */\\nabstract contract MocCommons is MocEma {\\n    // ------- Storage -------\\n\\n    // Address for MocVendors contract, provides fee markup information\\n    MocVendors public mocVendors;\\n\\n    // ------- Internal Structs -------\\n\\n    struct SwapTPforTPParams {\\n        uint256 iFrom;\\n        uint256 iTo;\\n        uint256 qTP;\\n        uint256 qTPmin;\\n        uint256 qACmax;\\n        address sender;\\n        address recipient;\\n        address vendor;\\n    }\\n\\n    struct FeeCalcs {\\n        uint256 qACFee;\\n        uint256 qFeeToken;\\n        uint256 qACVendorMarkup;\\n        uint256 qFeeTokenVendorMarkup;\\n    }\\n\\n    // ------- Custom Errors -------\\n\\n    error PeggedTokenAlreadyAdded();\\n    error InsufficientTPtoRedeem(uint256 qTP_, uint256 tpAvailableToRedeem_);\\n    error TransferFailed();\\n    error OnlyWhenLiquidated();\\n    error InsufficientQacSent(uint256 qACsent_, uint256 qACNeeded_);\\n    error InsufficientTPtoMint(uint256 qTP_, uint256 tpAvailableToMint_);\\n    error QtpBelowMinimumRequired(uint256 qTPmin_, uint256 qTP_);\\n\\n    // ------- Events -------\\n\\n    event TPRedeemed(\\n        uint256 indexed i_,\\n        address indexed sender_,\\n        address indexed recipient_,\\n        uint256 qTP_,\\n        uint256 qAC_,\\n        uint256 qACfee_,\\n        uint256 qFeeToken_,\\n        uint256 qACVendorMarkup_,\\n        uint256 qFeeTokenVendorMarkup_\\n    );\\n    event PeggedTokenChange(uint256 indexed i_, PeggedTokenParams peggedTokenParams_);\\n    event TPSwappedForTP(\\n        uint256 indexed iFrom_,\\n        uint256 iTo_,\\n        address indexed sender_,\\n        address indexed recipient_,\\n        uint256 qTPfrom_,\\n        uint256 qTPto_,\\n        uint256 qACfee_,\\n        uint256 qFeeToken_,\\n        uint256 qACVendorMarkup_,\\n        uint256 qFeeTokenVendorMarkup_\\n    );\\n\\n    // ------- Initializer -------\\n\\n    /**\\n     * @notice contract initializer\\n     * @param mocVendors_ address for MocVendors contract.\\n     */\\n    function __MocCommons_init_unchained(address mocVendors_) internal onlyInitializing {\\n        mocVendors = MocVendors(mocVendors_);\\n    }\\n\\n    // ------- Internal Functions -------\\n\\n    /**\\n     * @notice calc fees amount in qAC or Fee Token\\n     *  If `sender_` has enough Fee Token to pay fees, will be used. In another case will use qAC\\n     * @dev if qFeeToken > 0, qACFee = 0. If qACFee > 0, qFeeToken = 0.\\n     * @param sender_ address who executes the operation\\n     * @param qAC_ amount of AC involved in the operation, could be sent form sender for mint or\\n     *  sent to recipient for redeem [N]\\n     * @param qACFeePct_ additional fee pct applied on operation\\n     * @return qACSurcharges amount of AC needed to pay fees and markup. 0 if pays with Fee Token\\n     * @return qFeeTokenTotalNeeded amount of Fee Token needed to pay fees and markup. 0 if pays with AC\\n     * @return feeCalcs\\n     * @dev\\n     *      qACFee amount of AC needed to pay fees\\n     *      qFeeToken amount of Fee Token needed to pay fess\\n     *      qACVendorMarkup amount of AC needed to pay vendor markup\\n     *      qFeeTokenVendorMarkup amount of Fee Token needed to pay vendor markup\\n     */\\n    function _calcFees(\\n        address sender_,\\n        address vendor_,\\n        uint256 qAC_,\\n        uint256 qACFeePct_\\n    ) internal view returns (uint256 qACSurcharges, uint256 qFeeTokenTotalNeeded, FeeCalcs memory feeCalcs) {\\n        uint256 qACmarked;\\n        if (vendor_ != address(0)) {\\n            // [PREC] = [N] * [PREC]\\n            qACmarked = qAC_ * mocVendors.vendorMarkup(vendor_);\\n        }\\n        uint256 senderAllowance = feeToken.allowance(sender_, address(this));\\n        if (senderAllowance > 0) {\\n            (uint256 feeTokenPrice, bool hasFeeTokenPrice) = _peekPrice(feeTokenPriceProvider);\\n            if (hasFeeTokenPrice) {\\n                // calculates Fee Token to be charged as fee\\n                // [N] = ([N] * [PREC] * [PREC] / [PREC]) / [PREC]\\n                // TODO: define if will not be necessary a feeTokenPct for each operation\\n                feeCalcs.qFeeToken = _mulPrec(qAC_ * qACFeePct_, feeTokenPct) / feeTokenPrice;\\n                if (qACmarked > 0) {\\n                    // [N] = [N] * [PREC] / [PREC]\\n                    feeCalcs.qFeeTokenVendorMarkup = qACmarked / feeTokenPrice;\\n                    // [N] = [N] + [N]\\n                    qFeeTokenTotalNeeded = feeCalcs.qFeeToken + feeCalcs.qFeeTokenVendorMarkup;\\n                } else {\\n                    qFeeTokenTotalNeeded = feeCalcs.qFeeToken;\\n                }\\n                // TODO: if feeTokenPct == 0 should use qAC too?\\n                if (senderAllowance < qFeeTokenTotalNeeded || feeToken.balanceOf(sender_) < qFeeTokenTotalNeeded) {\\n                    feeCalcs.qFeeToken = 0;\\n                    feeCalcs.qFeeTokenVendorMarkup = 0;\\n                    qFeeTokenTotalNeeded = 0;\\n                }\\n            }\\n        }\\n        // if sender hasn't got enough feeToken balance or allowance or price provider hasn't got a valid price\\n        // then qFeeToken == 0 and sender pays fees with AC\\n        if (feeCalcs.qFeeToken == 0) {\\n            // calculates qAC to be charged as fee\\n            // [N] = [N] * [PREC] / [PREC]\\n            feeCalcs.qACFee = _mulPrec(qAC_, qACFeePct_);\\n            if (qACmarked > 0) {\\n                // [N] = [PREC] / [PREC]\\n                feeCalcs.qACVendorMarkup = qACmarked / PRECISION;\\n                // [N] = [N] + [N]\\n                qACSurcharges = feeCalcs.qACFee + feeCalcs.qACVendorMarkup;\\n            } else {\\n                qACSurcharges = feeCalcs.qACFee;\\n            }\\n        }\\n        return (qACSurcharges, qFeeTokenTotalNeeded, feeCalcs);\\n    }\\n\\n    /**\\n     * @notice evaluates if there are enough Pegged Token available to mint, reverts if it`s not\\n     * @param i_ Pegged Token index\\n     * @param qTP_ amount of Pegged Token to mint [N]\\n     * @param pACtp_ Pegged Token price [PREC]\\n     * @param ctargemaCA_ target coverage adjusted by the moving average of the value of the Collateral Asset [PREC]\\n     * @param lckAC_ amount of Collateral Asset locked by Pegged Token [PREC]\\n     * @param nACgain_ amount of collateral asset to be distributed during settlement [N]\\n     */\\n    function _evalTPavailableToMint(\\n        uint256 i_,\\n        uint256 qTP_,\\n        uint256 pACtp_,\\n        uint256 ctargemaCA_,\\n        uint256 lckAC_,\\n        uint256 nACgain_\\n    ) internal view {\\n        uint256 ctargemaTP = _getCtargemaTP(i_, pACtp_);\\n        uint256 tpAvailableToMint = _getTPAvailableToMint(ctargemaCA_, ctargemaTP, pACtp_, lckAC_, nACgain_);\\n        // check if there are enough TP available to mint\\n        if (tpAvailableToMint < qTP_) revert InsufficientTPtoMint(qTP_, tpAvailableToMint);\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x52c80a26ecdf79ddcfa4d62436cb7854a9f8ecaf75208578e2333c0e4d717375\",\"license\":\"UNLICENSED\"},\"contracts/core/MocCore.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.16;\\n\\nimport { MocCommons, PeggedTokenParams } from \\\"./MocCommons.sol\\\";\\nimport { MocCoreExpansion } from \\\"./MocCoreExpansion.sol\\\";\\nimport { Address } from \\\"@openzeppelin/contracts/utils/Address.sol\\\";\\nimport { SafeERC20 } from \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\n\\n/**\\n * @title MocCore\\n * @notice MocCore nucleates all the basic MoC functionality and tool set. It allows Collateral\\n * asset aware contracts to implement the main mint/redeem operations.\\n */\\nabstract contract MocCore is MocCommons {\\n    // ------- Events -------\\n    event TCMinted(\\n        address indexed sender_,\\n        address indexed recipient_,\\n        uint256 qTC_,\\n        uint256 qAC_,\\n        uint256 qACfee_,\\n        uint256 qFeeToken_,\\n        uint256 qACVendorMarkup_,\\n        uint256 qFeeTokenVendorMarkup_\\n    );\\n    event TCRedeemed(\\n        address indexed sender_,\\n        address indexed recipient_,\\n        uint256 qTC_,\\n        uint256 qAC_,\\n        uint256 qACfee_,\\n        uint256 qFeeToken_,\\n        uint256 qACVendorMarkup_,\\n        uint256 qFeeTokenVendorMarkup_\\n    );\\n    event TPMinted(\\n        uint256 indexed i_,\\n        address indexed sender_,\\n        address indexed recipient_,\\n        uint256 qTP_,\\n        uint256 qAC_,\\n        uint256 qACfee_,\\n        uint256 qFeeToken_,\\n        uint256 qACVendorMarkup_,\\n        uint256 qFeeTokenVendorMarkup_\\n    );\\n    event TPSwappedForTC(\\n        uint256 indexed i_,\\n        address indexed sender_,\\n        address indexed recipient_,\\n        uint256 qTP_,\\n        uint256 qTC_,\\n        uint256 qACfee_,\\n        uint256 qFeeToken_,\\n        uint256 qACVendorMarkup_,\\n        uint256 qFeeTokenVendorMarkup_\\n    );\\n    event TCSwappedForTP(\\n        uint256 indexed i_,\\n        address indexed sender_,\\n        address indexed recipient_,\\n        uint256 qTC_,\\n        uint256 qTP_,\\n        uint256 qACfee_,\\n        uint256 qFeeToken_,\\n        uint256 qACVendorMarkup_,\\n        uint256 qFeeTokenVendorMarkup_\\n    );\\n    event TCandTPRedeemed(\\n        uint256 indexed i_,\\n        address indexed sender_,\\n        address indexed recipient_,\\n        uint256 qTC_,\\n        uint256 qTP_,\\n        uint256 qAC_,\\n        uint256 qACfee_,\\n        uint256 qFeeToken_,\\n        uint256 qACVendorMarkup_,\\n        uint256 qFeeTokenVendorMarkup_\\n    );\\n    event TCandTPMinted(\\n        uint256 indexed i_,\\n        address indexed sender_,\\n        address indexed recipient_,\\n        uint256 qTC_,\\n        uint256 qTP_,\\n        uint256 qAC_,\\n        uint256 qACfee_,\\n        uint256 qFeeToken_,\\n        uint256 qACVendorMarkup_,\\n        uint256 qFeeTokenVendorMarkup_\\n    );\\n    event SuccessFeeDistributed(uint256 mocGain_, uint256[] tpGain_);\\n    event SettlementExecuted();\\n    // ------- Custom Errors -------\\n    error QacBelowMinimumRequired(uint256 qACmin_, uint256 qACtoRedeem_);\\n    error InsufficientTCtoRedeem(uint256 qTC_, uint256 tcAvailableToRedeem_);\\n    error QacNeededMustBeGreaterThanZero();\\n    error QtcBelowMinimumRequired(uint256 qTCmin_, uint256 qTC_);\\n    error InsufficientQtpSent(uint256 qTPsent_, uint256 qTPNeeded_);\\n    error MissingBlocksToSettlement();\\n    // ------- Structs -------\\n\\n    struct InitializeCoreParams {\\n        InitializeBaseBucketParams initializeBaseBucketParams;\\n        // The address that will define when a change contract is authorized\\n        address governorAddress;\\n        // The address that is authorized to pause this contract\\n        address pauserAddress;\\n        // Moc Core Expansion contract address\\n        address mocCoreExpansion;\\n        // amount of blocks to wait between Pegged ema calculation\\n        uint256 emaCalculationBlockSpan;\\n        // address for MocVendors\\n        address mocVendors;\\n    }\\n\\n    // ------- Storage -------\\n    // Moc Core Expansion contract address, used to expand 24kb size limit\\n    address internal mocCoreExpansion;\\n\\n    // ------- Initializer -------\\n    /**\\n     * @notice contract initializer\\n     * @dev this function must be execute by the AC implementation at initialization\\n     * @param initializeCoreParams_ contract initializer params\\n     *        governorAddress The address that will define when a change contract is authorized\\n     *        pauserAddress_ The address that is authorized to pause this contract\\n     *        mocCoreExpansion Moc Core Expansion contract address\\n     *        feeTokenAddress Fee Token contract address\\n     *        feeTokenPriceProviderAddress Fee Token price provider contract address\\n     *        tcTokenAddress Collateral Token contract address\\n     *        mocFeeFlowAddress Moc Fee Flow contract address\\n     *        mocAppreciationBeneficiaryAddress Moc appreciation beneficiary address\\n     *        protThrld protected state threshold [PREC]\\n     *        liqThrld liquidation coverage threshold [PREC]\\n     *        feeRetainer pct retain on fees to be re-injected as Collateral, while paying fees with AC [PREC]\\n     *        tcMintFee additional fee pct applied on mint Collateral Tokens operations [PREC]\\n     *        tcRedeemFee additional fee pct applied on redeem Collateral Tokens operations [PREC]\\n     *        swapTPforTPFee additional fee pct applied on swap a Pegged Token for another Pegged Token [PREC]\\n     *        swapTPforTCFee additional fee pct applied on swap a Pegged Token for Collateral Token [PREC]\\n     *        swapTCforTPFee additional fee pct applied on swap Collateral Token for a Pegged Token [PREC]\\n     *        redeemTCandTPFee additional fee pct applied on redeem Collateral Token and Pegged Token [PREC]\\n     *        mintTCandTPFee additional fee pct applied on mint Collateral Token and Pegged Token [PREC]\\n     *        feeTokenPct pct applied on the top of the operation`s fee when using\\n     *          Fee Token as fee payment method [PREC]\\n     *        successFee pct of the gain because Pegged Tokens devaluation that is transferred\\n     *          in Collateral Asset to Moc Fee Flow during the settlement [PREC]\\n     *        appreciationFactor pct of the gain because Pegged Tokens devaluation that is returned\\n     *          in Pegged Tokens to appreciation beneficiary during the settlement [PREC]]\\n     *        emaCalculationBlockSpan amount of blocks to wait between Pegged ema calculation\\n     *        mocVendors address for MocVendors contract.\\n     */\\n    function __MocCore_init(InitializeCoreParams calldata initializeCoreParams_) internal onlyInitializing {\\n        mocCoreExpansion = initializeCoreParams_.mocCoreExpansion;\\n        __MocUpgradable_init(initializeCoreParams_.governorAddress, initializeCoreParams_.pauserAddress);\\n        __MocBaseBucket_init_unchained(initializeCoreParams_.initializeBaseBucketParams);\\n        __MocEma_init_unchained(initializeCoreParams_.emaCalculationBlockSpan);\\n        __MocCommons_init_unchained(initializeCoreParams_.mocVendors);\\n    }\\n\\n    // ------- Internal Functions -------\\n\\n    /**\\n     * @notice transfer Collateral Asset\\n     * @dev this function must be overridden by the AC implementation\\n     *  and revert if transfer fails.\\n     * @param to_ address who receives the Collateral Asset\\n     * @param amount_ amount of Collateral Asset to transfer\\n     */\\n    function acTransfer(address to_, uint256 amount_) internal virtual;\\n\\n    /**\\n     * @notice Collateral Asset balance\\n     * @dev this function must be overridden by the AC implementation\\n     * @param account address who's Collateral Asset balance we want to know of\\n     * @return balance `account`'s total amount of Collateral Asset\\n     */\\n    function acBalanceOf(address account) internal view virtual returns (uint256 balance);\\n\\n    /**\\n     * @notice hook before any AC reception involving operation\\n     * @dev this function must be overridden by the AC implementation\\n     * @param qACMax_ max amount of AC available\\n     * @param qACNeeded_ amount of AC needed\\n     * @return change amount needed to be return to the sender after the operation is complete\\n     */\\n    function _onACNeededOperation(uint256 qACMax_, uint256 qACNeeded_) internal virtual returns (uint256 change);\\n\\n    struct MintTCParams {\\n        uint256 qTC;\\n        uint256 qACmax;\\n        address sender;\\n        address recipient;\\n        address vendor;\\n    }\\n\\n    /**\\n     * @notice mint Collateral Token in exchange for Collateral Asset\\n     * @param params_ mintTCto function params\\n     * @dev\\n     *      qTC_ amount of Collateral Token to mint\\n     *      qACmax_ maximum amount of Collateral Asset that can be spent\\n     *      sender_ address who sends the Collateral Asset, all unspent amount is returned to it\\n     *      recipient_ address who receives the Collateral Token\\n     *      vendor_ address who receives a markup. If its address(0) no markup is applied\\n     * @return qACtotalNeeded amount of AC used to mint qTC\\n     * @return qFeeTokenTotalNeeded amount of Fee Token used by `sender_` to pay fees. 0 if qAC is used instead\\n     */\\n\\n    function _mintTCto(\\n        MintTCParams memory params_\\n    ) internal notLiquidated notPaused returns (uint256 qACtotalNeeded, uint256 qFeeTokenTotalNeeded) {\\n        uint256[] memory pACtps = _getPACtps();\\n        // evaluates whether or not the system coverage is healthy enough to mint TC, reverts if it's not\\n        (uint256 lckAC, uint256 nACgain) = _evalCoverage(protThrld, pACtps);\\n        // calculates how many qAC are needed to mint TC\\n        // [N] = [N] * [PREC] / [PREC]\\n        uint256 qACNeededToMint = _mulPrec(params_.qTC, _getPTCac(lckAC, nACgain));\\n        FeeCalcs memory feeCalcs;\\n        uint256 qACSurcharges;\\n        (qACSurcharges, qFeeTokenTotalNeeded, feeCalcs) = _calcFees(\\n            params_.sender,\\n            params_.vendor,\\n            qACNeededToMint,\\n            tcMintFee\\n        );\\n        qACtotalNeeded = qACNeededToMint + qACSurcharges;\\n        if (qACtotalNeeded > params_.qACmax) revert InsufficientQacSent(params_.qACmax, qACtotalNeeded);\\n        // if is 0 reverts because it is trying to redeem an amount below precision\\n        if (qACtotalNeeded == 0) revert QacNeededMustBeGreaterThanZero();\\n        emit TCMinted(\\n            params_.sender,\\n            params_.recipient,\\n            params_.qTC,\\n            qACtotalNeeded,\\n            feeCalcs.qACFee,\\n            feeCalcs.qFeeToken,\\n            feeCalcs.qACVendorMarkup,\\n            feeCalcs.qFeeTokenVendorMarkup\\n        );\\n        _depositAndMintTC(params_.qTC, qACNeededToMint, params_.recipient);\\n        uint256 acChange = _onACNeededOperation(params_.qACmax, qACtotalNeeded);\\n        // transfers any AC change to the sender and distributes fees\\n        _distOpResults(params_.sender, params_.sender, acChange, params_.vendor, feeCalcs);\\n    }\\n\\n    struct RedeemTCParams {\\n        uint256 qTC;\\n        uint256 qACmin;\\n        address sender;\\n        address recipient;\\n        address vendor;\\n    }\\n\\n    /**\\n     * @notice redeem Collateral Asset in exchange for Collateral Token\\n     * @param params_ redeemTCto function params\\n     * @dev\\n     *      qTC_ amount of Collateral Token to redeem\\n     *      qACmin_ minimum amount of Collateral Asset that `recipient_` expects to receive\\n     *      sender_ address who sends the Collateral Token\\n     *      recipient_ address who receives the Collateral Asset\\n     *      vendor_ address who receives a markup. If its address(0) no markup is applied\\n     * @return qACtoRedeem amount of AC sent to `recipient_`\\n     * @return qFeeTokenTotalNeeded amount of Fee Token used by `sender_` to pay fees. 0 if qAC is used instead\\n     */\\n\\n    function _redeemTCto(\\n        RedeemTCParams memory params_\\n    ) internal notLiquidated notPaused returns (uint256 qACtoRedeem, uint256 qFeeTokenTotalNeeded) {\\n        (uint256 ctargemaCA, uint256[] memory pACtps) = _updateEmasAndCalcCtargemaCA();\\n        // evaluates whether or not the system coverage is healthy enough to redeem TC\\n        // given the target coverage adjusted by the moving average, reverts if it's not\\n        (uint256 lckAC, uint256 nACgain) = _evalCoverage(ctargemaCA, pACtps);\\n        // evaluates if there are enough Collateral Tokens available to redeem, reverts if there are not\\n        _evalTCAvailableToRedeem(params_.qTC, ctargemaCA, lckAC, nACgain);\\n        // calculate how many total qAC are redeemed\\n        // [N] = [N] * [PREC] / [PREC]\\n        uint256 qACtotalToRedeem = _mulPrec(params_.qTC, _getPTCac(lckAC, nACgain));\\n        // if is 0 reverts because it is trying to redeem an amount below precision\\n        if (qACtotalToRedeem == 0) revert QacNeededMustBeGreaterThanZero();\\n        FeeCalcs memory feeCalcs;\\n        uint256 qACSurcharges;\\n        (qACSurcharges, qFeeTokenTotalNeeded, feeCalcs) = _calcFees(\\n            params_.sender,\\n            params_.vendor,\\n            qACtotalToRedeem,\\n            tcRedeemFee\\n        );\\n        qACtoRedeem = qACtotalToRedeem - qACSurcharges;\\n        if (qACtoRedeem < params_.qACmin) revert QacBelowMinimumRequired(params_.qACmin, qACtoRedeem);\\n        emit TCRedeemed(\\n            params_.sender,\\n            params_.recipient,\\n            params_.qTC,\\n            qACtoRedeem,\\n            feeCalcs.qACFee,\\n            feeCalcs.qFeeToken,\\n            feeCalcs.qACVendorMarkup,\\n            feeCalcs.qFeeTokenVendorMarkup\\n        );\\n        _withdrawAndBurnTC(params_.qTC, qACtotalToRedeem, params_.sender);\\n        // transfers qAC to the recipient and distributes fees\\n        _distOpResults(params_.sender, params_.recipient, qACtoRedeem, params_.vendor, feeCalcs);\\n    }\\n\\n    struct MintTPParams {\\n        uint256 i;\\n        uint256 qTP;\\n        uint256 qACmax;\\n        address sender;\\n        address recipient;\\n        address vendor;\\n    }\\n\\n    /**\\n     * @notice mint Pegged Token in exchange for Collateral Asset\\n     * @param params_ mint TP function params\\n     * @dev\\n     *      i_ Pegged Token index\\n     *      qTP_ amount of Pegged Token to mint\\n     *      qACmax_ maximum amount of Collateral Asset that can be spent\\n     *      sender_ address who sends the Collateral Asset, all unspent amount is returned to it\\n     *      recipient_ address who receives the Pegged Token\\n     *      vendor_ address who receives a markup. If its address(0) no markup is applied\\n     * @return qACtotalNeeded amount of AC used to mint qTP\\n     * @return qFeeTokenTotalNeeded amount of Fee Token used by `sender_` to pay fees. 0 if qAC is used instead\\n     */\\n    function _mintTPto(\\n        MintTPParams memory params_\\n    ) internal notLiquidated notPaused returns (uint256 qACtotalNeeded, uint256 qFeeTokenTotalNeeded) {\\n        (uint256 ctargemaCA, uint256[] memory pACtps) = _updateEmasAndCalcCtargemaCA();\\n        uint256 pACtp = pACtps[params_.i];\\n        _updateTPtracking(params_.i, pACtp);\\n        // evaluates whether or not the system coverage is healthy enough to mint TP\\n        // given the target coverage adjusted by the moving average, reverts if it's not\\n        (uint256 lckAC, uint256 nACgain) = _evalCoverage(ctargemaCA, pACtps);\\n        // evaluates if there are enough TP available to mint, reverts if it's not\\n        _evalTPavailableToMint(params_.i, params_.qTP, pACtp, ctargemaCA, lckAC, nACgain);\\n        // calculate how many qAC are needed to mint TP\\n        // [N] = [N] * [PREC] / [PREC]\\n        uint256 qACNeededtoMint = _divPrec(params_.qTP, pACtp);\\n        FeeCalcs memory feeCalcs;\\n        uint256 qACSurcharges;\\n        (qACSurcharges, qFeeTokenTotalNeeded, feeCalcs) = _calcFees(\\n            params_.sender,\\n            params_.vendor,\\n            qACNeededtoMint,\\n            tpMintFee[params_.i]\\n        );\\n        qACtotalNeeded = qACNeededtoMint + qACSurcharges;\\n        if (qACtotalNeeded > params_.qACmax) revert InsufficientQacSent(params_.qACmax, qACtotalNeeded);\\n        // if is 0 reverts because it is trying to mint an amount below precision\\n        if (qACtotalNeeded == 0) revert QacNeededMustBeGreaterThanZero();\\n        emit TPMinted(\\n            params_.i,\\n            params_.sender,\\n            params_.recipient,\\n            params_.qTP,\\n            qACtotalNeeded,\\n            feeCalcs.qACFee,\\n            feeCalcs.qFeeToken,\\n            feeCalcs.qACVendorMarkup,\\n            feeCalcs.qFeeTokenVendorMarkup\\n        );\\n        // update bucket and mint\\n        _depositAndMintTP(params_.i, params_.qTP, qACNeededtoMint, params_.recipient);\\n        uint256 acChange = _onACNeededOperation(params_.qACmax, qACtotalNeeded);\\n        // transfers any AC change to the sender and distributes fees\\n        _distOpResults(params_.sender, params_.sender, acChange, params_.vendor, feeCalcs);\\n    }\\n\\n    struct RedeemTPParams {\\n        uint256 i;\\n        uint256 qTP;\\n        uint256 qACmin;\\n        address sender;\\n        address recipient;\\n        address vendor;\\n    }\\n\\n    /**\\n     * @notice redeem Collateral Asset in exchange for Pegged Token\\n     * @param params_ redeem CA function parameters\\n     * @dev\\n     *      i_ Pegged Token index\\n     *      qTP_ amount of Pegged Token to redeem\\n     *      qACmin_ minimum amount of Collateral Asset that `recipient_` expects to receive\\n     *      sender_ address who sends the Pegged Token\\n     *      recipient_ address who receives the Collateral Asset\\n     *      vendor_ address who receives a markup. If its address(0) no markup is applied\\n     * @return qACtoRedeem amount of AC sent to `recipient_`\\n     * @return qFeeTokenTotalNeeded amount of Fee Token used by `sender_` to pay fees. 0 if qAC is used instead\\n     */\\n    function _redeemTPto(\\n        RedeemTPParams memory params_\\n    ) internal notLiquidated notPaused returns (uint256 qACtoRedeem, uint256 qFeeTokenTotalNeeded) {\\n        uint256[] memory pACtps = _getPACtps();\\n        uint256 pACtp = pACtps[params_.i];\\n        _updateTPtracking(params_.i, pACtp);\\n        // evaluates whether or not the system coverage is healthy enough to redeem TP, reverts if it's not\\n        _evalCoverage(protThrld, pACtps);\\n        // calculate how many total qAC are redeemed\\n        // [N] = [N] * [PREC] / [PREC]\\n        uint256 qACtotalToRedeem = _divPrec(params_.qTP, pACtp);\\n        FeeCalcs memory feeCalcs;\\n        uint256 qACSurcharges;\\n        (qACSurcharges, qFeeTokenTotalNeeded, feeCalcs) = _calcFees(\\n            params_.sender,\\n            params_.vendor,\\n            qACtotalToRedeem,\\n            tpRedeemFee[params_.i]\\n        );\\n        qACtoRedeem = qACtotalToRedeem - qACSurcharges;\\n        // if is 0 reverts because it is trying to redeem an amount below precision\\n        if (qACtotalToRedeem == 0) revert QacNeededMustBeGreaterThanZero();\\n        if (qACtoRedeem < params_.qACmin) revert QacBelowMinimumRequired(params_.qACmin, qACtoRedeem);\\n        emit TPRedeemed(\\n            params_.i,\\n            params_.sender,\\n            params_.recipient,\\n            params_.qTP,\\n            qACtoRedeem,\\n            feeCalcs.qACFee,\\n            feeCalcs.qFeeToken,\\n            feeCalcs.qACVendorMarkup,\\n            feeCalcs.qFeeTokenVendorMarkup\\n        );\\n        _withdrawAndBurnTP(params_.i, params_.qTP, qACtotalToRedeem, params_.sender);\\n        // transfers qAC to the recipient and distributes fees\\n        _distOpResults(params_.sender, params_.recipient, qACtoRedeem, params_.vendor, feeCalcs);\\n    }\\n\\n    struct MintTCandTPParams {\\n        uint256 i;\\n        uint256 qTP;\\n        uint256 qACmax;\\n        address sender;\\n        address recipient;\\n        address vendor;\\n    }\\n\\n    /**\\n     * @notice mint Collateral Token and Pegged Token in exchange for Collateral Asset\\n     *  This operation is done without checking coverage\\n     *  Collateral Token and Pegged Token are minted in equivalent proportions so that its price\\n     *  and global coverage are not modified.\\n     *  Reverts if qAC sent are insufficient.\\n     * @param params_ mint TC and TP function parameters\\n     * @dev\\n     *      i_ Pegged Token index\\n     *      qTP_ amount of Pegged Token to mint\\n     *      qACmax_ maximum amount of Collateral Asset that can be spent\\n     *      sender_ address who sends Collateral Asset\\n     *      recipient_ address who receives the Collateral Token and Pegged Token\\n     *      vendor_ address who receives a markup. If its address(0) no markup is applied\\n     * @return qACtotalNeeded amount of AC used to mint Collateral Token and Pegged Token\\n     * @return qTCtoMint amount of Collateral Token minted\\n     * @return qFeeTokenTotalNeeded amount of Fee Token used by `sender_` to pay fees. 0 if qAC is used instead\\n     */\\n    function _mintTCandTPto(\\n        MintTCandTPParams memory params_\\n    )\\n        internal\\n        notLiquidated\\n        notPaused\\n        returns (uint256 qACtotalNeeded, uint256 qTCtoMint, uint256 qFeeTokenTotalNeeded)\\n    {\\n        uint256 qACNeededtoMint;\\n        (uint256 ctargemaCA, uint256[] memory pACtps) = _updateEmasAndCalcCtargemaCA();\\n        uint256 pACtp = pACtps[params_.i];\\n        _updateTPtracking(params_.i, pACtp);\\n        // evaluates that the system is not below the liquidation threshold\\n        // one of the reasons is to prevent it from failing due to underflow because the lckAC > totalACavailable\\n        _evalCoverage(liqThrld, pACtps);\\n        (qTCtoMint, qACNeededtoMint) = _calcQACforMintTCandTP(params_.qTP, pACtp, ctargemaCA, pACtps);\\n        FeeCalcs memory feeCalcs;\\n        uint256 qACSurcharges;\\n        (qACSurcharges, qFeeTokenTotalNeeded, feeCalcs) = _calcFees(\\n            params_.sender,\\n            params_.vendor,\\n            qACNeededtoMint,\\n            mintTCandTPFee\\n        );\\n        qACtotalNeeded = qACNeededtoMint + qACSurcharges;\\n        if (qACtotalNeeded > params_.qACmax) revert InsufficientQacSent(params_.qACmax, qACtotalNeeded);\\n        // if is 0 reverts because it is trying to mint an amount below precision\\n        if (qACtotalNeeded == 0) revert QacNeededMustBeGreaterThanZero();\\n        emit TCandTPMinted(\\n            params_.i,\\n            params_.sender,\\n            params_.recipient,\\n            qTCtoMint,\\n            params_.qTP,\\n            qACtotalNeeded,\\n            feeCalcs.qACFee,\\n            feeCalcs.qFeeToken,\\n            feeCalcs.qACVendorMarkup,\\n            feeCalcs.qFeeTokenVendorMarkup\\n        );\\n        _depositAndMintTC(qTCtoMint, qACNeededtoMint, params_.recipient);\\n        _depositAndMintTP(params_.i, params_.qTP, 0, params_.recipient);\\n        uint256 acChange = _onACNeededOperation(params_.qACmax, qACtotalNeeded);\\n        // transfers qAC to the sender and distributes fees\\n        _distOpResults(params_.sender, params_.sender, acChange, params_.vendor, feeCalcs);\\n    }\\n\\n    struct RedeemTCandTPParams {\\n        uint256 i;\\n        uint256 qTC;\\n        uint256 qTP;\\n        uint256 qACmin;\\n        address sender;\\n        address recipient;\\n        address vendor;\\n    }\\n\\n    /**\\n     * @notice redeem Collateral Asset in exchange for Collateral Token and Pegged Token\\n     *  This operation is done without checking coverage\\n     *  Collateral Token and Pegged Token are redeemed in equivalent proportions so that its price\\n     *  and global coverage are not modified.\\n     *  Reverts if qTP sent are insufficient.\\n     * @param params_ redeem TC and TP function parameters\\n     * @dev\\n     *      i_ Pegged Token index\\n     *      qTC_ amount of Collateral Token to redeem\\n     *      qTP_ maximum amount of Pegged Token to redeem\\n     *      qACmin_ minimum amount of Collateral Asset that `recipient_` expects to receive\\n     *      sender_ address who sends Collateral Token and Pegged Token\\n     *      recipient_ address who receives the Collateral Asset\\n     *      vendor_ address who receives a markup. If its address(0) no markup is applied\\n     * @return qACtoRedeem amount of AC sent to `recipient_`\\n     * @return qTPtoRedeem amount of Pegged Token redeemed\\n     * @return qFeeTokenTotalNeeded amount of Fee Token used by `sender_` to pay fees. 0 if qAC is used instead\\n     */\\n    function _redeemTCandTPto(\\n        RedeemTCandTPParams memory params_\\n    )\\n        internal\\n        notLiquidated\\n        notPaused\\n        returns (uint256 qACtoRedeem, uint256 qTPtoRedeem, uint256 qFeeTokenTotalNeeded)\\n    {\\n        uint256[] memory pACtps = _getPACtps();\\n        uint256 pACtp = pACtps[params_.i];\\n        _updateTPtracking(params_.i, pACtp);\\n        // evaluates that the system is not below the liquidation threshold\\n        // one of the reasons is to prevent it from failing due to underflow because the lckAC > totalACavailable\\n        (uint256 lckAC, uint256 nACgain) = _evalCoverage(liqThrld, pACtps);\\n        // calculate how many TP are needed to redeem TC and not change coverage\\n        // qTPtoRedeem = (qTC * pACtp * pTCac) / (cglb - 1)\\n        // pTCac = (totalACavailable - lckAC) / nTCcb\\n        // cglb = totalACavailable / lckAC => cglb - 1 = (totalACavailable - lckAC) / lckAC\\n        // qTPtoRedeem = (qTC * pACtp * (totalACavailable - lckAC) / nTCcb) / ((totalACavailable - lckAC) / lckAC)\\n        // So, we can simplify (totalACavailable - lckAC)\\n        // qTPtoRedeem = (qTC * pACtp * lckAC) / nTCcb\\n        // [N] = ([N] * [N] * [PREC] / [N]) /  [PREC]\\n        qTPtoRedeem = ((params_.qTC * lckAC * pACtp) / nTCcb) / PRECISION;\\n\\n        if (qTPtoRedeem > params_.qTP) revert InsufficientQtpSent(params_.qTP, qTPtoRedeem);\\n        uint256 qACtotalToRedeem = _calcQACforRedeemTCandTP(params_.qTC, qTPtoRedeem, pACtp, _getPTCac(lckAC, nACgain));\\n        FeeCalcs memory feeCalcs;\\n        uint256 qACSurcharges;\\n        (qACSurcharges, qFeeTokenTotalNeeded, feeCalcs) = _calcFees(\\n            params_.sender,\\n            params_.vendor,\\n            qACtotalToRedeem,\\n            redeemTCandTPFee\\n        );\\n        qACtoRedeem = qACtotalToRedeem - qACSurcharges;\\n        if (qACtoRedeem < params_.qACmin) revert QacBelowMinimumRequired(params_.qACmin, qACtoRedeem);\\n        // if is 0 reverts because it is trying to redeem an amount below precision\\n        if (qACtoRedeem == 0) revert QacNeededMustBeGreaterThanZero();\\n        emit TCandTPRedeemed(\\n            params_.i,\\n            params_.sender,\\n            params_.recipient,\\n            params_.qTC,\\n            qTPtoRedeem,\\n            qACtoRedeem,\\n            feeCalcs.qACFee,\\n            feeCalcs.qFeeToken,\\n            feeCalcs.qACVendorMarkup,\\n            feeCalcs.qFeeTokenVendorMarkup\\n        );\\n\\n        _withdrawAndBurnTC(params_.qTC, qACtotalToRedeem, params_.sender);\\n        _withdrawAndBurnTP(params_.i, qTPtoRedeem, 0, params_.sender);\\n\\n        // transfers qAC to the recipient and distributes fees\\n        _distOpResults(params_.sender, params_.recipient, qACtoRedeem, params_.vendor, feeCalcs);\\n    }\\n\\n    struct SwapTPforTCParams {\\n        uint256 i;\\n        uint256 qTP;\\n        uint256 qTCmin;\\n        uint256 qACmax;\\n        address sender;\\n        address recipient;\\n        address vendor;\\n    }\\n\\n    /**\\n     * @notice swap Pegged Token to another one\\n     *  This operation is done without checking coverage unless the target coverage for\\n     *  received Pegged Token is greater than the Pegged Token sent\\n     * @param params_ swap TP for TP function parameters\\n     * @dev\\n     *      iFrom_ owned Pegged Token index\\n     *      iTo_ target Pegged Token index\\n     *      qTP_ amount of owned Pegged Token to swap\\n     *      qTPmin_ minimum amount of target Pegged Token that `recipient_` expects to receive\\n     *      qACmax_ maximum amount of Collateral Asset that can be spent in fees\\n     *      sender_ address who sends the Pegged Token\\n     *      recipient_ address who receives the target Pegged Token\\n     *      vendor_ address who receives a markup. If its address(0) no markup is applied\\n     * @return qACSurcharges amount of AC used to pay fees and markup\\n     * @return qTPtoMint amount of Pegged Token minted\\n     * @return qFeeTokenTotalNeeded amount of Fee Token used by `sender_` to pay fees. 0 if qAC is used instead\\n     */\\n    function _swapTPforTPto(\\n        SwapTPforTPParams memory params_\\n    )\\n        internal\\n        notLiquidated\\n        notPaused\\n        returns (uint256 qACSurcharges, uint256 qTPtoMint, uint256 qFeeTokenTotalNeeded)\\n    {\\n        FeeCalcs memory feeCalcs;\\n        bytes memory payload = abi.encodeCall(MocCoreExpansion(mocCoreExpansion).swapTPforTPto, (params_));\\n        (qACSurcharges, qTPtoMint, qFeeTokenTotalNeeded, feeCalcs) = abi.decode(\\n            Address.functionDelegateCall(mocCoreExpansion, payload),\\n            (uint256, uint256, uint256, FeeCalcs)\\n        );\\n\\n        // AC is only used to pay fees and markup\\n        uint256 acChange = _onACNeededOperation(params_.qACmax, qACSurcharges);\\n        // transfer any qAC change to the sender and distribute fees\\n        _distOpResults(params_.sender, params_.sender, acChange, params_.vendor, feeCalcs);\\n    }\\n\\n    /**\\n     * @notice swap Pegged Token to Collateral Token\\n     * @param params_ swap TP for TC function parameters\\n     * @dev\\n     *      i_ Pegged Token index\\n     *      qTP_ amount Pegged Token to swap\\n     *      qTCmin_ minimum amount of Collateral Token that `recipient_` expects to receive\\n     *      qACmax_ maximum amount of Collateral Asset that can be spent in fees\\n     *      sender_ address who sends the Pegged Token\\n     *      recipient_ address who receives Collateral Token\\n     *      vendor_ address who receives a markup. If its address(0) no markup is applied\\n     * @return qACSurcharges amount of AC used to pay fees and markup\\n     * @return qTCtoMint amount of Collateral Token minted\\n     * @return qFeeTokenTotalNeeded amount of Fee Token used by `sender_` to pay fees. 0 if qAC is used instead\\n     */\\n    function _swapTPforTCto(\\n        SwapTPforTCParams memory params_\\n    )\\n        internal\\n        notLiquidated\\n        notPaused\\n        returns (uint256 qACSurcharges, uint256 qTCtoMint, uint256 qFeeTokenTotalNeeded)\\n    {\\n        uint256[] memory pACtps = _getPACtps();\\n        uint256 pACtp = pACtps[params_.i];\\n        _updateTPtracking(params_.i, pACtp);\\n        // evaluates whether or not the system coverage is healthy enough to mint TC, reverts if it's not\\n        (uint256 lckAC, uint256 nACgain) = _evalCoverage(protThrld, pACtps);\\n        // calculate how many total qAC are redeemed TP\\n        // [N] = [N] * [PREC] / [PREC]\\n        uint256 qACtotalToRedeem = _divPrec(params_.qTP, pACtp);\\n        // calculate how many qTC can mint with the given qAC\\n        // qTCtoMint = qTP / pTCac / pACtp\\n        // [N] = [N] * [N] * [PREC] / ([N] - [N]) * [PREC]\\n        qTCtoMint = _divPrec(params_.qTP * nTCcb, (_getTotalACavailable(nACgain) - lckAC) * pACtp);\\n        if (qTCtoMint < params_.qTCmin || qTCtoMint == 0) revert QtcBelowMinimumRequired(params_.qTCmin, qTCtoMint);\\n\\n        FeeCalcs memory feeCalcs;\\n        (qACSurcharges, qFeeTokenTotalNeeded, feeCalcs) = _calcFees(\\n            params_.sender,\\n            params_.vendor,\\n            qACtotalToRedeem,\\n            swapTPforTCFee\\n        );\\n        if (qACSurcharges > params_.qACmax) revert InsufficientQacSent(params_.qACmax, feeCalcs.qACFee);\\n        emit TPSwappedForTC(\\n            params_.i,\\n            params_.sender,\\n            params_.recipient,\\n            params_.qTP,\\n            qTCtoMint,\\n            feeCalcs.qACFee,\\n            feeCalcs.qFeeToken,\\n            feeCalcs.qACVendorMarkup,\\n            feeCalcs.qFeeTokenVendorMarkup\\n        );\\n\\n        _withdrawAndBurnTP(params_.i, params_.qTP, 0, params_.sender);\\n        _depositAndMintTC(qTCtoMint, 0, params_.recipient);\\n\\n        // AC is only used to pay fees and markup\\n        uint256 acChange = _onACNeededOperation(params_.qACmax, qACSurcharges);\\n        // transfer any qAC change to the sender and distribute fees\\n        _distOpResults(params_.sender, params_.sender, acChange, params_.vendor, feeCalcs);\\n    }\\n\\n    struct SwapTCforTPParams {\\n        uint256 i;\\n        uint256 qTC;\\n        uint256 qTPmin;\\n        uint256 qACmax;\\n        address sender;\\n        address recipient;\\n        address vendor;\\n    }\\n\\n    /**\\n     * @notice swap Collateral Token to Pegged Token\\n     * @param params_ swap TC for TP function parameters\\n     * @dev\\n     *      i_ Pegged Token index\\n     *      qTC_ amount of Collateral Token to swap\\n     *      qTPmin_ minimum amount of Pegged Token Token that `recipient_` expects to receive\\n     *      qACmax_ maximum amount of Collateral Asset that can be spent in fees\\n     *      sender_ address who sends the Collateral Token\\n     *      recipient_ address who receives the Pegged Token\\n     *      vendor_ address who receives a markup. If its address(0) no markup is applied\\n     * @return qACSurcharges amount of AC used to pay fees and markup\\n     * @return qTPtoMint amount of Pegged Token minted\\n     * @return qFeeTokenTotalNeeded amount of Fee Token used by `sender_` to pay fees. 0 if qAC is used instead\\n     */\\n    function _swapTCforTPto(\\n        SwapTCforTPParams memory params_\\n    )\\n        internal\\n        notLiquidated\\n        notPaused\\n        returns (uint256 qACSurcharges, uint256 qTPtoMint, uint256 qFeeTokenTotalNeeded)\\n    {\\n        (uint256 ctargemaCA, uint256[] memory pACtps) = _updateEmasAndCalcCtargemaCA();\\n        uint256 pACtp = pACtps[params_.i];\\n        _updateTPtracking(params_.i, pACtp);\\n        // evaluates whether or not the system coverage is healthy enough to redeem TC\\n        // given the target coverage adjusted by the moving average, reverts if it's not\\n        (uint256 lckAC, uint256 nACgain) = _evalCoverage(ctargemaCA, pACtps);\\n        // evaluates if there are enough Collateral Tokens available to redeem, reverts if there are not\\n        _evalTCAvailableToRedeem(params_.qTC, ctargemaCA, lckAC, nACgain);\\n        // calculate how many total qAC are redeemed\\n        // [N] = [N] * [PREC] / [PREC]\\n        uint256 qACtotalToRedeem = _mulPrec(params_.qTC, _getPTCac(lckAC, nACgain));\\n        // if is 0 reverts because it is trying to swap an amount below precision\\n        if (qACtotalToRedeem == 0) revert QacNeededMustBeGreaterThanZero();\\n        // calculate how many qTP can mint with the given qAC\\n        // qTPtoMint = qTC * pTCac * pACtp\\n        // [N] = ([N] * ([N] - [N]) * [PREC] / [N]) / [PREC]\\n        qTPtoMint = ((params_.qTC * (_getTotalACavailable(nACgain) - lckAC) * pACtp) / nTCcb) / PRECISION;\\n        // evaluates if there are enough TP available to mint, reverts if it's not\\n        _evalTPavailableToMint(params_.i, qTPtoMint, pACtp, ctargemaCA, lckAC, nACgain);\\n        if (qTPtoMint < params_.qTPmin) revert QtpBelowMinimumRequired(params_.qTPmin, qTPtoMint);\\n\\n        FeeCalcs memory feeCalcs;\\n        (qACSurcharges, qFeeTokenTotalNeeded, feeCalcs) = _calcFees(\\n            params_.sender,\\n            params_.vendor,\\n            qACtotalToRedeem,\\n            swapTCforTPFee\\n        );\\n        if (qACSurcharges > params_.qACmax) revert InsufficientQacSent(params_.qACmax, feeCalcs.qACFee);\\n        emit TCSwappedForTP(\\n            params_.i,\\n            params_.sender,\\n            params_.recipient,\\n            params_.qTC,\\n            qTPtoMint,\\n            feeCalcs.qACFee,\\n            feeCalcs.qFeeToken,\\n            feeCalcs.qACVendorMarkup,\\n            feeCalcs.qFeeTokenVendorMarkup\\n        );\\n\\n        _withdrawAndBurnTC(params_.qTC, 0, params_.sender);\\n        _depositAndMintTP(params_.i, qTPtoMint, 0, params_.recipient);\\n\\n        // AC is only used to pay fees and markup\\n        uint256 acChange = _onACNeededOperation(params_.qACmax, qACSurcharges);\\n        // transfer any qAC change to the sender and distribute fees\\n        _distOpResults(params_.sender, params_.sender, acChange, params_.vendor, feeCalcs);\\n    }\\n\\n    /**\\n     * @notice Allow redeem on liquidation state, user Peg balance gets burned and he receives\\n     * the equivalent AC given the liquidation frozen price.\\n     * @dev This function is implemented in MocCoreExpansion but with this contract context\\n     * @param i_ Pegged Token index\\n     * @param sender_ address owner of the TP to be redeemed\\n     * @param recipient_ address who receives the AC\\n     * @return qACRedeemed amount of AC sent to `recipient_`\\n     */\\n    function _liqRedeemTPTo(\\n        uint256 i_,\\n        address sender_,\\n        address recipient_\\n    ) internal notPaused returns (uint256 qACRedeemed) {\\n        bytes memory payload = abi.encodeCall(\\n            MocCoreExpansion(mocCoreExpansion).liqRedeemTPTo,\\n            (i_, sender_, recipient_, acBalanceOf(address(this)))\\n        );\\n        qACRedeemed = abi.decode(Address.functionDelegateCall(mocCoreExpansion, payload), (uint256));\\n        // transfer qAC to the recipient, reverts if fail\\n        acTransfer(recipient_, qACRedeemed);\\n        return qACRedeemed;\\n    }\\n\\n    /**\\n     * @notice Distributes Operation results to the different recipients\\n     * @param sender_ address who executes the operation\\n     * @param operatorsAddress_ operator's address to receive `operatorsQAC_`\\n     * @param operatorsQAC_ amount of AC to transfer operator [N]\\n     * @param vendor_ vendors address to pay markup to\\n     * @param feeCalcs_ struct with:\\n     * @dev\\n     *      qACFee amount of AC needed to pay fees\\n     *      qFeeToken amount of Fee Token needed to pay fess\\n     *      qACVendorMarkup amount of AC needed to pay vendor markup\\n     *      qFeeTokenVendorMarkup amount of Fee Token needed to pay vendor markup\\n     */\\n    function _distOpResults(\\n        address sender_,\\n        address operatorsAddress_,\\n        uint256 operatorsQAC_,\\n        address vendor_,\\n        FeeCalcs memory feeCalcs_\\n    ) internal {\\n        if (feeCalcs_.qACFee > 0) {\\n            // [N] = [PREC] * [N] / [PREC]\\n            uint256 qACFeeRetained = _mulPrec(feeRetainer, feeCalcs_.qACFee);\\n            // Increase collateral in the retain amount\\n            nACcb += qACFeeRetained;\\n            // transfer qAC fee to Moc Fee Flow\\n            acTransfer(mocFeeFlowAddress, feeCalcs_.qACFee - qACFeeRetained);\\n            // transfer qAC markup to vendor\\n            acTransfer(vendor_, feeCalcs_.qACVendorMarkup);\\n        }\\n        // if qACFee == 0 then the fees are paid in Fee Token\\n        else {\\n            // transfer Fee Token to Moc Fee Flow\\n            _feeTokenTransfer(sender_, mocFeeFlowAddress, feeCalcs_.qFeeToken);\\n            // transfer Fee Token to vendor\\n            _feeTokenTransfer(sender_, vendor_, feeCalcs_.qFeeTokenVendorMarkup);\\n        }\\n        // transfer qAC to operator\\n        acTransfer(operatorsAddress_, operatorsQAC_);\\n    }\\n\\n    /**\\n     * @notice transfer Fee Tokens from an address to another\\n     * @dev this function could revert during safeTransfer call.\\n     *  safeTransfer will revert if token transfer reverts or returns 0\\n     * @param from_ address who sends the Fee Token\\n     * @param to_ address who receives the Fee Token\\n     * @param amount_ amount of Fee Token to transfer\\n     */\\n    function _feeTokenTransfer(address from_, address to_, uint256 amount_) internal {\\n        if (amount_ > 0) SafeERC20.safeTransferFrom(feeToken, from_, to_, amount_);\\n    }\\n\\n    // ------- Public Functions -------\\n\\n    /**\\n     * @notice caller sends Collateral Token and receives Collateral Asset\\n     * @param qTC_ amount of Collateral Token to redeem\\n     * @param qACmin_ minimum amount of Collateral Asset that sender expects to receive\\n     * @return qACRedeemed amount of AC sent to sender\\n     * @return qFeeToken amount of Fee Token used by sender to pay fees. 0 if qAC is used instead\\n     */\\n    function redeemTC(uint256 qTC_, uint256 qACmin_) external returns (uint256 qACRedeemed, uint256 qFeeToken) {\\n        RedeemTCParams memory params = RedeemTCParams({\\n            qTC: qTC_,\\n            qACmin: qACmin_,\\n            sender: msg.sender,\\n            recipient: msg.sender,\\n            vendor: address(0)\\n        });\\n        return _redeemTCto(params);\\n    }\\n\\n    /**\\n     * @notice caller sends Collateral Token and receives Collateral Asset\\n     *  `vendor_` receives a markup in Fee Token if possible or in qAC if not\\n     * @param qTC_ amount of Collateral Token to redeem\\n     * @param qACmin_ minimum amount of Collateral Asset that sender expects to receive\\n     * @param vendor_ address who receives a markup\\n     * @return qACRedeemed amount of AC sent to sender\\n     * @return qFeeToken amount of Fee Token used by sender to pay fees. 0 if qAC is used instead\\n     */\\n    function redeemTCViaVendor(\\n        uint256 qTC_,\\n        uint256 qACmin_,\\n        address vendor_\\n    ) external returns (uint256 qACRedeemed, uint256 qFeeToken) {\\n        RedeemTCParams memory params = RedeemTCParams({\\n            qTC: qTC_,\\n            qACmin: qACmin_,\\n            sender: msg.sender,\\n            recipient: msg.sender,\\n            vendor: vendor_\\n        });\\n        return _redeemTCto(params);\\n    }\\n\\n    /**\\n     * @notice caller sends Collateral Token and recipient receives Collateral Asset\\n     * @param qTC_ amount of Collateral Token to redeem\\n     * @param qACmin_ minimum amount of Collateral Asset that `recipient_` expects to receive\\n     * @param recipient_ address who receives the Collateral Asset\\n     * @return qACRedeemed amount of AC sent to 'recipient_'\\n     * @return qFeeToken amount of Fee Token used by sender to pay fees. 0 if qAC is used instead\\n     */\\n    function redeemTCto(\\n        uint256 qTC_,\\n        uint256 qACmin_,\\n        address recipient_\\n    ) external returns (uint256 qACRedeemed, uint256 qFeeToken) {\\n        RedeemTCParams memory params = RedeemTCParams({\\n            qTC: qTC_,\\n            qACmin: qACmin_,\\n            sender: msg.sender,\\n            recipient: recipient_,\\n            vendor: address(0)\\n        });\\n        return _redeemTCto(params);\\n    }\\n\\n    /**\\n     * @notice caller sends Collateral Token and recipient receives Collateral Asset\\n     *  `vendor_` receives a markup in Fee Token if possible or in qAC if not\\n     * @param qTC_ amount of Collateral Token to redeem\\n     * @param qACmin_ minimum amount of Collateral Asset that `recipient_` expects to receive\\n     * @param recipient_ address who receives the Collateral Asset\\n     * @param vendor_ address who receives a markup\\n     * @return qACRedeemed amount of AC sent to 'recipient_'\\n     * @return qFeeToken amount of Fee Token used by sender to pay fees. 0 if qAC is used instead\\n     */\\n    function redeemTCtoViaVendor(\\n        uint256 qTC_,\\n        uint256 qACmin_,\\n        address recipient_,\\n        address vendor_\\n    ) external returns (uint256 qACRedeemed, uint256 qFeeToken) {\\n        RedeemTCParams memory params = RedeemTCParams({\\n            qTC: qTC_,\\n            qACmin: qACmin_,\\n            sender: msg.sender,\\n            recipient: recipient_,\\n            vendor: vendor_\\n        });\\n        return _redeemTCto(params);\\n    }\\n\\n    /**\\n     * @notice caller sends Pegged Token and receives Collateral Asset\\n     * @param i_ Pegged Token index to redeem\\n     * @param qTP_ amount of Pegged Token to redeem\\n     * @param qACmin_ minimum amount of Collateral Asset that sender expects to receive\\n     * @return qACRedeemed amount of AC sent to sender\\n     * @return qFeeToken amount of Fee Token used by sender to pay fees. 0 if qAC is used instead\\n     */\\n    function redeemTP(\\n        uint256 i_,\\n        uint256 qTP_,\\n        uint256 qACmin_\\n    ) external returns (uint256 qACRedeemed, uint256 qFeeToken) {\\n        RedeemTPParams memory params = RedeemTPParams({\\n            i: i_,\\n            qTP: qTP_,\\n            qACmin: qACmin_,\\n            sender: msg.sender,\\n            recipient: msg.sender,\\n            vendor: address(0)\\n        });\\n        return _redeemTPto(params);\\n    }\\n\\n    /**\\n     * @notice caller sends Pegged Token and receives Collateral Asset\\n     *  `vendor_` receives a markup in Fee Token if possible or in qAC if not\\n     * @param i_ Pegged Token index to redeem\\n     * @param qTP_ amount of Pegged Token to redeem\\n     * @param qACmin_ minimum amount of Collateral Asset that sender expects to receive\\n     * @param vendor_ address who receives a markup\\n     * @return qACRedeemed amount of AC sent to sender\\n     * @return qFeeToken amount of Fee Token used by sender to pay fees. 0 if qAC is used instead\\n     */\\n    function redeemTPViaVendor(\\n        uint256 i_,\\n        uint256 qTP_,\\n        uint256 qACmin_,\\n        address vendor_\\n    ) external returns (uint256 qACRedeemed, uint256 qFeeToken) {\\n        RedeemTPParams memory params = RedeemTPParams({\\n            i: i_,\\n            qTP: qTP_,\\n            qACmin: qACmin_,\\n            sender: msg.sender,\\n            recipient: msg.sender,\\n            vendor: vendor_\\n        });\\n        return _redeemTPto(params);\\n    }\\n\\n    /**\\n     * @notice caller sends Pegged Token and recipient receives Collateral Asset\\n     * @param i_ Pegged Token index to redeem\\n     * @param qTP_ amount of Pegged Token to redeem\\n     * @param qACmin_ minimum amount of Collateral Asset that `recipient_` expects to receive\\n     * @param recipient_ address who receives the Collateral Asset\\n     * @return qACRedeemed amount of AC sent to 'recipient_'\\n     * @return qFeeToken amount of Fee Token used by sender to pay fees. 0 if qAC is used instead\\n     */\\n    function redeemTPto(\\n        uint256 i_,\\n        uint256 qTP_,\\n        uint256 qACmin_,\\n        address recipient_\\n    ) external returns (uint256 qACRedeemed, uint256 qFeeToken) {\\n        RedeemTPParams memory params = RedeemTPParams({\\n            i: i_,\\n            qTP: qTP_,\\n            qACmin: qACmin_,\\n            sender: msg.sender,\\n            recipient: recipient_,\\n            vendor: address(0)\\n        });\\n        return _redeemTPto(params);\\n    }\\n\\n    /**\\n     * @notice caller sends Pegged Token and recipient receives Collateral Asset\\n     *  `vendor_` receives a markup in Fee Token if possible or in qAC if not\\n     * @param i_ Pegged Token index to redeem\\n     * @param qTP_ amount of Pegged Token to redeem\\n     * @param qACmin_ minimum amount of Collateral Asset that `recipient_` expects to receive\\n     * @param recipient_ address who receives the Collateral Asset\\n     * @param vendor_ address who receives a markup\\n     * @return qACRedeemed amount of AC sent to 'recipient_'\\n     * @return qFeeToken amount of Fee Token used by sender to pay fees. 0 if qAC is used instead\\n     */\\n    function redeemTPtoViaVendor(\\n        uint256 i_,\\n        uint256 qTP_,\\n        uint256 qACmin_,\\n        address recipient_,\\n        address vendor_\\n    ) external returns (uint256 qACRedeemed, uint256 qFeeToken) {\\n        RedeemTPParams memory params = RedeemTPParams({\\n            i: i_,\\n            qTP: qTP_,\\n            qACmin: qACmin_,\\n            sender: msg.sender,\\n            recipient: recipient_,\\n            vendor: vendor_\\n        });\\n        return _redeemTPto(params);\\n    }\\n\\n    /**\\n     * @notice caller sends Collateral Token and Pegged Token and receives coinbase as Collateral Asset\\n     *  This operation is done without checking coverage\\n     *  Collateral Token and Pegged Token are redeemed in equivalent proportions so that its price\\n     *  and global coverage are not modified.\\n     *  Reverts if qTP sent are insufficient.\\n     * @param i_ Pegged Token index\\n     * @param qTC_ maximum amount of Collateral Token to redeem\\n     * @param qTP_ maximum amount of Pegged Token to redeem\\n     * @param qACmin_ minimum amount of Collateral Asset that the sender expects to receive\\n     * @return qACRedeemed amount of AC sent to the sender\\n     * @return qTPRedeemed amount of Pegged Token redeemed\\n     * @return qFeeToken amount of Fee Token used by sender to pay fees. 0 if qAC is used instead\\n     */\\n    function redeemTCandTP(\\n        uint256 i_,\\n        uint256 qTC_,\\n        uint256 qTP_,\\n        uint256 qACmin_\\n    ) external returns (uint256 qACRedeemed, uint256 qTPRedeemed, uint256 qFeeToken) {\\n        RedeemTCandTPParams memory params = RedeemTCandTPParams({\\n            i: i_,\\n            qTC: qTC_,\\n            qTP: qTP_,\\n            qACmin: qACmin_,\\n            sender: msg.sender,\\n            recipient: msg.sender,\\n            vendor: address(0)\\n        });\\n        return _redeemTCandTPto(params);\\n    }\\n\\n    /**\\n     * @notice caller sends Collateral Token and Pegged Token and receives coinbase as Collateral Asset\\n     *  `vendor_` receives a markup in Fee Token if possible or in qAC if not\\n     *  This operation is done without checking coverage\\n     *  Collateral Token and Pegged Token are redeemed in equivalent proportions so that its price\\n     *  and global coverage are not modified.\\n     *  Reverts if qTP sent are insufficient.\\n     * @param i_ Pegged Token index\\n     * @param qTC_ maximum amount of Collateral Token to redeem\\n     * @param qTP_ maximum amount of Pegged Token to redeem\\n     * @param qACmin_ minimum amount of Collateral Asset that the sender expects to receive\\n     * @param vendor_ address who receives a markup\\n     * @return qACRedeemed amount of AC sent to the sender\\n     * @return qTPRedeemed amount of Pegged Token redeemed\\n     * @return qFeeToken amount of Fee Token used by sender to pay fees. 0 if qAC is used instead\\n     */\\n    function redeemTCandTPViaVendor(\\n        uint256 i_,\\n        uint256 qTC_,\\n        uint256 qTP_,\\n        uint256 qACmin_,\\n        address vendor_\\n    ) external returns (uint256 qACRedeemed, uint256 qTPRedeemed, uint256 qFeeToken) {\\n        RedeemTCandTPParams memory params = RedeemTCandTPParams({\\n            i: i_,\\n            qTC: qTC_,\\n            qTP: qTP_,\\n            qACmin: qACmin_,\\n            sender: msg.sender,\\n            recipient: msg.sender,\\n            vendor: vendor_\\n        });\\n        return _redeemTCandTPto(params);\\n    }\\n\\n    /**\\n     * @notice caller sends Collateral Token and Pegged Token and recipient receives Collateral Asset\\n     *  This operation is done without checking coverage\\n     *  Collateral Token and Pegged Token are redeemed in equivalent proportions so that its price\\n     *  and global coverage are not modified.\\n     *  Reverts if qTP sent are insufficient.\\n     * @param i_ Pegged Token index\\n     * @param qTC_ maximum amount of Collateral Token to redeem\\n     * @param qTP_ maximum amount of Pegged Token to redeem\\n     * @param qACmin_ minimum amount of Collateral Asset that `recipient_` expects to receive\\n     * @param recipient_ address who receives the Collateral Asset\\n     * @return qACRedeemed amount of AC sent to the `recipient_`\\n     * @return qTPRedeemed amount of Pegged Token redeemed\\n     * @return qFeeToken amount of Fee Token used by sender to pay fees. 0 if qAC is used instead\\n     */\\n    function redeemTCandTPto(\\n        uint256 i_,\\n        uint256 qTC_,\\n        uint256 qTP_,\\n        uint256 qACmin_,\\n        address recipient_\\n    ) external returns (uint256 qACRedeemed, uint256 qTPRedeemed, uint256 qFeeToken) {\\n        RedeemTCandTPParams memory params = RedeemTCandTPParams({\\n            i: i_,\\n            qTC: qTC_,\\n            qTP: qTP_,\\n            qACmin: qACmin_,\\n            sender: msg.sender,\\n            recipient: recipient_,\\n            vendor: address(0)\\n        });\\n        return _redeemTCandTPto(params);\\n    }\\n\\n    /**\\n     * @notice caller sends Collateral Token and Pegged Token and recipient receives Collateral Asset\\n     *  `vendor_` receives a markup in Fee Token if possible or in qAC if not\\n     *  This operation is done without checking coverage\\n     *  Collateral Token and Pegged Token are redeemed in equivalent proportions so that its price\\n     *  and global coverage are not modified.\\n     *  Reverts if qTP sent are insufficient.\\n     * @param i_ Pegged Token index\\n     * @param qTC_ maximum amount of Collateral Token to redeem\\n     * @param qTP_ maximum amount of Pegged Token to redeem\\n     * @param qACmin_ minimum amount of Collateral Asset that `recipient_` expects to receive\\n     * @param recipient_ address who receives the Collateral Asset\\n     * @param vendor_ address who receives a markup\\n     * @return qACRedeemed amount of AC sent to the `recipient_`\\n     * @return qTPRedeemed amount of Pegged Token redeemed\\n     * @return qFeeToken amount of Fee Token used by sender to pay fees. 0 if qAC is used instead\\n     */\\n    function redeemTCandTPtoViaVendor(\\n        uint256 i_,\\n        uint256 qTC_,\\n        uint256 qTP_,\\n        uint256 qACmin_,\\n        address recipient_,\\n        address vendor_\\n    ) external returns (uint256 qACRedeemed, uint256 qTPRedeemed, uint256 qFeeToken) {\\n        RedeemTCandTPParams memory params = RedeemTCandTPParams({\\n            i: i_,\\n            qTC: qTC_,\\n            qTP: qTP_,\\n            qACmin: qACmin_,\\n            sender: msg.sender,\\n            recipient: recipient_,\\n            vendor: vendor_\\n        });\\n        return _redeemTCandTPto(params);\\n    }\\n\\n    /**\\n     * @notice Allow redeem on liquidation state, user Peg balance gets burned and he receives\\n     * the equivalent AC given the liquidation frozen price.\\n     * @param i_ Pegged Token index\\n     * @return qACRedeemed amount of AC sent to sender\\n     */\\n    function liqRedeemTP(uint256 i_) external returns (uint256 qACRedeemed) {\\n        return _liqRedeemTPTo(i_, msg.sender, msg.sender);\\n    }\\n\\n    /**\\n     * @notice Allow redeem on liquidation state, user Peg balance gets burned and he receives\\n     * the equivalent AC given the liquidation frozen price.\\n     * @param i_ Pegged Token index\\n     * @param recipient_ address who receives the AC\\n     * @return qACRedeemed amount of AC sent to `recipient_`\\n     */\\n    function liqRedeemTPto(uint256 i_, address recipient_) external returns (uint256 qACRedeemed) {\\n        return _liqRedeemTPTo(i_, msg.sender, recipient_);\\n    }\\n\\n    /**\\n     * @notice calculate how many Collateral Asset are needed to mint an amount of Collateral Token\\n     * and Pegged Token in one operation\\n     * @param qTP_ amount of Pegged Token to mint\\n     * @param pACtp_ Pegged Token price [PREC]\\n     * @return qTCtoMint amount of Collateral Token to mint [N]\\n     * @return qACNeededtoMint amount of Collateral Asset needed to mint [N]\\n     */\\n    function _calcQACforMintTCandTP(\\n        uint256 qTP_,\\n        uint256 pACtp_,\\n        uint256 ctargemaCA_,\\n        uint256[] memory pACtps_\\n    ) internal view returns (uint256 qTCtoMint, uint256 qACNeededtoMint) {\\n        (uint256 lckAC, uint256 nACgain) = _calcLckACandACgain(pACtps_);\\n        uint256 pTCac = _getPTCac(lckAC, nACgain);\\n        // calculate how many TC are needed to mint TP and total qAC used for mint both\\n        // [N] = [N] * ([PREC] - [PREC]) / [PREC]\\n        qACNeededtoMint = (qTP_ * (ctargemaCA_ - ONE)) / pACtp_;\\n        // [N] = [N] *  [PREC] / [PREC]\\n        qTCtoMint = _divPrec(qACNeededtoMint, pTCac);\\n        // [N] = [N] + [N] *  [PREC] / [PREC]\\n        qACNeededtoMint = qACNeededtoMint + _divPrec(qTP_, pACtp_);\\n        return (qTCtoMint, qACNeededtoMint);\\n    }\\n\\n    /**\\n     * @notice calculate how many Collateral Asset are needed to redeem an amount of Collateral Token\\n     * and Pegged Token in one operation\\n     * @param qTC_ amount of Collateral Token to redeem\\n     * @param qTP_ amount of Pegged Token to redeem\\n     * @param pACtp_ Pegged Token price [PREC]\\n     * @param pTCac_ Collateral Token price [PREC]\\n     * @return qACtotalToRedeem amount of Collateral Asset needed to redeem, including fees [N]\\n     */\\n    function _calcQACforRedeemTCandTP(\\n        uint256 qTC_,\\n        uint256 qTP_,\\n        uint256 pACtp_,\\n        uint256 pTCac_\\n    ) internal pure returns (uint256 qACtotalToRedeem) {\\n        // calculate how many total qAC are redeemed\\n        // [N] = [N] * [PREC] / [PREC]\\n        qACtotalToRedeem = _divPrec(qTP_, pACtp_);\\n        // calculate how many qAC are redeemed because TC\\n        // [N] = [N] * [PREC] / [PREC]\\n        // TODO: rounding error could be avoid replacing here with qTC_ * totalACavailable / nTCcb\\n        qACtotalToRedeem += _mulPrec(qTC_, pTCac_);\\n        return qACtotalToRedeem;\\n    }\\n\\n    /**\\n     * @notice evaluates if there is enough Collateral Token available to redeem, reverts if there's not\\n     * @param qTC_ amount of Collateral Token to redeem [N]\\n     * @param ctargemaCA_ target coverage adjusted by the moving average of the value of the Collateral Asset [PREC]\\n     * @param lckAC_ amount of Collateral Asset locked by Pegged Token [PREC]\\n     * @param nACgain_ amount of Collateral Asset that will be distributed at\\n     *         settlement because Pegged Token devaluation [N]\\n     */\\n    function _evalTCAvailableToRedeem(\\n        uint256 qTC_,\\n        uint256 ctargemaCA_,\\n        uint256 lckAC_,\\n        uint256 nACgain_\\n    ) internal view {\\n        uint256 tcAvailableToRedeem = _getTCAvailableToRedeem(ctargemaCA_, lckAC_, nACgain_);\\n        // check if there are enough TC available to redeem\\n        if (tcAvailableToRedeem < qTC_) revert InsufficientTCtoRedeem(qTC_, tcAvailableToRedeem);\\n    }\\n\\n    /**\\n     * @notice distribute appreciation factor to beneficiary and success fee to Moc Fee Flow\\n     */\\n    function _distributeSuccessFee() internal {\\n        uint256 mocGain = 0;\\n        uint256 pegAmount = pegContainer.length;\\n        uint256[] memory tpToMint = new uint256[](pegAmount);\\n        for (uint256 i = 0; i < pegAmount; i = unchecked_inc(i)) {\\n            uint256 pACtp = getPACtp(i);\\n            _updateTPtracking(i, pACtp);\\n            int256 iou = tpiou[i];\\n            if (iou > 0) {\\n                // [N] = (([PREC] * [PREC] / [PREC]) * [N]) / [PREC]\\n                tpToMint[i] = _mulPrec(_mulPrec(appreciationFactor, pACtp), uint256(iou));\\n                // [N] = [N] + [N]\\n                mocGain += uint256(iou);\\n                // reset TP profit\\n                tpiou[i] = 0;\\n                _depositAndMintTP(i, tpToMint[i], 0, mocAppreciationBeneficiaryAddress);\\n            }\\n        }\\n        if (mocGain != 0) {\\n            // [N] = [N] * [PREC] / [PREC]\\n            mocGain = _mulPrec(mocGain, successFee);\\n            // sub qAC from the Bucket\\n            nACcb -= mocGain;\\n            // transfer the mocGain AC to Moc Fee Flow\\n            acTransfer(mocFeeFlowAddress, mocGain);\\n        }\\n        emit SuccessFeeDistributed(mocGain, tpToMint);\\n    }\\n\\n    // ------- External Functions -------\\n\\n    /**\\n     * @notice this function is executed during settlement.\\n     *  stores amount of locked AC by Pegged Tokens at this moment and distribute success fee\\n     */\\n\\n    function execSettlement() external notPaused {\\n        // check if it is in the corresponding block to execute the settlement\\n        if (block.number < bns) revert MissingBlocksToSettlement();\\n        bns = block.number + bes;\\n        emit SettlementExecuted();\\n        _distributeSuccessFee();\\n    }\\n\\n    // ------- Only Authorized Changer Functions -------\\n\\n    /**\\n     * @dev sets Moc Core Expansion contract address\\n     * @param mocCoreExpansion_ moc core expansion new contract address\\n     */\\n    function setMocCoreExpansion(address mocCoreExpansion_) external onlyAuthorizedChanger {\\n        // slither-disable-next-line missing-zero-check\\n        mocCoreExpansion = mocCoreExpansion_;\\n    }\\n\\n    /**\\n     * @notice add a Pegged Token to the protocol\\n     * @dev Note that the ema value, should consider `nextEmaCalculation`\\n     *  This function is implemented in MocCoreExpansion but with this contract context\\n     * @param peggedTokenParams_ params of Pegged Token to add\\n     * @dev\\n     *      tpTokenAddress Pegged Token contract address to add\\n     *      priceProviderAddress Pegged Token price provider contract address\\n     *      tpCtarg Pegged Token target coverage [PREC]\\n     *      tpMintFee additional fee pct applied on mint [PREC]\\n     *      tpRedeemFee additional fee pct applied on redeem [PREC]\\n     *      tpEma initial Pegged Token exponential moving average [PREC]\\n     *      tpEmaSf Pegged Token smoothing factor [PREC]\\n     *\\n     *  Requirements:\\n     *\\n     * - the caller must have governance authorization.\\n     * - tpTokenAddress must be a MocRC20, with mint, burn roles already settled\\n     *  for this contract\\n     */\\n    function addPeggedToken(PeggedTokenParams calldata peggedTokenParams_) external onlyAuthorizedChanger {\\n        bytes memory payload = abi.encodeCall(MocCoreExpansion(mocCoreExpansion).addPeggedToken, (peggedTokenParams_));\\n        Address.functionDelegateCall(mocCoreExpansion, payload);\\n    }\\n\\n    /**\\n     * @notice modifies a Pegged Token of the protocol\\n     * @dev Note that the ema value, should consider `nextEmaCalculation`\\n     *  This function is implemented in MocCoreExpansion but with this contract context\\n     * @param peggedTokenParams_ params of Pegged Token to add\\n     * @dev\\n     *      tpTokenAddress Pegged Token contract address to identify the token to edit\\n     *      priceProviderAddress Pegged Token price provider contract address\\n     *      tpCtarg Pegged Token target coverage [PREC]\\n     *      tpMintFee additional fee pct applied on mint [PREC]\\n     *      tpRedeemFee additional fee pct applied on redeem [PREC]\\n     *      tpEma initial Pegged Token exponential moving average [PREC]\\n     *      tpEmaSf Pegged Token smoothing factor [PREC]\\n     *\\n     *  Requirements:\\n     *\\n     * - the caller must have governance authorization.\\n     * - the tpTokenAddress must exists\\n     */\\n    function editPeggedToken(PeggedTokenParams calldata peggedTokenParams_) external onlyAuthorizedChanger {\\n        bytes memory payload = abi.encodeCall(MocCoreExpansion(mocCoreExpansion).editPeggedToken, (peggedTokenParams_));\\n        Address.functionDelegateCall(mocCoreExpansion, payload);\\n    }\\n\\n    // ------- Getters Functions -------\\n\\n    /**\\n     * @notice get Collateral Token price\\n     * @return pTCac [PREC]\\n     */\\n    function getPTCac() external view returns (uint256 pTCac) {\\n        (uint256 lckAC, uint256 nACgain) = _getLckACandACgain();\\n        return _getPTCac(lckAC, nACgain);\\n    }\\n\\n    /**\\n     * @notice get bucket global coverage\\n     * @return cglob [PREC]\\n     */\\n    function getCglb() external view returns (uint256 cglob) {\\n        (uint256 lckAC, uint256 nACgain) = _getLckACandACgain();\\n        return _getCglb(lckAC, nACgain);\\n    }\\n\\n    /**\\n     * @notice get amount of Collateral Token available to redeem\\n     * @dev because it is a view function we are not calculating the new ema,\\n     *  since we are using the last ema calculation, this may differ a little from the real amount\\n     *  of TC available to redeem. Consider it an approximation.\\n     * @return tcAvailableToRedeem [N]\\n     */\\n    function getTCAvailableToRedeem() external view returns (uint256 tcAvailableToRedeem) {\\n        (uint256 ctargemaCA, uint256[] memory pACtps) = _calcCtargemaCA();\\n        (uint256 lckAC, uint256 nACgain) = _calcLckACandACgain(pACtps);\\n        return _getTCAvailableToRedeem(ctargemaCA, lckAC, nACgain);\\n    }\\n\\n    /**\\n     * @notice get amount of Pegged Token available to mint\\n     * @dev because it is a view function we are not calculating the new ema,\\n     *  since we are using the last ema calculation, this may differ a little from the real amount\\n     *  of TP available to mint. Consider it an approximation.\\n     * @param i_ Pegged Token index\\n     * @return tpAvailableToMint [N]\\n     */\\n    function getTPAvailableToMint(uint256 i_) external view returns (uint256 tpAvailableToMint) {\\n        (uint256 ctargemaCA, uint256[] memory pACtps) = _calcCtargemaCA();\\n        uint256 pACtp = pACtps[i_];\\n        (uint256 lckAC, uint256 nACgain) = _calcLckACandACgain(pACtps);\\n        return _getTPAvailableToMint(ctargemaCA, _getCtargemaTP(i_, pACtp), pACtp, lckAC, nACgain);\\n    }\\n\\n    /**\\n     * @notice get total Collateral Asset available\\n     * @return totalACavailable [N]\\n     */\\n    function getTotalACavailable() external view returns (uint256 totalACavailable) {\\n        (, uint256 nACgain) = _getLckACandACgain();\\n        return _getTotalACavailable(nACgain);\\n    }\\n\\n    /**\\n     * @notice get Collateral Token leverage\\n     * @return leverageTC [PREC]\\n     */\\n    function getLeverageTC() external view returns (uint256 leverageTC) {\\n        (uint256 lckAC, uint256 nACgain) = _getLckACandACgain();\\n        return _getLeverageTC(lckAC, nACgain);\\n    }\\n\\n    /**\\n     * @notice get the number of blocks remaining for settlement\\n     */\\n    function getBts() external view returns (uint256) {\\n        if (block.number >= bns) return 0;\\n        return bns - block.number;\\n    }\\n\\n    /**\\n     * @param bes_ number of blocks between settlements\\n     **/\\n    function setBes(uint256 bes_) external onlyAuthorizedChanger {\\n        bes = bes_;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x913330b7fd9a35c85469fa81420dea16491ceea682e8b529a80ac2f98b58f7d7\",\"license\":\"UNLICENSED\"},\"contracts/core/MocCoreExpansion.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.16;\\n\\nimport { MocCommons, PeggedTokenParams } from \\\"./MocCommons.sol\\\";\\nimport { IMocRC20 } from \\\"../interfaces/IMocRC20.sol\\\";\\nimport { IPriceProvider } from \\\"../interfaces/IPriceProvider.sol\\\";\\n\\n/**\\n * @title MocCoreExpansion\\n * @notice This contract is used as an expansion of MocCore because 24kb size limitation\\n *  MocCore delegate some function calls to it.\\n * @dev IMPORTANT NOTES:\\n *  1. MocCore and MocCoreExpansion must have always the same storage layout to avoid collisions\\n *  2. Because MocCore is upgradeable and delegates calls to MocCoreExpansion, it cannot be upgradeable because\\n *      a proxy contract cannot delegate calls to another proxy contract. So, for any MocCoreExpansion upgrade\\n *      you must deploy a new implementation and set it to MocCore.\\n */\\ncontract MocCoreExpansion is MocCommons {\\n    /// @custom:oz-upgrades-unsafe-allow constructor\\n    constructor() {\\n        _disableInitializers();\\n    }\\n\\n    /**\\n     * @notice add a Pegged Token to the protocol\\n     * @dev Note that the ema value, should consider `nextEmaCalculation`\\n     *  This function is called by MocCore contract using it's context with delegate call\\n     *  Checks done there:\\n     *  -  onlyAuthorizedChanger: the caller must have governance authorization.\\n     * @param peggedTokenParams_ params of Pegged Token to add\\n     * @dev tpTokenAddress Pegged Token contract address to add\\n     *      priceProviderAddress Pegged Token price provider contract address\\n     *      tpCtarg Pegged Token target coverage [PREC]\\n     *      tpMintFee additional fee pct applied on mint [PREC]\\n     *      tpRedeemFee additional fee pct applied on redeem [PREC]\\n     *      tpEma initial Pegged Token exponential moving average [PREC]\\n     *      tpEmaSf Pegged Token smoothing factor [PREC]\\n     *\\n     *  Requirements:\\n     *\\n     *  - tpTokenAddress must be a MocRC20, with mint, burn roles already settled\\n     *  for this contract\\n     */\\n    function addPeggedToken(PeggedTokenParams calldata peggedTokenParams_) external {\\n        IMocRC20 tpToken = IMocRC20(peggedTokenParams_.tpTokenAddress);\\n\\n        IPriceProvider priceProvider = IPriceProvider(peggedTokenParams_.priceProviderAddress);\\n        if (peggedTokenIndex[address(tpToken)].exists) revert PeggedTokenAlreadyAdded();\\n        uint256 newTPindex = uint256(tpTokens.length);\\n        peggedTokenIndex[address(tpToken)] = PeggedTokenIndex({ index: newTPindex, exists: true });\\n\\n        // set Pegged Token address\\n        tpTokens.push(tpToken);\\n        // set peg container item\\n        pegContainer.push(PegContainerItem({ nTP: 0, priceProvider: priceProvider }));\\n        // set target coverage\\n        tpCtarg.push(peggedTokenParams_.tpCtarg);\\n        // set mint fee pct\\n        tpMintFee.push(peggedTokenParams_.tpMintFee);\\n        // set redeem fee pct\\n        tpRedeemFee.push(peggedTokenParams_.tpRedeemFee);\\n        // set EMA initial value and smoothing factor\\n        tpEma.push(EmaItem({ ema: peggedTokenParams_.tpEma, sf: peggedTokenParams_.tpEmaSf }));\\n        tpiou.push();\\n        // reverts if price provider is invalid\\n        pACtpLstop.push(getPACtp(newTPindex));\\n        // emit the event\\n        emit PeggedTokenChange(newTPindex, peggedTokenParams_);\\n    }\\n\\n    /**\\n     * @notice modifies a Pegged Token of the protocol\\n     * @dev Note that the ema value, should consider `nextEmaCalculation`\\n     *  This function is called by MocCore contract using it's context with delegate call\\n     *  Checks done there:\\n     *  -  onlyAuthorizedChanger: the caller must have governance authorization.\\n     * @param peggedTokenParams_ params of Pegged Token to add\\n     * @dev tpTokenAddress Pegged Token contract address to identify the token to edit\\n     *      priceProviderAddress Pegged Token price provider contract address\\n     *      tpCtarg Pegged Token target coverage [PREC]\\n     *      tpMintFee additional fee pct applied on mint [PREC]\\n     *      tpRedeemFee additional fee pct applied on redeem [PREC]\\n     *      tpEma initial Pegged Token exponential moving average [PREC]\\n     *      tpEmaSf Pegged Token smoothing factor [PREC]\\n     *\\n     *  Requirements:\\n     *\\n     * - the tpTokenAddress must exists\\n     */\\n    function editPeggedToken(PeggedTokenParams calldata peggedTokenParams_) external {\\n        PeggedTokenIndex memory ptIndex = peggedTokenIndex[peggedTokenParams_.tpTokenAddress];\\n        if (!ptIndex.exists) revert InvalidAddress();\\n        uint256 i = ptIndex.index;\\n        // if being edited, verifies it is a valid priceProvider\\n        if (peggedTokenParams_.priceProviderAddress != address(pegContainer[i].priceProvider)) {\\n            IPriceProvider priceProvider = IPriceProvider(peggedTokenParams_.priceProviderAddress);\\n            (, bool has) = priceProvider.peek();\\n            if (!has) revert InvalidAddress();\\n            pegContainer[i].priceProvider = priceProvider;\\n        }\\n        // set target coverage\\n        tpCtarg[i] = peggedTokenParams_.tpCtarg;\\n        // set mint fee pct\\n        tpMintFee[i] = peggedTokenParams_.tpMintFee;\\n        // set redeem fee pct\\n        tpRedeemFee[i] = peggedTokenParams_.tpRedeemFee;\\n        // set EMA initial value and smoothing factor\\n        tpEma[i].sf = peggedTokenParams_.tpEmaSf;\\n        // emit the event\\n        emit PeggedTokenChange(i, peggedTokenParams_);\\n    }\\n\\n    /**\\n     * @notice Allow redeem on liquidation state, user Peg balance gets burned\\n     * @dev This function is called by MocCore contract using it's context with delegate call\\n     *  The equivalent AC given the liquidation frozen price(qACRedeemed) is transferred\\n     *  to the `recipient_` by MocCore contract\\n     *  Checks done there:\\n     *  -  notPaused: the contract must be unpaused\\n     * @param i_ Pegged Token index\\n     * @param sender_ address owner of the TP to be redeemed\\n     * @param recipient_ address who receives the AC\\n     * @return qACRedeemed amount of AC sent to `recipient_`\\n     */\\n    function liqRedeemTPTo(\\n        uint256 i_,\\n        address sender_,\\n        address recipient_,\\n        uint256 mocACBalance\\n    ) external returns (uint256 qACRedeemed) {\\n        if (!liquidated) revert OnlyWhenLiquidated();\\n        uint256 qTP = tpTokens[i_].balanceOf(sender_);\\n        if (qTP == 0) revert InsufficientTPtoRedeem(qTP, qTP);\\n        // [PREC]\\n        uint256 liqPACtp = tpLiqPrices[i_];\\n        // [PREC] = [N] * [PREC] / [PREC]\\n        qACRedeemed = _divPrec(qTP, liqPACtp);\\n        // Given rounding errors, the last redeemer might receive a little less\\n        if (mocACBalance < qACRedeemed) qACRedeemed = mocACBalance;\\n        // in liquidation doesn't pay fees or markup\\n        // qACfee, qFeeToken, qACVendorMarkup, qFeeTokenVendorMarkup  = (0, 0, 0, 0)\\n        emit TPRedeemed(i_, sender_, recipient_, qTP, qACRedeemed, 0, 0, 0, 0);\\n        // burn qTP from the sender\\n        tpTokens[i_].burn(sender_, qTP);\\n    }\\n\\n    /**\\n     * @notice swap Pegged Token to another one\\n     *  This operation is done without checking coverage unless the target coverage for\\n     *  received Pegged Token is greater than the Pegged Token sent\\n     * @param params_ swap TP for TP function parameters\\n     * @dev\\n     *      iFrom_ owned Pegged Token index\\n     *      iTo_ target Pegged Token index\\n     *      qTP_ amount of owned Pegged Token to swap\\n     *      qTPmin_ minimum amount of target Pegged Token that `recipient_` expects to receive\\n     *      qACmax_ maximum amount of Collateral Asset that can be spent in fees\\n     *      sender_ address who sends the Pegged Token\\n     *      recipient_ address who receives the target Pegged Token\\n     *      vendor_ address who receives a markup. If its address(0) no markup is applied\\n     * @return qACSurcharges amount of AC used to pay fees and markup\\n     * @return qTPtoMint amount of Pegged Token minted\\n     * @return qFeeTokenTotalNeeded amount of Fee Token used by `sender_` to pay fees. 0 if qAC is used instead\\n     * @return feeCalcs struct with:\\n     * @dev\\n     *      qACFee amount of AC needed to pay fees\\n     *      qFeeToken amount of Fee Token needed to pay fess\\n     *      qACVendorMarkup amount of AC needed to pay vendor markup\\n     *      qFeeTokenVendorMarkup amount of Fee Token needed to pay vendor markup\\n     */\\n    function swapTPforTPto(\\n        SwapTPforTPParams memory params_\\n    )\\n        external\\n        payable\\n        notLiquidated\\n        notPaused\\n        returns (uint256 qACSurcharges, uint256 qTPtoMint, uint256 qFeeTokenTotalNeeded, FeeCalcs memory feeCalcs)\\n    {\\n        if (params_.iFrom == params_.iTo) revert InvalidValue();\\n        uint256 pACtpFrom = getPACtp(params_.iFrom);\\n        uint256 pACtpTo = getPACtp(params_.iTo);\\n        _updateTPtracking(params_.iFrom, pACtpFrom);\\n        _updateTPtracking(params_.iTo, pACtpTo);\\n        // calculate how many total qAC are redeemed\\n        // [N] = [N] * [PREC] / [PREC]\\n        uint256 qACtotalToRedeem = _divPrec(params_.qTP, pACtpFrom);\\n        // calculate how many qTP can mint with the given qAC\\n        // [N] = [N] * [PREC] / [PREC]\\n        qTPtoMint = (params_.qTP * pACtpTo) / pACtpFrom;\\n        if (qTPtoMint < params_.qTPmin || qTPtoMint == 0) revert QtpBelowMinimumRequired(params_.qTPmin, qTPtoMint);\\n\\n        // if ctargemaTPto > ctargemaTPfrom we need to check coverage\\n        if (_getCtargemaTP(params_.iTo, pACtpTo) > _getCtargemaTP(params_.iFrom, pACtpFrom)) {\\n            (uint256 ctargemaCA, uint256[] memory pACtps) = _updateEmasAndCalcCtargemaCA();\\n            // evaluates whether or not the system coverage is healthy enough to mint TP\\n            // given the target coverage adjusted by the moving average, reverts if it's not\\n            (uint256 lckAC, uint256 nACgain) = _evalCoverage(ctargemaCA, pACtps);\\n            // evaluates if there are enough TP available to mint, reverts if it's not\\n            _evalTPavailableToMint(params_.iTo, qTPtoMint, pACtpTo, ctargemaCA, lckAC, nACgain);\\n        }\\n        (qACSurcharges, qFeeTokenTotalNeeded, feeCalcs) = _calcFees(\\n            params_.sender,\\n            params_.vendor,\\n            qACtotalToRedeem,\\n            swapTPforTPFee\\n        );\\n        if (qACSurcharges > params_.qACmax) revert InsufficientQacSent(params_.qACmax, feeCalcs.qACFee);\\n        emit TPSwappedForTP(\\n            params_.iFrom,\\n            params_.iTo,\\n            params_.sender,\\n            params_.recipient,\\n            params_.qTP,\\n            qTPtoMint,\\n            feeCalcs.qACFee,\\n            feeCalcs.qFeeToken,\\n            feeCalcs.qACVendorMarkup,\\n            feeCalcs.qFeeTokenVendorMarkup\\n        );\\n\\n        _depositAndMintTP(params_.iTo, qTPtoMint, 0, params_.recipient);\\n        _withdrawAndBurnTP(params_.iFrom, params_.qTP, 0, params_.sender);\\n    }\\n}\\n\",\"keccak256\":\"0xdb9d278b656d19d16586887cd5ac2acc1fbd851ff22b199a830775fa860b01d3\",\"license\":\"UNLICENSED\"},\"contracts/core/MocEma.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.16;\\n\\nimport { IMocRC20 } from \\\"../interfaces/IMocRC20.sol\\\";\\nimport { MocBaseBucket } from \\\"./MocBaseBucket.sol\\\";\\n\\n/**\\n * @title MocEma: Exponential Moving Average\\n * @notice Moc Ema, provides a set of methods that allows to calculate and track\\n * Exponential Moving Average for each of the pegged Tokens.\\n * @dev More information of EMA calculation https://en.wikipedia.org/wiki/Exponential_smoothing\\n */\\nabstract contract MocEma is MocBaseBucket {\\n    // ------- Events -------\\n    event TPemaUpdated(uint256 indexed i_, uint256 oldTPema_, uint256 newTPema_);\\n\\n    // ------- Structs -------\\n    struct EmaItem {\\n        // exponential moving average\\n        uint256 ema;\\n        // smoothing factor\\n        uint256 sf;\\n    }\\n\\n    // ------- Storage -------\\n    // TP EMA items, indexes are in sync with PeggedTokens across Moc solution\\n    EmaItem[] public tpEma;\\n    // next Ema Calculation Block number\\n    uint256 public nextEmaCalculation;\\n    // amount of blocks to wait for next ema calculation\\n    uint256 public emaCalculationBlockSpan;\\n\\n    /**\\n     * @notice calculates exponential moving average of the value of a Pegged Token\\n     * @dev more information of EMA calculation https://en.wikipedia.org/wiki/Exponential_smoothing\\n     * @param currentTPema_ current Ema value\\n     * @param pACtp_ current tp AC price\\n     */\\n    function __calcNewEma(EmaItem memory currentTPema_, uint256 pACtp_) private pure returns (uint256) {\\n        // [PREC\\u00b2] = [PREC] * ([PREC] - [PREC])\\n        uint256 term1 = currentTPema_.ema * (ONE - currentTPema_.sf);\\n        // [PREC\\u00b2] = [PREC] * [PREC]\\n        uint256 term2 = currentTPema_.sf * pACtp_;\\n        // [PREC] = ([PREC\\u00b2] + [PREC\\u00b2]) / [PREC]\\n        return (term1 + term2) / PRECISION;\\n    }\\n\\n    // ------- Initializer -------\\n    /**\\n     * @notice contract initializer\\n     * @param emaCalculationBlockSpan_ amount of blocks to wait between Pegged ema calculation\\n     */\\n    function __MocEma_init_unchained(uint256 emaCalculationBlockSpan_) internal onlyInitializing {\\n        if (emaCalculationBlockSpan_ == 0) revert InvalidValue();\\n        emaCalculationBlockSpan = emaCalculationBlockSpan_;\\n        _updateNextEmaCalculation(emaCalculationBlockSpan_);\\n    }\\n\\n    // ------- Internal Functions -------\\n\\n    /**\\n     * @notice updates next EMA block calculation\\n     * @param emaCalculationBlockSpan_ amount of blocks to wait between Pegged ema calculation\\n     */\\n    function _updateNextEmaCalculation(uint256 emaCalculationBlockSpan_) internal {\\n        unchecked {\\n            nextEmaCalculation = block.number + emaCalculationBlockSpan_;\\n        }\\n    }\\n\\n    /**\\n     * @notice get target coverage adjusted by the moving average of the value of a Pegged Token\\n     * @param i_ Pegged Token index\\n     * @param pACtp_ Pegged Token price [PREC]\\n     * @return ctargemaTP [PREC]\\n     */\\n    function _getCtargemaTP(uint256 i_, uint256 pACtp_) internal view returns (uint256 ctargemaTP) {\\n        uint256 auxTPctarg = tpCtarg[i_];\\n        uint256 auxTpEma = tpEma[i_].ema;\\n        if (shouldCalculateEma()) auxTpEma = __calcNewEma(tpEma[i_], pACtp_);\\n        if (auxTpEma >= pACtp_) return auxTPctarg;\\n        // [PREC] = [PREC] * [PREC] / [PREC]\\n        return (auxTPctarg * pACtp_) / auxTpEma;\\n    }\\n\\n    /**\\n     * @notice update exponential moving average of the value of a Pegged Token\\n     * @param i_ Pegged Token index\\n     */\\n    function updateTPema(uint256 i_) internal {\\n        EmaItem memory currentTPema = tpEma[i_];\\n        uint256 pACtp = getPACtp(i_);\\n        uint256 newEma = __calcNewEma(currentTPema, pACtp);\\n        // save new ema value to storage\\n        tpEma[i_].ema = newEma;\\n        emit TPemaUpdated(i_, currentTPema.ema, newEma);\\n    }\\n\\n    /**\\n     * @notice calculates CA target coverage, adjusted by all Pegged Token's to\\n     *  Collateral Asset last stored moving average price\\n     * @dev WARN: if EMA are not up to date, the resulting coverage might not reflect real spot value\\n     *      qAC = (nTP + tpGain) / pACtp\\n     *      ctargemaCA = \\u2211(ctargemaTP * qAC) / \\u2211(qAC)\\n     * @return ctargemaCA [PREC]\\n     * @return pACtps array of all AC prices for each TP, with [PREC]\\n     */\\n    function _calcCtargemaCA() internal view returns (uint256 ctargemaCA, uint256[] memory pACtps) {\\n        uint256 num;\\n        uint256 den;\\n        uint256 pegAmount = pegContainer.length;\\n        pACtps = new uint256[](pegAmount);\\n        for (uint256 i = 0; i < pegAmount; i = unchecked_inc(i)) {\\n            uint256 pACtp = getPACtp(i);\\n            pACtps[i] = pACtp;\\n            (uint256 tpGain, ) = _getPnLTP(i, pACtp);\\n            // [PREC] = [N] * [PREC] * [PREC]  / [PREC]\\n            uint256 qAC = _divPrec((pegContainer[i].nTP + tpGain) * PRECISION, pACtp);\\n            // [PREC]^2 = [PREC] * [PREC]\\n            num += _getCtargemaTP(i, pACtp) * qAC;\\n            // [PREC] = [PREC]\\n            den += qAC;\\n        }\\n        // we must return a default value when all nTP are 0\\n        if (den == 0) {\\n            unchecked {\\n                return (protThrld * 2, pACtps);\\n            }\\n        }\\n        // [PREC] = ([PREC]^2) / [PREC]\\n        ctargemaCA = num / den;\\n    }\\n\\n    /**\\n     * @notice make sure Ema is up to date, and calculates target coverage adjusted by all Pegged Token's\\n     * to Collateral Asset rate moving average\\n     * @dev qAC = nTP / pACtp\\n     *      ctargemaCA = \\u2211(ctargemaTP * qAC) / \\u2211(qAC)\\n     * @return ctargemaCA [PREC]\\n     * @return pACtps array of all AC prices for each TP, with [PREC]\\n     */\\n    function _updateEmasAndCalcCtargemaCA() internal returns (uint256 ctargemaCA, uint256[] memory pACtps) {\\n        // Make sure EMAs are up to date for all the pegs, in the, unlikely, scenario they hadn't been updated already\\n        updateEmas();\\n        return _calcCtargemaCA();\\n    }\\n\\n    // ------- Public Functions -------\\n\\n    /**\\n     * @notice calculates target coverage adjusted by all Pegged Token's to Collateral Asset rate moving average\\n     * @dev qAC = nTP / pACtp\\n     *      ctargemaCA = \\u2211(ctargemaTP * qAC) / \\u2211(qAC)\\n     * @return ctargemaCA [PREC]\\n     */\\n    function calcCtargemaCA() external view returns (uint256 ctargemaCA) {\\n        (ctargemaCA, ) = _calcCtargemaCA();\\n    }\\n\\n    /**\\n     * @notice true if the necessary span has pass since last ema update\\n     */\\n    function shouldCalculateEma() public view returns (bool) {\\n        unchecked {\\n            return block.number >= nextEmaCalculation;\\n        }\\n    }\\n\\n    /**\\n     * @notice If time, calculates the EMA for all the Pegged Token prices.\\n     * @dev All price provider prices must be available, fails if not\\n     */\\n    function updateEmas() public {\\n        if (shouldCalculateEma()) {\\n            uint256 pegAmount = pegContainer.length;\\n            for (uint256 i = 0; i < pegAmount; i = unchecked_inc(i)) {\\n                updateTPema(i);\\n            }\\n            _updateNextEmaCalculation(emaCalculationBlockSpan);\\n        }\\n    }\\n\\n    /**\\n     * @param blockSpan_ Defines how many blocks should pass between BMA calculations\\n     **/\\n    function setEmaCalculationBlockSpan(uint256 blockSpan_) external onlyAuthorizedChanger {\\n        emaCalculationBlockSpan = blockSpan_;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x2fb6151ff412f865d3ff72b5430ed0c201bc341090fa15a1afea308ffc2b5577\",\"license\":\"UNLICENSED\"},\"contracts/echidna/EchidnaMocWrapperTester.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.16;\\n\\nimport { MocCAWrapper, MocCARC20 } from \\\"../collateral/collateralBag/MocCAWrapper.sol\\\";\\nimport { MocCore, MocCoreExpansion, PeggedTokenParams } from \\\"../core/MocCore.sol\\\";\\nimport { MocBaseBucket } from \\\"../core/MocBaseBucket.sol\\\";\\nimport { MocTC } from \\\"../tokens/MocTC.sol\\\";\\nimport { MocRC20 } from \\\"../tokens/MocRC20.sol\\\";\\nimport { MocVendors } from \\\"../vendors/MocVendors.sol\\\";\\nimport { GovernorMock } from \\\"../mocks/upgradeability/GovernorMock.sol\\\";\\nimport { ERC20Mock } from \\\"../mocks/ERC20Mock.sol\\\";\\nimport { PriceProviderMock } from \\\"../mocks/PriceProviderMock.sol\\\";\\nimport { IPriceProvider } from \\\"../interfaces/IPriceProvider.sol\\\";\\nimport { PriceProviderShifter } from \\\"../utils/PriceProviderShifter.sol\\\";\\nimport { ERC1967Proxy } from \\\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\\\";\\n\\n/**\\n * @title EchidnaMocWrapperTester\\n * @notice This test purpose is to check that operating with assets with different decimals than 18 doesn't affect\\n * the wrapped token price\\n */\\ncontract EchidnaMocWrapperTester {\\n    uint256 internal constant PRECISION = 10 ** 18;\\n    uint256 internal constant UINT256_MAX = ~uint256(0);\\n\\n    uint256 internal constant MAX_PEGGED_TOKENS = 5;\\n    uint256 internal constant MAX_ASSETS = 5;\\n\\n    MocCARC20 internal mocCARC20;\\n    GovernorMock internal governor;\\n    ERC20Mock internal feeToken;\\n    MocTC internal tcToken;\\n    IPriceProvider internal feeTokenPriceProvider;\\n    ERC20Mock internal acToken;\\n    MocVendors internal mocVendors;\\n    address internal mocCoreExpansion;\\n    address internal mocFeeFlow;\\n    address internal mocAppreciationBeneficiary;\\n\\n    uint256 internal totalPeggedTokensAdded;\\n\\n    MocCAWrapper internal mocWrapper;\\n\\n    ERC20Mock[] internal assetsAdded;\\n\\n    constructor() payable {\\n        mocFeeFlow = address(1);\\n        mocAppreciationBeneficiary = address(2);\\n        governor = new GovernorMock();\\n        acToken = new ERC20Mock();\\n        feeToken = new ERC20Mock();\\n        feeTokenPriceProvider = new PriceProviderMock(1 ether);\\n        tcToken = MocTC(_deployProxy(address(new MocTC())));\\n        mocCARC20 = MocCARC20(_deployProxy(address(new MocCARC20())));\\n        mocWrapper = MocCAWrapper(_deployProxy(address(new MocCAWrapper())));\\n        mocCoreExpansion = address(new MocCoreExpansion());\\n        mocVendors = MocVendors(_deployProxy(address(new MocVendors())));\\n\\n        // initialize Vendors\\n        mocVendors.initialize(/*vendorGuardian */ msg.sender, address(governor), /*pauserAddress*/ msg.sender);\\n\\n        // initialize Collateral Token\\n        tcToken.initialize(\\\"TCToken\\\", \\\"TC\\\", address(mocCARC20), governor);\\n\\n        // initialize mocCore\\n        MocBaseBucket.InitializeBaseBucketParams memory initializeBaseBucketParams = MocBaseBucket\\n            .InitializeBaseBucketParams({\\n                feeTokenAddress: address(feeToken),\\n                feeTokenPriceProviderAddress: address(feeTokenPriceProvider),\\n                tcTokenAddress: address(tcToken),\\n                mocFeeFlowAddress: mocFeeFlow,\\n                mocAppreciationBeneficiaryAddress: mocAppreciationBeneficiary,\\n                protThrld: 2 * PRECISION,\\n                liqThrld: 1 * PRECISION,\\n                feeRetainer: (2 * PRECISION) / 10, // 20%\\n                tcMintFee: (5 * PRECISION) / 100, // 5%\\n                tcRedeemFee: (5 * PRECISION) / 100, // 5%\\n                swapTPforTPFee: (1 * PRECISION) / 100, // 1%\\n                swapTPforTCFee: (1 * PRECISION) / 100, // 1%\\n                swapTCforTPFee: (1 * PRECISION) / 100, // 1%\\n                redeemTCandTPFee: (8 * PRECISION) / 100, // 8%\\n                mintTCandTPFee: (8 * PRECISION) / 100, // 8%\\n                feeTokenPct: (5 * PRECISION) / 10, // 50%\\n                successFee: (1 * PRECISION) / 10, // 10%\\n                appreciationFactor: (5 * PRECISION) / 10, // 50%\\n                bes: 30 days\\n            });\\n        MocCore.InitializeCoreParams memory initializeCoreParams = MocCore.InitializeCoreParams({\\n            initializeBaseBucketParams: initializeBaseBucketParams,\\n            governorAddress: address(governor),\\n            pauserAddress: msg.sender,\\n            mocCoreExpansion: mocCoreExpansion,\\n            emaCalculationBlockSpan: 1 days,\\n            mocVendors: address(mocVendors)\\n        });\\n        MocCARC20.InitializeParams memory initializeParams = MocCARC20.InitializeParams({\\n            initializeCoreParams: initializeCoreParams,\\n            acTokenAddress: address(acToken)\\n        });\\n        mocCARC20.initialize(initializeParams);\\n        mocWrapper.initialize(address(governor), msg.sender, address(mocCARC20), address(acToken));\\n\\n        // add a Pegged Token\\n        PeggedTokenParams memory peggedTokenParams = PeggedTokenParams({\\n            tpTokenAddress: address(0),\\n            priceProviderAddress: address(0),\\n            tpCtarg: 5 * PRECISION,\\n            tpMintFee: (5 * PRECISION) / 100, // 5%\\n            tpRedeemFee: (5 * PRECISION) / 100, // 5%\\n            tpEma: 212 * PRECISION,\\n            tpEmaSf: (5 * PRECISION) / 100 // 0.05\\n        });\\n        addPeggedToken(peggedTokenParams, 235 ether);\\n        // start with 0 total supply\\n        acToken.burn(acToken.balanceOf(address(this)));\\n\\n        addAsset(18);\\n        addAsset(6);\\n    }\\n\\n    function addPeggedToken(PeggedTokenParams memory peggedTokenParams_, uint96 price_) public {\\n        require(totalPeggedTokensAdded < MAX_PEGGED_TOKENS, \\\"max TP already added\\\");\\n        MocRC20 tpToken = MocRC20(_deployProxy(address(new MocRC20())));\\n        // initialize Pegged Token\\n        tpToken.initialize(\\\"TPToken\\\", \\\"TP\\\", address(mocCARC20), governor);\\n        peggedTokenParams_.tpTokenAddress = address(tpToken);\\n        // price not 0\\n        price_++;\\n        peggedTokenParams_.priceProviderAddress = address(new PriceProviderMock(price_));\\n        mocCARC20.addPeggedToken(peggedTokenParams_);\\n        totalPeggedTokensAdded++;\\n    }\\n\\n    function pokePrice(uint256 i_, uint96 price_) public {\\n        // price not 0\\n        price_++;\\n        (, IPriceProvider priceProvider) = mocCARC20.pegContainer(i_ % totalPeggedTokensAdded);\\n        PriceProviderMock(address(priceProvider)).poke(price_);\\n    }\\n\\n    function addAsset(uint8 decimals_) public {\\n        require(assetsAdded.length < MAX_ASSETS, \\\"max assets already added\\\");\\n        ERC20Mock asset = new ERC20Mock();\\n        // max decimals considered is 24\\n        uint8 decimals = decimals_ % 24;\\n        asset.setDecimals(decimals);\\n\\n        mocWrapper.addOrEditAsset(\\n            asset,\\n            new PriceProviderShifter(new PriceProviderMock(1 ether), int8(18 - decimals)),\\n            decimals\\n        );\\n        assetsAdded.push(asset);\\n    }\\n\\n    function mintTC(uint8 assetIndex_, uint256 qTC_) public {\\n        ERC20Mock asset = assetsAdded[assetIndex_ % assetsAdded.length];\\n        asset.mint(address(this), qTC_ * 2);\\n        asset.approve(address(mocWrapper), qTC_ * 2);\\n        mocWrapper.mintTC(address(asset), qTC_, qTC_ * 2);\\n    }\\n\\n    function redeemTC(uint8 assetIndex_, uint256 qTC_) public {\\n        ERC20Mock asset = assetsAdded[assetIndex_ % assetsAdded.length];\\n        mocCARC20.tcToken().approve(address(mocWrapper), qTC_);\\n        mocWrapper.redeemTC(address(asset), qTC_, 0);\\n    }\\n\\n    function _deployProxy(address implementation) internal returns (address) {\\n        return address(new ERC1967Proxy(implementation, \\\"\\\"));\\n    }\\n\\n    function echidna_wrappedTokenPrice_always_ONE() public view returns (bool) {\\n        return mocWrapper.getTokenPrice() == PRECISION;\\n    }\\n}\\n\",\"keccak256\":\"0xab7fb4887412bf1964b3b29efd6763f97eda7cc613a5e7909b7ef79fdd439f87\",\"license\":\"UNLICENSED\"},\"contracts/governance/Governed.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.16;\\n\\nimport { IGovernor } from \\\"../interfaces/IGovernor.sol\\\";\\nimport { MocHelper } from \\\"../utils/MocHelper.sol\\\";\\nimport { Initializable } from \\\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\\\";\\n\\n/**\\n  @title Governed\\n  @notice Base contract to be inherited by governed contracts\\n  @dev This contract is not usable on its own since it does not have any _productive useful_ behavior\\n  The only purpose of this contract is to define some useful modifiers and functions to be used on the\\n  governance aspect of the child contract\\n  */\\nabstract contract Governed is Initializable, MocHelper {\\n    /**\\n    @notice The address of the contract which governs this one\\n   */\\n    IGovernor public governor;\\n\\n    error NotAuthorizedChanger();\\n\\n    /**\\n    @notice Modifier that protects the function\\n    @dev You should use this modifier in any function that should be called through\\n    the governance system\\n   */\\n    modifier onlyAuthorizedChanger() {\\n        checkIfAuthorizedChanger();\\n        _;\\n    }\\n\\n    /**\\n    @notice Initialize the contract with the basic settings\\n    @dev This initialize replaces the constructor but it is not called automatically.\\n    It is necessary because of the upgradeability of the contracts\\n    @param governorAddress_ Governor address\\n   */\\n    function __Governed_init(address governorAddress_) internal onlyInitializing {\\n        __Governed_init_unchained(governorAddress_);\\n    }\\n\\n    function __Governed_init_unchained(address governorAddress_) internal onlyInitializing {\\n        governor = IGovernor(governorAddress_);\\n    }\\n\\n    /**\\n    @notice Change the contract's governor. Should be called through the old governance system\\n    @param newGovernor_ New governor address\\n   */\\n    function changeGovernor(IGovernor newGovernor_) external onlyAuthorizedChanger {\\n        governor = newGovernor_;\\n    }\\n\\n    /**\\n    @notice Checks if the msg sender is an authorized changer, reverts otherwise\\n   */\\n    function checkIfAuthorizedChanger() internal view {\\n        if (!governor.isAuthorizedChanger(msg.sender)) revert NotAuthorizedChanger();\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0xde85048a4cd3a3a2fa861ab5e5d47d641e1d5aeca77e21c6f48032e09b4791bd\",\"license\":\"UNLICENSED\"},\"contracts/governance/MocUpgradable.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.16;\\n\\nimport { Stoppable } from \\\"../governance/Stoppable.sol\\\";\\nimport { UUPSUpgradeable } from \\\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\\\";\\n// Import to allow compilation and deploy of ERC1967Proxy\\nimport { ERC1967Proxy } from \\\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\\\";\\n\\nabstract contract MocUpgradable is UUPSUpgradeable, Stoppable {\\n    // ------- Initializer -------\\n    /**\\n     * @notice contract initializer\\n     * @param governorAddress_ The address that will define when a change contract is authorized\\n     * @param pauserAddress_ The address that is authorized to pause this contract\\n     */\\n    function __MocUpgradable_init(address governorAddress_, address pauserAddress_) internal onlyInitializing {\\n        __UUPSUpgradeable_init();\\n        __Governed_init(governorAddress_);\\n        __Stoppable_init_unchained(pauserAddress_, true);\\n    }\\n\\n    /* solhint-disable-next-line no-empty-blocks */\\n    function _authorizeUpgrade(address newImplementation) internal override onlyAuthorizedChanger {}\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0xfcb09b596829d7fbf3b457442302a3af8bd0ac9374eb1ee43f9eec16d4ca4e41\",\"license\":\"UNLICENSED\"},\"contracts/governance/Stoppable.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.16;\\n\\nimport { Governed } from \\\"./Governed.sol\\\";\\n\\n/**\\n * @title Stoppable\\n * @notice Allow a contract to be paused through the stopper subsystem. This contracts\\n * is able to disable the stoppability feature through governance.\\n * @dev This contract was heavily based on the _Pausable_ contract of openzeppelin-eth but\\n * it was modified in order to being able to turn on and off its stoppability\\n */\\ncontract Stoppable is Governed {\\n    event Paused(address account);\\n    event Unpaused(address account);\\n\\n    bool public stoppable;\\n    bool private _paused;\\n    address public pauser;\\n\\n    // ------- Custom Errors -------\\n    error Unstoppable();\\n    error OnlyWhilePaused();\\n    error NotWhenPaused();\\n    error OnlyPauser();\\n\\n    /**\\n     * @notice Modifier to make a function callable only when the contract is not paused\\n     */\\n    modifier notPaused() {\\n        _checkNotPaused();\\n        _;\\n    }\\n\\n    /**\\n     * @notice Modifier to make a function callable only when the contract is paused\\n     */\\n    modifier onlyPaused() {\\n        if (!_paused) revert OnlyWhilePaused();\\n        _;\\n    }\\n\\n    /**\\n     * @notice Initialize the contract with the basic settings\\n     * @dev This initialize replaces the constructor but it is not called automatically.\\n     * It is necessary because of the upgradeability of the contracts. Either this function or the previous can be used\\n     * @param pauserAddress_ The address that is authorized to pause this contract\\n     * @param stoppable_ Define if the contract starts being unstoppable or not\\n     */\\n    function __Stoppable_init_unchained(address pauserAddress_, bool stoppable_) internal onlyInitializing {\\n        stoppable = stoppable_;\\n        pauser = pauserAddress_;\\n    }\\n\\n    /**\\n     * @dev reverts with NotWhenPaused when _paused\\n     */\\n    function _checkNotPaused() internal view {\\n        if (_paused) revert NotWhenPaused();\\n    }\\n\\n    /**\\n     * @notice Returns true if paused\\n     */\\n    function paused() external view returns (bool) {\\n        return _paused;\\n    }\\n\\n    /**\\n     * @notice Called by the owner to pause, triggers stopped state\\n     * @dev Should only be called by the pauser and when it is stoppable\\n     */\\n    function pause() external notPaused {\\n        if (msg.sender != pauser) revert OnlyPauser();\\n        if (!stoppable) revert Unstoppable();\\n        _paused = true;\\n        emit Paused(msg.sender);\\n    }\\n\\n    /**\\n     * @notice Called by the owner to unpause, returns to normal state\\n     */\\n    function unpause() external onlyPaused {\\n        if (msg.sender != pauser) revert OnlyPauser();\\n        _paused = false;\\n        emit Unpaused(msg.sender);\\n    }\\n\\n    /**\\n     * @notice Switches OFF the stoppability of the contract; if the contract was paused\\n     * it will no longer be so\\n     * @dev Should be called through governance\\n     */\\n    function makeUnstoppable() external onlyAuthorizedChanger {\\n        stoppable = false;\\n    }\\n\\n    /**\\n     * @notice Switches ON the stoppability of the contract; if the contract was paused\\n     * before making it unstoppable it will be paused again after calling this function\\n     * @dev Should be called through governance\\n     */\\n    function makeStoppable() external onlyAuthorizedChanger {\\n        stoppable = true;\\n    }\\n\\n    /**\\n     * @notice Changes the address which is enable to pause this contract\\n     * @param newPauser_ Address of the new pauser\\n     * @dev Should be called through governance\\n     */\\n    function setPauser(address newPauser_) external onlyAuthorizedChanger {\\n        // slither-disable-next-line missing-zero-check\\n        pauser = newPauser_;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0xb57847679d72b359be2d70942a5c2df6fc0a0d93f3f9485d230696bdadd8c7f7\",\"license\":\"UNLICENSED\"},\"contracts/interfaces/IChangeContract.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.16;\\n\\n/**\\n  @title IChangeContract\\n  @notice This interface is the one used by the governance system.\\n  @dev If you plan to do some changes to a system governed by this project you should write a contract\\n  that does those changes, like a recipe. This contract MUST not have ANY kind of public or external function\\n  that modifies the state of this ChangeContract, otherwise you could run into front-running issues when the governance\\n  system is fully in place.\\n */\\ninterface IChangeContract {\\n    /**\\n    @notice Override this function with a recipe of the changes to be done when this ChangeContract\\n    is executed\\n   */\\n    function execute() external;\\n}\\n\",\"keccak256\":\"0x3b0a782858c710e8535349b809717bd1960049d8557507cb4c423d9b5c043449\",\"license\":\"UNLICENSED\"},\"contracts/interfaces/IGovernor.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.16;\\n\\nimport { IChangeContract } from \\\"./IChangeContract.sol\\\";\\n\\n/**\\n  @title IGovernor\\n  @notice Governor interface. This functions should be overwritten to\\n  enable the communication with the rest of the system\\n  @dev This interface **MUST** be compatible with the corresponding Governance instance\\n  used on Production, from https://github.com/money-on-chain/Areopagus-Governance\\n  */\\ninterface IGovernor {\\n    /**\\n    @notice Function to be called to make the changes described in changeContract\\n    @dev This function should be protected somehow to only execute changes that\\n    benefit the system. This decision process is independent of this architecture\\n    therefore is independent of this interface too\\n    @param changeContract_ Address of the contract that will execute the changes\\n   */\\n    function executeChange(IChangeContract changeContract_) external;\\n\\n    /**\\n    @notice Returns whether this `changer_` is authorized to execute changes.\\n    @param changer_ Address of the contract that will execute the changes\\n   */\\n    function isAuthorizedChanger(address changer_) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xd91c4baaa22f2907672ddef66b268c360f7eb9f758d203662510c8fb1df4d3d5\",\"license\":\"UNLICENSED\"},\"contracts/interfaces/IMocRC20.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.16;\\n\\nimport { IERC20Upgradeable } from \\\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\\\";\\n\\n/**\\n * @title IMocRC20\\n * @notice Base Moc ERC20 Token Interface: burn, mint. It can be both Pegs and Collateral Tokens.\\n */\\ninterface IMocRC20 is IERC20Upgradeable {\\n    /**\\n     * @dev Creates `amount` new tokens for `to`.\\n     * See {ERC20-_mint}.\\n     */\\n    function mint(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Burns a specific `amount` of tokens for `to`.\\n     * * See {ERC20-_burn}.\\n     */\\n    function burn(address to, uint256 amount) external;\\n}\\n\",\"keccak256\":\"0x0430bbf0673088723bad80a3ae106a0dc902471d60922610daee8e769ea6820e\",\"license\":\"UNLICENSED\"},\"contracts/interfaces/IPriceProvider.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.16;\\n\\n/**\\n * @title IPriceFeed\\n * @notice Amphiraos-Oracle Interface for peeking the price of a given asset\\n * @dev https://github.com/money-on-chain/Amphiraos-Oracle\\n */\\ninterface IPriceProvider {\\n    /**\\n     * @notice returns the given `price` for the asset if `valid`\\n     * @param price assetPrice\\n     * @param valid true if the price is valid\\n     */\\n    function peek() external view returns (bytes32 price, bool valid);\\n}\\n\",\"keccak256\":\"0xac60fc67c5e9e81c630146ef2e916084ccbca8e392e33f8ff84f0e65de21a89a\",\"license\":\"UNLICENSED\"},\"contracts/mocks/ERC20Mock.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// slither-disable-next-line solc-version\\npragma solidity 0.8.16;\\n\\nimport { ERC20, ERC20Burnable } from \\\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\\\";\\n\\ncontract ERC20Mock is ERC20Burnable {\\n    uint256 internal constant UINT256_MAX = ~uint256(0);\\n    uint8 public customDecimals = 18;\\n\\n    // There are existing ERC20 token deployments that reverts and others that return false\\n    // This state is used to test both\\n    enum FailType {\\n        notFail,\\n        failWithFalse, // always returns false in a transfer\\n        failWithRevert // always reverts in a transfer\\n    }\\n\\n    FailType internal failType;\\n\\n    constructor() ERC20(\\\"ERC20Mock\\\", \\\"ERC20Mock\\\") {\\n        _mint(msg.sender, UINT256_MAX / 10 ** 10);\\n    }\\n\\n    function mint(address account, uint256 amount) external {\\n        _mint(account, amount);\\n    }\\n\\n    function burn(address account, uint256 amount) external {\\n        _burn(account, amount);\\n    }\\n\\n    function transfer(address to, uint256 amount) public override returns (bool) {\\n        if (failType == FailType.failWithFalse) {\\n            return false;\\n        }\\n        if (failType == FailType.failWithRevert) {\\n            // solhint-disable-next-line reason-string\\n            require(false);\\n        }\\n        return super.transfer(to, amount);\\n    }\\n\\n    function forceTransferToFail(FailType failType_) external {\\n        failType = failType_;\\n    }\\n\\n    function setDecimals(uint8 customDecimals_) external {\\n        customDecimals = customDecimals_;\\n    }\\n\\n    function decimals() public view virtual override returns (uint8) {\\n        return customDecimals;\\n    }\\n}\\n\",\"keccak256\":\"0x281883aa37e35f6b9851b38735f1426f797728e7bef4ff19d2c1332f2b212931\",\"license\":\"MIT\"},\"contracts/mocks/PriceProviderMock.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.16;\\n\\nimport { IPriceProvider } from \\\"../interfaces/IPriceProvider.sol\\\";\\n\\ncontract PriceProviderMock is IPriceProvider {\\n    bytes32 public mocPrice;\\n    bool public has;\\n\\n    /**\\n     * @notice constructor\\n     * @param price_ MoC price for mock contract\\n     */\\n    constructor(uint256 price_) {\\n        mocPrice = bytes32(price_);\\n        has = true;\\n    }\\n\\n    function peek() external view returns (bytes32, bool) {\\n        return (mocPrice, has);\\n    }\\n\\n    function poke(uint256 price_) external {\\n        mocPrice = bytes32(price_);\\n    }\\n\\n    function deprecatePriceProvider() external {\\n        has = false;\\n    }\\n}\\n\",\"keccak256\":\"0x0c350545753aac0416247712f24719fec46d980348b7ad6f7e13696d4cf2bc4e\",\"license\":\"UNLICENSED\"},\"contracts/mocks/upgradeability/GovernorMock.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.16;\\n\\nimport { IGovernor } from \\\"../../interfaces/IGovernor.sol\\\";\\nimport { IChangeContract } from \\\"../../interfaces/IChangeContract.sol\\\";\\n\\n/**\\n  @title GovernorMock\\n  @dev Test only contract to mock Governor behavior \\n*/\\ncontract GovernorMock is IGovernor {\\n    bool public isAuthorized = true;\\n\\n    /**\\n    @notice Function to be called to make the changes in changeContract\\n    @param changeContract Address of the contract that will execute the changes\\n   */\\n    function executeChange(IChangeContract changeContract) external {\\n        changeContract.execute();\\n    }\\n\\n    function isAuthorizedChanger(address) external view override returns (bool) {\\n        return isAuthorized;\\n    }\\n\\n    function setIsAuthorized(bool isAuthorized_) public {\\n        isAuthorized = isAuthorized_;\\n    }\\n}\\n\",\"keccak256\":\"0xf0cad649f871941ee444160486df19d70d9da92841ff9232c6d2fc3a81f4fbba\",\"license\":\"UNLICENSED\"},\"contracts/tokens/MocRC20.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.16;\\n\\nimport { IMocRC20 } from \\\"../interfaces/IMocRC20.sol\\\";\\n/* solhint-disable-next-line max-line-length */\\nimport { AccessControlEnumerableUpgradeable } from \\\"@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol\\\";\\nimport { ERC20Upgradeable } from \\\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\\\";\\nimport { UUPSUpgradeable } from \\\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\\\";\\nimport { IGovernor, Governed } from \\\"../governance/Governed.sol\\\";\\n\\n/**\\n * @title MocRC20\\n * @notice Base Moc ERC20 Token: burn, mint. It can be both Pegs and Collateral Tokens.\\n * @dev ERC20 like token that allows roles allowed contracts to mint and burn (destroyed) any token.\\n */\\ncontract MocRC20 is IMocRC20, AccessControlEnumerableUpgradeable, ERC20Upgradeable, UUPSUpgradeable, Governed {\\n    bytes32 public constant MINTER_ROLE = keccak256(\\\"MINTER_ROLE\\\");\\n    bytes32 public constant BURNER_ROLE = keccak256(\\\"BURNER_ROLE\\\");\\n\\n    /// @custom:oz-upgrades-unsafe-allow constructor\\n    constructor() {\\n        _disableInitializers();\\n    }\\n\\n    /**\\n     * See {__MocRC20_init}.\\n     */\\n    function initialize(\\n        string memory name_,\\n        string memory symbol_,\\n        address admin_,\\n        IGovernor governor_\\n    ) external virtual initializer {\\n        __MocRC20_init(name_, symbol_, admin_, governor_);\\n    }\\n\\n    /**\\n     * @dev Grants `DEFAULT_ADMIN_ROLE`, `MINTER_ROLE` & `BURNER_ROLE` to `admin` address.\\n     *\\n     * See {ERC20_init}.\\n     */\\n    function __MocRC20_init(\\n        string memory name_,\\n        string memory symbol_,\\n        address admin_,\\n        IGovernor governor_\\n    ) internal onlyInitializing {\\n        __ERC20_init(name_, symbol_);\\n        __AccessControlEnumerable_init();\\n        __UUPSUpgradeable_init();\\n        __Governed_init(address(governor_));\\n\\n        _setupRole(DEFAULT_ADMIN_ROLE, admin_);\\n        _setupRole(MINTER_ROLE, admin_);\\n        _setupRole(BURNER_ROLE, admin_);\\n    }\\n\\n    /* solhint-disable-next-line no-empty-blocks */\\n    function _authorizeUpgrade(address newImplementation) internal override onlyAuthorizedChanger {}\\n\\n    /**\\n     * @dev Creates `amount` new tokens for `to`.\\n     * See {ERC20-_mint}.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have the `MINTER_ROLE`.\\n     */\\n    function mint(address to, uint256 amount) external virtual onlyRole(MINTER_ROLE) returns (bool) {\\n        _mint(to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Burns a specific `amount` of tokens for `to`.\\n     * * See {ERC20-_burn}.\\n     * Requirements:\\n     *\\n     * - the caller must have the `BURNER_ROLE`.\\n     */\\n    function burn(address to, uint256 amount) external virtual onlyRole(BURNER_ROLE) {\\n        _burn(to, amount);\\n    }\\n}\\n\",\"keccak256\":\"0xe389dac056a05665ac2bb7f0bbb5086f77dc61222cd198d291f32fc8abc112b9\",\"license\":\"UNLICENSED\"},\"contracts/tokens/MocTC.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.16;\\n\\nimport { MocRC20, IGovernor, IMocRC20 } from \\\"./MocRC20.sol\\\";\\n/* solhint-disable-next-line max-line-length */\\nimport { ERC20PausableUpgradeable, ERC20Upgradeable } from \\\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol\\\";\\n\\n/**\\n * @title MocTC\\n * @notice Base Moc  ERC20 Collateral Tokens: Allows burn, mint and pause.\\n * @dev ERC20 like token that allows roles allowed contracts to mint and burn (destroyed) any token.\\n */\\ncontract MocTC is MocRC20, ERC20PausableUpgradeable {\\n    bytes32 public constant PAUSER_ROLE = keccak256(\\\"PAUSER_ROLE\\\");\\n\\n    /// @custom:oz-upgrades-unsafe-allow constructor\\n    constructor() {\\n        _disableInitializers();\\n    }\\n\\n    /**\\n     * @dev Grants `PAUSER_ROLE` to `admin` address.\\n     *\\n     * See {MocRC20-constructor}.\\n     */\\n    function initialize(\\n        string memory name_,\\n        string memory symbol_,\\n        address admin_,\\n        IGovernor governor_\\n    ) external override initializer {\\n        __MocRC20_init(name_, symbol_, admin_, governor_);\\n        __ERC20Pausable_init();\\n        _setupRole(PAUSER_ROLE, admin_);\\n    }\\n\\n    /**\\n     * @dev override only to satisfy compiler\\n     * @inheritdoc ERC20PausableUpgradeable\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual override(ERC20Upgradeable, ERC20PausableUpgradeable) {\\n        ERC20PausableUpgradeable._beforeTokenTransfer(from, to, amount);\\n    }\\n\\n    /**\\n     * @dev Pauses the contract.\\n     * See {ERC20PausableUpgradeable-_pause}.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have the `PAUSER_ROLE`.\\n     */\\n    function pause() external virtual onlyRole(PAUSER_ROLE) {\\n        _pause();\\n    }\\n}\\n\",\"keccak256\":\"0x14e9ba70d8104258b39bf76c93f1bb2230645289fc762f8290585deab6d29c22\",\"license\":\"UNLICENSED\"},\"contracts/utils/MocHelper.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.16;\\n\\nimport { SafeERC20 } from \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\n/* solhint-disable-next-line max-line-length */\\nimport { SafeERC20Upgradeable } from \\\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\\\";\\n\\nabstract contract MocHelper {\\n    error InvalidAddress();\\n    error InvalidValue();\\n    // Constants may not be used in child contracts and that is fine as they are\\n    // not using any space in storage, so we disable the check\\n    // slither-disable-next-line unused-state\\n    uint256 internal constant PRECISION = 10 ** 18;\\n    // slither-disable-next-line unused-state\\n    uint256 internal constant ONE = 10 ** 18;\\n    // slither-disable-next-line unused-state\\n    uint256 internal constant UINT256_MAX = ~uint256(0);\\n\\n    // Saves gas\\n    // https://github.com/KadenZipfel/gas-optimizations/blob/main/gas-saving-patterns/unchecked-arithmetic.md\\n    function unchecked_inc(uint256 i) internal pure returns (uint256) {\\n        unchecked {\\n            return i + 1;\\n        }\\n    }\\n\\n    /**\\n     * @notice add precision and div two number\\n     * @param a_ numerator\\n     * @param b_ denominator\\n     * @return `a_` * PRECISION / `b_`\\n     */\\n    function _divPrec(uint256 a_, uint256 b_) internal pure returns (uint256) {\\n        return (a_ * PRECISION) / b_;\\n    }\\n\\n    /**\\n     * @notice multiply two number and remove precision\\n     * @param a_ term 1\\n     * @param b_ term 2\\n     * @return `a_` * `b_` / PRECISION\\n     */\\n    function _mulPrec(uint256 a_, uint256 b_) internal pure returns (uint256) {\\n        return (a_ * b_) / PRECISION;\\n    }\\n\\n    /**\\n     * @notice reverts if value if less than PRECISION ONE\\n     * @param value_ value to check [PREC]\\n     */\\n    function _checkLessThanOne(uint256 value_) internal pure {\\n        if (value_ > ONE) revert InvalidValue();\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n\\n    // Purposely left unused to save some state space to allow for future upgrades\\n    // slither-disable-next-line unused-state\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0xa5fd0183950d302d8d0ffda5d6d8b92f42674d56723997c239ba1cbdc63447e4\",\"license\":\"UNLICENSED\"},\"contracts/utils/PriceProviderShifter.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.16;\\n\\nimport { IPriceProvider } from \\\"../interfaces/IPriceProvider.sol\\\";\\n\\n/**\\n  @title PriceProviderShifter\\n  @dev This simple contract, wraps a IPriceProvider and shift the returned price value in either direction.\\n  */\\ncontract PriceProviderShifter is IPriceProvider {\\n    // The target price Provider\\n    IPriceProvider public priceProvider;\\n    // The shift we want to apply, positive to multiply, negative to divide\\n    // Example: if \\\"shift = 3\\\", a 123000 value is converted to 123000000\\n    //          If \\\"shift = -3\\\", a 123000 is converted to 123\\n    int8 public shift;\\n\\n    /**\\n     * @notice constructor\\n     */\\n    constructor(IPriceProvider priceProvider_, int8 shift_) {\\n        priceProvider = priceProvider_;\\n        shift = shift_;\\n    }\\n\\n    /**\\n     * @inheritdoc IPriceProvider\\n     */\\n    function peek() external view returns (bytes32 price, bool hasPrice) {\\n        (price, hasPrice) = priceProvider.peek();\\n        if (shift > 0) price = bytes32(uint256(price) * 10 ** uint8(shift));\\n        else if (shift < 0) price = bytes32(uint256(price) / 10 ** uint8(-shift));\\n    }\\n}\\n\",\"keccak256\":\"0x64e66cd6bfa835e647a527d75651fda6515cc2b934fe151cefe70e2e4d9d4338\",\"license\":\"UNLICENSED\"},\"contracts/vendors/MocVendors.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.16;\\n\\nimport { MocUpgradable } from \\\"../governance/MocUpgradable.sol\\\";\\n\\n/**\\n * @title MocVendors\\n * @notice MocVendors allows a third-party to add a markup to all operations\\n *  A vendor can set a markup themselves or ask vendors guardian to do it on their behalf.\\n *  Considerations:\\n *  - Theres is not a markup limit or restriction\\n *  - The currency that the vendor receives is always the same that is used to pay fees(AC or Fee Token)\\n *  - A malicious vendor front running an operation increasing the markup is protected in some way\\n *      by the maximum (AC or Fee Token) that the user expect to spend(or de minimum that expect to receive)\\n */\\ncontract MocVendors is MocUpgradable {\\n    // ------- Events -------\\n    event VendorMarkupChanged(address indexed vendorAddress_, uint256 newMarkup_);\\n    // ------- Custom Errors -------\\n    error NotVendorsGuardian(address sender_);\\n\\n    // ------- Storage -------\\n\\n    // address authorized to change a vendor's markup\\n    address public vendorsGuardianAddress;\\n    // addition markup pct applied on each operation when operating through a vendor [PREC]\\n    mapping(address => uint256) public vendorMarkup; // 0% = 0; 1% = 10 ** 16; 100% = 10 ** 18\\n\\n    // ------- Initializer -------\\n\\n    /// @custom:oz-upgrades-unsafe-allow constructor\\n    constructor() {\\n        _disableInitializers();\\n    }\\n\\n    /**\\n     * @notice contract initializer\\n     * @param vendorsGuardianAddress_ The address authorized to change a vendor's markup\\n     * @param governorAddress_ The address that will define when a change contract is authorized\\n     * @param pauserAddress_ The address that is authorized to pause this contract\\n     */\\n    function initialize(\\n        address vendorsGuardianAddress_,\\n        address governorAddress_,\\n        address pauserAddress_\\n    ) external initializer {\\n        vendorsGuardianAddress = vendorsGuardianAddress_;\\n        __MocUpgradable_init(governorAddress_, pauserAddress_);\\n    }\\n\\n    // ------- Internal Functions -------\\n\\n    /**\\n     * @notice sets a vendor markup\\n     * @param vendorAddress_ vendor address to change markup\\n     * @param newMarkup_ new markup applied to vendor [PREC]\\n     */\\n    function _setMarkup(address vendorAddress_, uint256 newMarkup_) internal {\\n        vendorMarkup[vendorAddress_] = newMarkup_;\\n        emit VendorMarkupChanged(vendorAddress_, newMarkup_);\\n    }\\n\\n    // ------- External Functions -------\\n\\n    /**\\n     * @notice vendor sets its own markup\\n     * @param newMarkup_ new markup applied to vendor [PREC]\\n     */\\n    function setMarkup(uint256 newMarkup_) external {\\n        _setMarkup(msg.sender, newMarkup_);\\n    }\\n\\n    /**\\n     * @notice guardian sets a vendor markup\\n     * @param vendorAddress_ vendor address to change markup\\n     * @param newMarkup_ new markup applied to vendor [PREC]\\n     */\\n    function setVendorMarkup(address vendorAddress_, uint256 newMarkup_) external {\\n        if (msg.sender != vendorsGuardianAddress) revert NotVendorsGuardian(msg.sender);\\n        _setMarkup(vendorAddress_, newMarkup_);\\n    }\\n\\n    // ------- Only Authorized Changer Functions -------\\n\\n    /**\\n     * @dev Sets the address which will be authorized to set a vendor markup.\\n     * @param vendorsGuardianAddress_ Address which will be authorized to set a vendor markup.\\n     */\\n    function setVendorsGuardianAddress(address vendorsGuardianAddress_) public onlyAuthorizedChanger {\\n        // slither-disable-next-line missing-zero-check\\n        vendorsGuardianAddress = vendorsGuardianAddress_;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0xb49a142d2afd96b7392043006604bac786a712236875b6d3043bcb9032b4a711\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "storageLayout": {
    "storage": [
      {
        "astId": 22107,
        "contract": "contracts/echidna/EchidnaMocWrapperTester.sol:EchidnaMocWrapperTester",
        "label": "mocCARC20",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(MocCARC20)14422"
      },
      {
        "astId": 22110,
        "contract": "contracts/echidna/EchidnaMocWrapperTester.sol:EchidnaMocWrapperTester",
        "label": "governor",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(GovernorMock)24187"
      },
      {
        "astId": 22113,
        "contract": "contracts/echidna/EchidnaMocWrapperTester.sol:EchidnaMocWrapperTester",
        "label": "feeToken",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(ERC20Mock)23769"
      },
      {
        "astId": 22116,
        "contract": "contracts/echidna/EchidnaMocWrapperTester.sol:EchidnaMocWrapperTester",
        "label": "tcToken",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(MocTC)24830"
      },
      {
        "astId": 22119,
        "contract": "contracts/echidna/EchidnaMocWrapperTester.sol:EchidnaMocWrapperTester",
        "label": "feeTokenPriceProvider",
        "offset": 0,
        "slot": "4",
        "type": "t_contract(IPriceProvider)23635"
      },
      {
        "astId": 22122,
        "contract": "contracts/echidna/EchidnaMocWrapperTester.sol:EchidnaMocWrapperTester",
        "label": "acToken",
        "offset": 0,
        "slot": "5",
        "type": "t_contract(ERC20Mock)23769"
      },
      {
        "astId": 22125,
        "contract": "contracts/echidna/EchidnaMocWrapperTester.sol:EchidnaMocWrapperTester",
        "label": "mocVendors",
        "offset": 0,
        "slot": "6",
        "type": "t_contract(MocVendors)25146"
      },
      {
        "astId": 22127,
        "contract": "contracts/echidna/EchidnaMocWrapperTester.sol:EchidnaMocWrapperTester",
        "label": "mocCoreExpansion",
        "offset": 0,
        "slot": "7",
        "type": "t_address"
      },
      {
        "astId": 22129,
        "contract": "contracts/echidna/EchidnaMocWrapperTester.sol:EchidnaMocWrapperTester",
        "label": "mocFeeFlow",
        "offset": 0,
        "slot": "8",
        "type": "t_address"
      },
      {
        "astId": 22131,
        "contract": "contracts/echidna/EchidnaMocWrapperTester.sol:EchidnaMocWrapperTester",
        "label": "mocAppreciationBeneficiary",
        "offset": 0,
        "slot": "9",
        "type": "t_address"
      },
      {
        "astId": 22133,
        "contract": "contracts/echidna/EchidnaMocWrapperTester.sol:EchidnaMocWrapperTester",
        "label": "totalPeggedTokensAdded",
        "offset": 0,
        "slot": "10",
        "type": "t_uint256"
      },
      {
        "astId": 22136,
        "contract": "contracts/echidna/EchidnaMocWrapperTester.sol:EchidnaMocWrapperTester",
        "label": "mocWrapper",
        "offset": 0,
        "slot": "11",
        "type": "t_contract(MocCAWrapper)13339"
      },
      {
        "astId": 22140,
        "contract": "contracts/echidna/EchidnaMocWrapperTester.sol:EchidnaMocWrapperTester",
        "label": "assetsAdded",
        "offset": 0,
        "slot": "12",
        "type": "t_array(t_contract(ERC20Mock)23769)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_contract(ERC20Mock)23769)dyn_storage": {
        "base": "t_contract(ERC20Mock)23769",
        "encoding": "dynamic_array",
        "label": "contract ERC20Mock[]",
        "numberOfBytes": "32"
      },
      "t_contract(ERC20Mock)23769": {
        "encoding": "inplace",
        "label": "contract ERC20Mock",
        "numberOfBytes": "20"
      },
      "t_contract(GovernorMock)24187": {
        "encoding": "inplace",
        "label": "contract GovernorMock",
        "numberOfBytes": "20"
      },
      "t_contract(IPriceProvider)23635": {
        "encoding": "inplace",
        "label": "contract IPriceProvider",
        "numberOfBytes": "20"
      },
      "t_contract(MocCARC20)14422": {
        "encoding": "inplace",
        "label": "contract MocCARC20",
        "numberOfBytes": "20"
      },
      "t_contract(MocCAWrapper)13339": {
        "encoding": "inplace",
        "label": "contract MocCAWrapper",
        "numberOfBytes": "20"
      },
      "t_contract(MocTC)24830": {
        "encoding": "inplace",
        "label": "contract MocTC",
        "numberOfBytes": "20"
      },
      "t_contract(MocVendors)25146": {
        "encoding": "inplace",
        "label": "contract MocVendors",
        "numberOfBytes": "20"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "This test purpose is to check that operating with assets with different decimals than 18 doesn't affect the wrapped token price",
    "version": 1
  }
}