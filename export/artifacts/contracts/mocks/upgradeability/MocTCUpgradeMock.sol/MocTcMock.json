{
  "contractName": "MocTcMock",
  "sourceName": "contracts/mocks/upgradeability/MocTCUpgradeMock.sol",
  "abi": [
    {
      "inputs": [],
      "name": "InvalidAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidValue",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotAuthorizedChanger",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "NotUniqueRole",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "previousAdmin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "AdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "beacon",
          "type": "address"
        }
      ],
      "name": "BeaconUpgraded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        }
      ],
      "name": "Upgraded",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IGovernor",
          "name": "newGovernor_",
          "type": "address"
        }
      ],
      "name": "changeGovernor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getRoleMember",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleMemberCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "governor",
      "outputs": [
        {
          "internalType": "contract IGovernor",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol_",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "admin_",
          "type": "address"
        },
        {
          "internalType": "contract IGovernor",
          "name": "governor_",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initializeMock",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "newVariable",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proxiableUUID",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "transferAllRoles",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        }
      ],
      "name": "upgradeTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "upgradeToAndCall",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "bytecode": "0x60a060405234620000495730608052620000186200004e565b620000226200004e565b6040516124829081620000f88239608051818181610e7e01528181610f9901526111d10152f35b600080fd5b60005460ff8160081c16620000a25760ff808216036200006b5750565b60ff90811916176000557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160ff8152a1565b60405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b6064820152608490fdfe60806040908082526004908136101561001757600080fd5b600092833560e01c91826301ffc9a7146115835750816306fdde03146114d9578163095ea7b3146114a35781630c340a241461147957816318160ddd1461142c57816323b872dd14611358578163248a9ca31461132c5781632f2ff15d146112e5578163313ce567146112c957816336568abe14611236578382633659cfe61461119f57508163395093511461114d57816340c10f1914610ffc5781634f1ef28614610f3d57816352d1902d14610e695781635c975abb14610e445781635e2a606514610e2a57816370a0823114610def57816383d2230d14610c455781638456cb5914610b8d5781638d7a72f314610b6d5781638f15b414146106c95781639010d07c1461068757816391d148541461063b57816395d89b411461055a5781639dc29fac146103ab578163a217fddf14610390578163a457c2d7146102e7578163a9059cbb146102a7578163ca15c8731461027e578163d547741f14610234578163dd62ed3e146101da575063e4c0aaf41461019357600080fd5b346101d65760203660031901126101d657356001600160a01b038116908190036101d6576101bf612350565b61019180546001600160a01b031916909117905580f35b5080fd5b919050346102305781600319360112610230576001600160a01b0390358181169081900361022c5760243591821680920361022c57928291602094825260ca8552828220908252845220549051908152f35b8380fd5b8280fd5b9190503461023057816003193601126102305760243590356001600160a01b038216820361022c57610276600161027b9483875260656020528620015461177b565b61185a565b80f35b919050346102305760203660031901126102305760209282913581526097845220549051908152f35b9190503461023057816003193601126102305735916001600160a01b03831683036102e457506102dd6020926024359033611d01565b5160018152f35b80fd5b8284346102e457826003193601126102e4578135916001600160a01b038316918284036102e45784906024359333825260ca60205282822090825260205220549082821061033f576020856102dd8585038733611ed4565b608490602086519162461bcd60e51b8352820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152fd5b8390346101d657816003193601126101d65751908152602090f35b8383346101d657826003193601126101d65780356001600160a01b038116919082900361023057602435906103ff7f3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a84861177b565b821561050d5760ff6101c454166104b75782845260c9602052848420549082821061046957508184957fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9360209386885260c9855203818720558160cb540360cb5551908152a380f35b608490602087519162461bcd60e51b8352820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152fd5b608490602086519162461bcd60e51b8352820152602a60248201527f45524332305061757361626c653a20746f6b656e207472616e736665722077686044820152691a5b19481c185d5cd95960b21b6064820152fd5b608490602086519162461bcd60e51b8352820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152fd5b8390346101d657816003193601126101d6578051908260cd5461057c81611ca4565b8085529160019180831690811561061357506001146105b6575b5050506105a8826105b2940383611640565b5191829182611614565b0390f35b945060cd85527f83978b4c69c48dd978ab43fe30f077615294f938fb7f936d9eb340e51ea7db2e5b8286106105fb575050506105a88260206105b29582010194610596565b805460208787018101919091529095019481016105de565b6105b29750869350602092506105a894915060ff191682840152151560051b82010194610596565b919050346102305781600319360112610230576024356001600160a01b038116919082900361022c5760209360ff92849235825260658652828220908252855220541690519015158152f35b919050346102305781600319360112610230576020926106b391358152609784528260243591206121be565b905491519160018060a01b039160031b1c168152f35b919050346102305760803660031901126102305767ffffffffffffffff8135818111610b69576106fc90369084016116d0565b90602435818111610b655761071490369085016116d0565b91604435916001600160a01b03918284168403610b6157606435928316809303610b615787549460ff8660081c161596878098610b54575b8015610b3d575b15610ae357600196888860ff198316178c55610ad2575b5061078d60ff8b5460081c1661077f816123ec565b610788816123ec565b6123ec565b8251848111610abf57806107a260cc54611ca4565b94601f95868111610a4e575b506020908d8784116001146109cf57926109c4575b5050600019600383901b1c191690881b1760cc555b81519384116109b157506107ed60cd54611ca4565b82811161094e575b5060209183116001146108c95761085d949392918991836108be575b5050600019600383901b1c191690851b1760cd555b61084360ff885460081c1661083a816123ec565b61077f816123ec565b61019180546001600160a01b0319169091179055856116ee565b83549161087360ff8460081c16610788816123ec565b6101c4805460ff19169055610886578380f35b7f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989260209261ff001916855551908152a13880808380f35b015190503880610811565b60cd895293929185917f83978b4c69c48dd978ab43fe30f077615294f938fb7f936d9eb340e51ea7db2e90601f1983168b5b8181106109365750968361085d981061091d575b505050811b0160cd55610826565b015160001960f88460031b161c1916905538808061090f565b828901518455899590930192602092830192016108fb565b60cd8a527f83978b4c69c48dd978ab43fe30f077615294f938fb7f936d9eb340e51ea7db2e8380860160051c820192602087106109a8575b0160051c019087905b82811061099d5750506107f5565b8b815501879061098f565b92508192610986565b634e487b7160e01b8a5260419052602489fd5b0151905038806107c3565b91908b9450601f19841660cc84527f47197230e1e4b29fc0bd84d7d78966c0925452aff72a2a121538b102457e9ebe935b818110610a3657508411610a1d575b505050811b0160cc556107d8565b015160001960f88460031b161c19169055388080610a0f565b8284015185558d969094019360209384019301610a00565b90915060cc8d527f47197230e1e4b29fc0bd84d7d78966c0925452aff72a2a121538b102457e9ebe8680850160051c82019260208610610ab6575b859493910160051c909101908b908f5b838210610aa8575050506107ae565b81558594508c91018f610a99565b92508192610a89565b634e487b7160e01b8b526041825260248bfd5b61ffff1916610101178a553861076a565b60849060208a519162461bcd60e51b8352820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152fd5b50303b1580156107535750600160ff881614610753565b50600160ff88161061074c565b8780fd5b8580fd5b8480fd5b8390346101d657816003193601126101d657602090610228549051908152f35b8383346101d657816003193601126101d657610bc87f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a61177b565b6101c49081549060ff8216610c0f575060ff1916600117905581513381527f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25890602090a180f35b606490602086519162461bcd60e51b8352820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152fd5b905034610230576020908160031936011261022c578235916001600160a01b0383168303610b695784805260658152600190610c8582848820015461177b565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a93610cb181866116ee565b610cbb338661185a565b86805260658252610cd083858920015461177b565b610cda81886116ee565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6610d0582826116ee565b610d307f3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a84892836116ee565b610d3a338261185a565b610d44338361185a565b610d4e338961185a565b87805260978352838589205403610dd85780885260978352838589205403610dc2575080875260978252828488205403610dac5750609790848752528185205403610d97578380f35b51630e2b37cd60e41b81529182015260249150fd5b85602491855191630e2b37cd60e41b8352820152fd5b86602491865191630e2b37cd60e41b8352820152fd5b8451630e2b37cd60e41b8152808801899052602490fd5b9190503461023057602036600319011261023057356001600160a01b03811690819003610230578282916020945260c9845220549051908152f35b83346102e457806003193601126102e457602a6102285580f35b8390346101d657816003193601126101d65760209060ff6101c4541690519015158152f35b8284346102e457806003193601126102e457507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163003610ed557602082517f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc8152f35b6020608492519162461bcd60e51b8352820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c00000000000000006064820152fd5b36600319011290506101d65780356001600160a01b03808216820361022c576024359167ffffffffffffffff8311610b695736602384011215610b6957610fef610f9561027b95856024600197369301359101611694565b92807f00000000000000000000000000000000000000000000000000000000000000001690610fc6823014156118e0565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc541614611941565b610ff7612350565b6119a2565b905082346102e457816003193601126102e45782356001600160a01b03811691908290036102e4576024356110507f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a661177b565b821561110a5760ff6101c454166110b4576020809550816110947fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9360cb54611cde565b60cb5584845260c982528584208181540190558551908152a35160018152f35b835162461bcd60e51b8152602081870152602a60248201527f45524332305061757361626c653a20746f6b656e207472616e736665722077686044820152691a5b19481c185d5cd95960b21b6064820152608490fd5b835162461bcd60e51b8152602081870152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606490fd5b91905034610230578160031936011261023057356001600160a01b03811680820361022c57906111986020946102dd9333825260ca8752858220908252865284602435912054611cde565b9033611ed4565b915091346101d65760203660031901126101d6576001600160a01b039290358381168103610230576111fe8461027b957f00000000000000000000000000000000000000000000000000000000000000001690610fc6823014156118e0565b611206612350565b61121b61121284611678565b92519283611640565b828252601f1961122a84611678565b013660208401376119a2565b8383346101d657826003193601126101d657602435906001600160a01b03821680830361022c57330361126e579061027b913561185a565b608490602085519162461bcd60e51b8352820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b6064820152fd5b8390346101d657816003193601126101d6576020905160128152f35b9190503461023057816003193601126102305760243590356001600160a01b038216820361022c57611327600161027b9483875260656020528620015461177b565b6116ee565b919050346102305760203660031901126102305781602093600192358152606585522001549051908152f35b8383346101d65760603660031901126101d65780356001600160a01b03818116939092908483036102e45760243593841684036102e457859060443595815260ca60205281812033825260205220549060001982036113c0575b6020866102dd878787611d01565b8482106113e957509183916113de602096956102dd95033383611ed4565b9193948193506113b2565b606490602087519162461bcd60e51b8352820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152fd5b905082346102e457806003193601126102e4576102285460010192836001116114665760208361145f8660cb5490611cde565b9051908152f35b634e487b7160e01b825260119052602490fd5b8390346101d657816003193601126101d6576101915490516001600160a01b039091168152602090f35b9190503461023057816003193601126102305735916001600160a01b03831683036102e457506102dd6020926024359033611ed4565b8390346101d657816003193601126101d6578051908260cc546114fb81611ca4565b808552916001918083169081156106135750600114611526575050506105a8826105b2940383611640565b945060cc85527f47197230e1e4b29fc0bd84d7d78966c0925452aff72a2a121538b102457e9ebe5b82861061156b575050506105a88260206105b29582010194610596565b8054602087870181019190915290950194810161154e565b84908434610230576020366003190112610230573563ffffffff60e01b81168091036102305760209250635a05180f60e01b81149081156115c6575b5015158152f35b637965db0b60e01b8114915081156115e0575b50836115bf565b6301ffc9a760e01b149050836115d9565b60005b8381106116045750506000910152565b81810151838201526020016115f4565b6040916020825261163481518092816020860152602086860191016115f1565b601f01601f1916010190565b90601f8019910116810190811067ffffffffffffffff82111761166257604052565b634e487b7160e01b600052604160045260246000fd5b67ffffffffffffffff811161166257601f01601f191660200190565b9291926116a082611678565b916116ae6040519384611640565b8294818452818301116116cb578281602093846000960137010152565b600080fd5b9080601f830112156116cb578160206116eb93359101611694565b90565b90604061172d9260009080825260656020528282209360018060a01b03169384835260205260ff838320541615611730575b81526097602052206121d6565b50565b8082526065602052828220848352602052828220600160ff198254161790553384827f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d8580a4611720565b80600052602060658152604060002033600052815260ff60406000205416156117a2575050565b61183e604861185693836117c461182f956117be601433612067565b93612067565b906040519586937f416363657373436f6e74726f6c3a206163636f756e74200000000000000000008386015261180381518092856037890191016115f1565b8401917001034b99036b4b9b9b4b733903937b6329607d1b6037840152835193849187850191016115f1565b01036028810184520182611640565b60405162461bcd60e51b815291829160048301611614565b0390fd5b90604061172d9260009080825260656020528282209360018060a01b03169384835260205260ff8383205416611898575b8152609760205220612260565b808252606560205282822084835260205282822060ff1981541690553384827ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b8580a461188b565b156118e757565b60405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b19195b1959d85d1958d85b1b60a21b6064820152608490fd5b1561194857565b60405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b6163746976652070726f787960a01b6064820152608490fd5b909160ff7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd914354166000146119dd57506119db9150611c02565b565b604080516352d1902d60e01b8152602094919392906001600160a01b038416908681600481855afa60009181611bd3575b50611a6e57855162461bcd60e51b815260048101889052602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b6064820152608490fd5b9395929492937fc9f76b5ec45e5cdef99837d7b6d2467235c1df8933c8ca56df5c35afa2c7d44401611b7d57611aa386611c02565b7fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b600080a283511590811591611b75575b50611ae0575b50505050565b611b6193600080611af16027611678565b95611afe85519788611640565b602787527f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c86880152660819985a5b195960ca1b858801528581519101845af4913d15611b6b573d611b5261121282611678565b8152600081943d92013e611fd6565b5038808080611ada565b5060609250611fd6565b905038611ad4565b825162461bcd60e51b815260048101859052602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b6064820152608490fd5b90918882813d8311611bfb575b611bea8183611640565b810103126102e45750519038611a0e565b503d611be0565b803b15611c49577f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b0319166001600160a01b03909216919091179055565b60405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608490fd5b90600182811c92168015611cd4575b6020831014611cbe57565b634e487b7160e01b600052602260045260246000fd5b91607f1691611cb3565b91908201809211611ceb57565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b03908116918215611e815716918215611e305760ff6101c45416611dd857600082815260c9602052604081205491808310611d8457604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef95876020965260c98652038282205586815220818154019055604051908152a3565b60405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608490fd5b60405162461bcd60e51b815260206004820152602a60248201527f45524332305061757361626c653a20746f6b656e207472616e736665722077686044820152691a5b19481c185d5cd95960b21b6064820152608490fd5b60405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608490fd5b60405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608490fd5b6001600160a01b03908116918215611f855716918215611f355760207f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925918360005260ca8252604060002085600052825280604060002055604051908152a3565b60405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608490fd5b60405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608490fd5b919290156120385750815115611fea575090565b3b15611ff35790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b82519091501561204b5750805190602001fd5b60405162461bcd60e51b81529081906118569060048301611614565b60019180831b91906001600160ff1b03811603611ceb576002820192838311611ceb576120ac61209685611678565b946120a46040519687611640565b808652611678565b6020939085850190601f19013682378551156121a8576030905384518210156121a85760786021860153818101809111611ceb57905b8082116121365750506120f3575090565b6064906040519062461bcd60e51b825280600483015260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152fd5b9091600f81166010811015612193578551841015612193576f181899199a1a9b1b9c1cb0b131b232b360811b901a85840185015360041c91801561217e5760001901906120e2565b60246000634e487b7160e01b81526011600452fd5b60246000634e487b7160e01b81526032600452fd5b634e487b7160e01b600052603260045260246000fd5b80548210156121a85760005260206000200190600090565b9190600183016000908282528060205260408220541560001461225a5784549468010000000000000000861015612246578361223661221f886001604098999a018555846121be565b819391549060031b91821b91600019901b19161790565b9055549382526020522055600190565b634e487b7160e01b83526041600452602483fd5b50925050565b90600182019060009281845282602052604084205490811515600014612349576000199180830181811161233557825490848201918211612321578082036122ec575b505050805480156122d8578201916122bb83836121be565b909182549160031b1b191690555582526020526040812055600190565b634e487b7160e01b86526031600452602486fd5b61230c6122fc61221f93866121be565b90549060031b1c928392866121be565b905586528460205260408620553880806122a3565b634e487b7160e01b88526011600452602488fd5b634e487b7160e01b87526011600452602487fd5b5050505090565b6101915460405163d994d6d560e01b815233600482015290602090829060249082906001600160a01b03165afa9081156123e0576000916123a6575b501561239457565b604051631dd1b1b560e21b8152600490fd5b6020813d82116123d8575b816123be60209383611640565b810103126101d657519081151582036102e457503861238c565b3d91506123b1565b6040513d6000823e3d90fd5b156123f357565b60405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608490fdfea26469706673582212201c444a246753e822365d7e007eb532ba9103e9da57d1fd793c3d803f631c839064736f6c63430008140033",
  "deployedBytecode": "0x60806040908082526004908136101561001757600080fd5b600092833560e01c91826301ffc9a7146115835750816306fdde03146114d9578163095ea7b3146114a35781630c340a241461147957816318160ddd1461142c57816323b872dd14611358578163248a9ca31461132c5781632f2ff15d146112e5578163313ce567146112c957816336568abe14611236578382633659cfe61461119f57508163395093511461114d57816340c10f1914610ffc5781634f1ef28614610f3d57816352d1902d14610e695781635c975abb14610e445781635e2a606514610e2a57816370a0823114610def57816383d2230d14610c455781638456cb5914610b8d5781638d7a72f314610b6d5781638f15b414146106c95781639010d07c1461068757816391d148541461063b57816395d89b411461055a5781639dc29fac146103ab578163a217fddf14610390578163a457c2d7146102e7578163a9059cbb146102a7578163ca15c8731461027e578163d547741f14610234578163dd62ed3e146101da575063e4c0aaf41461019357600080fd5b346101d65760203660031901126101d657356001600160a01b038116908190036101d6576101bf612350565b61019180546001600160a01b031916909117905580f35b5080fd5b919050346102305781600319360112610230576001600160a01b0390358181169081900361022c5760243591821680920361022c57928291602094825260ca8552828220908252845220549051908152f35b8380fd5b8280fd5b9190503461023057816003193601126102305760243590356001600160a01b038216820361022c57610276600161027b9483875260656020528620015461177b565b61185a565b80f35b919050346102305760203660031901126102305760209282913581526097845220549051908152f35b9190503461023057816003193601126102305735916001600160a01b03831683036102e457506102dd6020926024359033611d01565b5160018152f35b80fd5b8284346102e457826003193601126102e4578135916001600160a01b038316918284036102e45784906024359333825260ca60205282822090825260205220549082821061033f576020856102dd8585038733611ed4565b608490602086519162461bcd60e51b8352820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152fd5b8390346101d657816003193601126101d65751908152602090f35b8383346101d657826003193601126101d65780356001600160a01b038116919082900361023057602435906103ff7f3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a84861177b565b821561050d5760ff6101c454166104b75782845260c9602052848420549082821061046957508184957fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9360209386885260c9855203818720558160cb540360cb5551908152a380f35b608490602087519162461bcd60e51b8352820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152fd5b608490602086519162461bcd60e51b8352820152602a60248201527f45524332305061757361626c653a20746f6b656e207472616e736665722077686044820152691a5b19481c185d5cd95960b21b6064820152fd5b608490602086519162461bcd60e51b8352820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152fd5b8390346101d657816003193601126101d6578051908260cd5461057c81611ca4565b8085529160019180831690811561061357506001146105b6575b5050506105a8826105b2940383611640565b5191829182611614565b0390f35b945060cd85527f83978b4c69c48dd978ab43fe30f077615294f938fb7f936d9eb340e51ea7db2e5b8286106105fb575050506105a88260206105b29582010194610596565b805460208787018101919091529095019481016105de565b6105b29750869350602092506105a894915060ff191682840152151560051b82010194610596565b919050346102305781600319360112610230576024356001600160a01b038116919082900361022c5760209360ff92849235825260658652828220908252855220541690519015158152f35b919050346102305781600319360112610230576020926106b391358152609784528260243591206121be565b905491519160018060a01b039160031b1c168152f35b919050346102305760803660031901126102305767ffffffffffffffff8135818111610b69576106fc90369084016116d0565b90602435818111610b655761071490369085016116d0565b91604435916001600160a01b03918284168403610b6157606435928316809303610b615787549460ff8660081c161596878098610b54575b8015610b3d575b15610ae357600196888860ff198316178c55610ad2575b5061078d60ff8b5460081c1661077f816123ec565b610788816123ec565b6123ec565b8251848111610abf57806107a260cc54611ca4565b94601f95868111610a4e575b506020908d8784116001146109cf57926109c4575b5050600019600383901b1c191690881b1760cc555b81519384116109b157506107ed60cd54611ca4565b82811161094e575b5060209183116001146108c95761085d949392918991836108be575b5050600019600383901b1c191690851b1760cd555b61084360ff885460081c1661083a816123ec565b61077f816123ec565b61019180546001600160a01b0319169091179055856116ee565b83549161087360ff8460081c16610788816123ec565b6101c4805460ff19169055610886578380f35b7f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989260209261ff001916855551908152a13880808380f35b015190503880610811565b60cd895293929185917f83978b4c69c48dd978ab43fe30f077615294f938fb7f936d9eb340e51ea7db2e90601f1983168b5b8181106109365750968361085d981061091d575b505050811b0160cd55610826565b015160001960f88460031b161c1916905538808061090f565b828901518455899590930192602092830192016108fb565b60cd8a527f83978b4c69c48dd978ab43fe30f077615294f938fb7f936d9eb340e51ea7db2e8380860160051c820192602087106109a8575b0160051c019087905b82811061099d5750506107f5565b8b815501879061098f565b92508192610986565b634e487b7160e01b8a5260419052602489fd5b0151905038806107c3565b91908b9450601f19841660cc84527f47197230e1e4b29fc0bd84d7d78966c0925452aff72a2a121538b102457e9ebe935b818110610a3657508411610a1d575b505050811b0160cc556107d8565b015160001960f88460031b161c19169055388080610a0f565b8284015185558d969094019360209384019301610a00565b90915060cc8d527f47197230e1e4b29fc0bd84d7d78966c0925452aff72a2a121538b102457e9ebe8680850160051c82019260208610610ab6575b859493910160051c909101908b908f5b838210610aa8575050506107ae565b81558594508c91018f610a99565b92508192610a89565b634e487b7160e01b8b526041825260248bfd5b61ffff1916610101178a553861076a565b60849060208a519162461bcd60e51b8352820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152fd5b50303b1580156107535750600160ff881614610753565b50600160ff88161061074c565b8780fd5b8580fd5b8480fd5b8390346101d657816003193601126101d657602090610228549051908152f35b8383346101d657816003193601126101d657610bc87f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a61177b565b6101c49081549060ff8216610c0f575060ff1916600117905581513381527f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25890602090a180f35b606490602086519162461bcd60e51b8352820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152fd5b905034610230576020908160031936011261022c578235916001600160a01b0383168303610b695784805260658152600190610c8582848820015461177b565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a93610cb181866116ee565b610cbb338661185a565b86805260658252610cd083858920015461177b565b610cda81886116ee565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6610d0582826116ee565b610d307f3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a84892836116ee565b610d3a338261185a565b610d44338361185a565b610d4e338961185a565b87805260978352838589205403610dd85780885260978352838589205403610dc2575080875260978252828488205403610dac5750609790848752528185205403610d97578380f35b51630e2b37cd60e41b81529182015260249150fd5b85602491855191630e2b37cd60e41b8352820152fd5b86602491865191630e2b37cd60e41b8352820152fd5b8451630e2b37cd60e41b8152808801899052602490fd5b9190503461023057602036600319011261023057356001600160a01b03811690819003610230578282916020945260c9845220549051908152f35b83346102e457806003193601126102e457602a6102285580f35b8390346101d657816003193601126101d65760209060ff6101c4541690519015158152f35b8284346102e457806003193601126102e457507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163003610ed557602082517f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc8152f35b6020608492519162461bcd60e51b8352820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c00000000000000006064820152fd5b36600319011290506101d65780356001600160a01b03808216820361022c576024359167ffffffffffffffff8311610b695736602384011215610b6957610fef610f9561027b95856024600197369301359101611694565b92807f00000000000000000000000000000000000000000000000000000000000000001690610fc6823014156118e0565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc541614611941565b610ff7612350565b6119a2565b905082346102e457816003193601126102e45782356001600160a01b03811691908290036102e4576024356110507f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a661177b565b821561110a5760ff6101c454166110b4576020809550816110947fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9360cb54611cde565b60cb5584845260c982528584208181540190558551908152a35160018152f35b835162461bcd60e51b8152602081870152602a60248201527f45524332305061757361626c653a20746f6b656e207472616e736665722077686044820152691a5b19481c185d5cd95960b21b6064820152608490fd5b835162461bcd60e51b8152602081870152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606490fd5b91905034610230578160031936011261023057356001600160a01b03811680820361022c57906111986020946102dd9333825260ca8752858220908252865284602435912054611cde565b9033611ed4565b915091346101d65760203660031901126101d6576001600160a01b039290358381168103610230576111fe8461027b957f00000000000000000000000000000000000000000000000000000000000000001690610fc6823014156118e0565b611206612350565b61121b61121284611678565b92519283611640565b828252601f1961122a84611678565b013660208401376119a2565b8383346101d657826003193601126101d657602435906001600160a01b03821680830361022c57330361126e579061027b913561185a565b608490602085519162461bcd60e51b8352820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b6064820152fd5b8390346101d657816003193601126101d6576020905160128152f35b9190503461023057816003193601126102305760243590356001600160a01b038216820361022c57611327600161027b9483875260656020528620015461177b565b6116ee565b919050346102305760203660031901126102305781602093600192358152606585522001549051908152f35b8383346101d65760603660031901126101d65780356001600160a01b03818116939092908483036102e45760243593841684036102e457859060443595815260ca60205281812033825260205220549060001982036113c0575b6020866102dd878787611d01565b8482106113e957509183916113de602096956102dd95033383611ed4565b9193948193506113b2565b606490602087519162461bcd60e51b8352820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152fd5b905082346102e457806003193601126102e4576102285460010192836001116114665760208361145f8660cb5490611cde565b9051908152f35b634e487b7160e01b825260119052602490fd5b8390346101d657816003193601126101d6576101915490516001600160a01b039091168152602090f35b9190503461023057816003193601126102305735916001600160a01b03831683036102e457506102dd6020926024359033611ed4565b8390346101d657816003193601126101d6578051908260cc546114fb81611ca4565b808552916001918083169081156106135750600114611526575050506105a8826105b2940383611640565b945060cc85527f47197230e1e4b29fc0bd84d7d78966c0925452aff72a2a121538b102457e9ebe5b82861061156b575050506105a88260206105b29582010194610596565b8054602087870181019190915290950194810161154e565b84908434610230576020366003190112610230573563ffffffff60e01b81168091036102305760209250635a05180f60e01b81149081156115c6575b5015158152f35b637965db0b60e01b8114915081156115e0575b50836115bf565b6301ffc9a760e01b149050836115d9565b60005b8381106116045750506000910152565b81810151838201526020016115f4565b6040916020825261163481518092816020860152602086860191016115f1565b601f01601f1916010190565b90601f8019910116810190811067ffffffffffffffff82111761166257604052565b634e487b7160e01b600052604160045260246000fd5b67ffffffffffffffff811161166257601f01601f191660200190565b9291926116a082611678565b916116ae6040519384611640565b8294818452818301116116cb578281602093846000960137010152565b600080fd5b9080601f830112156116cb578160206116eb93359101611694565b90565b90604061172d9260009080825260656020528282209360018060a01b03169384835260205260ff838320541615611730575b81526097602052206121d6565b50565b8082526065602052828220848352602052828220600160ff198254161790553384827f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d8580a4611720565b80600052602060658152604060002033600052815260ff60406000205416156117a2575050565b61183e604861185693836117c461182f956117be601433612067565b93612067565b906040519586937f416363657373436f6e74726f6c3a206163636f756e74200000000000000000008386015261180381518092856037890191016115f1565b8401917001034b99036b4b9b9b4b733903937b6329607d1b6037840152835193849187850191016115f1565b01036028810184520182611640565b60405162461bcd60e51b815291829160048301611614565b0390fd5b90604061172d9260009080825260656020528282209360018060a01b03169384835260205260ff8383205416611898575b8152609760205220612260565b808252606560205282822084835260205282822060ff1981541690553384827ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b8580a461188b565b156118e757565b60405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b19195b1959d85d1958d85b1b60a21b6064820152608490fd5b1561194857565b60405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b6163746976652070726f787960a01b6064820152608490fd5b909160ff7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd914354166000146119dd57506119db9150611c02565b565b604080516352d1902d60e01b8152602094919392906001600160a01b038416908681600481855afa60009181611bd3575b50611a6e57855162461bcd60e51b815260048101889052602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b6064820152608490fd5b9395929492937fc9f76b5ec45e5cdef99837d7b6d2467235c1df8933c8ca56df5c35afa2c7d44401611b7d57611aa386611c02565b7fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b600080a283511590811591611b75575b50611ae0575b50505050565b611b6193600080611af16027611678565b95611afe85519788611640565b602787527f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c86880152660819985a5b195960ca1b858801528581519101845af4913d15611b6b573d611b5261121282611678565b8152600081943d92013e611fd6565b5038808080611ada565b5060609250611fd6565b905038611ad4565b825162461bcd60e51b815260048101859052602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b6064820152608490fd5b90918882813d8311611bfb575b611bea8183611640565b810103126102e45750519038611a0e565b503d611be0565b803b15611c49577f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b0319166001600160a01b03909216919091179055565b60405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608490fd5b90600182811c92168015611cd4575b6020831014611cbe57565b634e487b7160e01b600052602260045260246000fd5b91607f1691611cb3565b91908201809211611ceb57565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b03908116918215611e815716918215611e305760ff6101c45416611dd857600082815260c9602052604081205491808310611d8457604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef95876020965260c98652038282205586815220818154019055604051908152a3565b60405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608490fd5b60405162461bcd60e51b815260206004820152602a60248201527f45524332305061757361626c653a20746f6b656e207472616e736665722077686044820152691a5b19481c185d5cd95960b21b6064820152608490fd5b60405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608490fd5b60405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608490fd5b6001600160a01b03908116918215611f855716918215611f355760207f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925918360005260ca8252604060002085600052825280604060002055604051908152a3565b60405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608490fd5b60405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608490fd5b919290156120385750815115611fea575090565b3b15611ff35790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b82519091501561204b5750805190602001fd5b60405162461bcd60e51b81529081906118569060048301611614565b60019180831b91906001600160ff1b03811603611ceb576002820192838311611ceb576120ac61209685611678565b946120a46040519687611640565b808652611678565b6020939085850190601f19013682378551156121a8576030905384518210156121a85760786021860153818101809111611ceb57905b8082116121365750506120f3575090565b6064906040519062461bcd60e51b825280600483015260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152fd5b9091600f81166010811015612193578551841015612193576f181899199a1a9b1b9c1cb0b131b232b360811b901a85840185015360041c91801561217e5760001901906120e2565b60246000634e487b7160e01b81526011600452fd5b60246000634e487b7160e01b81526032600452fd5b634e487b7160e01b600052603260045260246000fd5b80548210156121a85760005260206000200190600090565b9190600183016000908282528060205260408220541560001461225a5784549468010000000000000000861015612246578361223661221f886001604098999a018555846121be565b819391549060031b91821b91600019901b19161790565b9055549382526020522055600190565b634e487b7160e01b83526041600452602483fd5b50925050565b90600182019060009281845282602052604084205490811515600014612349576000199180830181811161233557825490848201918211612321578082036122ec575b505050805480156122d8578201916122bb83836121be565b909182549160031b1b191690555582526020526040812055600190565b634e487b7160e01b86526031600452602486fd5b61230c6122fc61221f93866121be565b90549060031b1c928392866121be565b905586528460205260408620553880806122a3565b634e487b7160e01b88526011600452602488fd5b634e487b7160e01b87526011600452602487fd5b5050505090565b6101915460405163d994d6d560e01b815233600482015290602090829060249082906001600160a01b03165afa9081156123e0576000916123a6575b501561239457565b604051631dd1b1b560e21b8152600490fd5b6020813d82116123d8575b816123be60209383611640565b810103126101d657519081151582036102e457503861238c565b3d91506123b1565b6040513d6000823e3d90fd5b156123f357565b60405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608490fdfea26469706673582212201c444a246753e822365d7e007eb532ba9103e9da57d1fd793c3d803f631c839064736f6c63430008140033",
  "linkReferences": {},
  "deployedLinkReferences": {},
  "devdoc": {
    "details": "Only for upgradeability testing purposes.",
    "events": {
      "AdminChanged(address,address)": {
        "details": "Emitted when the admin account has changed."
      },
      "Approval(address,address,uint256)": {
        "details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
      },
      "BeaconUpgraded(address)": {
        "details": "Emitted when the beacon is changed."
      },
      "Initialized(uint8)": {
        "details": "Triggered when the contract has been initialized or reinitialized."
      },
      "Paused(address)": {
        "details": "Emitted when the pause is triggered by `account`."
      },
      "RoleAdminChanged(bytes32,bytes32,bytes32)": {
        "details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"
      },
      "RoleGranted(bytes32,address,address)": {
        "details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
      },
      "RoleRevoked(bytes32,address,address)": {
        "details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
      },
      "Transfer(address,address,uint256)": {
        "details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
      },
      "Unpaused(address)": {
        "details": "Emitted when the pause is lifted by `account`."
      },
      "Upgraded(address)": {
        "details": "Emitted when the implementation is upgraded."
      }
    },
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "burn(address,uint256)": {
        "details": "Burns a specific `amount` of tokens for `to`. * See {ERC20-_burn}. Requirements: - the caller must have the `BURNER_ROLE`."
      },
      "changeGovernor(address)": {
        "params": {
          "newGovernor_": "New governor address"
        }
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "getRoleAdmin(bytes32)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
      },
      "getRoleMember(bytes32,uint256)": {
        "details": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."
      },
      "getRoleMemberCount(bytes32)": {
        "details": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."
      },
      "grantRole(bytes32,address)": {
        "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
      },
      "hasRole(bytes32,address)": {
        "details": "Returns `true` if `account` has been granted `role`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "initialize(string,string,address,address)": {
        "details": "Grants `PAUSER_ROLE` to `admin` address. See {MocRC20-constructor}."
      },
      "mint(address,uint256)": {
        "details": "Creates `amount` new tokens for `to`. See {ERC20-_mint}. Requirements: - the caller must have the `MINTER_ROLE`."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "pause()": {
        "details": "Pauses the contract. See {ERC20PausableUpgradeable-_pause}. Requirements: - the caller must have the `PAUSER_ROLE`."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "proxiableUUID()": {
        "details": "Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
      },
      "renounceRole(bytes32,address)": {
        "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."
      },
      "revokeRole(bytes32,address)": {
        "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferAllRoles(address)": {
        "details": "Grants all `roles` to `account` while sender renounces to all ``role``. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. - no one else must have any other role May emit a {RoleGranted x4, RoleRevoked x4} event."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
      },
      "upgradeTo(address)": {
        "custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
        "details": "Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
      },
      "upgradeToAndCall(address,bytes)": {
        "custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
        "details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
      }
    },
    "title": "MocTcMock",
    "version": 1
  },
  "evm": {
    "bytecode": {
      "functionDebugData": {
        "fun_disableInitializers": {
          "entryPoint": 78,
          "id": 1093,
          "parameterSlots": 0,
          "returnSlots": 0
        }
      },
      "generatedSources": [],
      "linkReferences": {},
      "opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE PUSH3 0x49 JUMPI ADDRESS PUSH1 0x80 MSTORE PUSH3 0x18 PUSH3 0x4E JUMP JUMPDEST PUSH3 0x22 PUSH3 0x4E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2482 SWAP1 DUP2 PUSH3 0xF8 DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 DUP2 DUP2 PUSH2 0xE7E ADD MSTORE DUP2 DUP2 PUSH2 0xF99 ADD MSTORE PUSH2 0x11D1 ADD MSTORE RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xFF DUP2 PUSH1 0x8 SHR AND PUSH3 0xA2 JUMPI PUSH1 0xFF DUP1 DUP3 AND SUB PUSH3 0x6B JUMPI POP JUMP JUMPDEST PUSH1 0xFF SWAP1 DUP2 NOT AND OR PUSH1 0x0 SSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0xFF DUP2 MSTORE LOG1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320696E697469 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x616C697A696E67 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 SWAP1 DUP1 DUP3 MSTORE PUSH1 0x4 SWAP1 DUP2 CALLDATASIZE LT ISZERO PUSH2 0x17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE0 SHR SWAP2 DUP3 PUSH4 0x1FFC9A7 EQ PUSH2 0x1583 JUMPI POP DUP2 PUSH4 0x6FDDE03 EQ PUSH2 0x14D9 JUMPI DUP2 PUSH4 0x95EA7B3 EQ PUSH2 0x14A3 JUMPI DUP2 PUSH4 0xC340A24 EQ PUSH2 0x1479 JUMPI DUP2 PUSH4 0x18160DDD EQ PUSH2 0x142C JUMPI DUP2 PUSH4 0x23B872DD EQ PUSH2 0x1358 JUMPI DUP2 PUSH4 0x248A9CA3 EQ PUSH2 0x132C JUMPI DUP2 PUSH4 0x2F2FF15D EQ PUSH2 0x12E5 JUMPI DUP2 PUSH4 0x313CE567 EQ PUSH2 0x12C9 JUMPI DUP2 PUSH4 0x36568ABE EQ PUSH2 0x1236 JUMPI DUP4 DUP3 PUSH4 0x3659CFE6 EQ PUSH2 0x119F JUMPI POP DUP2 PUSH4 0x39509351 EQ PUSH2 0x114D JUMPI DUP2 PUSH4 0x40C10F19 EQ PUSH2 0xFFC JUMPI DUP2 PUSH4 0x4F1EF286 EQ PUSH2 0xF3D JUMPI DUP2 PUSH4 0x52D1902D EQ PUSH2 0xE69 JUMPI DUP2 PUSH4 0x5C975ABB EQ PUSH2 0xE44 JUMPI DUP2 PUSH4 0x5E2A6065 EQ PUSH2 0xE2A JUMPI DUP2 PUSH4 0x70A08231 EQ PUSH2 0xDEF JUMPI DUP2 PUSH4 0x83D2230D EQ PUSH2 0xC45 JUMPI DUP2 PUSH4 0x8456CB59 EQ PUSH2 0xB8D JUMPI DUP2 PUSH4 0x8D7A72F3 EQ PUSH2 0xB6D JUMPI DUP2 PUSH4 0x8F15B414 EQ PUSH2 0x6C9 JUMPI DUP2 PUSH4 0x9010D07C EQ PUSH2 0x687 JUMPI DUP2 PUSH4 0x91D14854 EQ PUSH2 0x63B JUMPI DUP2 PUSH4 0x95D89B41 EQ PUSH2 0x55A JUMPI DUP2 PUSH4 0x9DC29FAC EQ PUSH2 0x3AB JUMPI DUP2 PUSH4 0xA217FDDF EQ PUSH2 0x390 JUMPI DUP2 PUSH4 0xA457C2D7 EQ PUSH2 0x2E7 JUMPI DUP2 PUSH4 0xA9059CBB EQ PUSH2 0x2A7 JUMPI DUP2 PUSH4 0xCA15C873 EQ PUSH2 0x27E JUMPI DUP2 PUSH4 0xD547741F EQ PUSH2 0x234 JUMPI DUP2 PUSH4 0xDD62ED3E EQ PUSH2 0x1DA JUMPI POP PUSH4 0xE4C0AAF4 EQ PUSH2 0x193 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1D6 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1D6 JUMPI CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x1D6 JUMPI PUSH2 0x1BF PUSH2 0x2350 JUMP JUMPDEST PUSH2 0x191 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE DUP1 RETURN JUMPDEST POP DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x230 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x230 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 CALLDATALOAD DUP2 DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x22C JUMPI PUSH1 0x24 CALLDATALOAD SWAP2 DUP3 AND DUP1 SWAP3 SUB PUSH2 0x22C JUMPI SWAP3 DUP3 SWAP2 PUSH1 0x20 SWAP5 DUP3 MSTORE PUSH1 0xCA DUP6 MSTORE DUP3 DUP3 KECCAK256 SWAP1 DUP3 MSTORE DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP4 DUP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x230 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x230 JUMPI PUSH1 0x24 CALLDATALOAD SWAP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x22C JUMPI PUSH2 0x276 PUSH1 0x1 PUSH2 0x27B SWAP5 DUP4 DUP8 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE DUP7 KECCAK256 ADD SLOAD PUSH2 0x177B JUMP JUMPDEST PUSH2 0x185A JUMP JUMPDEST DUP1 RETURN JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x230 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x230 JUMPI PUSH1 0x20 SWAP3 DUP3 SWAP2 CALLDATALOAD DUP2 MSTORE PUSH1 0x97 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x230 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x230 JUMPI CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP4 SUB PUSH2 0x2E4 JUMPI POP PUSH2 0x2DD PUSH1 0x20 SWAP3 PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x1D01 JUMP JUMPDEST MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST DUP1 REVERT JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x2E4 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2E4 JUMPI DUP2 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP2 DUP3 DUP5 SUB PUSH2 0x2E4 JUMPI DUP5 SWAP1 PUSH1 0x24 CALLDATALOAD SWAP4 CALLER DUP3 MSTORE PUSH1 0xCA PUSH1 0x20 MSTORE DUP3 DUP3 KECCAK256 SWAP1 DUP3 MSTORE PUSH1 0x20 MSTORE KECCAK256 SLOAD SWAP1 DUP3 DUP3 LT PUSH2 0x33F JUMPI PUSH1 0x20 DUP6 PUSH2 0x2DD DUP6 DUP6 SUB DUP8 CALLER PUSH2 0x1ED4 JUMP JUMPDEST PUSH1 0x84 SWAP1 PUSH1 0x20 DUP7 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP4 SWAP1 CALLVALUE PUSH2 0x1D6 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1D6 JUMPI MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP4 DUP4 CALLVALUE PUSH2 0x1D6 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1D6 JUMPI DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP2 SWAP1 DUP3 SWAP1 SUB PUSH2 0x230 JUMPI PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x3FF PUSH32 0x3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848 PUSH2 0x177B JUMP JUMPDEST DUP3 ISZERO PUSH2 0x50D JUMPI PUSH1 0xFF PUSH2 0x1C4 SLOAD AND PUSH2 0x4B7 JUMPI DUP3 DUP5 MSTORE PUSH1 0xC9 PUSH1 0x20 MSTORE DUP5 DUP5 KECCAK256 SLOAD SWAP1 DUP3 DUP3 LT PUSH2 0x469 JUMPI POP DUP2 DUP5 SWAP6 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP4 PUSH1 0x20 SWAP4 DUP7 DUP9 MSTORE PUSH1 0xC9 DUP6 MSTORE SUB DUP2 DUP8 KECCAK256 SSTORE DUP2 PUSH1 0xCB SLOAD SUB PUSH1 0xCB SSTORE MLOAD SWAP1 DUP2 MSTORE LOG3 DUP1 RETURN JUMPDEST PUSH1 0x84 SWAP1 PUSH1 0x20 DUP8 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x84 SWAP1 PUSH1 0x20 DUP7 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332305061757361626C653A20746F6B656E207472616E73666572207768 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1A5B19481C185D5CD959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x84 SWAP1 PUSH1 0x20 DUP7 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP4 SWAP1 CALLVALUE PUSH2 0x1D6 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1D6 JUMPI DUP1 MLOAD SWAP1 DUP3 PUSH1 0xCD SLOAD PUSH2 0x57C DUP2 PUSH2 0x1CA4 JUMP JUMPDEST DUP1 DUP6 MSTORE SWAP2 PUSH1 0x1 SWAP2 DUP1 DUP4 AND SWAP1 DUP2 ISZERO PUSH2 0x613 JUMPI POP PUSH1 0x1 EQ PUSH2 0x5B6 JUMPI JUMPDEST POP POP POP PUSH2 0x5A8 DUP3 PUSH2 0x5B2 SWAP5 SUB DUP4 PUSH2 0x1640 JUMP JUMPDEST MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x1614 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST SWAP5 POP PUSH1 0xCD DUP6 MSTORE PUSH32 0x83978B4C69C48DD978AB43FE30F077615294F938FB7F936D9EB340E51EA7DB2E JUMPDEST DUP3 DUP7 LT PUSH2 0x5FB JUMPI POP POP POP PUSH2 0x5A8 DUP3 PUSH1 0x20 PUSH2 0x5B2 SWAP6 DUP3 ADD ADD SWAP5 PUSH2 0x596 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x20 DUP8 DUP8 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP6 ADD SWAP5 DUP2 ADD PUSH2 0x5DE JUMP JUMPDEST PUSH2 0x5B2 SWAP8 POP DUP7 SWAP4 POP PUSH1 0x20 SWAP3 POP PUSH2 0x5A8 SWAP5 SWAP2 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD SWAP5 PUSH2 0x596 JUMP JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x230 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x230 JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP2 SWAP1 DUP3 SWAP1 SUB PUSH2 0x22C JUMPI PUSH1 0x20 SWAP4 PUSH1 0xFF SWAP3 DUP5 SWAP3 CALLDATALOAD DUP3 MSTORE PUSH1 0x65 DUP7 MSTORE DUP3 DUP3 KECCAK256 SWAP1 DUP3 MSTORE DUP6 MSTORE KECCAK256 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x230 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x230 JUMPI PUSH1 0x20 SWAP3 PUSH2 0x6B3 SWAP2 CALLDATALOAD DUP2 MSTORE PUSH1 0x97 DUP5 MSTORE DUP3 PUSH1 0x24 CALLDATALOAD SWAP2 KECCAK256 PUSH2 0x21BE JUMP JUMPDEST SWAP1 SLOAD SWAP2 MLOAD SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 PUSH1 0x3 SHL SHR AND DUP2 MSTORE RETURN JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x230 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x230 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD DUP2 DUP2 GT PUSH2 0xB69 JUMPI PUSH2 0x6FC SWAP1 CALLDATASIZE SWAP1 DUP5 ADD PUSH2 0x16D0 JUMP JUMPDEST SWAP1 PUSH1 0x24 CALLDATALOAD DUP2 DUP2 GT PUSH2 0xB65 JUMPI PUSH2 0x714 SWAP1 CALLDATASIZE SWAP1 DUP6 ADD PUSH2 0x16D0 JUMP JUMPDEST SWAP2 PUSH1 0x44 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 DUP5 AND DUP5 SUB PUSH2 0xB61 JUMPI PUSH1 0x64 CALLDATALOAD SWAP3 DUP4 AND DUP1 SWAP4 SUB PUSH2 0xB61 JUMPI DUP8 SLOAD SWAP5 PUSH1 0xFF DUP7 PUSH1 0x8 SHR AND ISZERO SWAP7 DUP8 DUP1 SWAP9 PUSH2 0xB54 JUMPI JUMPDEST DUP1 ISZERO PUSH2 0xB3D JUMPI JUMPDEST ISZERO PUSH2 0xAE3 JUMPI PUSH1 0x1 SWAP7 DUP9 DUP9 PUSH1 0xFF NOT DUP4 AND OR DUP13 SSTORE PUSH2 0xAD2 JUMPI JUMPDEST POP PUSH2 0x78D PUSH1 0xFF DUP12 SLOAD PUSH1 0x8 SHR AND PUSH2 0x77F DUP2 PUSH2 0x23EC JUMP JUMPDEST PUSH2 0x788 DUP2 PUSH2 0x23EC JUMP JUMPDEST PUSH2 0x23EC JUMP JUMPDEST DUP3 MLOAD DUP5 DUP2 GT PUSH2 0xABF JUMPI DUP1 PUSH2 0x7A2 PUSH1 0xCC SLOAD PUSH2 0x1CA4 JUMP JUMPDEST SWAP5 PUSH1 0x1F SWAP6 DUP7 DUP2 GT PUSH2 0xA4E JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 DUP14 DUP8 DUP5 GT PUSH1 0x1 EQ PUSH2 0x9CF JUMPI SWAP3 PUSH2 0x9C4 JUMPI JUMPDEST POP POP PUSH1 0x0 NOT PUSH1 0x3 DUP4 SWAP1 SHL SHR NOT AND SWAP1 DUP9 SHL OR PUSH1 0xCC SSTORE JUMPDEST DUP2 MLOAD SWAP4 DUP5 GT PUSH2 0x9B1 JUMPI POP PUSH2 0x7ED PUSH1 0xCD SLOAD PUSH2 0x1CA4 JUMP JUMPDEST DUP3 DUP2 GT PUSH2 0x94E JUMPI JUMPDEST POP PUSH1 0x20 SWAP2 DUP4 GT PUSH1 0x1 EQ PUSH2 0x8C9 JUMPI PUSH2 0x85D SWAP5 SWAP4 SWAP3 SWAP2 DUP10 SWAP2 DUP4 PUSH2 0x8BE JUMPI JUMPDEST POP POP PUSH1 0x0 NOT PUSH1 0x3 DUP4 SWAP1 SHL SHR NOT AND SWAP1 DUP6 SHL OR PUSH1 0xCD SSTORE JUMPDEST PUSH2 0x843 PUSH1 0xFF DUP9 SLOAD PUSH1 0x8 SHR AND PUSH2 0x83A DUP2 PUSH2 0x23EC JUMP JUMPDEST PUSH2 0x77F DUP2 PUSH2 0x23EC JUMP JUMPDEST PUSH2 0x191 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE DUP6 PUSH2 0x16EE JUMP JUMPDEST DUP4 SLOAD SWAP2 PUSH2 0x873 PUSH1 0xFF DUP5 PUSH1 0x8 SHR AND PUSH2 0x788 DUP2 PUSH2 0x23EC JUMP JUMPDEST PUSH2 0x1C4 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH2 0x886 JUMPI DUP4 DUP1 RETURN JUMPDEST PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP3 PUSH1 0x20 SWAP3 PUSH2 0xFF00 NOT AND DUP6 SSTORE MLOAD SWAP1 DUP2 MSTORE LOG1 CODESIZE DUP1 DUP1 DUP4 DUP1 RETURN JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x811 JUMP JUMPDEST PUSH1 0xCD DUP10 MSTORE SWAP4 SWAP3 SWAP2 DUP6 SWAP2 PUSH32 0x83978B4C69C48DD978AB43FE30F077615294F938FB7F936D9EB340E51EA7DB2E SWAP1 PUSH1 0x1F NOT DUP4 AND DUP12 JUMPDEST DUP2 DUP2 LT PUSH2 0x936 JUMPI POP SWAP7 DUP4 PUSH2 0x85D SWAP9 LT PUSH2 0x91D JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0xCD SSTORE PUSH2 0x826 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x90F JUMP JUMPDEST DUP3 DUP10 ADD MLOAD DUP5 SSTORE DUP10 SWAP6 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x8FB JUMP JUMPDEST PUSH1 0xCD DUP11 MSTORE PUSH32 0x83978B4C69C48DD978AB43FE30F077615294F938FB7F936D9EB340E51EA7DB2E DUP4 DUP1 DUP7 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 PUSH1 0x20 DUP8 LT PUSH2 0x9A8 JUMPI JUMPDEST ADD PUSH1 0x5 SHR ADD SWAP1 DUP8 SWAP1 JUMPDEST DUP3 DUP2 LT PUSH2 0x99D JUMPI POP POP PUSH2 0x7F5 JUMP JUMPDEST DUP12 DUP2 SSTORE ADD DUP8 SWAP1 PUSH2 0x98F JUMP JUMPDEST SWAP3 POP DUP2 SWAP3 PUSH2 0x986 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP11 MSTORE PUSH1 0x41 SWAP1 MSTORE PUSH1 0x24 DUP10 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x7C3 JUMP JUMPDEST SWAP2 SWAP1 DUP12 SWAP5 POP PUSH1 0x1F NOT DUP5 AND PUSH1 0xCC DUP5 MSTORE PUSH32 0x47197230E1E4B29FC0BD84D7D78966C0925452AFF72A2A121538B102457E9EBE SWAP4 JUMPDEST DUP2 DUP2 LT PUSH2 0xA36 JUMPI POP DUP5 GT PUSH2 0xA1D JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0xCC SSTORE PUSH2 0x7D8 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0xA0F JUMP JUMPDEST DUP3 DUP5 ADD MLOAD DUP6 SSTORE DUP14 SWAP7 SWAP1 SWAP5 ADD SWAP4 PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 ADD PUSH2 0xA00 JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0xCC DUP14 MSTORE PUSH32 0x47197230E1E4B29FC0BD84D7D78966C0925452AFF72A2A121538B102457E9EBE DUP7 DUP1 DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 PUSH1 0x20 DUP7 LT PUSH2 0xAB6 JUMPI JUMPDEST DUP6 SWAP5 SWAP4 SWAP2 ADD PUSH1 0x5 SHR SWAP1 SWAP2 ADD SWAP1 DUP12 SWAP1 DUP16 JUMPDEST DUP4 DUP3 LT PUSH2 0xAA8 JUMPI POP POP POP PUSH2 0x7AE JUMP JUMPDEST DUP2 SSTORE DUP6 SWAP5 POP DUP13 SWAP2 ADD DUP16 PUSH2 0xA99 JUMP JUMPDEST SWAP3 POP DUP2 SWAP3 PUSH2 0xA89 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP12 MSTORE PUSH1 0x41 DUP3 MSTORE PUSH1 0x24 DUP12 REVERT JUMPDEST PUSH2 0xFFFF NOT AND PUSH2 0x101 OR DUP11 SSTORE CODESIZE PUSH2 0x76A JUMP JUMPDEST PUSH1 0x84 SWAP1 PUSH1 0x20 DUP11 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x753 JUMPI POP PUSH1 0x1 PUSH1 0xFF DUP9 AND EQ PUSH2 0x753 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0xFF DUP9 AND LT PUSH2 0x74C JUMP JUMPDEST DUP8 DUP1 REVERT JUMPDEST DUP6 DUP1 REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST DUP4 SWAP1 CALLVALUE PUSH2 0x1D6 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1D6 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x228 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP4 DUP4 CALLVALUE PUSH2 0x1D6 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1D6 JUMPI PUSH2 0xBC8 PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A PUSH2 0x177B JUMP JUMPDEST PUSH2 0x1C4 SWAP1 DUP2 SLOAD SWAP1 PUSH1 0xFF DUP3 AND PUSH2 0xC0F JUMPI POP PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP2 MLOAD CALLER DUP2 MSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 SWAP1 PUSH1 0x20 SWAP1 LOG1 DUP1 RETURN JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x20 DUP7 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x230 JUMPI PUSH1 0x20 SWAP1 DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x22C JUMPI DUP3 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP4 SUB PUSH2 0xB69 JUMPI DUP5 DUP1 MSTORE PUSH1 0x65 DUP2 MSTORE PUSH1 0x1 SWAP1 PUSH2 0xC85 DUP3 DUP5 DUP9 KECCAK256 ADD SLOAD PUSH2 0x177B JUMP JUMPDEST PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A SWAP4 PUSH2 0xCB1 DUP2 DUP7 PUSH2 0x16EE JUMP JUMPDEST PUSH2 0xCBB CALLER DUP7 PUSH2 0x185A JUMP JUMPDEST DUP7 DUP1 MSTORE PUSH1 0x65 DUP3 MSTORE PUSH2 0xCD0 DUP4 DUP6 DUP10 KECCAK256 ADD SLOAD PUSH2 0x177B JUMP JUMPDEST PUSH2 0xCDA DUP2 DUP9 PUSH2 0x16EE JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0xD05 DUP3 DUP3 PUSH2 0x16EE JUMP JUMPDEST PUSH2 0xD30 PUSH32 0x3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848 SWAP3 DUP4 PUSH2 0x16EE JUMP JUMPDEST PUSH2 0xD3A CALLER DUP3 PUSH2 0x185A JUMP JUMPDEST PUSH2 0xD44 CALLER DUP4 PUSH2 0x185A JUMP JUMPDEST PUSH2 0xD4E CALLER DUP10 PUSH2 0x185A JUMP JUMPDEST DUP8 DUP1 MSTORE PUSH1 0x97 DUP4 MSTORE DUP4 DUP6 DUP10 KECCAK256 SLOAD SUB PUSH2 0xDD8 JUMPI DUP1 DUP9 MSTORE PUSH1 0x97 DUP4 MSTORE DUP4 DUP6 DUP10 KECCAK256 SLOAD SUB PUSH2 0xDC2 JUMPI POP DUP1 DUP8 MSTORE PUSH1 0x97 DUP3 MSTORE DUP3 DUP5 DUP9 KECCAK256 SLOAD SUB PUSH2 0xDAC JUMPI POP PUSH1 0x97 SWAP1 DUP5 DUP8 MSTORE MSTORE DUP2 DUP6 KECCAK256 SLOAD SUB PUSH2 0xD97 JUMPI DUP4 DUP1 RETURN JUMPDEST MLOAD PUSH4 0xE2B37CD PUSH1 0xE4 SHL DUP2 MSTORE SWAP2 DUP3 ADD MSTORE PUSH1 0x24 SWAP2 POP REVERT JUMPDEST DUP6 PUSH1 0x24 SWAP2 DUP6 MLOAD SWAP2 PUSH4 0xE2B37CD PUSH1 0xE4 SHL DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST DUP7 PUSH1 0x24 SWAP2 DUP7 MLOAD SWAP2 PUSH4 0xE2B37CD PUSH1 0xE4 SHL DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST DUP5 MLOAD PUSH4 0xE2B37CD PUSH1 0xE4 SHL DUP2 MSTORE DUP1 DUP9 ADD DUP10 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x230 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x230 JUMPI CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x230 JUMPI DUP3 DUP3 SWAP2 PUSH1 0x20 SWAP5 MSTORE PUSH1 0xC9 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP4 CALLVALUE PUSH2 0x2E4 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2E4 JUMPI PUSH1 0x2A PUSH2 0x228 SSTORE DUP1 RETURN JUMPDEST DUP4 SWAP1 CALLVALUE PUSH2 0x1D6 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1D6 JUMPI PUSH1 0x20 SWAP1 PUSH1 0xFF PUSH2 0x1C4 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x2E4 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2E4 JUMPI POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS SUB PUSH2 0xED5 JUMPI PUSH1 0x20 DUP3 MLOAD PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP2 MSTORE RETURN JUMPDEST PUSH1 0x20 PUSH1 0x84 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x555550535570677261646561626C653A206D757374206E6F742062652063616C PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6C6564207468726F7567682064656C656761746563616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST CALLDATASIZE PUSH1 0x3 NOT ADD SLT SWAP1 POP PUSH2 0x1D6 JUMPI DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND DUP3 SUB PUSH2 0x22C JUMPI PUSH1 0x24 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0xB69 JUMPI CALLDATASIZE PUSH1 0x23 DUP5 ADD SLT ISZERO PUSH2 0xB69 JUMPI PUSH2 0xFEF PUSH2 0xF95 PUSH2 0x27B SWAP6 DUP6 PUSH1 0x24 PUSH1 0x1 SWAP8 CALLDATASIZE SWAP4 ADD CALLDATALOAD SWAP2 ADD PUSH2 0x1694 JUMP JUMPDEST SWAP3 DUP1 PUSH32 0x0 AND SWAP1 PUSH2 0xFC6 DUP3 ADDRESS EQ ISZERO PUSH2 0x18E0 JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD AND EQ PUSH2 0x1941 JUMP JUMPDEST PUSH2 0xFF7 PUSH2 0x2350 JUMP JUMPDEST PUSH2 0x19A2 JUMP JUMPDEST SWAP1 POP DUP3 CALLVALUE PUSH2 0x2E4 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2E4 JUMPI DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP2 SWAP1 DUP3 SWAP1 SUB PUSH2 0x2E4 JUMPI PUSH1 0x24 CALLDATALOAD PUSH2 0x1050 PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0x177B JUMP JUMPDEST DUP3 ISZERO PUSH2 0x110A JUMPI PUSH1 0xFF PUSH2 0x1C4 SLOAD AND PUSH2 0x10B4 JUMPI PUSH1 0x20 DUP1 SWAP6 POP DUP2 PUSH2 0x1094 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP4 PUSH1 0xCB SLOAD PUSH2 0x1CDE JUMP JUMPDEST PUSH1 0xCB SSTORE DUP5 DUP5 MSTORE PUSH1 0xC9 DUP3 MSTORE DUP6 DUP5 KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE DUP6 MLOAD SWAP1 DUP2 MSTORE LOG3 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST DUP4 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP8 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332305061757361626C653A20746F6B656E207472616E73666572207768 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1A5B19481C185D5CD959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP4 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP8 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x230 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x230 JUMPI CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP1 DUP3 SUB PUSH2 0x22C JUMPI SWAP1 PUSH2 0x1198 PUSH1 0x20 SWAP5 PUSH2 0x2DD SWAP4 CALLER DUP3 MSTORE PUSH1 0xCA DUP8 MSTORE DUP6 DUP3 KECCAK256 SWAP1 DUP3 MSTORE DUP7 MSTORE DUP5 PUSH1 0x24 CALLDATALOAD SWAP2 KECCAK256 SLOAD PUSH2 0x1CDE JUMP JUMPDEST SWAP1 CALLER PUSH2 0x1ED4 JUMP JUMPDEST SWAP2 POP SWAP2 CALLVALUE PUSH2 0x1D6 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1D6 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 CALLDATALOAD DUP4 DUP2 AND DUP2 SUB PUSH2 0x230 JUMPI PUSH2 0x11FE DUP5 PUSH2 0x27B SWAP6 PUSH32 0x0 AND SWAP1 PUSH2 0xFC6 DUP3 ADDRESS EQ ISZERO PUSH2 0x18E0 JUMP JUMPDEST PUSH2 0x1206 PUSH2 0x2350 JUMP JUMPDEST PUSH2 0x121B PUSH2 0x1212 DUP5 PUSH2 0x1678 JUMP JUMPDEST SWAP3 MLOAD SWAP3 DUP4 PUSH2 0x1640 JUMP JUMPDEST DUP3 DUP3 MSTORE PUSH1 0x1F NOT PUSH2 0x122A DUP5 PUSH2 0x1678 JUMP JUMPDEST ADD CALLDATASIZE PUSH1 0x20 DUP5 ADD CALLDATACOPY PUSH2 0x19A2 JUMP JUMPDEST DUP4 DUP4 CALLVALUE PUSH2 0x1D6 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1D6 JUMPI PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP1 DUP4 SUB PUSH2 0x22C JUMPI CALLER SUB PUSH2 0x126E JUMPI SWAP1 PUSH2 0x27B SWAP2 CALLDATALOAD PUSH2 0x185A JUMP JUMPDEST PUSH1 0x84 SWAP1 PUSH1 0x20 DUP6 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x103937B632B9903337B91039B2B633 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP4 SWAP1 CALLVALUE PUSH2 0x1D6 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1D6 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x230 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x230 JUMPI PUSH1 0x24 CALLDATALOAD SWAP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x22C JUMPI PUSH2 0x1327 PUSH1 0x1 PUSH2 0x27B SWAP5 DUP4 DUP8 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE DUP7 KECCAK256 ADD SLOAD PUSH2 0x177B JUMP JUMPDEST PUSH2 0x16EE JUMP JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x230 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x230 JUMPI DUP2 PUSH1 0x20 SWAP4 PUSH1 0x1 SWAP3 CALLDATALOAD DUP2 MSTORE PUSH1 0x65 DUP6 MSTORE KECCAK256 ADD SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP4 DUP4 CALLVALUE PUSH2 0x1D6 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1D6 JUMPI DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND SWAP4 SWAP1 SWAP3 SWAP1 DUP5 DUP4 SUB PUSH2 0x2E4 JUMPI PUSH1 0x24 CALLDATALOAD SWAP4 DUP5 AND DUP5 SUB PUSH2 0x2E4 JUMPI DUP6 SWAP1 PUSH1 0x44 CALLDATALOAD SWAP6 DUP2 MSTORE PUSH1 0xCA PUSH1 0x20 MSTORE DUP2 DUP2 KECCAK256 CALLER DUP3 MSTORE PUSH1 0x20 MSTORE KECCAK256 SLOAD SWAP1 PUSH1 0x0 NOT DUP3 SUB PUSH2 0x13C0 JUMPI JUMPDEST PUSH1 0x20 DUP7 PUSH2 0x2DD DUP8 DUP8 DUP8 PUSH2 0x1D01 JUMP JUMPDEST DUP5 DUP3 LT PUSH2 0x13E9 JUMPI POP SWAP2 DUP4 SWAP2 PUSH2 0x13DE PUSH1 0x20 SWAP7 SWAP6 PUSH2 0x2DD SWAP6 SUB CALLER DUP4 PUSH2 0x1ED4 JUMP JUMPDEST SWAP2 SWAP4 SWAP5 DUP2 SWAP4 POP PUSH2 0x13B2 JUMP JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x20 DUP8 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 POP DUP3 CALLVALUE PUSH2 0x2E4 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2E4 JUMPI PUSH2 0x228 SLOAD PUSH1 0x1 ADD SWAP3 DUP4 PUSH1 0x1 GT PUSH2 0x1466 JUMPI PUSH1 0x20 DUP4 PUSH2 0x145F DUP7 PUSH1 0xCB SLOAD SWAP1 PUSH2 0x1CDE JUMP JUMPDEST SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x11 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP4 SWAP1 CALLVALUE PUSH2 0x1D6 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1D6 JUMPI PUSH2 0x191 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x230 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x230 JUMPI CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP4 SUB PUSH2 0x2E4 JUMPI POP PUSH2 0x2DD PUSH1 0x20 SWAP3 PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x1ED4 JUMP JUMPDEST DUP4 SWAP1 CALLVALUE PUSH2 0x1D6 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1D6 JUMPI DUP1 MLOAD SWAP1 DUP3 PUSH1 0xCC SLOAD PUSH2 0x14FB DUP2 PUSH2 0x1CA4 JUMP JUMPDEST DUP1 DUP6 MSTORE SWAP2 PUSH1 0x1 SWAP2 DUP1 DUP4 AND SWAP1 DUP2 ISZERO PUSH2 0x613 JUMPI POP PUSH1 0x1 EQ PUSH2 0x1526 JUMPI POP POP POP PUSH2 0x5A8 DUP3 PUSH2 0x5B2 SWAP5 SUB DUP4 PUSH2 0x1640 JUMP JUMPDEST SWAP5 POP PUSH1 0xCC DUP6 MSTORE PUSH32 0x47197230E1E4B29FC0BD84D7D78966C0925452AFF72A2A121538B102457E9EBE JUMPDEST DUP3 DUP7 LT PUSH2 0x156B JUMPI POP POP POP PUSH2 0x5A8 DUP3 PUSH1 0x20 PUSH2 0x5B2 SWAP6 DUP3 ADD ADD SWAP5 PUSH2 0x596 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x20 DUP8 DUP8 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP6 ADD SWAP5 DUP2 ADD PUSH2 0x154E JUMP JUMPDEST DUP5 SWAP1 DUP5 CALLVALUE PUSH2 0x230 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x230 JUMPI CALLDATALOAD PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP2 AND DUP1 SWAP2 SUB PUSH2 0x230 JUMPI PUSH1 0x20 SWAP3 POP PUSH4 0x5A05180F PUSH1 0xE0 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x15C6 JUMPI JUMPDEST POP ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x7965DB0B PUSH1 0xE0 SHL DUP2 EQ SWAP2 POP DUP2 ISZERO PUSH2 0x15E0 JUMPI JUMPDEST POP DUP4 PUSH2 0x15BF JUMP JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP DUP4 PUSH2 0x15D9 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x1604 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x15F4 JUMP JUMPDEST PUSH1 0x40 SWAP2 PUSH1 0x20 DUP3 MSTORE PUSH2 0x1634 DUP2 MLOAD DUP1 SWAP3 DUP2 PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x20 DUP7 DUP7 ADD SWAP2 ADD PUSH2 0x15F1 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1662 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1662 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH2 0x16A0 DUP3 PUSH2 0x1678 JUMP JUMPDEST SWAP2 PUSH2 0x16AE PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x1640 JUMP JUMPDEST DUP3 SWAP5 DUP2 DUP5 MSTORE DUP2 DUP4 ADD GT PUSH2 0x16CB JUMPI DUP3 DUP2 PUSH1 0x20 SWAP4 DUP5 PUSH1 0x0 SWAP7 ADD CALLDATACOPY ADD ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x16CB JUMPI DUP2 PUSH1 0x20 PUSH2 0x16EB SWAP4 CALLDATALOAD SWAP2 ADD PUSH2 0x1694 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x40 PUSH2 0x172D SWAP3 PUSH1 0x0 SWAP1 DUP1 DUP3 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE DUP3 DUP3 KECCAK256 SWAP4 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP4 DUP5 DUP4 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF DUP4 DUP4 KECCAK256 SLOAD AND ISZERO PUSH2 0x1730 JUMPI JUMPDEST DUP2 MSTORE PUSH1 0x97 PUSH1 0x20 MSTORE KECCAK256 PUSH2 0x21D6 JUMP JUMPDEST POP JUMP JUMPDEST DUP1 DUP3 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE DUP3 DUP3 KECCAK256 DUP5 DUP4 MSTORE PUSH1 0x20 MSTORE DUP3 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE CALLER DUP5 DUP3 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D DUP6 DUP1 LOG4 PUSH2 0x1720 JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x65 DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE DUP2 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0x17A2 JUMPI POP POP JUMP JUMPDEST PUSH2 0x183E PUSH1 0x48 PUSH2 0x1856 SWAP4 DUP4 PUSH2 0x17C4 PUSH2 0x182F SWAP6 PUSH2 0x17BE PUSH1 0x14 CALLER PUSH2 0x2067 JUMP JUMPDEST SWAP4 PUSH2 0x2067 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP4 PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 DUP4 DUP7 ADD MSTORE PUSH2 0x1803 DUP2 MLOAD DUP1 SWAP3 DUP6 PUSH1 0x37 DUP10 ADD SWAP2 ADD PUSH2 0x15F1 JUMP JUMPDEST DUP5 ADD SWAP2 PUSH17 0x1034B99036B4B9B9B4B733903937B6329 PUSH1 0x7D SHL PUSH1 0x37 DUP5 ADD MSTORE DUP4 MLOAD SWAP4 DUP5 SWAP2 DUP8 DUP6 ADD SWAP2 ADD PUSH2 0x15F1 JUMP JUMPDEST ADD SUB PUSH1 0x28 DUP2 ADD DUP5 MSTORE ADD DUP3 PUSH2 0x1640 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP2 DUP3 SWAP2 PUSH1 0x4 DUP4 ADD PUSH2 0x1614 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0x40 PUSH2 0x172D SWAP3 PUSH1 0x0 SWAP1 DUP1 DUP3 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE DUP3 DUP3 KECCAK256 SWAP4 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP4 DUP5 DUP4 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF DUP4 DUP4 KECCAK256 SLOAD AND PUSH2 0x1898 JUMPI JUMPDEST DUP2 MSTORE PUSH1 0x97 PUSH1 0x20 MSTORE KECCAK256 PUSH2 0x2260 JUMP JUMPDEST DUP1 DUP3 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE DUP3 DUP3 KECCAK256 DUP5 DUP4 MSTORE PUSH1 0x20 MSTORE DUP3 DUP3 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE CALLER DUP5 DUP3 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B DUP6 DUP1 LOG4 PUSH2 0x188B JUMP JUMPDEST ISZERO PUSH2 0x18E7 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x19195B1959D85D1958D85B1B PUSH1 0xA2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1948 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x6163746976652070726F7879 PUSH1 0xA0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 SWAP2 PUSH1 0xFF PUSH32 0x4910FDFA16FED3260ED0E7147F7CC6DA11A60208B5B9406D12A635614FFD9143 SLOAD AND PUSH1 0x0 EQ PUSH2 0x19DD JUMPI POP PUSH2 0x19DB SWAP2 POP PUSH2 0x1C02 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x52D1902D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x20 SWAP5 SWAP2 SWAP4 SWAP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP7 DUP2 PUSH1 0x4 DUP2 DUP6 GAS STATICCALL PUSH1 0x0 SWAP2 DUP2 PUSH2 0x1BD3 JUMPI JUMPDEST POP PUSH2 0x1A6E JUMPI DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A206E657720696D706C656D656E74617469 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x6F6E206973206E6F742055555053 PUSH1 0x90 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP4 SWAP6 SWAP3 SWAP5 SWAP3 SWAP4 PUSH32 0xC9F76B5EC45E5CDEF99837D7B6D2467235C1DF8933C8CA56DF5C35AFA2C7D444 ADD PUSH2 0x1B7D JUMPI PUSH2 0x1AA3 DUP7 PUSH2 0x1C02 JUMP JUMPDEST PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x0 DUP1 LOG2 DUP4 MLOAD ISZERO SWAP1 DUP2 ISZERO SWAP2 PUSH2 0x1B75 JUMPI JUMPDEST POP PUSH2 0x1AE0 JUMPI JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1B61 SWAP4 PUSH1 0x0 DUP1 PUSH2 0x1AF1 PUSH1 0x27 PUSH2 0x1678 JUMP JUMPDEST SWAP6 PUSH2 0x1AFE DUP6 MLOAD SWAP8 DUP9 PUSH2 0x1640 JUMP JUMPDEST PUSH1 0x27 DUP8 MSTORE PUSH32 0x416464726573733A206C6F772D6C6576656C2064656C65676174652063616C6C DUP7 DUP9 ADD MSTORE PUSH7 0x819985A5B1959 PUSH1 0xCA SHL DUP6 DUP9 ADD MSTORE DUP6 DUP2 MLOAD SWAP2 ADD DUP5 GAS DELEGATECALL SWAP2 RETURNDATASIZE ISZERO PUSH2 0x1B6B JUMPI RETURNDATASIZE PUSH2 0x1B52 PUSH2 0x1212 DUP3 PUSH2 0x1678 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x0 DUP2 SWAP5 RETURNDATASIZE SWAP3 ADD RETURNDATACOPY PUSH2 0x1FD6 JUMP JUMPDEST POP CODESIZE DUP1 DUP1 DUP1 PUSH2 0x1ADA JUMP JUMPDEST POP PUSH1 0x60 SWAP3 POP PUSH2 0x1FD6 JUMP JUMPDEST SWAP1 POP CODESIZE PUSH2 0x1AD4 JUMP JUMPDEST DUP3 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A20756E737570706F727465642070726F78 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x1A58589B1955555251 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 SWAP2 DUP9 DUP3 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x1BFB JUMPI JUMPDEST PUSH2 0x1BEA DUP2 DUP4 PUSH2 0x1640 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x2E4 JUMPI POP MLOAD SWAP1 CODESIZE PUSH2 0x1A0E JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1BE0 JUMP JUMPDEST DUP1 EXTCODESIZE ISZERO PUSH2 0x1C49 JUMPI PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x1BDD08184818DBDB9D1C9858DD PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x1CD4 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x1CBE JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x1CB3 JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x1CEB JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 DUP3 ISZERO PUSH2 0x1E81 JUMPI AND SWAP2 DUP3 ISZERO PUSH2 0x1E30 JUMPI PUSH1 0xFF PUSH2 0x1C4 SLOAD AND PUSH2 0x1DD8 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xC9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP2 DUP1 DUP4 LT PUSH2 0x1D84 JUMPI PUSH1 0x40 DUP3 DUP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP6 DUP8 PUSH1 0x20 SWAP7 MSTORE PUSH1 0xC9 DUP7 MSTORE SUB DUP3 DUP3 KECCAK256 SSTORE DUP7 DUP2 MSTORE KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332305061757361626C653A20746F6B656E207472616E73666572207768 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1A5B19481C185D5CD959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 DUP3 ISZERO PUSH2 0x1F85 JUMPI AND SWAP2 DUP3 ISZERO PUSH2 0x1F35 JUMPI PUSH1 0x20 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 DUP4 PUSH1 0x0 MSTORE PUSH1 0xCA DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP6 PUSH1 0x0 MSTORE DUP3 MSTORE DUP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP2 SWAP3 SWAP1 ISZERO PUSH2 0x2038 JUMPI POP DUP2 MLOAD ISZERO PUSH2 0x1FEA JUMPI POP SWAP1 JUMP JUMPDEST EXTCODESIZE ISZERO PUSH2 0x1FF3 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP3 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x204B JUMPI POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP1 DUP2 SWAP1 PUSH2 0x1856 SWAP1 PUSH1 0x4 DUP4 ADD PUSH2 0x1614 JUMP JUMPDEST PUSH1 0x1 SWAP2 DUP1 DUP4 SHL SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xFF SHL SUB DUP2 AND SUB PUSH2 0x1CEB JUMPI PUSH1 0x2 DUP3 ADD SWAP3 DUP4 DUP4 GT PUSH2 0x1CEB JUMPI PUSH2 0x20AC PUSH2 0x2096 DUP6 PUSH2 0x1678 JUMP JUMPDEST SWAP5 PUSH2 0x20A4 PUSH1 0x40 MLOAD SWAP7 DUP8 PUSH2 0x1640 JUMP JUMPDEST DUP1 DUP7 MSTORE PUSH2 0x1678 JUMP JUMPDEST PUSH1 0x20 SWAP4 SWAP1 DUP6 DUP6 ADD SWAP1 PUSH1 0x1F NOT ADD CALLDATASIZE DUP3 CALLDATACOPY DUP6 MLOAD ISZERO PUSH2 0x21A8 JUMPI PUSH1 0x30 SWAP1 MSTORE8 DUP5 MLOAD DUP3 LT ISZERO PUSH2 0x21A8 JUMPI PUSH1 0x78 PUSH1 0x21 DUP7 ADD MSTORE8 DUP2 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x1CEB JUMPI SWAP1 JUMPDEST DUP1 DUP3 GT PUSH2 0x2136 JUMPI POP POP PUSH2 0x20F3 JUMPI POP SWAP1 JUMP JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE DUP1 PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 SWAP2 PUSH1 0xF DUP2 AND PUSH1 0x10 DUP2 LT ISZERO PUSH2 0x2193 JUMPI DUP6 MLOAD DUP5 LT ISZERO PUSH2 0x2193 JUMPI PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL SWAP1 BYTE DUP6 DUP5 ADD DUP6 ADD MSTORE8 PUSH1 0x4 SHR SWAP2 DUP1 ISZERO PUSH2 0x217E JUMPI PUSH1 0x0 NOT ADD SWAP1 PUSH2 0x20E2 JUMP JUMPDEST PUSH1 0x24 PUSH1 0x0 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x24 PUSH1 0x0 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x21A8 JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x1 DUP4 ADD PUSH1 0x0 SWAP1 DUP3 DUP3 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 SLOAD ISZERO PUSH1 0x0 EQ PUSH2 0x225A JUMPI DUP5 SLOAD SWAP5 PUSH9 0x10000000000000000 DUP7 LT ISZERO PUSH2 0x2246 JUMPI DUP4 PUSH2 0x2236 PUSH2 0x221F DUP9 PUSH1 0x1 PUSH1 0x40 SWAP9 SWAP10 SWAP11 ADD DUP6 SSTORE DUP5 PUSH2 0x21BE JUMP JUMPDEST DUP2 SWAP4 SWAP2 SLOAD SWAP1 PUSH1 0x3 SHL SWAP2 DUP3 SHL SWAP2 PUSH1 0x0 NOT SWAP1 SHL NOT AND OR SWAP1 JUMP JUMPDEST SWAP1 SSTORE SLOAD SWAP4 DUP3 MSTORE PUSH1 0x20 MSTORE KECCAK256 SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST POP SWAP3 POP POP JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 ADD SWAP1 PUSH1 0x0 SWAP3 DUP2 DUP5 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 SLOAD SWAP1 DUP2 ISZERO ISZERO PUSH1 0x0 EQ PUSH2 0x2349 JUMPI PUSH1 0x0 NOT SWAP2 DUP1 DUP4 ADD DUP2 DUP2 GT PUSH2 0x2335 JUMPI DUP3 SLOAD SWAP1 DUP5 DUP3 ADD SWAP2 DUP3 GT PUSH2 0x2321 JUMPI DUP1 DUP3 SUB PUSH2 0x22EC JUMPI JUMPDEST POP POP POP DUP1 SLOAD DUP1 ISZERO PUSH2 0x22D8 JUMPI DUP3 ADD SWAP2 PUSH2 0x22BB DUP4 DUP4 PUSH2 0x21BE JUMP JUMPDEST SWAP1 SWAP2 DUP3 SLOAD SWAP2 PUSH1 0x3 SHL SHL NOT AND SWAP1 SSTORE SSTORE DUP3 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST PUSH2 0x230C PUSH2 0x22FC PUSH2 0x221F SWAP4 DUP7 PUSH2 0x21BE JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR SWAP3 DUP4 SWAP3 DUP7 PUSH2 0x21BE JUMP JUMPDEST SWAP1 SSTORE DUP7 MSTORE DUP5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP7 KECCAK256 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x22A3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP9 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP8 REVERT JUMPDEST POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x191 SLOAD PUSH1 0x40 MLOAD PUSH4 0xD994D6D5 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x23E0 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x23A6 JUMPI JUMPDEST POP ISZERO PUSH2 0x2394 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1DD1B1B5 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x20 DUP2 RETURNDATASIZE DUP3 GT PUSH2 0x23D8 JUMPI JUMPDEST DUP2 PUSH2 0x23BE PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1640 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1D6 JUMPI MLOAD SWAP1 DUP2 ISZERO ISZERO DUP3 SUB PUSH2 0x2E4 JUMPI POP CODESIZE PUSH2 0x238C JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x23B1 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x23F3 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHR DIFFICULTY 0x4A 0x24 PUSH8 0x53E822365D7E007E 0xB5 ORIGIN 0xBA SWAP2 SUB 0xE9 0xDA JUMPI 0xD1 REVERT PUSH26 0x3C3D803F631C839064736F6C6343000814003300000000000000 ",
      "sourceMap": "404:303:86:-:0;;;;;;1332:4:9;1324:13;;1141:53:90;;:::i;:::-;706::91;;:::i;:::-;404:303:86;;;;;;;;1324:13:9;404:303:86;;;;;;;;;;;;;;;;;;;;5939:280:8;6007:13;404:303:86;;;;;;;;;;;;6078:31:8;6074:139;;5939:280;:::o;6074:139::-;404:303:86;;;;;;6007:13:8;404:303:86;6174:28:8;404:303:86;;;;;;6174:28:8;5939:280::o;404:303:86:-;;;-1:-1:-1;;;404:303:86;;;;;;;;;;;;;;;;;-1:-1:-1;;;404:303:86;;;;;;"
    },
    "deployedBytecode": {
      "functionDebugData": {
        "abi_decode_available_length_bytes": {
          "entryPoint": 5780,
          "id": null,
          "parameterSlots": 3,
          "returnSlots": 1
        },
        "abi_decode_string": {
          "entryPoint": 5840,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_string": {
          "entryPoint": 5652,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "array_allocation_size_bytes": {
          "entryPoint": 5752,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "checked_add_uint256": {
          "entryPoint": 7390,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "copy_memory_to_memory_with_cleanup": {
          "entryPoint": 5617,
          "id": null,
          "parameterSlots": 3,
          "returnSlots": 0
        },
        "extract_byte_array_length": {
          "entryPoint": 7332,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "finalize_allocation": {
          "entryPoint": 5696,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 0
        },
        "fun_add": {
          "entryPoint": 8662,
          "id": 4437,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "fun_approve": {
          "entryPoint": 7892,
          "id": 2000,
          "parameterSlots": 3,
          "returnSlots": 0
        },
        "fun_checkIfAuthorizedChanger": {
          "entryPoint": 9040,
          "id": 22066,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "fun_checkRole": {
          "entryPoint": 6011,
          "id": 252,
          "parameterSlots": 1,
          "returnSlots": 0
        },
        "fun_grantRole": {
          "entryPoint": 5870,
          "id": 114,
          "parameterSlots": 2,
          "returnSlots": 0
        },
        "fun_remove": {
          "entryPoint": 8800,
          "id": 4521,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "fun_revokeRole": {
          "entryPoint": 6234,
          "id": 138,
          "parameterSlots": 2,
          "returnSlots": 0
        },
        "fun_setImplementation": {
          "entryPoint": 7170,
          "id": 678,
          "parameterSlots": 1,
          "returnSlots": 0
        },
        "fun_toHexString": {
          "entryPoint": 8295,
          "id": 3311,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "fun_transfer": {
          "entryPoint": 7425,
          "id": 1826,
          "parameterSlots": 3,
          "returnSlots": 0
        },
        "fun_upgradeToAndCallUUPS": {
          "entryPoint": 6562,
          "id": 776,
          "parameterSlots": 3,
          "returnSlots": 0
        },
        "fun_verifyCallResultFromTarget": {
          "entryPoint": 8150,
          "id": 2931,
          "parameterSlots": 4,
          "returnSlots": 1
        },
        "require_helper_stringliteral_36e1": {
          "entryPoint": 6368,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 0
        },
        "require_helper_stringliteral_52f1": {
          "entryPoint": 6465,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 0
        },
        "require_helper_stringliteral_d688": {
          "entryPoint": 9196,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 0
        },
        "storage_array_index_access_bytes32_dyn_ptr": {
          "entryPoint": 8638,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 2
        },
        "update_byte_slice_dynamic32": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 3,
          "returnSlots": 1
        }
      },
      "generatedSources": [],
      "immutableReferences": {
        "1143": [
          {
            "length": 32,
            "start": 3710
          },
          {
            "length": 32,
            "start": 3993
          },
          {
            "length": 32,
            "start": 4561
          }
        ]
      },
      "linkReferences": {},
      "opcodes": "PUSH1 0x80 PUSH1 0x40 SWAP1 DUP1 DUP3 MSTORE PUSH1 0x4 SWAP1 DUP2 CALLDATASIZE LT ISZERO PUSH2 0x17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE0 SHR SWAP2 DUP3 PUSH4 0x1FFC9A7 EQ PUSH2 0x1583 JUMPI POP DUP2 PUSH4 0x6FDDE03 EQ PUSH2 0x14D9 JUMPI DUP2 PUSH4 0x95EA7B3 EQ PUSH2 0x14A3 JUMPI DUP2 PUSH4 0xC340A24 EQ PUSH2 0x1479 JUMPI DUP2 PUSH4 0x18160DDD EQ PUSH2 0x142C JUMPI DUP2 PUSH4 0x23B872DD EQ PUSH2 0x1358 JUMPI DUP2 PUSH4 0x248A9CA3 EQ PUSH2 0x132C JUMPI DUP2 PUSH4 0x2F2FF15D EQ PUSH2 0x12E5 JUMPI DUP2 PUSH4 0x313CE567 EQ PUSH2 0x12C9 JUMPI DUP2 PUSH4 0x36568ABE EQ PUSH2 0x1236 JUMPI DUP4 DUP3 PUSH4 0x3659CFE6 EQ PUSH2 0x119F JUMPI POP DUP2 PUSH4 0x39509351 EQ PUSH2 0x114D JUMPI DUP2 PUSH4 0x40C10F19 EQ PUSH2 0xFFC JUMPI DUP2 PUSH4 0x4F1EF286 EQ PUSH2 0xF3D JUMPI DUP2 PUSH4 0x52D1902D EQ PUSH2 0xE69 JUMPI DUP2 PUSH4 0x5C975ABB EQ PUSH2 0xE44 JUMPI DUP2 PUSH4 0x5E2A6065 EQ PUSH2 0xE2A JUMPI DUP2 PUSH4 0x70A08231 EQ PUSH2 0xDEF JUMPI DUP2 PUSH4 0x83D2230D EQ PUSH2 0xC45 JUMPI DUP2 PUSH4 0x8456CB59 EQ PUSH2 0xB8D JUMPI DUP2 PUSH4 0x8D7A72F3 EQ PUSH2 0xB6D JUMPI DUP2 PUSH4 0x8F15B414 EQ PUSH2 0x6C9 JUMPI DUP2 PUSH4 0x9010D07C EQ PUSH2 0x687 JUMPI DUP2 PUSH4 0x91D14854 EQ PUSH2 0x63B JUMPI DUP2 PUSH4 0x95D89B41 EQ PUSH2 0x55A JUMPI DUP2 PUSH4 0x9DC29FAC EQ PUSH2 0x3AB JUMPI DUP2 PUSH4 0xA217FDDF EQ PUSH2 0x390 JUMPI DUP2 PUSH4 0xA457C2D7 EQ PUSH2 0x2E7 JUMPI DUP2 PUSH4 0xA9059CBB EQ PUSH2 0x2A7 JUMPI DUP2 PUSH4 0xCA15C873 EQ PUSH2 0x27E JUMPI DUP2 PUSH4 0xD547741F EQ PUSH2 0x234 JUMPI DUP2 PUSH4 0xDD62ED3E EQ PUSH2 0x1DA JUMPI POP PUSH4 0xE4C0AAF4 EQ PUSH2 0x193 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1D6 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1D6 JUMPI CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x1D6 JUMPI PUSH2 0x1BF PUSH2 0x2350 JUMP JUMPDEST PUSH2 0x191 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE DUP1 RETURN JUMPDEST POP DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x230 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x230 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 CALLDATALOAD DUP2 DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x22C JUMPI PUSH1 0x24 CALLDATALOAD SWAP2 DUP3 AND DUP1 SWAP3 SUB PUSH2 0x22C JUMPI SWAP3 DUP3 SWAP2 PUSH1 0x20 SWAP5 DUP3 MSTORE PUSH1 0xCA DUP6 MSTORE DUP3 DUP3 KECCAK256 SWAP1 DUP3 MSTORE DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP4 DUP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x230 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x230 JUMPI PUSH1 0x24 CALLDATALOAD SWAP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x22C JUMPI PUSH2 0x276 PUSH1 0x1 PUSH2 0x27B SWAP5 DUP4 DUP8 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE DUP7 KECCAK256 ADD SLOAD PUSH2 0x177B JUMP JUMPDEST PUSH2 0x185A JUMP JUMPDEST DUP1 RETURN JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x230 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x230 JUMPI PUSH1 0x20 SWAP3 DUP3 SWAP2 CALLDATALOAD DUP2 MSTORE PUSH1 0x97 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x230 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x230 JUMPI CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP4 SUB PUSH2 0x2E4 JUMPI POP PUSH2 0x2DD PUSH1 0x20 SWAP3 PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x1D01 JUMP JUMPDEST MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST DUP1 REVERT JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x2E4 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2E4 JUMPI DUP2 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP2 DUP3 DUP5 SUB PUSH2 0x2E4 JUMPI DUP5 SWAP1 PUSH1 0x24 CALLDATALOAD SWAP4 CALLER DUP3 MSTORE PUSH1 0xCA PUSH1 0x20 MSTORE DUP3 DUP3 KECCAK256 SWAP1 DUP3 MSTORE PUSH1 0x20 MSTORE KECCAK256 SLOAD SWAP1 DUP3 DUP3 LT PUSH2 0x33F JUMPI PUSH1 0x20 DUP6 PUSH2 0x2DD DUP6 DUP6 SUB DUP8 CALLER PUSH2 0x1ED4 JUMP JUMPDEST PUSH1 0x84 SWAP1 PUSH1 0x20 DUP7 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP4 SWAP1 CALLVALUE PUSH2 0x1D6 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1D6 JUMPI MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP4 DUP4 CALLVALUE PUSH2 0x1D6 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1D6 JUMPI DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP2 SWAP1 DUP3 SWAP1 SUB PUSH2 0x230 JUMPI PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x3FF PUSH32 0x3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848 PUSH2 0x177B JUMP JUMPDEST DUP3 ISZERO PUSH2 0x50D JUMPI PUSH1 0xFF PUSH2 0x1C4 SLOAD AND PUSH2 0x4B7 JUMPI DUP3 DUP5 MSTORE PUSH1 0xC9 PUSH1 0x20 MSTORE DUP5 DUP5 KECCAK256 SLOAD SWAP1 DUP3 DUP3 LT PUSH2 0x469 JUMPI POP DUP2 DUP5 SWAP6 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP4 PUSH1 0x20 SWAP4 DUP7 DUP9 MSTORE PUSH1 0xC9 DUP6 MSTORE SUB DUP2 DUP8 KECCAK256 SSTORE DUP2 PUSH1 0xCB SLOAD SUB PUSH1 0xCB SSTORE MLOAD SWAP1 DUP2 MSTORE LOG3 DUP1 RETURN JUMPDEST PUSH1 0x84 SWAP1 PUSH1 0x20 DUP8 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x84 SWAP1 PUSH1 0x20 DUP7 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332305061757361626C653A20746F6B656E207472616E73666572207768 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1A5B19481C185D5CD959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x84 SWAP1 PUSH1 0x20 DUP7 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP4 SWAP1 CALLVALUE PUSH2 0x1D6 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1D6 JUMPI DUP1 MLOAD SWAP1 DUP3 PUSH1 0xCD SLOAD PUSH2 0x57C DUP2 PUSH2 0x1CA4 JUMP JUMPDEST DUP1 DUP6 MSTORE SWAP2 PUSH1 0x1 SWAP2 DUP1 DUP4 AND SWAP1 DUP2 ISZERO PUSH2 0x613 JUMPI POP PUSH1 0x1 EQ PUSH2 0x5B6 JUMPI JUMPDEST POP POP POP PUSH2 0x5A8 DUP3 PUSH2 0x5B2 SWAP5 SUB DUP4 PUSH2 0x1640 JUMP JUMPDEST MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x1614 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST SWAP5 POP PUSH1 0xCD DUP6 MSTORE PUSH32 0x83978B4C69C48DD978AB43FE30F077615294F938FB7F936D9EB340E51EA7DB2E JUMPDEST DUP3 DUP7 LT PUSH2 0x5FB JUMPI POP POP POP PUSH2 0x5A8 DUP3 PUSH1 0x20 PUSH2 0x5B2 SWAP6 DUP3 ADD ADD SWAP5 PUSH2 0x596 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x20 DUP8 DUP8 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP6 ADD SWAP5 DUP2 ADD PUSH2 0x5DE JUMP JUMPDEST PUSH2 0x5B2 SWAP8 POP DUP7 SWAP4 POP PUSH1 0x20 SWAP3 POP PUSH2 0x5A8 SWAP5 SWAP2 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD SWAP5 PUSH2 0x596 JUMP JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x230 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x230 JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP2 SWAP1 DUP3 SWAP1 SUB PUSH2 0x22C JUMPI PUSH1 0x20 SWAP4 PUSH1 0xFF SWAP3 DUP5 SWAP3 CALLDATALOAD DUP3 MSTORE PUSH1 0x65 DUP7 MSTORE DUP3 DUP3 KECCAK256 SWAP1 DUP3 MSTORE DUP6 MSTORE KECCAK256 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x230 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x230 JUMPI PUSH1 0x20 SWAP3 PUSH2 0x6B3 SWAP2 CALLDATALOAD DUP2 MSTORE PUSH1 0x97 DUP5 MSTORE DUP3 PUSH1 0x24 CALLDATALOAD SWAP2 KECCAK256 PUSH2 0x21BE JUMP JUMPDEST SWAP1 SLOAD SWAP2 MLOAD SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 PUSH1 0x3 SHL SHR AND DUP2 MSTORE RETURN JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x230 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x230 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD DUP2 DUP2 GT PUSH2 0xB69 JUMPI PUSH2 0x6FC SWAP1 CALLDATASIZE SWAP1 DUP5 ADD PUSH2 0x16D0 JUMP JUMPDEST SWAP1 PUSH1 0x24 CALLDATALOAD DUP2 DUP2 GT PUSH2 0xB65 JUMPI PUSH2 0x714 SWAP1 CALLDATASIZE SWAP1 DUP6 ADD PUSH2 0x16D0 JUMP JUMPDEST SWAP2 PUSH1 0x44 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 DUP5 AND DUP5 SUB PUSH2 0xB61 JUMPI PUSH1 0x64 CALLDATALOAD SWAP3 DUP4 AND DUP1 SWAP4 SUB PUSH2 0xB61 JUMPI DUP8 SLOAD SWAP5 PUSH1 0xFF DUP7 PUSH1 0x8 SHR AND ISZERO SWAP7 DUP8 DUP1 SWAP9 PUSH2 0xB54 JUMPI JUMPDEST DUP1 ISZERO PUSH2 0xB3D JUMPI JUMPDEST ISZERO PUSH2 0xAE3 JUMPI PUSH1 0x1 SWAP7 DUP9 DUP9 PUSH1 0xFF NOT DUP4 AND OR DUP13 SSTORE PUSH2 0xAD2 JUMPI JUMPDEST POP PUSH2 0x78D PUSH1 0xFF DUP12 SLOAD PUSH1 0x8 SHR AND PUSH2 0x77F DUP2 PUSH2 0x23EC JUMP JUMPDEST PUSH2 0x788 DUP2 PUSH2 0x23EC JUMP JUMPDEST PUSH2 0x23EC JUMP JUMPDEST DUP3 MLOAD DUP5 DUP2 GT PUSH2 0xABF JUMPI DUP1 PUSH2 0x7A2 PUSH1 0xCC SLOAD PUSH2 0x1CA4 JUMP JUMPDEST SWAP5 PUSH1 0x1F SWAP6 DUP7 DUP2 GT PUSH2 0xA4E JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 DUP14 DUP8 DUP5 GT PUSH1 0x1 EQ PUSH2 0x9CF JUMPI SWAP3 PUSH2 0x9C4 JUMPI JUMPDEST POP POP PUSH1 0x0 NOT PUSH1 0x3 DUP4 SWAP1 SHL SHR NOT AND SWAP1 DUP9 SHL OR PUSH1 0xCC SSTORE JUMPDEST DUP2 MLOAD SWAP4 DUP5 GT PUSH2 0x9B1 JUMPI POP PUSH2 0x7ED PUSH1 0xCD SLOAD PUSH2 0x1CA4 JUMP JUMPDEST DUP3 DUP2 GT PUSH2 0x94E JUMPI JUMPDEST POP PUSH1 0x20 SWAP2 DUP4 GT PUSH1 0x1 EQ PUSH2 0x8C9 JUMPI PUSH2 0x85D SWAP5 SWAP4 SWAP3 SWAP2 DUP10 SWAP2 DUP4 PUSH2 0x8BE JUMPI JUMPDEST POP POP PUSH1 0x0 NOT PUSH1 0x3 DUP4 SWAP1 SHL SHR NOT AND SWAP1 DUP6 SHL OR PUSH1 0xCD SSTORE JUMPDEST PUSH2 0x843 PUSH1 0xFF DUP9 SLOAD PUSH1 0x8 SHR AND PUSH2 0x83A DUP2 PUSH2 0x23EC JUMP JUMPDEST PUSH2 0x77F DUP2 PUSH2 0x23EC JUMP JUMPDEST PUSH2 0x191 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE DUP6 PUSH2 0x16EE JUMP JUMPDEST DUP4 SLOAD SWAP2 PUSH2 0x873 PUSH1 0xFF DUP5 PUSH1 0x8 SHR AND PUSH2 0x788 DUP2 PUSH2 0x23EC JUMP JUMPDEST PUSH2 0x1C4 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH2 0x886 JUMPI DUP4 DUP1 RETURN JUMPDEST PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP3 PUSH1 0x20 SWAP3 PUSH2 0xFF00 NOT AND DUP6 SSTORE MLOAD SWAP1 DUP2 MSTORE LOG1 CODESIZE DUP1 DUP1 DUP4 DUP1 RETURN JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x811 JUMP JUMPDEST PUSH1 0xCD DUP10 MSTORE SWAP4 SWAP3 SWAP2 DUP6 SWAP2 PUSH32 0x83978B4C69C48DD978AB43FE30F077615294F938FB7F936D9EB340E51EA7DB2E SWAP1 PUSH1 0x1F NOT DUP4 AND DUP12 JUMPDEST DUP2 DUP2 LT PUSH2 0x936 JUMPI POP SWAP7 DUP4 PUSH2 0x85D SWAP9 LT PUSH2 0x91D JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0xCD SSTORE PUSH2 0x826 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x90F JUMP JUMPDEST DUP3 DUP10 ADD MLOAD DUP5 SSTORE DUP10 SWAP6 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x8FB JUMP JUMPDEST PUSH1 0xCD DUP11 MSTORE PUSH32 0x83978B4C69C48DD978AB43FE30F077615294F938FB7F936D9EB340E51EA7DB2E DUP4 DUP1 DUP7 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 PUSH1 0x20 DUP8 LT PUSH2 0x9A8 JUMPI JUMPDEST ADD PUSH1 0x5 SHR ADD SWAP1 DUP8 SWAP1 JUMPDEST DUP3 DUP2 LT PUSH2 0x99D JUMPI POP POP PUSH2 0x7F5 JUMP JUMPDEST DUP12 DUP2 SSTORE ADD DUP8 SWAP1 PUSH2 0x98F JUMP JUMPDEST SWAP3 POP DUP2 SWAP3 PUSH2 0x986 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP11 MSTORE PUSH1 0x41 SWAP1 MSTORE PUSH1 0x24 DUP10 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x7C3 JUMP JUMPDEST SWAP2 SWAP1 DUP12 SWAP5 POP PUSH1 0x1F NOT DUP5 AND PUSH1 0xCC DUP5 MSTORE PUSH32 0x47197230E1E4B29FC0BD84D7D78966C0925452AFF72A2A121538B102457E9EBE SWAP4 JUMPDEST DUP2 DUP2 LT PUSH2 0xA36 JUMPI POP DUP5 GT PUSH2 0xA1D JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0xCC SSTORE PUSH2 0x7D8 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0xA0F JUMP JUMPDEST DUP3 DUP5 ADD MLOAD DUP6 SSTORE DUP14 SWAP7 SWAP1 SWAP5 ADD SWAP4 PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 ADD PUSH2 0xA00 JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0xCC DUP14 MSTORE PUSH32 0x47197230E1E4B29FC0BD84D7D78966C0925452AFF72A2A121538B102457E9EBE DUP7 DUP1 DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 PUSH1 0x20 DUP7 LT PUSH2 0xAB6 JUMPI JUMPDEST DUP6 SWAP5 SWAP4 SWAP2 ADD PUSH1 0x5 SHR SWAP1 SWAP2 ADD SWAP1 DUP12 SWAP1 DUP16 JUMPDEST DUP4 DUP3 LT PUSH2 0xAA8 JUMPI POP POP POP PUSH2 0x7AE JUMP JUMPDEST DUP2 SSTORE DUP6 SWAP5 POP DUP13 SWAP2 ADD DUP16 PUSH2 0xA99 JUMP JUMPDEST SWAP3 POP DUP2 SWAP3 PUSH2 0xA89 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP12 MSTORE PUSH1 0x41 DUP3 MSTORE PUSH1 0x24 DUP12 REVERT JUMPDEST PUSH2 0xFFFF NOT AND PUSH2 0x101 OR DUP11 SSTORE CODESIZE PUSH2 0x76A JUMP JUMPDEST PUSH1 0x84 SWAP1 PUSH1 0x20 DUP11 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x753 JUMPI POP PUSH1 0x1 PUSH1 0xFF DUP9 AND EQ PUSH2 0x753 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0xFF DUP9 AND LT PUSH2 0x74C JUMP JUMPDEST DUP8 DUP1 REVERT JUMPDEST DUP6 DUP1 REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST DUP4 SWAP1 CALLVALUE PUSH2 0x1D6 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1D6 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x228 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP4 DUP4 CALLVALUE PUSH2 0x1D6 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1D6 JUMPI PUSH2 0xBC8 PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A PUSH2 0x177B JUMP JUMPDEST PUSH2 0x1C4 SWAP1 DUP2 SLOAD SWAP1 PUSH1 0xFF DUP3 AND PUSH2 0xC0F JUMPI POP PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP2 MLOAD CALLER DUP2 MSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 SWAP1 PUSH1 0x20 SWAP1 LOG1 DUP1 RETURN JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x20 DUP7 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x230 JUMPI PUSH1 0x20 SWAP1 DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x22C JUMPI DUP3 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP4 SUB PUSH2 0xB69 JUMPI DUP5 DUP1 MSTORE PUSH1 0x65 DUP2 MSTORE PUSH1 0x1 SWAP1 PUSH2 0xC85 DUP3 DUP5 DUP9 KECCAK256 ADD SLOAD PUSH2 0x177B JUMP JUMPDEST PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A SWAP4 PUSH2 0xCB1 DUP2 DUP7 PUSH2 0x16EE JUMP JUMPDEST PUSH2 0xCBB CALLER DUP7 PUSH2 0x185A JUMP JUMPDEST DUP7 DUP1 MSTORE PUSH1 0x65 DUP3 MSTORE PUSH2 0xCD0 DUP4 DUP6 DUP10 KECCAK256 ADD SLOAD PUSH2 0x177B JUMP JUMPDEST PUSH2 0xCDA DUP2 DUP9 PUSH2 0x16EE JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0xD05 DUP3 DUP3 PUSH2 0x16EE JUMP JUMPDEST PUSH2 0xD30 PUSH32 0x3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848 SWAP3 DUP4 PUSH2 0x16EE JUMP JUMPDEST PUSH2 0xD3A CALLER DUP3 PUSH2 0x185A JUMP JUMPDEST PUSH2 0xD44 CALLER DUP4 PUSH2 0x185A JUMP JUMPDEST PUSH2 0xD4E CALLER DUP10 PUSH2 0x185A JUMP JUMPDEST DUP8 DUP1 MSTORE PUSH1 0x97 DUP4 MSTORE DUP4 DUP6 DUP10 KECCAK256 SLOAD SUB PUSH2 0xDD8 JUMPI DUP1 DUP9 MSTORE PUSH1 0x97 DUP4 MSTORE DUP4 DUP6 DUP10 KECCAK256 SLOAD SUB PUSH2 0xDC2 JUMPI POP DUP1 DUP8 MSTORE PUSH1 0x97 DUP3 MSTORE DUP3 DUP5 DUP9 KECCAK256 SLOAD SUB PUSH2 0xDAC JUMPI POP PUSH1 0x97 SWAP1 DUP5 DUP8 MSTORE MSTORE DUP2 DUP6 KECCAK256 SLOAD SUB PUSH2 0xD97 JUMPI DUP4 DUP1 RETURN JUMPDEST MLOAD PUSH4 0xE2B37CD PUSH1 0xE4 SHL DUP2 MSTORE SWAP2 DUP3 ADD MSTORE PUSH1 0x24 SWAP2 POP REVERT JUMPDEST DUP6 PUSH1 0x24 SWAP2 DUP6 MLOAD SWAP2 PUSH4 0xE2B37CD PUSH1 0xE4 SHL DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST DUP7 PUSH1 0x24 SWAP2 DUP7 MLOAD SWAP2 PUSH4 0xE2B37CD PUSH1 0xE4 SHL DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST DUP5 MLOAD PUSH4 0xE2B37CD PUSH1 0xE4 SHL DUP2 MSTORE DUP1 DUP9 ADD DUP10 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x230 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x230 JUMPI CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x230 JUMPI DUP3 DUP3 SWAP2 PUSH1 0x20 SWAP5 MSTORE PUSH1 0xC9 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP4 CALLVALUE PUSH2 0x2E4 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2E4 JUMPI PUSH1 0x2A PUSH2 0x228 SSTORE DUP1 RETURN JUMPDEST DUP4 SWAP1 CALLVALUE PUSH2 0x1D6 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1D6 JUMPI PUSH1 0x20 SWAP1 PUSH1 0xFF PUSH2 0x1C4 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x2E4 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2E4 JUMPI POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS SUB PUSH2 0xED5 JUMPI PUSH1 0x20 DUP3 MLOAD PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP2 MSTORE RETURN JUMPDEST PUSH1 0x20 PUSH1 0x84 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x555550535570677261646561626C653A206D757374206E6F742062652063616C PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6C6564207468726F7567682064656C656761746563616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST CALLDATASIZE PUSH1 0x3 NOT ADD SLT SWAP1 POP PUSH2 0x1D6 JUMPI DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND DUP3 SUB PUSH2 0x22C JUMPI PUSH1 0x24 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0xB69 JUMPI CALLDATASIZE PUSH1 0x23 DUP5 ADD SLT ISZERO PUSH2 0xB69 JUMPI PUSH2 0xFEF PUSH2 0xF95 PUSH2 0x27B SWAP6 DUP6 PUSH1 0x24 PUSH1 0x1 SWAP8 CALLDATASIZE SWAP4 ADD CALLDATALOAD SWAP2 ADD PUSH2 0x1694 JUMP JUMPDEST SWAP3 DUP1 PUSH32 0x0 AND SWAP1 PUSH2 0xFC6 DUP3 ADDRESS EQ ISZERO PUSH2 0x18E0 JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD AND EQ PUSH2 0x1941 JUMP JUMPDEST PUSH2 0xFF7 PUSH2 0x2350 JUMP JUMPDEST PUSH2 0x19A2 JUMP JUMPDEST SWAP1 POP DUP3 CALLVALUE PUSH2 0x2E4 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2E4 JUMPI DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP2 SWAP1 DUP3 SWAP1 SUB PUSH2 0x2E4 JUMPI PUSH1 0x24 CALLDATALOAD PUSH2 0x1050 PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0x177B JUMP JUMPDEST DUP3 ISZERO PUSH2 0x110A JUMPI PUSH1 0xFF PUSH2 0x1C4 SLOAD AND PUSH2 0x10B4 JUMPI PUSH1 0x20 DUP1 SWAP6 POP DUP2 PUSH2 0x1094 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP4 PUSH1 0xCB SLOAD PUSH2 0x1CDE JUMP JUMPDEST PUSH1 0xCB SSTORE DUP5 DUP5 MSTORE PUSH1 0xC9 DUP3 MSTORE DUP6 DUP5 KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE DUP6 MLOAD SWAP1 DUP2 MSTORE LOG3 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST DUP4 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP8 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332305061757361626C653A20746F6B656E207472616E73666572207768 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1A5B19481C185D5CD959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP4 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP8 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x230 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x230 JUMPI CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP1 DUP3 SUB PUSH2 0x22C JUMPI SWAP1 PUSH2 0x1198 PUSH1 0x20 SWAP5 PUSH2 0x2DD SWAP4 CALLER DUP3 MSTORE PUSH1 0xCA DUP8 MSTORE DUP6 DUP3 KECCAK256 SWAP1 DUP3 MSTORE DUP7 MSTORE DUP5 PUSH1 0x24 CALLDATALOAD SWAP2 KECCAK256 SLOAD PUSH2 0x1CDE JUMP JUMPDEST SWAP1 CALLER PUSH2 0x1ED4 JUMP JUMPDEST SWAP2 POP SWAP2 CALLVALUE PUSH2 0x1D6 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1D6 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 CALLDATALOAD DUP4 DUP2 AND DUP2 SUB PUSH2 0x230 JUMPI PUSH2 0x11FE DUP5 PUSH2 0x27B SWAP6 PUSH32 0x0 AND SWAP1 PUSH2 0xFC6 DUP3 ADDRESS EQ ISZERO PUSH2 0x18E0 JUMP JUMPDEST PUSH2 0x1206 PUSH2 0x2350 JUMP JUMPDEST PUSH2 0x121B PUSH2 0x1212 DUP5 PUSH2 0x1678 JUMP JUMPDEST SWAP3 MLOAD SWAP3 DUP4 PUSH2 0x1640 JUMP JUMPDEST DUP3 DUP3 MSTORE PUSH1 0x1F NOT PUSH2 0x122A DUP5 PUSH2 0x1678 JUMP JUMPDEST ADD CALLDATASIZE PUSH1 0x20 DUP5 ADD CALLDATACOPY PUSH2 0x19A2 JUMP JUMPDEST DUP4 DUP4 CALLVALUE PUSH2 0x1D6 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1D6 JUMPI PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP1 DUP4 SUB PUSH2 0x22C JUMPI CALLER SUB PUSH2 0x126E JUMPI SWAP1 PUSH2 0x27B SWAP2 CALLDATALOAD PUSH2 0x185A JUMP JUMPDEST PUSH1 0x84 SWAP1 PUSH1 0x20 DUP6 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x103937B632B9903337B91039B2B633 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP4 SWAP1 CALLVALUE PUSH2 0x1D6 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1D6 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x230 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x230 JUMPI PUSH1 0x24 CALLDATALOAD SWAP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x22C JUMPI PUSH2 0x1327 PUSH1 0x1 PUSH2 0x27B SWAP5 DUP4 DUP8 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE DUP7 KECCAK256 ADD SLOAD PUSH2 0x177B JUMP JUMPDEST PUSH2 0x16EE JUMP JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x230 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x230 JUMPI DUP2 PUSH1 0x20 SWAP4 PUSH1 0x1 SWAP3 CALLDATALOAD DUP2 MSTORE PUSH1 0x65 DUP6 MSTORE KECCAK256 ADD SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP4 DUP4 CALLVALUE PUSH2 0x1D6 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1D6 JUMPI DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND SWAP4 SWAP1 SWAP3 SWAP1 DUP5 DUP4 SUB PUSH2 0x2E4 JUMPI PUSH1 0x24 CALLDATALOAD SWAP4 DUP5 AND DUP5 SUB PUSH2 0x2E4 JUMPI DUP6 SWAP1 PUSH1 0x44 CALLDATALOAD SWAP6 DUP2 MSTORE PUSH1 0xCA PUSH1 0x20 MSTORE DUP2 DUP2 KECCAK256 CALLER DUP3 MSTORE PUSH1 0x20 MSTORE KECCAK256 SLOAD SWAP1 PUSH1 0x0 NOT DUP3 SUB PUSH2 0x13C0 JUMPI JUMPDEST PUSH1 0x20 DUP7 PUSH2 0x2DD DUP8 DUP8 DUP8 PUSH2 0x1D01 JUMP JUMPDEST DUP5 DUP3 LT PUSH2 0x13E9 JUMPI POP SWAP2 DUP4 SWAP2 PUSH2 0x13DE PUSH1 0x20 SWAP7 SWAP6 PUSH2 0x2DD SWAP6 SUB CALLER DUP4 PUSH2 0x1ED4 JUMP JUMPDEST SWAP2 SWAP4 SWAP5 DUP2 SWAP4 POP PUSH2 0x13B2 JUMP JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x20 DUP8 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 POP DUP3 CALLVALUE PUSH2 0x2E4 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2E4 JUMPI PUSH2 0x228 SLOAD PUSH1 0x1 ADD SWAP3 DUP4 PUSH1 0x1 GT PUSH2 0x1466 JUMPI PUSH1 0x20 DUP4 PUSH2 0x145F DUP7 PUSH1 0xCB SLOAD SWAP1 PUSH2 0x1CDE JUMP JUMPDEST SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x11 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP4 SWAP1 CALLVALUE PUSH2 0x1D6 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1D6 JUMPI PUSH2 0x191 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x230 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x230 JUMPI CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP4 SUB PUSH2 0x2E4 JUMPI POP PUSH2 0x2DD PUSH1 0x20 SWAP3 PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x1ED4 JUMP JUMPDEST DUP4 SWAP1 CALLVALUE PUSH2 0x1D6 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1D6 JUMPI DUP1 MLOAD SWAP1 DUP3 PUSH1 0xCC SLOAD PUSH2 0x14FB DUP2 PUSH2 0x1CA4 JUMP JUMPDEST DUP1 DUP6 MSTORE SWAP2 PUSH1 0x1 SWAP2 DUP1 DUP4 AND SWAP1 DUP2 ISZERO PUSH2 0x613 JUMPI POP PUSH1 0x1 EQ PUSH2 0x1526 JUMPI POP POP POP PUSH2 0x5A8 DUP3 PUSH2 0x5B2 SWAP5 SUB DUP4 PUSH2 0x1640 JUMP JUMPDEST SWAP5 POP PUSH1 0xCC DUP6 MSTORE PUSH32 0x47197230E1E4B29FC0BD84D7D78966C0925452AFF72A2A121538B102457E9EBE JUMPDEST DUP3 DUP7 LT PUSH2 0x156B JUMPI POP POP POP PUSH2 0x5A8 DUP3 PUSH1 0x20 PUSH2 0x5B2 SWAP6 DUP3 ADD ADD SWAP5 PUSH2 0x596 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x20 DUP8 DUP8 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP6 ADD SWAP5 DUP2 ADD PUSH2 0x154E JUMP JUMPDEST DUP5 SWAP1 DUP5 CALLVALUE PUSH2 0x230 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x230 JUMPI CALLDATALOAD PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP2 AND DUP1 SWAP2 SUB PUSH2 0x230 JUMPI PUSH1 0x20 SWAP3 POP PUSH4 0x5A05180F PUSH1 0xE0 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x15C6 JUMPI JUMPDEST POP ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x7965DB0B PUSH1 0xE0 SHL DUP2 EQ SWAP2 POP DUP2 ISZERO PUSH2 0x15E0 JUMPI JUMPDEST POP DUP4 PUSH2 0x15BF JUMP JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP DUP4 PUSH2 0x15D9 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x1604 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x15F4 JUMP JUMPDEST PUSH1 0x40 SWAP2 PUSH1 0x20 DUP3 MSTORE PUSH2 0x1634 DUP2 MLOAD DUP1 SWAP3 DUP2 PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x20 DUP7 DUP7 ADD SWAP2 ADD PUSH2 0x15F1 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1662 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1662 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH2 0x16A0 DUP3 PUSH2 0x1678 JUMP JUMPDEST SWAP2 PUSH2 0x16AE PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x1640 JUMP JUMPDEST DUP3 SWAP5 DUP2 DUP5 MSTORE DUP2 DUP4 ADD GT PUSH2 0x16CB JUMPI DUP3 DUP2 PUSH1 0x20 SWAP4 DUP5 PUSH1 0x0 SWAP7 ADD CALLDATACOPY ADD ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x16CB JUMPI DUP2 PUSH1 0x20 PUSH2 0x16EB SWAP4 CALLDATALOAD SWAP2 ADD PUSH2 0x1694 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x40 PUSH2 0x172D SWAP3 PUSH1 0x0 SWAP1 DUP1 DUP3 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE DUP3 DUP3 KECCAK256 SWAP4 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP4 DUP5 DUP4 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF DUP4 DUP4 KECCAK256 SLOAD AND ISZERO PUSH2 0x1730 JUMPI JUMPDEST DUP2 MSTORE PUSH1 0x97 PUSH1 0x20 MSTORE KECCAK256 PUSH2 0x21D6 JUMP JUMPDEST POP JUMP JUMPDEST DUP1 DUP3 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE DUP3 DUP3 KECCAK256 DUP5 DUP4 MSTORE PUSH1 0x20 MSTORE DUP3 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE CALLER DUP5 DUP3 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D DUP6 DUP1 LOG4 PUSH2 0x1720 JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x65 DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE DUP2 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0x17A2 JUMPI POP POP JUMP JUMPDEST PUSH2 0x183E PUSH1 0x48 PUSH2 0x1856 SWAP4 DUP4 PUSH2 0x17C4 PUSH2 0x182F SWAP6 PUSH2 0x17BE PUSH1 0x14 CALLER PUSH2 0x2067 JUMP JUMPDEST SWAP4 PUSH2 0x2067 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP4 PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 DUP4 DUP7 ADD MSTORE PUSH2 0x1803 DUP2 MLOAD DUP1 SWAP3 DUP6 PUSH1 0x37 DUP10 ADD SWAP2 ADD PUSH2 0x15F1 JUMP JUMPDEST DUP5 ADD SWAP2 PUSH17 0x1034B99036B4B9B9B4B733903937B6329 PUSH1 0x7D SHL PUSH1 0x37 DUP5 ADD MSTORE DUP4 MLOAD SWAP4 DUP5 SWAP2 DUP8 DUP6 ADD SWAP2 ADD PUSH2 0x15F1 JUMP JUMPDEST ADD SUB PUSH1 0x28 DUP2 ADD DUP5 MSTORE ADD DUP3 PUSH2 0x1640 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP2 DUP3 SWAP2 PUSH1 0x4 DUP4 ADD PUSH2 0x1614 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0x40 PUSH2 0x172D SWAP3 PUSH1 0x0 SWAP1 DUP1 DUP3 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE DUP3 DUP3 KECCAK256 SWAP4 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP4 DUP5 DUP4 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF DUP4 DUP4 KECCAK256 SLOAD AND PUSH2 0x1898 JUMPI JUMPDEST DUP2 MSTORE PUSH1 0x97 PUSH1 0x20 MSTORE KECCAK256 PUSH2 0x2260 JUMP JUMPDEST DUP1 DUP3 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE DUP3 DUP3 KECCAK256 DUP5 DUP4 MSTORE PUSH1 0x20 MSTORE DUP3 DUP3 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE CALLER DUP5 DUP3 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B DUP6 DUP1 LOG4 PUSH2 0x188B JUMP JUMPDEST ISZERO PUSH2 0x18E7 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x19195B1959D85D1958D85B1B PUSH1 0xA2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1948 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x6163746976652070726F7879 PUSH1 0xA0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 SWAP2 PUSH1 0xFF PUSH32 0x4910FDFA16FED3260ED0E7147F7CC6DA11A60208B5B9406D12A635614FFD9143 SLOAD AND PUSH1 0x0 EQ PUSH2 0x19DD JUMPI POP PUSH2 0x19DB SWAP2 POP PUSH2 0x1C02 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x52D1902D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x20 SWAP5 SWAP2 SWAP4 SWAP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP7 DUP2 PUSH1 0x4 DUP2 DUP6 GAS STATICCALL PUSH1 0x0 SWAP2 DUP2 PUSH2 0x1BD3 JUMPI JUMPDEST POP PUSH2 0x1A6E JUMPI DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A206E657720696D706C656D656E74617469 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x6F6E206973206E6F742055555053 PUSH1 0x90 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP4 SWAP6 SWAP3 SWAP5 SWAP3 SWAP4 PUSH32 0xC9F76B5EC45E5CDEF99837D7B6D2467235C1DF8933C8CA56DF5C35AFA2C7D444 ADD PUSH2 0x1B7D JUMPI PUSH2 0x1AA3 DUP7 PUSH2 0x1C02 JUMP JUMPDEST PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x0 DUP1 LOG2 DUP4 MLOAD ISZERO SWAP1 DUP2 ISZERO SWAP2 PUSH2 0x1B75 JUMPI JUMPDEST POP PUSH2 0x1AE0 JUMPI JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1B61 SWAP4 PUSH1 0x0 DUP1 PUSH2 0x1AF1 PUSH1 0x27 PUSH2 0x1678 JUMP JUMPDEST SWAP6 PUSH2 0x1AFE DUP6 MLOAD SWAP8 DUP9 PUSH2 0x1640 JUMP JUMPDEST PUSH1 0x27 DUP8 MSTORE PUSH32 0x416464726573733A206C6F772D6C6576656C2064656C65676174652063616C6C DUP7 DUP9 ADD MSTORE PUSH7 0x819985A5B1959 PUSH1 0xCA SHL DUP6 DUP9 ADD MSTORE DUP6 DUP2 MLOAD SWAP2 ADD DUP5 GAS DELEGATECALL SWAP2 RETURNDATASIZE ISZERO PUSH2 0x1B6B JUMPI RETURNDATASIZE PUSH2 0x1B52 PUSH2 0x1212 DUP3 PUSH2 0x1678 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x0 DUP2 SWAP5 RETURNDATASIZE SWAP3 ADD RETURNDATACOPY PUSH2 0x1FD6 JUMP JUMPDEST POP CODESIZE DUP1 DUP1 DUP1 PUSH2 0x1ADA JUMP JUMPDEST POP PUSH1 0x60 SWAP3 POP PUSH2 0x1FD6 JUMP JUMPDEST SWAP1 POP CODESIZE PUSH2 0x1AD4 JUMP JUMPDEST DUP3 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A20756E737570706F727465642070726F78 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x1A58589B1955555251 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 SWAP2 DUP9 DUP3 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x1BFB JUMPI JUMPDEST PUSH2 0x1BEA DUP2 DUP4 PUSH2 0x1640 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x2E4 JUMPI POP MLOAD SWAP1 CODESIZE PUSH2 0x1A0E JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1BE0 JUMP JUMPDEST DUP1 EXTCODESIZE ISZERO PUSH2 0x1C49 JUMPI PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x1BDD08184818DBDB9D1C9858DD PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x1CD4 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x1CBE JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x1CB3 JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x1CEB JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 DUP3 ISZERO PUSH2 0x1E81 JUMPI AND SWAP2 DUP3 ISZERO PUSH2 0x1E30 JUMPI PUSH1 0xFF PUSH2 0x1C4 SLOAD AND PUSH2 0x1DD8 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xC9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP2 DUP1 DUP4 LT PUSH2 0x1D84 JUMPI PUSH1 0x40 DUP3 DUP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP6 DUP8 PUSH1 0x20 SWAP7 MSTORE PUSH1 0xC9 DUP7 MSTORE SUB DUP3 DUP3 KECCAK256 SSTORE DUP7 DUP2 MSTORE KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332305061757361626C653A20746F6B656E207472616E73666572207768 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1A5B19481C185D5CD959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 DUP3 ISZERO PUSH2 0x1F85 JUMPI AND SWAP2 DUP3 ISZERO PUSH2 0x1F35 JUMPI PUSH1 0x20 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 DUP4 PUSH1 0x0 MSTORE PUSH1 0xCA DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP6 PUSH1 0x0 MSTORE DUP3 MSTORE DUP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP2 SWAP3 SWAP1 ISZERO PUSH2 0x2038 JUMPI POP DUP2 MLOAD ISZERO PUSH2 0x1FEA JUMPI POP SWAP1 JUMP JUMPDEST EXTCODESIZE ISZERO PUSH2 0x1FF3 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP3 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x204B JUMPI POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP1 DUP2 SWAP1 PUSH2 0x1856 SWAP1 PUSH1 0x4 DUP4 ADD PUSH2 0x1614 JUMP JUMPDEST PUSH1 0x1 SWAP2 DUP1 DUP4 SHL SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xFF SHL SUB DUP2 AND SUB PUSH2 0x1CEB JUMPI PUSH1 0x2 DUP3 ADD SWAP3 DUP4 DUP4 GT PUSH2 0x1CEB JUMPI PUSH2 0x20AC PUSH2 0x2096 DUP6 PUSH2 0x1678 JUMP JUMPDEST SWAP5 PUSH2 0x20A4 PUSH1 0x40 MLOAD SWAP7 DUP8 PUSH2 0x1640 JUMP JUMPDEST DUP1 DUP7 MSTORE PUSH2 0x1678 JUMP JUMPDEST PUSH1 0x20 SWAP4 SWAP1 DUP6 DUP6 ADD SWAP1 PUSH1 0x1F NOT ADD CALLDATASIZE DUP3 CALLDATACOPY DUP6 MLOAD ISZERO PUSH2 0x21A8 JUMPI PUSH1 0x30 SWAP1 MSTORE8 DUP5 MLOAD DUP3 LT ISZERO PUSH2 0x21A8 JUMPI PUSH1 0x78 PUSH1 0x21 DUP7 ADD MSTORE8 DUP2 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x1CEB JUMPI SWAP1 JUMPDEST DUP1 DUP3 GT PUSH2 0x2136 JUMPI POP POP PUSH2 0x20F3 JUMPI POP SWAP1 JUMP JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE DUP1 PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 SWAP2 PUSH1 0xF DUP2 AND PUSH1 0x10 DUP2 LT ISZERO PUSH2 0x2193 JUMPI DUP6 MLOAD DUP5 LT ISZERO PUSH2 0x2193 JUMPI PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL SWAP1 BYTE DUP6 DUP5 ADD DUP6 ADD MSTORE8 PUSH1 0x4 SHR SWAP2 DUP1 ISZERO PUSH2 0x217E JUMPI PUSH1 0x0 NOT ADD SWAP1 PUSH2 0x20E2 JUMP JUMPDEST PUSH1 0x24 PUSH1 0x0 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x24 PUSH1 0x0 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x21A8 JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x1 DUP4 ADD PUSH1 0x0 SWAP1 DUP3 DUP3 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 SLOAD ISZERO PUSH1 0x0 EQ PUSH2 0x225A JUMPI DUP5 SLOAD SWAP5 PUSH9 0x10000000000000000 DUP7 LT ISZERO PUSH2 0x2246 JUMPI DUP4 PUSH2 0x2236 PUSH2 0x221F DUP9 PUSH1 0x1 PUSH1 0x40 SWAP9 SWAP10 SWAP11 ADD DUP6 SSTORE DUP5 PUSH2 0x21BE JUMP JUMPDEST DUP2 SWAP4 SWAP2 SLOAD SWAP1 PUSH1 0x3 SHL SWAP2 DUP3 SHL SWAP2 PUSH1 0x0 NOT SWAP1 SHL NOT AND OR SWAP1 JUMP JUMPDEST SWAP1 SSTORE SLOAD SWAP4 DUP3 MSTORE PUSH1 0x20 MSTORE KECCAK256 SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST POP SWAP3 POP POP JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 ADD SWAP1 PUSH1 0x0 SWAP3 DUP2 DUP5 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 SLOAD SWAP1 DUP2 ISZERO ISZERO PUSH1 0x0 EQ PUSH2 0x2349 JUMPI PUSH1 0x0 NOT SWAP2 DUP1 DUP4 ADD DUP2 DUP2 GT PUSH2 0x2335 JUMPI DUP3 SLOAD SWAP1 DUP5 DUP3 ADD SWAP2 DUP3 GT PUSH2 0x2321 JUMPI DUP1 DUP3 SUB PUSH2 0x22EC JUMPI JUMPDEST POP POP POP DUP1 SLOAD DUP1 ISZERO PUSH2 0x22D8 JUMPI DUP3 ADD SWAP2 PUSH2 0x22BB DUP4 DUP4 PUSH2 0x21BE JUMP JUMPDEST SWAP1 SWAP2 DUP3 SLOAD SWAP2 PUSH1 0x3 SHL SHL NOT AND SWAP1 SSTORE SSTORE DUP3 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST PUSH2 0x230C PUSH2 0x22FC PUSH2 0x221F SWAP4 DUP7 PUSH2 0x21BE JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR SWAP3 DUP4 SWAP3 DUP7 PUSH2 0x21BE JUMP JUMPDEST SWAP1 SSTORE DUP7 MSTORE DUP5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP7 KECCAK256 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x22A3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP9 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP8 REVERT JUMPDEST POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x191 SLOAD PUSH1 0x40 MLOAD PUSH4 0xD994D6D5 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x23E0 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x23A6 JUMPI JUMPDEST POP ISZERO PUSH2 0x2394 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1DD1B1B5 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x20 DUP2 RETURNDATASIZE DUP3 GT PUSH2 0x23D8 JUMPI JUMPDEST DUP2 PUSH2 0x23BE PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1640 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1D6 JUMPI MLOAD SWAP1 DUP2 ISZERO ISZERO DUP3 SUB PUSH2 0x2E4 JUMPI POP CODESIZE PUSH2 0x238C JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x23B1 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x23F3 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHR DIFFICULTY 0x4A 0x24 PUSH8 0x53E822365D7E007E 0xB5 ORIGIN 0xBA SWAP2 SUB 0xE9 0xDA JUMPI 0xD1 REVERT PUSH26 0x3C3D803F631C839064736F6C6343000814003300000000000000 ",
      "sourceMap": "404:303:86:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;404:303:86;;;;;-1:-1:-1;;;;;404:303:86;;;;;;;;986:87:61;;:::i;:::-;1885:23;404:303:86;;-1:-1:-1;;;;;;404:303:86;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;404:303:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;4439:11:12;404:303:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;404:303:86;;;;;;2939:4:1;404:303:86;5816:7:1;404:303:86;;;;4934:6:1;404:303:86;;;;4934:22:1;404:303:86;2939:4:1;:::i;:::-;5816:7;:::i;:::-;404:303:86;;;;;;;;;;;-1:-1:-1;;404:303:86;;;;;;;;;;;2195:12:0;404:303:86;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;404:303:86;;;;;;;4231:6:12;404:303:86;;;;929:10:19;;4231:6:12;:::i;:::-;404:303:86;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;404:303:86;;;;;;;;;;;;929:10:19;;404:303:86;;4439:11:12;404:303:86;;;;;;;;;;;;7129:35:12;;;;404:303:86;;;;7265:34:12;404:303:86;;;;929:10:19;7265:34:12;:::i;404:303:86:-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;404:303:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;404:303:86;;;;;;;;;;;2939:4:1;;1017:24:90;2939:4:1;:::i;:::-;9795:21:12;;404:303:86;;;1928:7:10;404:303:86;;;;;;;9950:9:12;404:303:86;;;;;;9986:24:12;;;;404:303:86;;;;;;10268:37:12;404:303:86;;;;;;9950:9:12;404:303:86;;;;;;;;10220:22:12;404:303:86;;10220:22:12;404:303:86;;;;;10268:37:12;404:303:86;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;404:303:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;404:303:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;404:303:86;;;;;;;;;;;;;;;;;;;;;;;2794:7:12;404:303:86;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;2794:7:12;404:303:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;404:303:86;;;;;;;;;;;;;;;;;;3438:6:1;404:303:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5016:18:26;404:303:86;;;;1886:12:0;404:303:86;;;;;;;5016:18:26;:::i;:::-;404:303:86;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;404:303:86;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;404:303:86;;;;;;;;;;;;;;;;;;;;;;;;;;3301:14:8;3347:34;;;;;;404:303:86;3346:108:8;;;;404:303:86;;;;;;;;;;;;;;;3562:65:8;;404:303:86;;5366:69:8;404:303:86;;;;;;5366:69:8;;;:::i;:::-;;;;:::i;:::-;;:::i;:::-;404:303:86;;;;;;;;;2383:13:12;404:303:86;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;404:303:86;;;;;;;;;;;2383:13:12;404:303:86;;;;;;;;;;;2406:17:12;404:303:86;;:::i;:::-;;;;;;;;;;;;;;;;2044:6:90;;404:303:86;;;;;;;;;-1:-1:-1;;;;404:303:86;;;;;;;;;;;2406:17:12;404:303:86;;5366:69:8;404:303:86;;;;;;5366:69:8;;;:::i;:::-;;;;:::i;:::-;1591:38:61;404:303:86;;-1:-1:-1;;;;;;404:303:86;;;;;;2044:6:90;;:::i;:::-;404:303:86;;;5366:69:8;404:303:86;;;;;5366:69:8;;;:::i;:::-;1239:15:10;404:303:86;;-1:-1:-1;;404:303:86;;;3647:99:8;;404:303:86;;;3647:99:8;3721:14;404:303:86;;;;;;;;;;;;3721:14:8;3647:99;;;404:303:86;;;;;;;-1:-1:-1;404:303:86;;;;;2406:17:12;404:303:86;;;;;;;;;-1:-1:-1;;404:303:86;;;;;;;;;;;;2044:6:90;404:303:86;;;;;;;;;;;2406:17:12;404:303:86;;;;;;11601:17:12;;404:303:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2406:17:12;404:303:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;404:303:86;;;;;;;;;;;;-1:-1:-1;404:303:86;;;;;;;;;;;;;;2383:13:12;404:303:86;;;;;;;;;;;;-1:-1:-1;404:303:86;;;;;;;;;2383:13:12;404:303:86;;;;;;11601:17:12;;404:303:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2383:13:12;404:303:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;404:303:86;;;;;;;;;;;;;;-1:-1:-1;;;404:303:86;;;;;;;;3562:65:8;-1:-1:-1;;404:303:86;;;;;3562:65:8;;;404:303:86;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;404:303:86;;;;;3346:108:8;3426:4;;1713:19:18;:23;3387:66:8;;3346:108;3387:66;404:303:86;;;;;3436:17:8;3346:108;;3347:34;404:303:86;;;;;3365:16:8;3347:34;;404:303:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;438:26;404:303;;;;;;;;;;;;;;;;;;;;;2939:4:1;622:24:91;2939:4:1;:::i;:::-;1928:7:10;404:303:86;;;;;;;;;-1:-1:-1;;;404:303:86;2498:4:10;404:303:86;;;;;929:10:19;404:303:86;;2517:20:10;;404:303:86;;2517:20:10;404:303:86;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;404:303:86;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;404:303:86;;;;;;;;;4934:6:1;404:303:86;;;;2939:4:1;404:303:86;;;;4934:22:1;404:303:86;2939:4:1;:::i;:::-;622:24:91;2313:7;;;;;:::i;:::-;2356:10;;;;:::i;:::-;404:303:86;;;4934:6:1;404:303:86;;2939:4:1;404:303:86;;;;4934:22:1;404:303:86;2939:4:1;:::i;:::-;3661:7:90;;;;:::i;:::-;948:24;3703:7;;;;:::i;:::-;3745;1017:24;3745:7;;;:::i;:::-;3788:10;2356::91;3788::90;;:::i;:::-;3834;2356::91;3834::90;;:::i;:::-;3887;2356::91;3887::90;;:::i;:::-;404:303:86;;;2195:12:0;404:303:86;;;;;;;3959:43:90;3955:89;;404:303:86;;;2195:12:0;404:303:86;;;;;;;4058:36:90;4054:75;;404:303:86;;;;2195:12:0;404:303:86;;;;;;;4143:36:90;4139:75;;404:303:86;2195:12:0;404:303:86;;;;;;;;;2422:36:91;2418:75;;404:303:86;;;2418:75:91;404:303:86;-1:-1:-1;;;2467:26:91;;;;;404:303:86;;;-1:-1:-1;2467:26:91;4139:75:90;404:303:86;;;;;4011:33:90;;;;4188:26;;;;404:303:86;4188:26:90;4054:75;404:303:86;;;;;4011:33:90;;;;4103:26;;;;404:303:86;4103:26:90;3955:89;404:303:86;;-1:-1:-1;;;4011:33:90;;;;;404:303:86;;;;;4011:33:90;404:303:86;;;;;;;;;-1:-1:-1;;404:303:86;;;;;-1:-1:-1;;;;;404:303:86;;;;;;;;;;;;;;3856:9:12;404:303:86;;;;;;;;;;;;;;;;;;;;;;;530:2;516:16;404:303;;;;;;;;;;;;;;;;;;;;1928:7:10;404:303:86;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2333:6:9;-1:-1:-1;;;;;404:303:86;2324:4:9;2316:23;404:303:86;;;;;1312:66:6;404:303:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;404:303:86;;;-1:-1:-1;404:303:86;;;;-1:-1:-1;;;;;404:303:86;;;;;;;;;;;;;;;;;;;;;;;1963:87:9;404:303:86;4109:4:9;404:303:86;;;;;;;;;;;;:::i;:::-;1898:6:9;;;404:303:86;1889:4:9;1873:80;1889:4;;1881:23;;1873:80;:::i;:::-;1312:66:6;404:303:86;;1971:30:9;1963:87;:::i;:::-;986::61;;:::i;:::-;4109:4:9;:::i;404:303:86:-;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;404:303:86;;;;;;;;;;;2939:4:1;948:24:90;2939:4:1;:::i;:::-;8940:21:12;;404:303:86;;;1928:7:10;404:303:86;;;;;;;;;9068:22:12;9289:37;404:303:86;9068:22:12;404:303:86;9068:22:12;:::i;:::-;;404:303:86;;;;9236:9:12;404:303:86;;;;;;;;;;;;;;;;9289:37:12;404:303:86;;;;;;;;-1:-1:-1;;;404:303:86;;;;;;;;;;;;;;;;;-1:-1:-1;;;404:303:86;;;;;;;;;;-1:-1:-1;;;404:303:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;404:303:86;;;;;;;929:10:19;6358:38:12;404:303:86;929:10:19;6358:38:12;929:10:19;;404:303:86;;4439:11:12;404:303:86;;;;;;;;;;;;;;;;6358:38:12;:::i;:::-;929:10:19;;6358:38:12;:::i;404:303:86:-;;;;;;;;;-1:-1:-1;;404:303:86;;;;-1:-1:-1;;;;;404:303:86;;;;;;;;;;1963:87:9;1898:6;3569:5;1898:6;;404:303:86;1889:4:9;1873:80;1889:4;;1881:23;;1873:80;:::i;1963:87::-;986::61;;:::i;:::-;404:303:86;;;;:::i;:::-;;;;;;:::i;:::-;;;;-1:-1:-1;;404:303:86;;;:::i;:::-;;;;;;;3569:5:9;:::i;404:303:86:-;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;404:303:86;;;;;;;929:10:19;6463:23:1;404:303:86;;;6567:7:1;404:303:86;;6567:7:1;:::i;404:303:86:-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;404:303:86;;;;;;;;;;;;;;;;;;;;;;3523:2:12;404:303:86;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;404:303:86;;;;;;2939:4:1;404:303:86;5389:7:1;404:303:86;;;;4934:6:1;404:303:86;;;;4934:22:1;404:303:86;2939:4:1;:::i;:::-;5389:7;:::i;404:303:86:-;;;;;;;;;-1:-1:-1;;404:303:86;;;;;;;;;;;;4934:6:1;404:303:86;;;4934:22:1;404:303:86;;;;;;;;;;;;;;;-1:-1:-1;;404:303:86;;;;;;-1:-1:-1;;;;;404:303:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;4439:11:12;404:303:86;;;;;929:10:19;404:303:86;;;;;;11601:17:12;;;11581:37;;11577:243;;404:303:86;;5761:6:12;;;;;;:::i;11577:243::-;11642:26;;;404:303:86;;;;;;11769:25:12;404:303:86;;;5761:6:12;404:303:86;;929:10:19;11769:25:12;;:::i;:::-;11577:243;;;;;;;;404:303:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;665:11;404:303;661:1;404:303;;;661:1;404:303;;;;;661:37;404:303;3679:12:12;404:303:86;661:37;;:::i;:::-;404:303;;;;;;;-1:-1:-1;;;404:303:86;;;;;;;;;;;;;;;;;;;;;;747:25:61;404:303:86;;;-1:-1:-1;;;;;404:303:86;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;404:303:86;;;;;;;4943:6:12;404:303:86;;;;929:10:19;;4943:6:12;:::i;404:303:86:-;;;;;;;;;;;;;;;;;;2581:5:12;404:303:86;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;2581:5:12;404:303:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;404:303:86;;;;;;;;;;;;;;;;;-1:-1:-1;;;;1070:68:0;;;:108;;;;404:303:86;;;;;;;1070:108:0;-1:-1:-1;;;3137:58:1;;;-1:-1:-1;3137:98:1;;;;1070:108:0;;;;;3137:98:1;-1:-1:-1;;;1168:51:22;;-1:-1:-1;3137:98:1;;;404:303:86;;;;;;;;-1:-1:-1;;404:303:86;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;404:303:86;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;404:303:86;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;404:303:86;;;;;;:::o;:::-;-1:-1:-1;404:303:86;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;2317:166:0:-;;404:303:86;8409:50:26;2317:166:0;-1:-1:-1;404:303:86;;;;3438:6:1;404:303:86;;;;;;;;;;;;;;;;;;;;;;;;7999:23:1;7995:149;;2317:166:0;404:303:86;;2445:12:0;404:303:86;;;8409:50:26;:::i;:::-;;2317:166:0:o;7995:149:1:-;404:303:86;;;3438:6:1;404:303:86;;;;;;;;;;;;;;;;;;;;;;929:10:19;8093:40:1;;;;;;7995:149;;3768:103;404:303:86;-1:-1:-1;404:303:86;;3438:6:1;404:303:86;;;-1:-1:-1;404:303:86;929:10:19;-1:-1:-1;404:303:86;;;;;-1:-1:-1;404:303:86;;;4239:23:1;4235:412;;3768:103;;:::o;4235:412::-;4330:274;404:303:86;4278:358:1;929:10:19;;4533:49:1;404:303:86;929:10:19;2563:52:21;376:2;929:10:19;2563:52:21;:::i;:::-;4533:49:1;;:::i;:::-;404:303:86;;;4330:274:1;;;404:303:86;4330:274:1;;;404:303:86;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;404:303:86;;;;;;;;;;;;;;;:::i;:::-;;4330:274:1;;;;;;;;;:::i;:::-;404:303:86;;-1:-1:-1;;;4278:358:1;;404:303:86;;;4278:358:1;;;;:::i;:::-;;;;2572:171:0;;404:303:86;8730:53:26;2572:171:0;-1:-1:-1;404:303:86;;;;3438:6:1;404:303:86;;;;;;;;;;;;;;;;;;;;;;;;8400:149:1;;2572:171:0;404:303:86;;2702:12:0;404:303:86;;;8730:53:26;:::i;8400:149:1:-;404:303:86;;;3438:6:1;404:303:86;;;;;;;;;;;;;;;;;;;;929:10:19;8498:40:1;;;;;;8400:149;;404:303:86;;;;:::o;:::-;;;-1:-1:-1;;;404:303:86;;;;;;;;;;;;;;;;;-1:-1:-1;;;404:303:86;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;404:303:86;;;;;;;;;;;;;;;;;-1:-1:-1;;;404:303:86;;;;;;;2820:944:6;;;404:303:86;971:66:6;404:303:86;;3232:526:6;404:303:86;;;3330:17:6;;;;;:::i;:::-;2820:944::o;3232:526::-;404:303:86;;;-1:-1:-1;;;3383:63:6;;;;404:303:86;;;;-1:-1:-1;;;;;404:303:86;;;3383:63:6;404:303:86;3383:63:6;404:303:86;;3383:63:6;;-1:-1:-1;;3383:63:6;;;3232:526;-1:-1:-1;3379:302:6;;404:303:86;;-1:-1:-1;;;3610:56:6;;3383:63;3610:56;;971:66;;;;;;;404:303:86;971:66:6;404:303:86;;;971:66:6;-1:-1:-1;;;971:66:6;;;;;;3610:56;3379:302;3496:28;;;;;;;;971:66;;2171:17;;;:::i;:::-;2204:27;-1:-1:-1;2204:27:6;;404:303:86;;2523:15:6;;;;:28;;;3379:302;2519:123;;;3379:302;3232:526;;;;2820:944::o;2519:123::-;7318:69:18;404:303:86;-1:-1:-1;404:303:86;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;404:303:86;;;;7276:25:18;;;;;;;;;404:303:86;;;;;;;;;:::i;:::-;;;-1:-1:-1;404:303:86;;;;;;7318:69:18;:::i;:::-;;2519:123:6;;;;;;404:303:86;-1:-1:-1;404:303:86;;-1:-1:-1;7318:69:18;:::i;2523:28:6:-;;;;;;971:66;404:303:86;;-1:-1:-1;;;971:66:6;;3383:63;971:66;;;;;;;;;404:303:86;971:66:6;404:303:86;;;971:66:6;-1:-1:-1;;;971:66:6;;;;;;;3383:63;;;;;;;;;;;;;;;;:::i;:::-;;;971:66;;;;;;3383:63;;;;;;;;;1699:281;1713:19:18;;:23;404:303:86;;1312:66:6;404:303:86;;-1:-1:-1;;;;;;404:303:86;-1:-1:-1;;;;;404:303:86;;;;;;;;;1699:281:6:o;404:303:86:-;;;-1:-1:-1;;;404:303:86;;;;;;;;;;;;;;;;;-1:-1:-1;;;404:303:86;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;7793:788:12;-1:-1:-1;;;;;404:303:86;;;;7889:18:12;;404:303:86;;;7967:16:12;;;404:303:86;;;1928:7:10;404:303:86;;;;7905:1:12;404:303:86;;;8105:9:12;404:303:86;;;;;;8138:21:12;;;;404:303:86;;;;;8500:26:12;404:303:86;;;;;8105:9:12;404:303:86;;;;;;;;;;;;;;;;;;;;;;8500:26:12;7793:788::o;404:303:86:-;;;-1:-1:-1;;;404:303:86;;;;;;;;;;;;;;;;;-1:-1:-1;;;404:303:86;;;;;;;;;;-1:-1:-1;;;404:303:86;;;;;;;;;;;;;;;;;-1:-1:-1;;;404:303:86;;;;;;;;;;-1:-1:-1;;;404:303:86;;;;;;;;;;;;;;;;;-1:-1:-1;;;404:303:86;;;;;;;;;;-1:-1:-1;;;404:303:86;;;;;;;;;;;;;;;;;-1:-1:-1;;;404:303:86;;;;;;;10794:340:12;-1:-1:-1;;;;;404:303:86;;;;10895:19:12;;404:303:86;;;10973:21:12;;;404:303:86;;;11095:32:12;404:303:86;;10912:1:12;404:303:86;11044:11:12;404:303:86;;;10912:1:12;404:303:86;;10912:1:12;404:303:86;;;;;10912:1:12;404:303:86;;;;;;;11095:32:12;10794:340::o;404:303:86:-;;;-1:-1:-1;;;404:303:86;;;;;;;;;;;;;;;;;-1:-1:-1;;;404:303:86;;;;;;;;;;-1:-1:-1;;;404:303:86;;;;;;;;;;;;;;;;;-1:-1:-1;;;404:303:86;;;;;;;7682:628:18;;;;7886:418;;;404:303:86;;;7917:22:18;7913:286;;8212:17;;:::o;7913:286::-;1713:19;:23;404:303:86;;8212:17:18;:::o;404:303:86:-;;;-1:-1:-1;;;404:303:86;;;;;;;;;;;;;;;;;;;;7886:418:18;404:303:86;;;;-1:-1:-1;8991:21:18;:17;;9163:142;;;;;;;8987:379;404:303:86;;-1:-1:-1;;;9335:20:18;;404:303:86;;;9335:20:18;;;;;;:::i;1884:437:21:-;404:303:86;;;;;;1884:437:21;-1:-1:-1;;;;;404:303:86;;;;;2016:1:21;404:303:86;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;404:303:86;;;;;;;;;2041:15:21;;;404:303:86;;;;;;;2066:15:21;404:303:86;;;2066:15:21;404:303:86;;;;;;;;2091:128:21;2124:5;;;;;;2236:10;;311:18;;2293:21;1884:437;:::o;311:18::-;;404:303:86;;;;;;;311:18:21;;;2207:1;311:18;;;;;;404:303:86;311:18:21;404:303:86;;;311:18:21;;2131:3;2171:11;;2179:3;2171:11;;2162:21;;;;;;404:303:86;;;;;;;-1:-1:-1;;;2162:21:21;;404:303:86;;;;;2150:33:21;2207:1;404:303:86;2131:3:21;404:303:86;;;;-1:-1:-1;;404:303:86;;2096:26:21;;404:303:86;;11601:17:12;404:303:86;;;;;;2207:1:21;404:303:86;;;;11601:17:12;404:303:86;;;;;;2207:1:21;404:303:86;;;;;;-1:-1:-1;404:303:86;;;;;-1:-1:-1;404:303:86;;;;;;;;;-1:-1:-1;404:303:86;;-1:-1:-1;404:303:86;;;-1:-1:-1;404:303:86;:::o;2225:404:26:-;;;4362:12;;;-1:-1:-1;404:303:86;;;;;;;;;;;4362:24:26;2304:319;404:303:86;;;;;;;;;;;;;;;;4362:12:26;404:303:86;;;;;;;;;:::i;:::-;;;;;;;;;;;11601:17:12;;;404:303:86;;;;;;;;;;;;;;;;;;4362:12:26;2558:11;:::o;404:303:86:-;-1:-1:-1;;;404:303:86;;;;;;;;2304:319:26;-1:-1:-1;2600:12:26;-1:-1:-1;;2600:12:26:o;2797:1388::-;;3000:12;;;-1:-1:-1;;404:303:86;;;;;;;;;;;3034:15:26;;;;3030:1149;3034:15;;;-1:-1:-1;;11601:17:12;404:303:86;;;;;;;;;;;;;;;;;;;3516:26:26;;;3512:398;;3030:1149;404:303:86;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;3000:12:26;4114:11;:::o;404:303:86:-;-1:-1:-1;;;404:303:86;;;;;;;;3512:398:26;404:303:86;3582:22:26;3704:26;3582:22;;;:::i;:::-;404:303:86;;;;;;3704:26:26;;;;;:::i;404:303:86:-;;;;;;;;;;;;3512:398:26;;;;;404:303:86;-1:-1:-1;;;404:303:86;;;;;;;;;-1:-1:-1;;;404:303:86;;;;;;;;3030:1149:26;4156:12;;;;;:::o;2016:143:61:-;2081:8;404:303:86;;;-1:-1:-1;;;2081:40:61;;2110:10;2081:40;;;404:303:86;;2081:40:61;;404:303:86;;;;;;-1:-1:-1;;;;;404:303:86;2081:40:61;;;;;;;-1:-1:-1;2081:40:61;;;2016:143;2080:41;;2076:76;;2016:143::o;2076:76::-;404:303:86;;-1:-1:-1;;;2130:22:61;;2081:40;;2130:22;2081:40;;;;;;;;;;;;;;;:::i;:::-;;;404:303:86;;;;;;;;;;;;;2081:40:61;;;;;;;-1:-1:-1;2081:40:61;;;404:303:86;;971:66:6;-1:-1:-1;971:66:6;;;;;404:303:86;;;;:::o;:::-;;;-1:-1:-1;;;404:303:86;;;;;;;;;;;;;;;;;-1:-1:-1;;;404:303:86;;;;;;"
    },
    "gasEstimates": {
      "creation": {
        "codeDepositCost": "1869200",
        "executionCost": "infinite",
        "totalCost": "infinite"
      },
      "external": {
        "DEFAULT_ADMIN_ROLE()": "756",
        "allowance(address,address)": "3192",
        "approve(address,uint256)": "24391",
        "balanceOf(address)": "2775",
        "burn(address,uint256)": "infinite",
        "changeGovernor(address)": "infinite",
        "decimals()": "355",
        "decreaseAllowance(address,uint256)": "27216",
        "getRoleAdmin(bytes32)": "2488",
        "getRoleMember(bytes32,uint256)": "5090",
        "getRoleMemberCount(bytes32)": "2993",
        "governor()": "2372",
        "grantRole(bytes32,address)": "infinite",
        "hasRole(bytes32,address)": "2994",
        "increaseAllowance(address,uint256)": "26884",
        "initialize(string,string,address,address)": "infinite",
        "initializeMock()": "22618",
        "mint(address,uint256)": "infinite",
        "name()": "infinite",
        "newVariable()": "2730",
        "pause()": "infinite",
        "paused()": "2632",
        "proxiableUUID()": "infinite",
        "renounceRole(bytes32,address)": "72144",
        "revokeRole(bytes32,address)": "infinite",
        "supportsInterface(bytes4)": "351",
        "symbol()": "infinite",
        "totalSupply()": "4574",
        "transfer(address,uint256)": "53493",
        "transferAllRoles(address)": "infinite",
        "transferFrom(address,address,uint256)": "79483",
        "upgradeTo(address)": "infinite",
        "upgradeToAndCall(address,bytes)": "infinite"
      }
    },
    "methodIdentifiers": {
      "DEFAULT_ADMIN_ROLE()": "a217fddf",
      "allowance(address,address)": "dd62ed3e",
      "approve(address,uint256)": "095ea7b3",
      "balanceOf(address)": "70a08231",
      "burn(address,uint256)": "9dc29fac",
      "changeGovernor(address)": "e4c0aaf4",
      "decimals()": "313ce567",
      "decreaseAllowance(address,uint256)": "a457c2d7",
      "getRoleAdmin(bytes32)": "248a9ca3",
      "getRoleMember(bytes32,uint256)": "9010d07c",
      "getRoleMemberCount(bytes32)": "ca15c873",
      "governor()": "0c340a24",
      "grantRole(bytes32,address)": "2f2ff15d",
      "hasRole(bytes32,address)": "91d14854",
      "increaseAllowance(address,uint256)": "39509351",
      "initialize(string,string,address,address)": "8f15b414",
      "initializeMock()": "5e2a6065",
      "mint(address,uint256)": "40c10f19",
      "name()": "06fdde03",
      "newVariable()": "8d7a72f3",
      "pause()": "8456cb59",
      "paused()": "5c975abb",
      "proxiableUUID()": "52d1902d",
      "renounceRole(bytes32,address)": "36568abe",
      "revokeRole(bytes32,address)": "d547741f",
      "supportsInterface(bytes4)": "01ffc9a7",
      "symbol()": "95d89b41",
      "totalSupply()": "18160ddd",
      "transfer(address,uint256)": "a9059cbb",
      "transferAllRoles(address)": "83d2230d",
      "transferFrom(address,address,uint256)": "23b872dd",
      "upgradeTo(address)": "3659cfe6",
      "upgradeToAndCall(address,bytes)": "4f1ef286"
    }
  },
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidValue\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotAuthorizedChanger\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"NotUniqueRole\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IGovernor\",\"name\":\"newGovernor_\",\"type\":\"address\"}],\"name\":\"changeGovernor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"governor\",\"outputs\":[{\"internalType\":\"contract IGovernor\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"admin_\",\"type\":\"address\"},{\"internalType\":\"contract IGovernor\",\"name\":\"governor_\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initializeMock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"newVariable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"transferAllRoles\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Only for upgradeability testing purposes.\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(address,uint256)\":{\"details\":\"Burns a specific `amount` of tokens for `to`. * See {ERC20-_burn}. Requirements: - the caller must have the `BURNER_ROLE`.\"},\"changeGovernor(address)\":{\"params\":{\"newGovernor_\":\"New governor address\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"initialize(string,string,address,address)\":{\"details\":\"Grants `PAUSER_ROLE` to `admin` address. See {MocRC20-constructor}.\"},\"mint(address,uint256)\":{\"details\":\"Creates `amount` new tokens for `to`. See {ERC20-_mint}. Requirements: - the caller must have the `MINTER_ROLE`.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"pause()\":{\"details\":\"Pauses the contract. See {ERC20PausableUpgradeable-_pause}. Requirements: - the caller must have the `PAUSER_ROLE`.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferAllRoles(address)\":{\"details\":\"Grants all `roles` to `account` while sender renounces to all ``role``. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. - no one else must have any other role May emit a {RoleGranted x4, RoleRevoked x4} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"upgradeTo(address)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"title\":\"MocTcMock\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"changeGovernor(address)\":{\"notice\":\"Change the contract's governor. Should be called through the old governance system\"},\"governor()\":{\"notice\":\"The address of the contract which governs this one\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/mocks/upgradeability/MocTCUpgradeMock.sol\":\"MocTcMock\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul[j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTOtfDnca[r]Iulc]jmul[jul]VcTOculjmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (access/AccessControlEnumerable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IAccessControlEnumerableUpgradeable.sol\\\";\\nimport \\\"./AccessControlUpgradeable.sol\\\";\\nimport \\\"../utils/structs/EnumerableSetUpgradeable.sol\\\";\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Extension of {AccessControl} that allows enumerating the members of each role.\\n */\\nabstract contract AccessControlEnumerableUpgradeable is Initializable, IAccessControlEnumerableUpgradeable, AccessControlUpgradeable {\\n    function __AccessControlEnumerable_init() internal onlyInitializing {\\n    }\\n\\n    function __AccessControlEnumerable_init_unchained() internal onlyInitializing {\\n    }\\n    using EnumerableSetUpgradeable for EnumerableSetUpgradeable.AddressSet;\\n\\n    mapping(bytes32 => EnumerableSetUpgradeable.AddressSet) private _roleMembers;\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IAccessControlEnumerableUpgradeable).interfaceId || super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev Returns one of the accounts that have `role`. `index` must be a\\n     * value between 0 and {getRoleMemberCount}, non-inclusive.\\n     *\\n     * Role bearers are not sorted in any particular way, and their ordering may\\n     * change at any point.\\n     *\\n     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\\n     * you perform all queries on the same block. See the following\\n     * https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\\n     * for more information.\\n     */\\n    function getRoleMember(bytes32 role, uint256 index) public view virtual override returns (address) {\\n        return _roleMembers[role].at(index);\\n    }\\n\\n    /**\\n     * @dev Returns the number of accounts that have `role`. Can be used\\n     * together with {getRoleMember} to enumerate all bearers of a role.\\n     */\\n    function getRoleMemberCount(bytes32 role) public view virtual override returns (uint256) {\\n        return _roleMembers[role].length();\\n    }\\n\\n    /**\\n     * @dev Overload {_grantRole} to track enumerable memberships\\n     */\\n    function _grantRole(bytes32 role, address account) internal virtual override {\\n        super._grantRole(role, account);\\n        _roleMembers[role].add(account);\\n    }\\n\\n    /**\\n     * @dev Overload {_revokeRole} to track enumerable memberships\\n     */\\n    function _revokeRole(bytes32 role, address account) internal virtual override {\\n        super._revokeRole(role, account);\\n        _roleMembers[role].remove(account);\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0xc2dfd6ba9449f61b6b03b262182faf302f093a8c05dd10792aeecb4ed1663c0c\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/AccessControl.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IAccessControlUpgradeable.sol\\\";\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../utils/StringsUpgradeable.sol\\\";\\nimport \\\"../utils/introspection/ERC165Upgradeable.sol\\\";\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module that allows children to implement role-based access\\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\\n * members except through off-chain means by accessing the contract event logs. Some\\n * applications may benefit from on-chain enumerability, for those cases see\\n * {AccessControlEnumerable}.\\n *\\n * Roles are referred to by their `bytes32` identifier. These should be exposed\\n * in the external API and be unique. The best way to achieve this is by\\n * using `public constant` hash digests:\\n *\\n * ```solidity\\n * bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\");\\n * ```\\n *\\n * Roles can be used to represent a set of permissions. To restrict access to a\\n * function call, use {hasRole}:\\n *\\n * ```solidity\\n * function foo() public {\\n *     require(hasRole(MY_ROLE, msg.sender));\\n *     ...\\n * }\\n * ```\\n *\\n * Roles can be granted and revoked dynamically via the {grantRole} and\\n * {revokeRole} functions. Each role has an associated admin role, and only\\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\\n *\\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\\n * that only accounts with this role will be able to grant or revoke other\\n * roles. More complex role relationships can be created by using\\n * {_setRoleAdmin}.\\n *\\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\\n * grant and revoke this role. Extra precautions should be taken to secure\\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\\n * to enforce additional security measures for this role.\\n */\\nabstract contract AccessControlUpgradeable is Initializable, ContextUpgradeable, IAccessControlUpgradeable, ERC165Upgradeable {\\n    function __AccessControl_init() internal onlyInitializing {\\n    }\\n\\n    function __AccessControl_init_unchained() internal onlyInitializing {\\n    }\\n    struct RoleData {\\n        mapping(address => bool) members;\\n        bytes32 adminRole;\\n    }\\n\\n    mapping(bytes32 => RoleData) private _roles;\\n\\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\\n\\n    /**\\n     * @dev Modifier that checks that an account has a specific role. Reverts\\n     * with a standardized message including the required role.\\n     *\\n     * The format of the revert reason is given by the following regular expression:\\n     *\\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\\n     *\\n     * _Available since v4.1._\\n     */\\n    modifier onlyRole(bytes32 role) {\\n        _checkRole(role);\\n        _;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IAccessControlUpgradeable).interfaceId || super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) public view virtual override returns (bool) {\\n        return _roles[role].members[account];\\n    }\\n\\n    /**\\n     * @dev Revert with a standard message if `_msgSender()` is missing `role`.\\n     * Overriding this function changes the behavior of the {onlyRole} modifier.\\n     *\\n     * Format of the revert message is described in {_checkRole}.\\n     *\\n     * _Available since v4.6._\\n     */\\n    function _checkRole(bytes32 role) internal view virtual {\\n        _checkRole(role, _msgSender());\\n    }\\n\\n    /**\\n     * @dev Revert with a standard message if `account` is missing `role`.\\n     *\\n     * The format of the revert reason is given by the following regular expression:\\n     *\\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\\n     */\\n    function _checkRole(bytes32 role, address account) internal view virtual {\\n        if (!hasRole(role, account)) {\\n            revert(\\n                string(\\n                    abi.encodePacked(\\n                        \\\"AccessControl: account \\\",\\n                        StringsUpgradeable.toHexString(account),\\n                        \\\" is missing role \\\",\\n                        StringsUpgradeable.toHexString(uint256(role), 32)\\n                    )\\n                )\\n            );\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {\\n        return _roles[role].adminRole;\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     *\\n     * May emit a {RoleGranted} event.\\n     */\\n    function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\\n        _grantRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     *\\n     * May emit a {RoleRevoked} event.\\n     */\\n    function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\\n        _revokeRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `account`.\\n     *\\n     * May emit a {RoleRevoked} event.\\n     */\\n    function renounceRole(bytes32 role, address account) public virtual override {\\n        require(account == _msgSender(), \\\"AccessControl: can only renounce roles for self\\\");\\n\\n        _revokeRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event. Note that unlike {grantRole}, this function doesn't perform any\\n     * checks on the calling account.\\n     *\\n     * May emit a {RoleGranted} event.\\n     *\\n     * [WARNING]\\n     * ====\\n     * This function should only be called from the constructor when setting\\n     * up the initial roles for the system.\\n     *\\n     * Using this function in any other way is effectively circumventing the admin\\n     * system imposed by {AccessControl}.\\n     * ====\\n     *\\n     * NOTE: This function is deprecated in favor of {_grantRole}.\\n     */\\n    function _setupRole(bytes32 role, address account) internal virtual {\\n        _grantRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Sets `adminRole` as ``role``'s admin role.\\n     *\\n     * Emits a {RoleAdminChanged} event.\\n     */\\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\\n        bytes32 previousAdminRole = getRoleAdmin(role);\\n        _roles[role].adminRole = adminRole;\\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * Internal function without access restriction.\\n     *\\n     * May emit a {RoleGranted} event.\\n     */\\n    function _grantRole(bytes32 role, address account) internal virtual {\\n        if (!hasRole(role, account)) {\\n            _roles[role].members[account] = true;\\n            emit RoleGranted(role, account, _msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * Internal function without access restriction.\\n     *\\n     * May emit a {RoleRevoked} event.\\n     */\\n    function _revokeRole(bytes32 role, address account) internal virtual {\\n        if (hasRole(role, account)) {\\n            _roles[role].members[account] = false;\\n            emit RoleRevoked(role, account, _msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0xfeefb24d068524440e1ba885efdf105d91f83504af3c2d745ffacc4595396831\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/access/IAccessControlEnumerableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControlEnumerable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IAccessControlUpgradeable.sol\\\";\\n\\n/**\\n * @dev External interface of AccessControlEnumerable declared to support ERC165 detection.\\n */\\ninterface IAccessControlEnumerableUpgradeable is IAccessControlUpgradeable {\\n    /**\\n     * @dev Returns one of the accounts that have `role`. `index` must be a\\n     * value between 0 and {getRoleMemberCount}, non-inclusive.\\n     *\\n     * Role bearers are not sorted in any particular way, and their ordering may\\n     * change at any point.\\n     *\\n     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\\n     * you perform all queries on the same block. See the following\\n     * https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\\n     * for more information.\\n     */\\n    function getRoleMember(bytes32 role, uint256 index) external view returns (address);\\n\\n    /**\\n     * @dev Returns the number of accounts that have `role`. Can be used\\n     * together with {getRoleMember} to enumerate all bearers of a role.\\n     */\\n    function getRoleMemberCount(bytes32 role) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x7acbc538aad6eb4614e26612a8c5c0149bb8808db95e2638d245a8365f63e572\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControl.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev External interface of AccessControl declared to support ERC165 detection.\\n */\\ninterface IAccessControlUpgradeable {\\n    /**\\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\\n     *\\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\\n     * {RoleAdminChanged} not being emitted signaling this.\\n     *\\n     * _Available since v3.1._\\n     */\\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\\n\\n    /**\\n     * @dev Emitted when `account` is granted `role`.\\n     *\\n     * `sender` is the account that originated the contract call, an admin role\\n     * bearer except when using {AccessControl-_setupRole}.\\n     */\\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Emitted when `account` is revoked `role`.\\n     *\\n     * `sender` is the account that originated the contract call:\\n     *   - if using `revokeRole`, it is the admin role bearer\\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\\n     */\\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) external view returns (bool);\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function grantRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function revokeRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `account`.\\n     */\\n    function renounceRole(bytes32 role, address account) external;\\n}\\n\",\"keccak256\":\"0xb8f5302f12138c5561362e88a78d061573e6298b7a1a5afe84a1e2c8d4d5aeaa\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC1967.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\\n *\\n * _Available since v4.8.3._\\n */\\ninterface IERC1967Upgradeable {\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Emitted when the beacon is changed.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n}\\n\",\"keccak256\":\"0x47d6e06872b12e72c79d1b5eb55842f860b5fb1207b2317c2358d2766b950a7b\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822ProxiableUpgradeable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/ERC1967/ERC1967Upgrade.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../beacon/IBeaconUpgradeable.sol\\\";\\nimport \\\"../../interfaces/IERC1967Upgradeable.sol\\\";\\nimport \\\"../../interfaces/draft-IERC1822Upgradeable.sol\\\";\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\nimport \\\"../../utils/StorageSlotUpgradeable.sol\\\";\\nimport \\\"../utils/Initializable.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n *\\n * _Available since v4.1._\\n */\\nabstract contract ERC1967UpgradeUpgradeable is Initializable, IERC1967Upgradeable {\\n    function __ERC1967Upgrade_init() internal onlyInitializing {\\n    }\\n\\n    function __ERC1967Upgrade_init_unchained() internal onlyInitializing {\\n    }\\n    // This is the keccak-256 hash of \\\"eip1967.proxy.rollback\\\" subtracted by 1\\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function _getImplementation() internal view returns (address) {\\n        return StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        require(AddressUpgradeable.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n        StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeTo(address newImplementation) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCall(address newImplementation, bytes memory data, bool forceCall) internal {\\n        _upgradeTo(newImplementation);\\n        if (data.length > 0 || forceCall) {\\n            AddressUpgradeable.functionDelegateCall(newImplementation, data);\\n        }\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data, bool forceCall) internal {\\n        // Upgrades from old implementations will perform a rollback test. This test requires the new\\n        // implementation to upgrade back to the old, non-ERC1822 compliant, implementation. Removing\\n        // this special case will break upgrade paths from old UUPS implementation to new ones.\\n        if (StorageSlotUpgradeable.getBooleanSlot(_ROLLBACK_SLOT).value) {\\n            _setImplementation(newImplementation);\\n        } else {\\n            try IERC1822ProxiableUpgradeable(newImplementation).proxiableUUID() returns (bytes32 slot) {\\n                require(slot == _IMPLEMENTATION_SLOT, \\\"ERC1967Upgrade: unsupported proxiableUUID\\\");\\n            } catch {\\n                revert(\\\"ERC1967Upgrade: new implementation is not UUPS\\\");\\n            }\\n            _upgradeToAndCall(newImplementation, data, forceCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Returns the current admin.\\n     */\\n    function _getAdmin() internal view returns (address) {\\n        return StorageSlotUpgradeable.getAddressSlot(_ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        require(newAdmin != address(0), \\\"ERC1967: new admin is the zero address\\\");\\n        StorageSlotUpgradeable.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {AdminChanged} event.\\n     */\\n    function _changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(_getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\\n     */\\n    bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function _getBeacon() internal view returns (address) {\\n        return StorageSlotUpgradeable.getAddressSlot(_BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        require(AddressUpgradeable.isContract(newBeacon), \\\"ERC1967: new beacon is not a contract\\\");\\n        require(\\n            AddressUpgradeable.isContract(IBeaconUpgradeable(newBeacon).implementation()),\\n            \\\"ERC1967: beacon implementation is not a contract\\\"\\n        );\\n        StorageSlotUpgradeable.getAddressSlot(_BEACON_SLOT).value = newBeacon;\\n    }\\n\\n    /**\\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\\n     *\\n     * Emits a {BeaconUpgraded} event.\\n     */\\n    function _upgradeBeaconToAndCall(address newBeacon, bytes memory data, bool forceCall) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n        if (data.length > 0 || forceCall) {\\n            AddressUpgradeable.functionDelegateCall(IBeaconUpgradeable(newBeacon).implementation(), data);\\n        }\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x584ebdf9c1118a7c773f98788e3f3ede01982bdf8932aa06f5acc7d54876e161\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeaconUpgradeable {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {BeaconProxy} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized != type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/UUPSUpgradeable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../interfaces/draft-IERC1822Upgradeable.sol\\\";\\nimport \\\"../ERC1967/ERC1967UpgradeUpgradeable.sol\\\";\\nimport \\\"./Initializable.sol\\\";\\n\\n/**\\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\\n *\\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\\n * `UUPSUpgradeable` with a custom implementation of upgrades.\\n *\\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\\n *\\n * _Available since v4.1._\\n */\\nabstract contract UUPSUpgradeable is Initializable, IERC1822ProxiableUpgradeable, ERC1967UpgradeUpgradeable {\\n    function __UUPSUpgradeable_init() internal onlyInitializing {\\n    }\\n\\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\\n    }\\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable state-variable-assignment\\n    address private immutable __self = address(this);\\n\\n    /**\\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\\n     * fail.\\n     */\\n    modifier onlyProxy() {\\n        require(address(this) != __self, \\\"Function must be called through delegatecall\\\");\\n        require(_getImplementation() == __self, \\\"Function must be called through active proxy\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\\n     * callable on the implementing contract but not through proxies.\\n     */\\n    modifier notDelegated() {\\n        require(address(this) == __self, \\\"UUPSUpgradeable: must not be called through delegatecall\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\\n     */\\n    function proxiableUUID() external view virtual override notDelegated returns (bytes32) {\\n        return _IMPLEMENTATION_SLOT;\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy to `newImplementation`.\\n     *\\n     * Calls {_authorizeUpgrade}.\\n     *\\n     * Emits an {Upgraded} event.\\n     *\\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\\n     */\\n    function upgradeTo(address newImplementation) public virtual onlyProxy {\\n        _authorizeUpgrade(newImplementation);\\n        _upgradeToAndCallUUPS(newImplementation, new bytes(0), false);\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\\n     * encoded in `data`.\\n     *\\n     * Calls {_authorizeUpgrade}.\\n     *\\n     * Emits an {Upgraded} event.\\n     *\\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\\n        _authorizeUpgrade(newImplementation);\\n        _upgradeToAndCallUUPS(newImplementation, data, true);\\n    }\\n\\n    /**\\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\\n     * {upgradeTo} and {upgradeToAndCall}.\\n     *\\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\\n     *\\n     * ```solidity\\n     * function _authorizeUpgrade(address) internal override onlyOwner {}\\n     * ```\\n     */\\n    function _authorizeUpgrade(address newImplementation) internal virtual;\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0xb607cb94c27e89750f5ae2ccebcb94e654e926f6125f4fd4c6262c89875118ad\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which allows children to implement an emergency stop\\n * mechanism that can be triggered by an authorized account.\\n *\\n * This module is used through inheritance. It will make available the\\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\\n * the functions of your contract. Note that they will not be pausable by\\n * simply including this module, only once the modifiers are put in place.\\n */\\nabstract contract PausableUpgradeable is Initializable, ContextUpgradeable {\\n    /**\\n     * @dev Emitted when the pause is triggered by `account`.\\n     */\\n    event Paused(address account);\\n\\n    /**\\n     * @dev Emitted when the pause is lifted by `account`.\\n     */\\n    event Unpaused(address account);\\n\\n    bool private _paused;\\n\\n    /**\\n     * @dev Initializes the contract in unpaused state.\\n     */\\n    function __Pausable_init() internal onlyInitializing {\\n        __Pausable_init_unchained();\\n    }\\n\\n    function __Pausable_init_unchained() internal onlyInitializing {\\n        _paused = false;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is not paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    modifier whenNotPaused() {\\n        _requireNotPaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    modifier whenPaused() {\\n        _requirePaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns true if the contract is paused, and false otherwise.\\n     */\\n    function paused() public view virtual returns (bool) {\\n        return _paused;\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is paused.\\n     */\\n    function _requireNotPaused() internal view virtual {\\n        require(!paused(), \\\"Pausable: paused\\\");\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is not paused.\\n     */\\n    function _requirePaused() internal view virtual {\\n        require(paused(), \\\"Pausable: not paused\\\");\\n    }\\n\\n    /**\\n     * @dev Triggers stopped state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    function _pause() internal virtual whenNotPaused {\\n        _paused = true;\\n        emit Paused(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns to normal state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    function _unpause() internal virtual whenPaused {\\n        _paused = false;\\n        emit Unpaused(_msgSender());\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x40c636b4572ff5f1dc50cf22097e93c0723ee14eff87e99ac2b02636eeca1250\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20Upgradeable.sol\\\";\\nimport \\\"./extensions/IERC20MetadataUpgradeable.sol\\\";\\nimport \\\"../../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20Upgradeable, IERC20MetadataUpgradeable {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {\\n        __ERC20_init_unchained(name_, symbol_);\\n    }\\n\\n    function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, amount);\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        uint256 currentAllowance = allowance(owner, spender);\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     */\\n    function _transfer(address from, address to, uint256 amount) internal virtual {\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, amount);\\n\\n        uint256 fromBalance = _balances[from];\\n        require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[from] = fromBalance - amount;\\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\\n            // decrementing then incrementing.\\n            _balances[to] += amount;\\n        }\\n\\n        emit Transfer(from, to, amount);\\n\\n        _afterTokenTransfer(from, to, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        unchecked {\\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\\n            _balances[account] += amount;\\n        }\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\\n            _totalSupply -= amount;\\n        }\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\n     *\\n     * Does not update the allowance amount in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Might emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - amount);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual {}\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[45] private __gap;\\n}\\n\",\"keccak256\":\"0xd14a627157b9a411d2410713e5dd3a377e9064bd5c194a90748bbf27ea625784\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20Upgradeable {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/extensions/ERC20Pausable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../ERC20Upgradeable.sol\\\";\\nimport \\\"../../../security/PausableUpgradeable.sol\\\";\\nimport \\\"../../../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev ERC20 token with pausable token transfers, minting and burning.\\n *\\n * Useful for scenarios such as preventing trades until the end of an evaluation\\n * period, or having an emergency switch for freezing all token transfers in the\\n * event of a large bug.\\n *\\n * IMPORTANT: This contract does not include public pause and unpause functions. In\\n * addition to inheriting this contract, you must define both functions, invoking the\\n * {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate\\n * access control, e.g. using {AccessControl} or {Ownable}. Not doing so will\\n * make the contract unpausable.\\n */\\nabstract contract ERC20PausableUpgradeable is Initializable, ERC20Upgradeable, PausableUpgradeable {\\n    function __ERC20Pausable_init() internal onlyInitializing {\\n        __Pausable_init_unchained();\\n    }\\n\\n    function __ERC20Pausable_init_unchained() internal onlyInitializing {\\n    }\\n    /**\\n     * @dev See {ERC20-_beforeTokenTransfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - the contract must not be paused.\\n     */\\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual override {\\n        super._beforeTokenTransfer(from, to, amount);\\n\\n        require(!paused(), \\\"ERC20Pausable: token transfer while paused\\\");\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0xf0bd7f71ffae5f0addd375e8511fbf2ad8ca0c9b2606c32d92bdda7d76a7a81c\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20Upgradeable.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20MetadataUpgradeable is IERC20Upgradeable {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/extensions/IERC20Permit.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n */\\ninterface IERC20PermitUpgradeable {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\\n     * given ``owner``'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0xd60f939a3ca0199014d079b4dd66aa757954334947d81eb5c1d35d7a83061ab3\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20Upgradeable.sol\\\";\\nimport \\\"../extensions/IERC20PermitUpgradeable.sol\\\";\\nimport \\\"../../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20Upgradeable {\\n    using AddressUpgradeable for address;\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransfer(IERC20Upgradeable token, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransferFrom(IERC20Upgradeable token, address from, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(IERC20Upgradeable token, address spender, uint256 value) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    /**\\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeIncreaseAllowance(IERC20Upgradeable token, address spender, uint256 value) internal {\\n        uint256 oldAllowance = token.allowance(address(this), spender);\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance + value));\\n    }\\n\\n    /**\\n     * @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeDecreaseAllowance(IERC20Upgradeable token, address spender, uint256 value) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance - value));\\n        }\\n    }\\n\\n    /**\\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful. Compatible with tokens that require the approval to be set to\\n     * 0 before setting it to a non-zero value.\\n     */\\n    function forceApprove(IERC20Upgradeable token, address spender, uint256 value) internal {\\n        bytes memory approvalCall = abi.encodeWithSelector(token.approve.selector, spender, value);\\n\\n        if (!_callOptionalReturnBool(token, approvalCall)) {\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, 0));\\n            _callOptionalReturn(token, approvalCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\\n     * Revert on invalid signature.\\n     */\\n    function safePermit(\\n        IERC20PermitUpgradeable token,\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal {\\n        uint256 nonceBefore = token.nonces(owner);\\n        token.permit(owner, spender, value, deadline, v, r, s);\\n        uint256 nonceAfter = token.nonces(owner);\\n        require(nonceAfter == nonceBefore + 1, \\\"SafeERC20: permit did not succeed\\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20Upgradeable token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        require(returndata.length == 0 || abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     *\\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\\n     */\\n    function _callOptionalReturnBool(IERC20Upgradeable token, bytes memory data) private returns (bool) {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\\n        // and not revert is the subcall reverts.\\n\\n        (bool success, bytes memory returndata) = address(token).call(data);\\n        return\\n            success && (returndata.length == 0 || abi.decode(returndata, (bool))) && AddressUpgradeable.isContract(address(token));\\n    }\\n}\\n\",\"keccak256\":\"0x4dae161227d332808312ee2caf6384929321b83c16cc89b5642985fbec6b814c\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\\n * _Available since v4.9 for `string`, `bytes`._\\n */\\nlibrary StorageSlotUpgradeable {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x07ac95acad040f1fb1f6120dd0aa5f702db69446e95f82613721879d30de0908\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./math/MathUpgradeable.sol\\\";\\nimport \\\"./math/SignedMathUpgradeable.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary StringsUpgradeable {\\n    bytes16 private constant _SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = MathUpgradeable.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(int256 value) internal pure returns (string memory) {\\n        return string(abi.encodePacked(value < 0 ? \\\"-\\\" : \\\"\\\", toString(SignedMathUpgradeable.abs(value))));\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, MathUpgradeable.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n\\n    /**\\n     * @dev Returns true if the two strings are equal.\\n     */\\n    function equal(string memory a, string memory b) internal pure returns (bool) {\\n        return keccak256(bytes(a)) == keccak256(bytes(b));\\n    }\\n}\\n\",\"keccak256\":\"0xb96dc79b65b7c37937919dcdb356a969ce0aa2e8338322bf4dc027a3c9c9a7eb\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165Upgradeable.sol\\\";\\nimport \\\"../../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165Upgradeable is Initializable, IERC165Upgradeable {\\n    function __ERC165_init() internal onlyInitializing {\\n    }\\n\\n    function __ERC165_init_unchained() internal onlyInitializing {\\n    }\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165Upgradeable).interfaceId;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165Upgradeable {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary MathUpgradeable {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\\n                // The surrounding unchecked block does not change this fact.\\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1, \\\"Math: mulDiv overflow\\\");\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10 ** 64) {\\n                value /= 10 ** 64;\\n                result += 64;\\n            }\\n            if (value >= 10 ** 32) {\\n                value /= 10 ** 32;\\n                result += 32;\\n            }\\n            if (value >= 10 ** 16) {\\n                value /= 10 ** 16;\\n                result += 16;\\n            }\\n            if (value >= 10 ** 8) {\\n                value /= 10 ** 8;\\n                result += 8;\\n            }\\n            if (value >= 10 ** 4) {\\n                value /= 10 ** 4;\\n                result += 4;\\n            }\\n            if (value >= 10 ** 2) {\\n                value /= 10 ** 2;\\n                result += 2;\\n            }\\n            if (value >= 10 ** 1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard signed math utilities missing in the Solidity language.\\n */\\nlibrary SignedMathUpgradeable {\\n    /**\\n     * @dev Returns the largest of two signed numbers.\\n     */\\n    function max(int256 a, int256 b) internal pure returns (int256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two signed numbers.\\n     */\\n    function min(int256 a, int256 b) internal pure returns (int256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two signed numbers without overflow.\\n     * The result is rounded towards zero.\\n     */\\n    function average(int256 a, int256 b) internal pure returns (int256) {\\n        // Formula from the book \\\"Hacker's Delight\\\"\\n        int256 x = (a & b) + ((a ^ b) >> 1);\\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\\n    }\\n\\n    /**\\n     * @dev Returns the absolute unsigned value of a signed value.\\n     */\\n    function abs(int256 n) internal pure returns (uint256) {\\n        unchecked {\\n            // must be unchecked in order to support `n = type(int256).min`\\n            return uint256(n >= 0 ? n : -n);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x88f6b7bba3ee33eeb741f9a0f5bc98b6e6e352d0fe4905377bb328590f84095a\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/structs/EnumerableSet.sol)\\n// This file was procedurally generated from scripts/generate/templates/EnumerableSet.js.\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for managing\\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\\n * types.\\n *\\n * Sets have the following properties:\\n *\\n * - Elements are added, removed, and checked for existence in constant time\\n * (O(1)).\\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\\n *\\n * ```solidity\\n * contract Example {\\n *     // Add the library methods\\n *     using EnumerableSet for EnumerableSet.AddressSet;\\n *\\n *     // Declare a set state variable\\n *     EnumerableSet.AddressSet private mySet;\\n * }\\n * ```\\n *\\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\\n * and `uint256` (`UintSet`) are supported.\\n *\\n * [WARNING]\\n * ====\\n * Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\\n * unusable.\\n * See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\\n *\\n * In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\\n * array of EnumerableSet.\\n * ====\\n */\\nlibrary EnumerableSetUpgradeable {\\n    // To implement this library for multiple types with as little code\\n    // repetition as possible, we write it in terms of a generic Set type with\\n    // bytes32 values.\\n    // The Set implementation uses private functions, and user-facing\\n    // implementations (such as AddressSet) are just wrappers around the\\n    // underlying Set.\\n    // This means that we can only create new EnumerableSets for types that fit\\n    // in bytes32.\\n\\n    struct Set {\\n        // Storage of set values\\n        bytes32[] _values;\\n        // Position of the value in the `values` array, plus 1 because index 0\\n        // means a value is not in the set.\\n        mapping(bytes32 => uint256) _indexes;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function _add(Set storage set, bytes32 value) private returns (bool) {\\n        if (!_contains(set, value)) {\\n            set._values.push(value);\\n            // The value is stored at length-1, but we add 1 to all indexes\\n            // and use 0 as a sentinel value\\n            set._indexes[value] = set._values.length;\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\\n        // We read and store the value's index to prevent multiple reads from the same storage slot\\n        uint256 valueIndex = set._indexes[value];\\n\\n        if (valueIndex != 0) {\\n            // Equivalent to contains(set, value)\\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\\n            // This modifies the order of the array, as noted in {at}.\\n\\n            uint256 toDeleteIndex = valueIndex - 1;\\n            uint256 lastIndex = set._values.length - 1;\\n\\n            if (lastIndex != toDeleteIndex) {\\n                bytes32 lastValue = set._values[lastIndex];\\n\\n                // Move the last value to the index where the value to delete is\\n                set._values[toDeleteIndex] = lastValue;\\n                // Update the index for the moved value\\n                set._indexes[lastValue] = valueIndex; // Replace lastValue's index to valueIndex\\n            }\\n\\n            // Delete the slot where the moved value was stored\\n            set._values.pop();\\n\\n            // Delete the index for the deleted slot\\n            delete set._indexes[value];\\n\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\\n        return set._indexes[value] != 0;\\n    }\\n\\n    /**\\n     * @dev Returns the number of values on the set. O(1).\\n     */\\n    function _length(Set storage set) private view returns (uint256) {\\n        return set._values.length;\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\\n        return set._values[index];\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function _values(Set storage set) private view returns (bytes32[] memory) {\\n        return set._values;\\n    }\\n\\n    // Bytes32Set\\n\\n    struct Bytes32Set {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\\n        return _add(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\\n        return _remove(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\\n        return _contains(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(Bytes32Set storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\\n        return _at(set._inner, index);\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\\n        bytes32[] memory store = _values(set._inner);\\n        bytes32[] memory result;\\n\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            result := store\\n        }\\n\\n        return result;\\n    }\\n\\n    // AddressSet\\n\\n    struct AddressSet {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(AddressSet storage set, address value) internal returns (bool) {\\n        return _add(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(AddressSet storage set, address value) internal returns (bool) {\\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(AddressSet storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\\n        return address(uint160(uint256(_at(set._inner, index))));\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function values(AddressSet storage set) internal view returns (address[] memory) {\\n        bytes32[] memory store = _values(set._inner);\\n        address[] memory result;\\n\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            result := store\\n        }\\n\\n        return result;\\n    }\\n\\n    // UintSet\\n\\n    struct UintSet {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\\n        return _add(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\\n        return _remove(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\\n        return _contains(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(UintSet storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\\n        return uint256(_at(set._inner, index));\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\\n        bytes32[] memory store = _values(set._inner);\\n        uint256[] memory result;\\n\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            result := store\\n        }\\n\\n        return result;\\n    }\\n}\\n\",\"keccak256\":\"0x1c65595a26548a1b2263315b08a56334a2d7087319814437559c3c96025e939f\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/extensions/IERC20Permit.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n */\\ninterface IERC20Permit {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\\n     * given ``owner``'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../extensions/IERC20Permit.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    /**\\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 oldAllowance = token.allowance(address(this), spender);\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance + value));\\n    }\\n\\n    /**\\n     * @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance - value));\\n        }\\n    }\\n\\n    /**\\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful. Compatible with tokens that require the approval to be set to\\n     * 0 before setting it to a non-zero value.\\n     */\\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\\n        bytes memory approvalCall = abi.encodeWithSelector(token.approve.selector, spender, value);\\n\\n        if (!_callOptionalReturnBool(token, approvalCall)) {\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, 0));\\n            _callOptionalReturn(token, approvalCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\\n     * Revert on invalid signature.\\n     */\\n    function safePermit(\\n        IERC20Permit token,\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal {\\n        uint256 nonceBefore = token.nonces(owner);\\n        token.permit(owner, spender, value, deadline, v, r, s);\\n        uint256 nonceAfter = token.nonces(owner);\\n        require(nonceAfter == nonceBefore + 1, \\\"SafeERC20: permit did not succeed\\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        require(returndata.length == 0 || abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     *\\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\\n     */\\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\\n        // and not revert is the subcall reverts.\\n\\n        (bool success, bytes memory returndata) = address(token).call(data);\\n        return\\n            success && (returndata.length == 0 || abi.decode(returndata, (bool))) && Address.isContract(address(token));\\n    }\\n}\\n\",\"keccak256\":\"0x909d608c2db6eb165ca178c81289a07ed2e118e444d0025b2a85c97d0b44a4fa\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\"},\"contracts/governance/Governed.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.20;\\n\\nimport { IGovernor } from \\\"../interfaces/IGovernor.sol\\\";\\nimport { MocHelper } from \\\"../utils/MocHelper.sol\\\";\\nimport { Initializable } from \\\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\\\";\\n\\n/**\\n  @title Governed\\n  @notice Base contract to be inherited by governed contracts\\n  @dev This contract is not usable on its own since it does not have any _productive useful_ behavior\\n  The only purpose of this contract is to define some useful modifiers and functions to be used on the\\n  governance aspect of the child contract\\n  */\\nabstract contract Governed is Initializable, MocHelper {\\n    /**\\n    @notice The address of the contract which governs this one\\n   */\\n    IGovernor public governor;\\n\\n    error NotAuthorizedChanger();\\n\\n    /**\\n    @notice Modifier that protects the function\\n    @dev You should use this modifier in any function that should be called through\\n    the governance system\\n   */\\n    modifier onlyAuthorizedChanger() {\\n        checkIfAuthorizedChanger();\\n        _;\\n    }\\n\\n    /**\\n    @notice Initialize the contract with the basic settings\\n    @dev This initialize replaces the constructor but it is not called automatically.\\n    It is necessary because of the upgradeability of the contracts\\n    @param governorAddress_ Governor address\\n   */\\n    function __Governed_init(address governorAddress_) internal onlyInitializing {\\n        __Governed_init_unchained(governorAddress_);\\n    }\\n\\n    function __Governed_init_unchained(address governorAddress_) internal onlyInitializing {\\n        governor = IGovernor(governorAddress_);\\n    }\\n\\n    /**\\n    @notice Change the contract's governor. Should be called through the old governance system\\n    @param newGovernor_ New governor address\\n   */\\n    function changeGovernor(IGovernor newGovernor_) external onlyAuthorizedChanger {\\n        governor = newGovernor_;\\n    }\\n\\n    /**\\n    @notice Checks if the msg sender is an authorized changer, reverts otherwise\\n   */\\n    function checkIfAuthorizedChanger() internal view {\\n        if (!governor.isAuthorizedChanger(msg.sender)) revert NotAuthorizedChanger();\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n\\n    // Purposely left unused to save some state space to allow for future upgrades\\n    // slither-disable-next-line unused-state\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x4ca00d6d57ffff0ee43e4441d1bafa20c4e3f52e43e50b08cf68d7f65540e09a\",\"license\":\"UNLICENSED\"},\"contracts/interfaces/IChangeContract.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.20;\\n\\n/**\\n  @title IChangeContract\\n  @notice This interface is the one used by the governance system.\\n  @dev If you plan to do some changes to a system governed by this project you should write a contract\\n  that does those changes, like a recipe. This contract MUST not have ANY kind of public or external function\\n  that modifies the state of this ChangeContract, otherwise you could run into front-running issues when the governance\\n  system is fully in place.\\n */\\ninterface IChangeContract {\\n    /**\\n    @notice Override this function with a recipe of the changes to be done when this ChangeContract\\n    is executed\\n   */\\n    function execute() external;\\n}\\n\",\"keccak256\":\"0x22e20ac9596a6a4c4545b0c5cf307c2924987d6033ef75357850b0de4d1f0901\",\"license\":\"UNLICENSED\"},\"contracts/interfaces/IGovernor.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.20;\\n\\nimport { IChangeContract } from \\\"./IChangeContract.sol\\\";\\n\\n/**\\n  @title IGovernor\\n  @notice Governor interface. This functions should be overwritten to\\n  enable the communication with the rest of the system\\n  @dev This interface **MUST** be compatible with the corresponding Governance instance\\n  used on Production, from https://github.com/money-on-chain/Areopagus-Governance\\n  */\\ninterface IGovernor {\\n    /**\\n    @notice Function to be called to make the changes described in changeContract\\n    @dev This function should be protected somehow to only execute changes that\\n    benefit the system. This decision process is independent of this architecture\\n    therefore is independent of this interface too\\n    @param changeContract_ Address of the contract that will execute the changes\\n   */\\n    function executeChange(IChangeContract changeContract_) external;\\n\\n    /**\\n    @notice Returns whether this `changer_` is authorized to execute changes.\\n    @param changer_ Address of the contract that will execute the changes\\n   */\\n    function isAuthorizedChanger(address changer_) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x0f8cd9de3ed9348e6a58cf4d971586f60f5542a20ecd3748194e4ba288f419c1\",\"license\":\"UNLICENSED\"},\"contracts/interfaces/IMocRC20.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.20;\\n\\nimport { IERC20Upgradeable } from \\\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\\\";\\n\\n/**\\n * @title IMocRC20\\n * @notice Base Moc ERC20 Token Interface: burn, mint. It can be both Pegs and Collateral Tokens.\\n */\\ninterface IMocRC20 is IERC20Upgradeable {\\n    /**\\n     * @dev Creates `amount` new tokens for `to`.\\n     * See {ERC20-_mint}.\\n     */\\n    function mint(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Burns a specific `amount` of tokens for `to`.\\n     * See {ERC20-_burn}.\\n     */\\n    function burn(address to, uint256 amount) external;\\n}\\n\",\"keccak256\":\"0x59d458617a8daf761e2f0ff84a367b32b4eacabfb8340e244f52bc168cb8a16a\",\"license\":\"UNLICENSED\"},\"contracts/mocks/upgradeability/MocTCUpgradeMock.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.20;\\n\\n// This contract is not intended to be used in a production system\\n// It was designed to be used in a testing environment only\\n\\nimport { MocTC, ERC20Upgradeable } from \\\"../../tokens/MocTC.sol\\\";\\nimport { IERC20Upgradeable } from \\\"../../interfaces/IMocRC20.sol\\\";\\n\\n/**\\n * @title MocTcMock\\n * @dev Only for upgradeability testing purposes.\\n */\\ncontract MocTcMock is MocTC {\\n    uint256 public newVariable;\\n\\n    function initializeMock() external {\\n        newVariable = 42;\\n    }\\n\\n    function totalSupply() public view override(ERC20Upgradeable, IERC20Upgradeable) returns (uint256) {\\n        return 1 + newVariable + super.totalSupply();\\n    }\\n}\\n\",\"keccak256\":\"0x99de165cd31cb7581676d202741a147551e110607f7f1f8f8711a46c8e78bf1b\",\"license\":\"UNLICENSED\"},\"contracts/tokens/MocRC20.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.20;\\n\\nimport { IMocRC20 } from \\\"../interfaces/IMocRC20.sol\\\";\\nimport { IGovernor, Governed } from \\\"../governance/Governed.sol\\\";\\n/* solhint-disable-next-line max-line-length */\\nimport { AccessControlEnumerableUpgradeable } from \\\"@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol\\\";\\nimport { ERC20Upgradeable } from \\\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\\\";\\nimport { UUPSUpgradeable } from \\\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\\\";\\n\\n/**\\n * @title MocRC20\\n * @notice Base Moc ERC20 Token: burn, mint. It can be both Pegs and Collateral Tokens.\\n * @dev ERC20 like token that allows roles allowed contracts to mint and burn (destroyed) any token.\\n */\\ncontract MocRC20 is IMocRC20, AccessControlEnumerableUpgradeable, ERC20Upgradeable, UUPSUpgradeable, Governed {\\n    bytes32 private constant MINTER_ROLE = keccak256(\\\"MINTER_ROLE\\\");\\n    bytes32 private constant BURNER_ROLE = keccak256(\\\"BURNER_ROLE\\\");\\n\\n    error NotUniqueRole(bytes32 role);\\n\\n    /// @custom:oz-upgrades-unsafe-allow constructor\\n    constructor() {\\n        _disableInitializers();\\n    }\\n\\n    /**\\n     * See {__MocRC20_init}.\\n     */\\n    function initialize(\\n        string memory name_,\\n        string memory symbol_,\\n        address admin_,\\n        IGovernor governor_\\n    ) external virtual initializer {\\n        __MocRC20_init(name_, symbol_, admin_, governor_);\\n        _grantRole(MINTER_ROLE, admin_);\\n        _grantRole(BURNER_ROLE, admin_);\\n    }\\n\\n    /**\\n     * @dev Grants `DEFAULT_ADMIN_ROLE` to `admin` address.\\n     *\\n     * See {ERC20_init}.\\n     */\\n    function __MocRC20_init(\\n        string memory name_,\\n        string memory symbol_,\\n        address admin_,\\n        IGovernor governor_\\n    ) internal onlyInitializing {\\n        __ERC20_init(name_, symbol_);\\n        __AccessControlEnumerable_init();\\n        __UUPSUpgradeable_init();\\n        __Governed_init(address(governor_));\\n        _grantRole(DEFAULT_ADMIN_ROLE, admin_);\\n    }\\n\\n    /**\\n     * @inheritdoc UUPSUpgradeable\\n     * @dev checks that the changer that will do the upgrade is currently authorized by governance to makes\\n     * changes within the system\\n     * @param newImplementation new implementation contract address(not used)\\n     */\\n    /* solhint-disable-next-line no-empty-blocks */\\n    function _authorizeUpgrade(address newImplementation) internal override onlyAuthorizedChanger {}\\n\\n    /**\\n     * @dev Creates `amount` new tokens for `to`.\\n     * See {ERC20-_mint}.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have the `MINTER_ROLE`.\\n     */\\n    function mint(address to, uint256 amount) external virtual onlyRole(MINTER_ROLE) returns (bool) {\\n        _mint(to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Burns a specific `amount` of tokens for `to`.\\n     * * See {ERC20-_burn}.\\n     * Requirements:\\n     *\\n     * - the caller must have the `BURNER_ROLE`.\\n     */\\n    function burn(address to, uint256 amount) external virtual onlyRole(BURNER_ROLE) {\\n        _burn(to, amount);\\n    }\\n\\n    /**\\n     * @dev Grants all `roles` to `account` while sender renounces to all ``role``\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     * - no one else must have any other role\\n     *\\n     * May emit a {RoleGranted x3, RoleRevoked x3} event.\\n     */\\n    function transferAllRoles(address account) public virtual onlyRole(getRoleAdmin(DEFAULT_ADMIN_ROLE)) {\\n        _grantRole(DEFAULT_ADMIN_ROLE, account);\\n        _grantRole(MINTER_ROLE, account);\\n        _grantRole(BURNER_ROLE, account);\\n        _revokeRole(MINTER_ROLE, msg.sender);\\n        _revokeRole(BURNER_ROLE, msg.sender);\\n        _revokeRole(DEFAULT_ADMIN_ROLE, msg.sender);\\n        // One the new admin account has roles\\n        if (getRoleMemberCount(DEFAULT_ADMIN_ROLE) != 1) revert NotUniqueRole(DEFAULT_ADMIN_ROLE);\\n        if (getRoleMemberCount(MINTER_ROLE) != 1) revert NotUniqueRole(MINTER_ROLE);\\n        if (getRoleMemberCount(BURNER_ROLE) != 1) revert NotUniqueRole(BURNER_ROLE);\\n    }\\n}\\n\",\"keccak256\":\"0x5ae23d94f4a2cf84d0999a307d0d8b0031ba52f5f01ee31510051e961d952239\",\"license\":\"UNLICENSED\"},\"contracts/tokens/MocTC.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.20;\\n\\nimport { MocRC20, IGovernor, IMocRC20 } from \\\"./MocRC20.sol\\\";\\n/* solhint-disable-next-line max-line-length */\\nimport { ERC20PausableUpgradeable, ERC20Upgradeable } from \\\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol\\\";\\n\\n/**\\n * @title MocTC\\n * @notice Base Moc  ERC20 Collateral Tokens: Allows burn, mint and pause.\\n * @dev ERC20 like token that allows roles allowed contracts to mint and burn (destroyed) any token.\\n */\\ncontract MocTC is MocRC20, ERC20PausableUpgradeable {\\n    bytes32 private constant PAUSER_ROLE = keccak256(\\\"PAUSER_ROLE\\\");\\n\\n    /// @custom:oz-upgrades-unsafe-allow constructor\\n    constructor() {\\n        _disableInitializers();\\n    }\\n\\n    /**\\n     * @dev Grants `PAUSER_ROLE` to `admin` address.\\n     *\\n     * See {MocRC20-constructor}.\\n     */\\n    function initialize(\\n        string memory name_,\\n        string memory symbol_,\\n        address admin_,\\n        IGovernor governor_\\n    ) external override initializer {\\n        __MocRC20_init(name_, symbol_, admin_, governor_);\\n        __ERC20Pausable_init();\\n    }\\n\\n    /**\\n     * @dev override only to satisfy compiler\\n     * @inheritdoc ERC20PausableUpgradeable\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual override(ERC20Upgradeable, ERC20PausableUpgradeable) {\\n        ERC20PausableUpgradeable._beforeTokenTransfer(from, to, amount);\\n    }\\n\\n    /**\\n     * @dev Pauses the contract.\\n     * See {ERC20PausableUpgradeable-_pause}.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have the `PAUSER_ROLE`.\\n     */\\n    function pause() external virtual onlyRole(PAUSER_ROLE) {\\n        _pause();\\n    }\\n\\n    /**\\n     * @dev Grants all `roles` to `account` while sender renounces to all ``role``.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     * - no one else must have any other role\\n     *\\n     * May emit a {RoleGranted x4, RoleRevoked x4} event.\\n     */\\n    function transferAllRoles(address account) public override onlyRole(getRoleAdmin(DEFAULT_ADMIN_ROLE)) {\\n        _grantRole(PAUSER_ROLE, account);\\n        _revokeRole(PAUSER_ROLE, msg.sender);\\n        super.transferAllRoles(account);\\n        if (getRoleMemberCount(PAUSER_ROLE) != 1) revert NotUniqueRole(PAUSER_ROLE);\\n    }\\n}\\n\",\"keccak256\":\"0x9cf0f1716999076e7128bfb83af415eb99bfd43b785e6efc8015e45df6e1baf3\",\"license\":\"UNLICENSED\"},\"contracts/utils/MocHelper.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.20;\\n\\nimport { SafeERC20 } from \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\n/* solhint-disable-next-line max-line-length */\\nimport { SafeERC20Upgradeable } from \\\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\\\";\\n\\nabstract contract MocHelper {\\n    error InvalidAddress();\\n    error InvalidValue();\\n    // Constants may not be used in child contracts and that is fine as they are\\n    // not using any space in storage, so we disable the check\\n    // slither-disable-next-line unused-state\\n    uint256 internal constant PRECISION = 10 ** 18;\\n    // slither-disable-next-line unused-state\\n    uint256 internal constant ONE = 10 ** 18;\\n    // slither-disable-next-line unused-state\\n    uint256 internal constant UINT256_MAX = ~uint256(0);\\n\\n    // Saves gas\\n    // https://github.com/KadenZipfel/gas-optimizations/blob/main/gas-saving-patterns/unchecked-arithmetic.md\\n    function unchecked_inc(uint256 i) internal pure returns (uint256) {\\n        unchecked {\\n            return i + 1;\\n        }\\n    }\\n\\n    /**\\n     * @notice add precision and div two number\\n     * @param a_ numerator\\n     * @param b_ denominator\\n     * @return `a_` * PRECISION / `b_`\\n     */\\n    function _divPrec(uint256 a_, uint256 b_) internal pure returns (uint256) {\\n        return (a_ * PRECISION) / b_;\\n    }\\n\\n    /**\\n     * @notice multiply two number and remove precision\\n     * @param a_ term 1\\n     * @param b_ term 2\\n     * @return `a_` * `b_` / PRECISION\\n     */\\n    function _mulPrec(uint256 a_, uint256 b_) internal pure returns (uint256) {\\n        return (a_ * b_) / PRECISION;\\n    }\\n\\n    /**\\n     * @notice reverts if value if less than PRECISION ONE\\n     * @param value_ value to check [PREC]\\n     */\\n    function _checkLessThanOne(uint256 value_) internal pure {\\n        if (value_ > ONE) revert InvalidValue();\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n\\n    // Purposely left unused to save some state space to allow for future upgrades\\n    // slither-disable-next-line unused-state\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x73fa805076c35c1e4db33e957ab681fb34637a9d3d99b1ae5edcf7fb43248c0b\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "storageLayout": {
    "storage": [
      {
        "astId": 950,
        "contract": "contracts/mocks/upgradeability/MocTCUpgradeMock.sol:MocTcMock",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_uint8"
      },
      {
        "astId": 953,
        "contract": "contracts/mocks/upgradeability/MocTCUpgradeMock.sol:MocTcMock",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 3017,
        "contract": "contracts/mocks/upgradeability/MocTCUpgradeMock.sol:MocTcMock",
        "label": "__gap",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 3400,
        "contract": "contracts/mocks/upgradeability/MocTCUpgradeMock.sol:MocTcMock",
        "label": "__gap",
        "offset": 0,
        "slot": "51",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 184,
        "contract": "contracts/mocks/upgradeability/MocTCUpgradeMock.sol:MocTcMock",
        "label": "_roles",
        "offset": 0,
        "slot": "101",
        "type": "t_mapping(t_bytes32,t_struct(RoleData)179_storage)"
      },
      {
        "astId": 479,
        "contract": "contracts/mocks/upgradeability/MocTCUpgradeMock.sol:MocTcMock",
        "label": "__gap",
        "offset": 0,
        "slot": "102",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 33,
        "contract": "contracts/mocks/upgradeability/MocTCUpgradeMock.sol:MocTcMock",
        "label": "_roleMembers",
        "offset": 0,
        "slot": "151",
        "type": "t_mapping(t_bytes32,t_struct(AddressSet)4710_storage)"
      },
      {
        "astId": 143,
        "contract": "contracts/mocks/upgradeability/MocTCUpgradeMock.sol:MocTcMock",
        "label": "__gap",
        "offset": 0,
        "slot": "152",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 1478,
        "contract": "contracts/mocks/upgradeability/MocTCUpgradeMock.sol:MocTcMock",
        "label": "_balances",
        "offset": 0,
        "slot": "201",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 1484,
        "contract": "contracts/mocks/upgradeability/MocTCUpgradeMock.sol:MocTcMock",
        "label": "_allowances",
        "offset": 0,
        "slot": "202",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 1486,
        "contract": "contracts/mocks/upgradeability/MocTCUpgradeMock.sol:MocTcMock",
        "label": "_totalSupply",
        "offset": 0,
        "slot": "203",
        "type": "t_uint256"
      },
      {
        "astId": 1488,
        "contract": "contracts/mocks/upgradeability/MocTCUpgradeMock.sol:MocTcMock",
        "label": "_name",
        "offset": 0,
        "slot": "204",
        "type": "t_string_storage"
      },
      {
        "astId": 1490,
        "contract": "contracts/mocks/upgradeability/MocTCUpgradeMock.sol:MocTcMock",
        "label": "_symbol",
        "offset": 0,
        "slot": "205",
        "type": "t_string_storage"
      },
      {
        "astId": 2070,
        "contract": "contracts/mocks/upgradeability/MocTCUpgradeMock.sol:MocTcMock",
        "label": "__gap",
        "offset": 0,
        "slot": "206",
        "type": "t_array(t_uint256)45_storage"
      },
      {
        "astId": 932,
        "contract": "contracts/mocks/upgradeability/MocTCUpgradeMock.sol:MocTcMock",
        "label": "__gap",
        "offset": 0,
        "slot": "251",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 1247,
        "contract": "contracts/mocks/upgradeability/MocTCUpgradeMock.sol:MocTcMock",
        "label": "__gap",
        "offset": 0,
        "slot": "301",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 29903,
        "contract": "contracts/mocks/upgradeability/MocTCUpgradeMock.sol:MocTcMock",
        "label": "__gap",
        "offset": 0,
        "slot": "351",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 22000,
        "contract": "contracts/mocks/upgradeability/MocTCUpgradeMock.sol:MocTcMock",
        "label": "governor",
        "offset": 0,
        "slot": "401",
        "type": "t_contract(IGovernor)22849"
      },
      {
        "astId": 22071,
        "contract": "contracts/mocks/upgradeability/MocTCUpgradeMock.sol:MocTcMock",
        "label": "__gap",
        "offset": 0,
        "slot": "402",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 1269,
        "contract": "contracts/mocks/upgradeability/MocTCUpgradeMock.sol:MocTcMock",
        "label": "_paused",
        "offset": 0,
        "slot": "452",
        "type": "t_bool"
      },
      {
        "astId": 1374,
        "contract": "contracts/mocks/upgradeability/MocTCUpgradeMock.sol:MocTcMock",
        "label": "__gap",
        "offset": 0,
        "slot": "453",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 2208,
        "contract": "contracts/mocks/upgradeability/MocTCUpgradeMock.sol:MocTcMock",
        "label": "__gap",
        "offset": 0,
        "slot": "502",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 26179,
        "contract": "contracts/mocks/upgradeability/MocTCUpgradeMock.sol:MocTcMock",
        "label": "newVariable",
        "offset": 0,
        "slot": "552",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_bytes32)dyn_storage": {
        "base": "t_bytes32",
        "encoding": "dynamic_array",
        "label": "bytes32[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint256)45_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[45]",
        "numberOfBytes": "1440"
      },
      "t_array(t_uint256)49_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[49]",
        "numberOfBytes": "1568"
      },
      "t_array(t_uint256)50_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[50]",
        "numberOfBytes": "1600"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_contract(IGovernor)22849": {
        "encoding": "inplace",
        "label": "contract IGovernor",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_bytes32,t_struct(AddressSet)4710_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
        "numberOfBytes": "32",
        "value": "t_struct(AddressSet)4710_storage"
      },
      "t_mapping(t_bytes32,t_struct(RoleData)179_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
        "numberOfBytes": "32",
        "value": "t_struct(RoleData)179_storage"
      },
      "t_mapping(t_bytes32,t_uint256)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(AddressSet)4710_storage": {
        "encoding": "inplace",
        "label": "struct EnumerableSetUpgradeable.AddressSet",
        "members": [
          {
            "astId": 4709,
            "contract": "contracts/mocks/upgradeability/MocTCUpgradeMock.sol:MocTcMock",
            "label": "_inner",
            "offset": 0,
            "slot": "0",
            "type": "t_struct(Set)4395_storage"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_struct(RoleData)179_storage": {
        "encoding": "inplace",
        "label": "struct AccessControlUpgradeable.RoleData",
        "members": [
          {
            "astId": 176,
            "contract": "contracts/mocks/upgradeability/MocTCUpgradeMock.sol:MocTcMock",
            "label": "members",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_address,t_bool)"
          },
          {
            "astId": 178,
            "contract": "contracts/mocks/upgradeability/MocTCUpgradeMock.sol:MocTcMock",
            "label": "adminRole",
            "offset": 0,
            "slot": "1",
            "type": "t_bytes32"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_struct(Set)4395_storage": {
        "encoding": "inplace",
        "label": "struct EnumerableSetUpgradeable.Set",
        "members": [
          {
            "astId": 4390,
            "contract": "contracts/mocks/upgradeability/MocTCUpgradeMock.sol:MocTcMock",
            "label": "_values",
            "offset": 0,
            "slot": "0",
            "type": "t_array(t_bytes32)dyn_storage"
          },
          {
            "astId": 4394,
            "contract": "contracts/mocks/upgradeability/MocTCUpgradeMock.sol:MocTcMock",
            "label": "_indexes",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_bytes32,t_uint256)"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "changeGovernor(address)": {
        "notice": "Change the contract's governor. Should be called through the old governance system"
      },
      "governor()": {
        "notice": "The address of the contract which governs this one"
      }
    },
    "version": 1
  }
}