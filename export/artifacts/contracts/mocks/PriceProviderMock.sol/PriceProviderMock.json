{
  "contractName": "PriceProviderMock",
  "sourceName": "contracts/mocks/PriceProviderMock.sol",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "price_",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "deprecatePriceProvider",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "has",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mocPrice",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "peek",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "price_",
          "type": "uint256"
        }
      ],
      "name": "poke",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x60803461005c57601f61019438819003918201601f19168301916001600160401b038311848410176100605780849260209460405283398101031261005c57515f55600160ff198154161760015560405161011f90816100758239f35b5f80fd5b634e487b7160e01b5f52604160045260245ffdfe60808060405260043610156011575f80fd5b5f90813560e01c9081632a3f43891460cd5750806332145f901460b55780635095e3d914609957806359e02dd71460725763b689d5ac14604f575f80fd5b34606f5780600319360112606f57602060ff600154166040519015158152f35b80fd5b5034606f5780600319360112606f576040905460ff60015416825191825215156020820152f35b5034606f5780600319360112606f5760ff196001541660015580f35b5034606f576020366003190112606f57600435815580f35b90503460e5578160031936011260e557602091548152f35b5080fdfea26469706673582212206e01e0fc7ad29f980198245451b1a3b264767a2c462903153ac36cf1bf1cbbfc64736f6c63430008140033",
  "deployedBytecode": "0x60808060405260043610156011575f80fd5b5f90813560e01c9081632a3f43891460cd5750806332145f901460b55780635095e3d914609957806359e02dd71460725763b689d5ac14604f575f80fd5b34606f5780600319360112606f57602060ff600154166040519015158152f35b80fd5b5034606f5780600319360112606f576040905460ff60015416825191825215156020820152f35b5034606f5780600319360112606f5760ff196001541660015580f35b5034606f576020366003190112606f57600435815580f35b90503460e5578160031936011260e557602091548152f35b5080fdfea26469706673582212206e01e0fc7ad29f980198245451b1a3b264767a2c462903153ac36cf1bf1cbbfc64736f6c63430008140033",
  "linkReferences": {},
  "deployedLinkReferences": {},
  "devdoc": {
    "kind": "dev",
    "methods": {
      "constructor": {
        "params": {
          "price_": "MoC price for mock contract"
        }
      },
      "peek()": {
        "params": {
          "price": "assetPrice",
          "valid": "true if the price is valid"
        }
      }
    },
    "version": 1
  },
  "evm": {
    "bytecode": {
      "functionDebugData": {},
      "generatedSources": [],
      "linkReferences": {},
      "opcodes": "PUSH1 0x80 CALLVALUE PUSH2 0x5C JUMPI PUSH1 0x1F PUSH2 0x194 CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH2 0x60 JUMPI DUP1 DUP5 SWAP3 PUSH1 0x20 SWAP5 PUSH1 0x40 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0x5C JUMPI MLOAD PUSH0 SSTORE PUSH1 0x1 PUSH1 0xFF NOT DUP2 SLOAD AND OR PUSH1 0x1 SSTORE PUSH1 0x40 MLOAD PUSH2 0x11F SWAP1 DUP2 PUSH2 0x75 DUP3 CODECOPY RETURN JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH1 0x11 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP1 DUP2 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x2A3F4389 EQ PUSH1 0xCD JUMPI POP DUP1 PUSH4 0x32145F90 EQ PUSH1 0xB5 JUMPI DUP1 PUSH4 0x5095E3D9 EQ PUSH1 0x99 JUMPI DUP1 PUSH4 0x59E02DD7 EQ PUSH1 0x72 JUMPI PUSH4 0xB689D5AC EQ PUSH1 0x4F JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH1 0x6F JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH1 0x6F JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0x1 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH1 0x6F JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH1 0x6F JUMPI PUSH1 0x40 SWAP1 SLOAD PUSH1 0xFF PUSH1 0x1 SLOAD AND DUP3 MLOAD SWAP2 DUP3 MSTORE ISZERO ISZERO PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST POP CALLVALUE PUSH1 0x6F JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH1 0x6F JUMPI PUSH1 0xFF NOT PUSH1 0x1 SLOAD AND PUSH1 0x1 SSTORE DUP1 RETURN JUMPDEST POP CALLVALUE PUSH1 0x6F JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH1 0x6F JUMPI PUSH1 0x4 CALLDATALOAD DUP2 SSTORE DUP1 RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH1 0xE5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH1 0xE5 JUMPI PUSH1 0x20 SWAP2 SLOAD DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH15 0x1E0FC7AD29F980198245451B1A3B2 PUSH5 0x767A2C4629 SUB ISZERO GASPRICE 0xC3 PUSH13 0xF1BF1CBBFC64736F6C63430008 EQ STOP CALLER ",
      "sourceMap": "132:551:80:-:0;;;;;;;;;;;;;-1:-1:-1;;132:551:80;;;;-1:-1:-1;;;;;132:551:80;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;132:551:80;;;;;;;;;;;;;;;;;;;;-1:-1:-1;132:551:80;;;;;;-1:-1:-1;132:551:80;;;;;-1:-1:-1;132:551:80"
    },
    "deployedBytecode": {
      "functionDebugData": {},
      "generatedSources": [],
      "immutableReferences": {},
      "linkReferences": {},
      "opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH1 0x11 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP1 DUP2 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x2A3F4389 EQ PUSH1 0xCD JUMPI POP DUP1 PUSH4 0x32145F90 EQ PUSH1 0xB5 JUMPI DUP1 PUSH4 0x5095E3D9 EQ PUSH1 0x99 JUMPI DUP1 PUSH4 0x59E02DD7 EQ PUSH1 0x72 JUMPI PUSH4 0xB689D5AC EQ PUSH1 0x4F JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH1 0x6F JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH1 0x6F JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0x1 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH1 0x6F JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH1 0x6F JUMPI PUSH1 0x40 SWAP1 SLOAD PUSH1 0xFF PUSH1 0x1 SLOAD AND DUP3 MLOAD SWAP2 DUP3 MSTORE ISZERO ISZERO PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST POP CALLVALUE PUSH1 0x6F JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH1 0x6F JUMPI PUSH1 0xFF NOT PUSH1 0x1 SLOAD AND PUSH1 0x1 SSTORE DUP1 RETURN JUMPDEST POP CALLVALUE PUSH1 0x6F JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH1 0x6F JUMPI PUSH1 0x4 CALLDATALOAD DUP2 SSTORE DUP1 RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH1 0xE5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH1 0xE5 JUMPI PUSH1 0x20 SWAP2 SLOAD DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH15 0x1E0FC7AD29F980198245451B1A3B2 PUSH5 0x767A2C4629 SUB ISZERO GASPRICE 0xC3 PUSH13 0xF1BF1CBBFC64736F6C63430008 EQ STOP CALLER ",
      "sourceMap": "132:551:80:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;212:15;132:551;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;505:3;132:551;;;;;;;;;;;;;;;;;;;;;;;;;;;;;663:11;132:551;;663:11;132:551;;;;;;;;;;-1:-1:-1;;132:551:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
    },
    "gasEstimates": {
      "creation": {
        "codeDepositCost": "57400",
        "executionCost": "infinite",
        "totalCost": "infinite"
      },
      "external": {
        "deprecatePriceProvider()": "24400",
        "has()": "2360",
        "mocPrice()": "2257",
        "peek()": "4461",
        "poke(uint256)": "22272"
      }
    },
    "methodIdentifiers": {
      "deprecatePriceProvider()": "5095e3d9",
      "has()": "b689d5ac",
      "mocPrice()": "2a3f4389",
      "peek()": "59e02dd7",
      "poke(uint256)": "32145f90"
    }
  },
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"price_\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"deprecatePriceProvider\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"has\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mocPrice\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"peek\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"price_\",\"type\":\"uint256\"}],\"name\":\"poke\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"price_\":\"MoC price for mock contract\"}},\"peek()\":{\"params\":{\"price\":\"assetPrice\",\"valid\":\"true if the price is valid\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"constructor\"},\"peek()\":{\"notice\":\"returns the given `price` for the asset if `valid`\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/mocks/PriceProviderMock.sol\":\"PriceProviderMock\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul[j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTOtfDnca[r]Iulc]jmul[jul]VcTOculjmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/interfaces/IPriceProvider.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.20;\\n\\n/**\\n * @title IPriceFeed\\n * @notice Amphiraos-Oracle Interface for peeking the price of a given asset\\n * @dev https://github.com/money-on-chain/Amphiraos-Oracle\\n */\\ninterface IPriceProvider {\\n    /**\\n     * @notice returns the given `price` for the asset if `valid`\\n     * @param price assetPrice\\n     * @param valid true if the price is valid\\n     */\\n    function peek() external view returns (bytes32 price, bool valid);\\n}\\n\",\"keccak256\":\"0xf91d285e24227b0c2f0c187d610d63e33a4fc9c1e193e0ced8df131eac440b23\",\"license\":\"UNLICENSED\"},\"contracts/mocks/PriceProviderMock.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.20;\\n\\nimport { IPriceProvider } from \\\"../interfaces/IPriceProvider.sol\\\";\\n\\ncontract PriceProviderMock is IPriceProvider {\\n    bytes32 public mocPrice;\\n    bool public has;\\n\\n    /**\\n     * @notice constructor\\n     * @param price_ MoC price for mock contract\\n     */\\n    constructor(uint256 price_) {\\n        mocPrice = bytes32(price_);\\n        has = true;\\n    }\\n\\n    function peek() external view returns (bytes32, bool) {\\n        return (mocPrice, has);\\n    }\\n\\n    function poke(uint256 price_) external {\\n        mocPrice = bytes32(price_);\\n    }\\n\\n    function deprecatePriceProvider() external {\\n        has = false;\\n    }\\n}\\n\",\"keccak256\":\"0x17a9ad4ed6aa114f4937efb30b9bc6e3dda6bc1f03401fd8c6556f0d80ab0b5d\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "storageLayout": {
    "storage": [
      {
        "astId": 26217,
        "contract": "contracts/mocks/PriceProviderMock.sol:PriceProviderMock",
        "label": "mocPrice",
        "offset": 0,
        "slot": "0",
        "type": "t_bytes32"
      },
      {
        "astId": 26219,
        "contract": "contracts/mocks/PriceProviderMock.sol:PriceProviderMock",
        "label": "has",
        "offset": 0,
        "slot": "1",
        "type": "t_bool"
      }
    ],
    "types": {
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      }
    }
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "constructor": {
        "notice": "constructor"
      },
      "peek()": {
        "notice": "returns the given `price` for the asset if `valid`"
      }
    },
    "version": 1
  }
}