{
  "contractName": "PriceProviderMock",
  "sourceName": "contracts/mocks/PriceProviderMock.sol",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "price_",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "deprecatePriceProvider",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "has",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mocPrice",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "peek",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "price_",
          "type": "uint256"
        }
      ],
      "name": "poke",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x608060405234801561001057600080fd5b5060405161018138038061018183398101604081905261002f91610043565b6000556001805460ff19168117905561005c565b60006020828403121561005557600080fd5b5051919050565b6101168061006b6000396000f3fe6080604052348015600f57600080fd5b506004361060505760003560e01c80632a3f438914605557806332145f901460705780635095e3d914608257806359e02dd7146090578063b689d5ac1460ad575b600080fd5b605d60005481565b6040519081526020015b60405180910390f35b6080607b36600460c8565b600055565b005b60806001805460ff19169055565b60005460015460ff16604080519283529015156020830152016067565b60015460b99060ff1681565b60405190151581526020016067565b60006020828403121560d957600080fd5b503591905056fea26469706673582212202f32d9766874d6a34191093ea824c1f980a41bb7d175c2d324f81871df97720a64736f6c63430008110033",
  "deployedBytecode": "0x6080604052348015600f57600080fd5b506004361060505760003560e01c80632a3f438914605557806332145f901460705780635095e3d914608257806359e02dd7146090578063b689d5ac1460ad575b600080fd5b605d60005481565b6040519081526020015b60405180910390f35b6080607b36600460c8565b600055565b005b60806001805460ff19169055565b60005460015460ff16604080519283529015156020830152016067565b60015460b99060ff1681565b60405190151581526020016067565b60006020828403121560d957600080fd5b503591905056fea26469706673582212202f32d9766874d6a34191093ea824c1f980a41bb7d175c2d324f81871df97720a64736f6c63430008110033",
  "linkReferences": {},
  "deployedLinkReferences": {},
  "devdoc": {
    "kind": "dev",
    "methods": {
      "constructor": {
        "params": {
          "price_": "MoC price for mock contract"
        }
      },
      "peek()": {
        "params": {
          "price": "assetPrice",
          "valid": "true if the price is valid"
        }
      }
    },
    "version": 1
  },
  "evm": {
    "bytecode": {
      "functionDebugData": {
        "@_17370": {
          "entryPoint": null,
          "id": 17370,
          "parameterSlots": 1,
          "returnSlots": 0
        },
        "abi_decode_tuple_t_uint256_fromMemory": {
          "entryPoint": 67,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        }
      },
      "generatedSources": [
        {
          "ast": {
            "nodeType": "YulBlock",
            "src": "0:200:73",
            "statements": [
              {
                "nodeType": "YulBlock",
                "src": "6:3:73",
                "statements": []
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "95:103:73",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "141:16:73",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "150:1:73",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "153:1:73",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "143:6:73"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "143:12:73"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "143:12:73"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "116:7:73"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "125:9:73"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "112:3:73"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "112:23:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "137:2:73",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "108:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "108:32:73"
                      },
                      "nodeType": "YulIf",
                      "src": "105:52:73"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "166:26:73",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "182:9:73"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "176:5:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "176:16:73"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "166:6:73"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_uint256_fromMemory",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "61:9:73",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "72:7:73",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "84:6:73",
                    "type": ""
                  }
                ],
                "src": "14:184:73"
              }
            ]
          },
          "contents": "{\n    { }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n}",
          "id": 73,
          "language": "Yul",
          "name": "#utility.yul"
        }
      ],
      "linkReferences": {},
      "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x181 CODESIZE SUB DUP1 PUSH2 0x181 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x43 JUMP JUMPDEST PUSH1 0x0 SSTORE PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF NOT AND DUP2 OR SWAP1 SSTORE PUSH2 0x5C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x116 DUP1 PUSH2 0x6B PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x50 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2A3F4389 EQ PUSH1 0x55 JUMPI DUP1 PUSH4 0x32145F90 EQ PUSH1 0x70 JUMPI DUP1 PUSH4 0x5095E3D9 EQ PUSH1 0x82 JUMPI DUP1 PUSH4 0x59E02DD7 EQ PUSH1 0x90 JUMPI DUP1 PUSH4 0xB689D5AC EQ PUSH1 0xAD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x5D PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x80 PUSH1 0x7B CALLDATASIZE PUSH1 0x4 PUSH1 0xC8 JUMP JUMPDEST PUSH1 0x0 SSTORE JUMP JUMPDEST STOP JUMPDEST PUSH1 0x80 PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 SLOAD PUSH1 0xFF AND PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE SWAP1 ISZERO ISZERO PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH1 0x67 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0xB9 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x67 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH1 0xD9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2F ORIGIN 0xD9 PUSH23 0x6874D6A34191093EA824C1F980A41BB7D175C2D324F818 PUSH18 0xDF97720A64736F6C63430008110033000000 ",
      "sourceMap": "70:551:63:-:0;;;264:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;313:15;302:26;344:4;338:10;;-1:-1:-1;;338:10:63;;;;;70:551;;14:184:73;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;-1:-1:-1;176:16:73;;14:184;-1:-1:-1;14:184:73:o;:::-;70:551:63;;;;;;"
    },
    "deployedBytecode": {
      "functionDebugData": {
        "@deprecatePriceProvider_17403": {
          "entryPoint": null,
          "id": 17403,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@has_17352": {
          "entryPoint": null,
          "id": 17352,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@mocPrice_17350": {
          "entryPoint": null,
          "id": 17350,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@peek_17382": {
          "entryPoint": null,
          "id": 17382,
          "parameterSlots": 0,
          "returnSlots": 2
        },
        "@poke_17395": {
          "entryPoint": null,
          "id": 17395,
          "parameterSlots": 1,
          "returnSlots": 0
        },
        "abi_decode_tuple_t_uint256": {
          "entryPoint": 200,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_bytes32_t_bool__to_t_bytes32_t_bool__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 3,
          "returnSlots": 1
        }
      },
      "generatedSources": [
        {
          "ast": {
            "nodeType": "YulBlock",
            "src": "0:833:73",
            "statements": [
              {
                "nodeType": "YulBlock",
                "src": "6:3:73",
                "statements": []
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "115:76:73",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "125:26:73",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "137:9:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "148:2:73",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "133:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "133:18:73"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "125:4:73"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "167:9:73"
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "178:6:73"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "160:6:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "160:25:73"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "160:25:73"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "84:9:73",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "95:6:73",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "106:4:73",
                    "type": ""
                  }
                ],
                "src": "14:177:73"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "266:110:73",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "312:16:73",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "321:1:73",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "324:1:73",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "314:6:73"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "314:12:73"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "314:12:73"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "287:7:73"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "296:9:73"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "283:3:73"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "283:23:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "308:2:73",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "279:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "279:32:73"
                      },
                      "nodeType": "YulIf",
                      "src": "276:52:73"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "337:33:73",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "360:9:73"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "347:12:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "347:23:73"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "337:6:73"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_uint256",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "232:9:73",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "243:7:73",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "255:6:73",
                    "type": ""
                  }
                ],
                "src": "196:180:73"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "504:135:73",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "514:26:73",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "526:9:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "537:2:73",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "522:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "522:18:73"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "514:4:73"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "556:9:73"
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "567:6:73"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "549:6:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "549:25:73"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "549:25:73"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "594:9:73"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "605:2:73",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "590:3:73"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "590:18:73"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "624:6:73"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "617:6:73"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "617:14:73"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "610:6:73"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "610:22:73"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "583:6:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "583:50:73"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "583:50:73"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_bytes32_t_bool__to_t_bytes32_t_bool__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "465:9:73",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "476:6:73",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "484:6:73",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "495:4:73",
                    "type": ""
                  }
                ],
                "src": "381:258:73"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "739:92:73",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "749:26:73",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "761:9:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "772:2:73",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "757:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "757:18:73"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "749:4:73"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "791:9:73"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "816:6:73"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "809:6:73"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "809:14:73"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "802:6:73"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "802:22:73"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "784:6:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "784:41:73"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "784:41:73"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "708:9:73",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "719:6:73",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "730:4:73",
                    "type": ""
                  }
                ],
                "src": "644:187:73"
              }
            ]
          },
          "contents": "{\n    { }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_bytes32_t_bool__to_t_bytes32_t_bool__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), iszero(iszero(value1)))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n}",
          "id": 73,
          "language": "Yul",
          "name": "#utility.yul"
        }
      ],
      "immutableReferences": {},
      "linkReferences": {},
      "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x50 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2A3F4389 EQ PUSH1 0x55 JUMPI DUP1 PUSH4 0x32145F90 EQ PUSH1 0x70 JUMPI DUP1 PUSH4 0x5095E3D9 EQ PUSH1 0x82 JUMPI DUP1 PUSH4 0x59E02DD7 EQ PUSH1 0x90 JUMPI DUP1 PUSH4 0xB689D5AC EQ PUSH1 0xAD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x5D PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x80 PUSH1 0x7B CALLDATASIZE PUSH1 0x4 PUSH1 0xC8 JUMP JUMPDEST PUSH1 0x0 SSTORE JUMP JUMPDEST STOP JUMPDEST PUSH1 0x80 PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 SLOAD PUSH1 0xFF AND PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE SWAP1 ISZERO ISZERO PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH1 0x67 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0xB9 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x67 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH1 0xD9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2F ORIGIN 0xD9 PUSH23 0x6874D6A34191093EA824C1F980A41BB7D175C2D324F818 PUSH18 0xDF97720A64736F6C63430008110033000000 ",
      "sourceMap": "70:551:63:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;121:23;;;;;;;;;160:25:73;;;148:2;133:18;121:23:63;;;;;;;;460:82;;;;;;:::i;:::-;520:15;509:26;460:82;;;548:71;;601:3;:11;;-1:-1:-1;;601:11:63;;;548:71;361:93;400:7;433:8;443:3;;;;361:93;;;549:25:73;;;617:14;;610:22;605:2;590:18;;583:50;522:18;361:93:63;381:258:73;150:15:63;;;;;;;;;;;;809:14:73;;802:22;784:41;;772:2;757:18;150:15:63;644:187:73;196:180;255:6;308:2;296:9;287:7;283:23;279:32;276:52;;;324:1;321;314:12;276:52;-1:-1:-1;347:23:73;;196:180;-1:-1:-1;196:180:73:o"
    },
    "gasEstimates": {
      "creation": {
        "codeDepositCost": "55600",
        "executionCost": "infinite",
        "totalCost": "infinite"
      },
      "external": {
        "deprecatePriceProvider()": "24372",
        "has()": "2376",
        "mocPrice()": "2262",
        "peek()": "4457",
        "poke(uint256)": "22312"
      }
    },
    "methodIdentifiers": {
      "deprecatePriceProvider()": "5095e3d9",
      "has()": "b689d5ac",
      "mocPrice()": "2a3f4389",
      "peek()": "59e02dd7",
      "poke(uint256)": "32145f90"
    }
  },
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"price_\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"deprecatePriceProvider\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"has\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mocPrice\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"peek\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"price_\",\"type\":\"uint256\"}],\"name\":\"poke\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"price_\":\"MoC price for mock contract\"}},\"peek()\":{\"params\":{\"price\":\"assetPrice\",\"valid\":\"true if the price is valid\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"constructor\"},\"peek()\":{\"notice\":\"returns the given `price` for the asset if `valid`\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/mocks/PriceProviderMock.sol\":\"PriceProviderMock\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IPriceProvider.sol\":{\"content\":\"pragma solidity ^0.8.17;\\n\\n/**\\n * @title IPriceFeed\\n * @notice Amphiraos-Oracle Interface for peeking the price of a given asset\\n * @dev https://github.com/money-on-chain/Amphiraos-Oracle\\n */\\ninterface IPriceProvider {\\n    /**\\n     * @notice returns the given `price` for the asset if `valid`\\n     * @param price assetPrice\\n     * @param valid true if the price is valid\\n     */\\n    function peek() external view returns (bytes32 price, bool valid);\\n}\\n\",\"keccak256\":\"0x608d34e95c4f1953560527cf57f4d405ebe66d66e6d94c8dcca2ed07465123f9\"},\"contracts/mocks/PriceProviderMock.sol\":{\"content\":\"pragma solidity ^0.8.17;\\n\\nimport \\\"../interfaces/IPriceProvider.sol\\\";\\n\\ncontract PriceProviderMock is IPriceProvider {\\n    bytes32 public mocPrice;\\n    bool public has;\\n\\n    /**\\n     * @notice constructor\\n     * @param price_ MoC price for mock contract\\n     */\\n    constructor(uint256 price_) {\\n        mocPrice = bytes32(price_);\\n        has = true;\\n    }\\n\\n    function peek() external view returns (bytes32, bool) {\\n        return (mocPrice, has);\\n    }\\n\\n    function poke(uint256 price_) external {\\n        mocPrice = bytes32(price_);\\n    }\\n\\n    function deprecatePriceProvider() external {\\n        has = false;\\n    }\\n}\\n\",\"keccak256\":\"0xd032f17dc1e80ba8f453d97ac359ff36cb73b8c3c681564c94ce26ee867484d7\"}},\"version\":1}",
  "storageLayout": {
    "storage": [
      {
        "astId": 17350,
        "contract": "contracts/mocks/PriceProviderMock.sol:PriceProviderMock",
        "label": "mocPrice",
        "offset": 0,
        "slot": "0",
        "type": "t_bytes32"
      },
      {
        "astId": 17352,
        "contract": "contracts/mocks/PriceProviderMock.sol:PriceProviderMock",
        "label": "has",
        "offset": 0,
        "slot": "1",
        "type": "t_bool"
      }
    ],
    "types": {
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      }
    }
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "constructor": {
        "notice": "constructor"
      },
      "peek()": {
        "notice": "returns the given `price` for the asset if `valid`"
      }
    },
    "version": 1
  }
}