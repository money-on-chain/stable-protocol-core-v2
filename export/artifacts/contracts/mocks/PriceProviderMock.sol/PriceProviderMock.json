{
  "contractName": "PriceProviderMock",
  "sourceName": "contracts/mocks/PriceProviderMock.sol",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "price_",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "deprecatePriceProvider",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "has",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mocPrice",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "peek",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "price_",
          "type": "uint256"
        }
      ],
      "name": "poke",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x60803461005d57601f61019a38819003918201601f19168301916001600160401b038311848410176100625780849260209460405283398101031261005d5751600055600160ff198154161760015560405161012190816100798239f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe608060408181526004361015601357600080fd5b600091823560e01c9081632a3f43891460d35750806332145f901460bb5780635095e3d914609f57806359e02dd71460775763b689d5ac14605357600080fd5b346073578160031936011260735760209060ff6001541690519015158152f35b5080fd5b509034609c5780600319360112609c575460ff60015416825191825215156020820152f35b80fd5b50346073578160031936011260735760ff196001541660015551f35b50346073576020366003190112607357600435825551f35b83903460735781600319360112607357602091548152f3fea2646970667358221220da9fa8140f52ef2031f1efa5923717ba94a4ec11b5f3742f9c8b50ba51589e5564736f6c63430008100033",
  "deployedBytecode": "0x608060408181526004361015601357600080fd5b600091823560e01c9081632a3f43891460d35750806332145f901460bb5780635095e3d914609f57806359e02dd71460775763b689d5ac14605357600080fd5b346073578160031936011260735760209060ff6001541690519015158152f35b5080fd5b509034609c5780600319360112609c575460ff60015416825191825215156020820152f35b80fd5b50346073578160031936011260735760ff196001541660015551f35b50346073576020366003190112607357600435825551f35b83903460735781600319360112607357602091548152f3fea2646970667358221220da9fa8140f52ef2031f1efa5923717ba94a4ec11b5f3742f9c8b50ba51589e5564736f6c63430008100033",
  "linkReferences": {},
  "deployedLinkReferences": {},
  "devdoc": {
    "kind": "dev",
    "methods": {
      "constructor": {
        "params": {
          "price_": "MoC price for mock contract"
        }
      },
      "peek()": {
        "params": {
          "price": "assetPrice",
          "valid": "true if the price is valid"
        }
      }
    },
    "version": 1
  },
  "evm": {
    "bytecode": {
      "functionDebugData": {},
      "generatedSources": [],
      "linkReferences": {},
      "opcodes": "PUSH1 0x80 CALLVALUE PUSH2 0x5D JUMPI PUSH1 0x1F PUSH2 0x19A CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH2 0x62 JUMPI DUP1 DUP5 SWAP3 PUSH1 0x20 SWAP5 PUSH1 0x40 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0x5D JUMPI MLOAD PUSH1 0x0 SSTORE PUSH1 0x1 PUSH1 0xFF NOT DUP2 SLOAD AND OR PUSH1 0x1 SSTORE PUSH1 0x40 MLOAD PUSH2 0x121 SWAP1 DUP2 PUSH2 0x79 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH1 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x2A3F4389 EQ PUSH1 0xD3 JUMPI POP DUP1 PUSH4 0x32145F90 EQ PUSH1 0xBB JUMPI DUP1 PUSH4 0x5095E3D9 EQ PUSH1 0x9F JUMPI DUP1 PUSH4 0x59E02DD7 EQ PUSH1 0x77 JUMPI PUSH4 0xB689D5AC EQ PUSH1 0x53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH1 0x73 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH1 0x73 JUMPI PUSH1 0x20 SWAP1 PUSH1 0xFF PUSH1 0x1 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH1 0x9C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH1 0x9C JUMPI SLOAD PUSH1 0xFF PUSH1 0x1 SLOAD AND DUP3 MLOAD SWAP2 DUP3 MSTORE ISZERO ISZERO PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH1 0x73 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH1 0x73 JUMPI PUSH1 0xFF NOT PUSH1 0x1 SLOAD AND PUSH1 0x1 SSTORE MLOAD RETURN JUMPDEST POP CALLVALUE PUSH1 0x73 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH1 0x73 JUMPI PUSH1 0x4 CALLDATALOAD DUP3 SSTORE MLOAD RETURN JUMPDEST DUP4 SWAP1 CALLVALUE PUSH1 0x73 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH1 0x73 JUMPI PUSH1 0x20 SWAP2 SLOAD DUP2 MSTORE RETURN INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDA SWAP16 0xA8 EQ 0xF MSTORE 0xEF KECCAK256 BALANCE CALL 0xEF 0xA5 SWAP3 CALLDATACOPY OR 0xBA SWAP5 LOG4 0xEC GT 0xB5 RETURN PUSH21 0x2F9C8B50BA51589E5564736F6C6343000810003300 ",
      "sourceMap": "132:551:71:-:0;;;;;;;;;;;;;-1:-1:-1;;132:551:71;;;;-1:-1:-1;;;;;132:551:71;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;132:551:71;;;;;;;;;;;;;;;;;;;;-1:-1:-1;132:551:71;;;;;;-1:-1:-1;132:551:71;;;;;-1:-1:-1;132:551:71"
    },
    "deployedBytecode": {
      "functionDebugData": {},
      "generatedSources": [],
      "immutableReferences": {},
      "linkReferences": {},
      "opcodes": "PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH1 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x2A3F4389 EQ PUSH1 0xD3 JUMPI POP DUP1 PUSH4 0x32145F90 EQ PUSH1 0xBB JUMPI DUP1 PUSH4 0x5095E3D9 EQ PUSH1 0x9F JUMPI DUP1 PUSH4 0x59E02DD7 EQ PUSH1 0x77 JUMPI PUSH4 0xB689D5AC EQ PUSH1 0x53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH1 0x73 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH1 0x73 JUMPI PUSH1 0x20 SWAP1 PUSH1 0xFF PUSH1 0x1 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH1 0x9C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH1 0x9C JUMPI SLOAD PUSH1 0xFF PUSH1 0x1 SLOAD AND DUP3 MLOAD SWAP2 DUP3 MSTORE ISZERO ISZERO PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH1 0x73 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH1 0x73 JUMPI PUSH1 0xFF NOT PUSH1 0x1 SLOAD AND PUSH1 0x1 SSTORE MLOAD RETURN JUMPDEST POP CALLVALUE PUSH1 0x73 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH1 0x73 JUMPI PUSH1 0x4 CALLDATALOAD DUP3 SSTORE MLOAD RETURN JUMPDEST DUP4 SWAP1 CALLVALUE PUSH1 0x73 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH1 0x73 JUMPI PUSH1 0x20 SWAP2 SLOAD DUP2 MSTORE RETURN INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDA SWAP16 0xA8 EQ 0xF MSTORE 0xEF KECCAK256 BALANCE CALL 0xEF 0xA5 SWAP3 CALLDATACOPY OR 0xBA SWAP5 LOG4 0xEC GT 0xB5 RETURN PUSH21 0x2F9C8B50BA51589E5564736F6C6343000810003300 ",
      "sourceMap": "132:551:71:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;212:15;132:551;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;505:3;132:551;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;663:11;132:551;;663:11;132:551;;;;;;;;;;-1:-1:-1;;132:551:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
    },
    "gasEstimates": {
      "creation": {
        "codeDepositCost": "57800",
        "executionCost": "infinite",
        "totalCost": "infinite"
      },
      "external": {
        "deprecatePriceProvider()": "24404",
        "has()": "2367",
        "mocPrice()": "2262",
        "peek()": "4462",
        "poke(uint256)": "22276"
      }
    },
    "methodIdentifiers": {
      "deprecatePriceProvider()": "5095e3d9",
      "has()": "b689d5ac",
      "mocPrice()": "2a3f4389",
      "peek()": "59e02dd7",
      "poke(uint256)": "32145f90"
    }
  },
  "metadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"price_\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"deprecatePriceProvider\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"has\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mocPrice\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"peek\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"price_\",\"type\":\"uint256\"}],\"name\":\"poke\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"price_\":\"MoC price for mock contract\"}},\"peek()\":{\"params\":{\"price\":\"assetPrice\",\"valid\":\"true if the price is valid\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"constructor\"},\"peek()\":{\"notice\":\"returns the given `price` for the asset if `valid`\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/mocks/PriceProviderMock.sol\":\"PriceProviderMock\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul[j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTOtfDnca[r]Iulc]jmul[jul]VcTOculjmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/interfaces/IPriceProvider.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.16;\\n\\n/**\\n * @title IPriceFeed\\n * @notice Amphiraos-Oracle Interface for peeking the price of a given asset\\n * @dev https://github.com/money-on-chain/Amphiraos-Oracle\\n */\\ninterface IPriceProvider {\\n    /**\\n     * @notice returns the given `price` for the asset if `valid`\\n     * @param price assetPrice\\n     * @param valid true if the price is valid\\n     */\\n    function peek() external view returns (bytes32 price, bool valid);\\n}\\n\",\"keccak256\":\"0xac60fc67c5e9e81c630146ef2e916084ccbca8e392e33f8ff84f0e65de21a89a\",\"license\":\"UNLICENSED\"},\"contracts/mocks/PriceProviderMock.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.16;\\n\\nimport { IPriceProvider } from \\\"../interfaces/IPriceProvider.sol\\\";\\n\\ncontract PriceProviderMock is IPriceProvider {\\n    bytes32 public mocPrice;\\n    bool public has;\\n\\n    /**\\n     * @notice constructor\\n     * @param price_ MoC price for mock contract\\n     */\\n    constructor(uint256 price_) {\\n        mocPrice = bytes32(price_);\\n        has = true;\\n    }\\n\\n    function peek() external view returns (bytes32, bool) {\\n        return (mocPrice, has);\\n    }\\n\\n    function poke(uint256 price_) external {\\n        mocPrice = bytes32(price_);\\n    }\\n\\n    function deprecatePriceProvider() external {\\n        has = false;\\n    }\\n}\\n\",\"keccak256\":\"0x0c350545753aac0416247712f24719fec46d980348b7ad6f7e13696d4cf2bc4e\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "storageLayout": {
    "storage": [
      {
        "astId": 23873,
        "contract": "contracts/mocks/PriceProviderMock.sol:PriceProviderMock",
        "label": "mocPrice",
        "offset": 0,
        "slot": "0",
        "type": "t_bytes32"
      },
      {
        "astId": 23875,
        "contract": "contracts/mocks/PriceProviderMock.sol:PriceProviderMock",
        "label": "has",
        "offset": 0,
        "slot": "1",
        "type": "t_bool"
      }
    ],
    "types": {
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      }
    }
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "constructor": {
        "notice": "constructor"
      },
      "peek()": {
        "notice": "returns the given `price` for the asset if `valid`"
      }
    },
    "version": 1
  }
}