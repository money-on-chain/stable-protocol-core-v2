{
  "contractName": "CommissionSplitter",
  "sourceName": "contracts/auxiliary/CommissionSplitter.sol",
  "abi": [
    {
      "inputs": [],
      "name": "InvalidAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidValue",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotAuthorizedChanger",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "previousAdmin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "AdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "beacon",
          "type": "address"
        }
      ],
      "name": "BeaconUpgraded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "acTokenPctToRecipient1_",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "acTokenPctToRecipient2_",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "feeTokenPctToRecipient1_",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "feeTokenPctToRecipient2_",
          "type": "uint256"
        }
      ],
      "name": "SplitExecuted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        }
      ],
      "name": "Upgraded",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "acToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "acTokenAddressRecipient1",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "acTokenAddressRecipient2",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "acTokenPctToRecipient1",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IGovernor",
          "name": "newGovernor_",
          "type": "address"
        }
      ],
      "name": "changeGovernor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeTokenAddressRecipient1",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeTokenAddressRecipient2",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeTokenPctToRecipient1",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "governor",
      "outputs": [
        {
          "internalType": "contract IGovernor",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "governorAddress_",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "acToken_",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "feeToken_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "acTokenAddressRecipient1_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "acTokenAddressRecipient2_",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "acTokenPctToRecipient1_",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "feeTokenAddressRecipient1_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "feeTokenAddressRecipient2_",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "feeTokenPctToRecipient1_",
          "type": "uint256"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proxiableUUID",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "newAcToken_",
          "type": "address"
        }
      ],
      "name": "setAcToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "acTokenAddressRecipient1_",
          "type": "address"
        }
      ],
      "name": "setAcTokenAddressRecipient1",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "acTokenAddressRecipient2_",
          "type": "address"
        }
      ],
      "name": "setAcTokenAddressRecipient2",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "acTokenPctToRecipient1_",
          "type": "uint256"
        }
      ],
      "name": "setAcTokenPctToRecipient1",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "newFeeToken_",
          "type": "address"
        }
      ],
      "name": "setFeeToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "feeTokenAddressRecipient1_",
          "type": "address"
        }
      ],
      "name": "setFeeTokenAddressRecipient1",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "feeTokenAddressRecipient2_",
          "type": "address"
        }
      ],
      "name": "setFeeTokenAddressRecipient2",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "feeTokenPctToRecipient1_",
          "type": "uint256"
        }
      ],
      "name": "setFeeTokenPctToRecipient1",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "split",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        }
      ],
      "name": "upgradeTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "upgradeToAndCall",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "bytecode": "",
  "deployedBytecode": "0x608060408181526004908136101561001657600080fd5b600092833560e01c9081630c340a2414610b595750806310bec3e914610b245780631105989114610ae057806311a37cc014610a9c5780631545ee9114610a5857806315cce22414610a1457806325bc6c41146109eb578381633659cfe61461095457508063374aa85d146109125780634dd75306146108f3578381634f1ef2861461080657508063529b44ab146105c257806352d1902d146104eb578063556f2f5f146104c2578063647846a5146104995780636a04b78714610455578063a990434214610411578063cc40272a146103e8578063d6a82cd5146103c9578063d8b627f9146103a0578063e4c0aaf41461035c578063ef9227971461032f5763f76541761461012557600080fd5b3461032b578260031936011261032b5760ca5481516370a0823160e01b8082523085830152859384938493919284926020926001600160a01b0391908216908481602481855afa908115610321578c916102f0575b50806102a9575b50508060cb5416988551928352309083015282826024818c5afa91821561029f578a9261023b575b50907fc356eb5d2ff4831654c13affe916edb329b5146c30eb257b66fd928a2c59f2a698608098979695949392826101f3575b50505082519586528501528301526060820152a180f35b610216975061023392965061022461020d60d154896112b7565b988980996110d0565b9889938360cf5416906110f3565b60cb5460d054821691166110f3565b3880806101dc565b97969594939280925088813d8311610298575b6102588183610b7e565b81010312610294577fc356eb5d2ff4831654c13affe916edb329b5146c30eb257b66fd928a2c59f2a698608098519293949596979850986101a9565b8980fd5b503d61024e565b85513d8c823e3d90fd5b6102c999506102d59195506102c060ce54826112b7565b998a80926110d0565b958360cc5416906110f3565b6102e9848260ca54168360cd5416906110f3565b3880610181565b90508481813d831161031a575b6103078183610b7e565b8101031261031657513861017a565b8b80fd5b503d6102fd565b87513d8e823e3d90fd5b8280fd5b83823461035857816003193601126103585760cd5490516001600160a01b039091168152602090f35b5080fd5b50503461035857602036600319011261035857356001600160a01b038116908190036103585761038a611228565b6001600160601b0360a01b603354161760335580f35b83823461035857816003193601126103585760cc5490516001600160a01b039091168152602090f35b83823461035857816003193601126103585760209060d1549051908152f35b83823461035857816003193601126103585760d05490516001600160a01b039091168152602090f35b50503461035857602036600319011261035857356001600160a01b038116908190036103585761043f611228565b6001600160601b0360a01b60cf54161760cf5580f35b50503461035857602036600319011261035857356001600160a01b0381169081900361035857610483611228565b6001600160601b0360a01b60ca54161760ca5580f35b83823461035857816003193601126103585760cb5490516001600160a01b039091168152602090f35b83823461035857816003193601126103585760cf5490516001600160a01b039091168152602090f35b5091346105bf57806003193601126105bf57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316300361055757602082517f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc8152f35b6020608492519162461bcd60e51b8352820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c00000000000000006064820152fd5b80fd5b50903461032b5761012036600319011261032b576001600160a01b039080358281169081900361080257602435928084168094036107fe57604435918183168093036107fa576064358281168091036107f6576084358381168091036107f25760a4359060c435928584168094036107ee5760e4359586168096036107ee5761010435968b549860ff8a60081c1615998a809b6107e1575b80156107ca575b156107705760ff1981166001178e558a61075f575b50670de0b6b3a764000080861161075057891161074257508b54996106b260ff8c60081c166106a481611070565b6106ad81611070565b611070565b6001600160601b0360a01b968760335416176033558660ca54161760ca558560cb54161760cb558460cc54161760cc558360cd54161760cd5560ce558160cf54161760cf5560d054161760d05560d15561070a578280f35b61ff001916825551600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249890602090a138808280f35b8b51632a9ffab760e21b8152fd5b508b51632a9ffab760e21b8152fd5b61ffff1916610101178d5538610676565b8c5162461bcd60e51b8152602081840152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b50303b1580156106615750600160ff821614610661565b50600160ff82161061065a565b8a80fd5b8880fd5b8780fd5b8680fd5b8580fd5b8480fd5b808484806003193601126108ef5781356001600160a01b038082168203610802576024359367ffffffffffffffff85116107fe57366023860112156107fe578401359061085e61085583610bb6565b94519485610b7e565b81845236602483870101116107fe576108ec956020836108df946024600199018389013786010152807f000000000000000000000000000000000000000000000000000000000000000016906108b682301415610bd2565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc541614610c33565b6108e7611228565b610c94565b80f35b5050fd5b83823461035857816003193601126103585760209060ce549051908152f35b50903461032b57602036600319011261032b57803591610930611228565b670de0b6b3a7640000831161094757505060ce5580f35b51632a9ffab760e21b8152fd5b82818534610358576020366003190112610358576001600160a01b03929035838116810361032b576109b3846108ec957f000000000000000000000000000000000000000000000000000000000000000016906108b682301415610bd2565b6109bb611228565b6109d06109c784610bb6565b92519283610b7e565b828252601f196109df84610bb6565b01366020840137610c94565b83823461035857816003193601126103585760ca5490516001600160a01b039091168152602090f35b50503461035857602036600319011261035857356001600160a01b0381169081900361035857610a42611228565b6001600160601b0360a01b60cb54161760cb5580f35b50503461035857602036600319011261035857356001600160a01b0381169081900361035857610a86611228565b6001600160601b0360a01b60d054161760d05580f35b50503461035857602036600319011261035857356001600160a01b0381169081900361035857610aca611228565b6001600160601b0360a01b60cc54161760cc5580f35b50503461035857602036600319011261035857356001600160a01b0381169081900361035857610b0e611228565b6001600160601b0360a01b60cd54161760cd5580f35b50903461032b57602036600319011261032b57803591610b42611228565b670de0b6b3a7640000831161094757505060d15580f35b8490346103585781600319360112610358576033546001600160a01b03168152602090f35b90601f8019910116810190811067ffffffffffffffff821117610ba057604052565b634e487b7160e01b600052604160045260246000fd5b67ffffffffffffffff8111610ba057601f01601f191660200190565b15610bd957565b60405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b19195b1959d85d1958d85b1b60a21b6064820152608490fd5b15610c3a57565b60405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b6163746976652070726f787960a01b6064820152608490fd5b9060ff7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435416600014610cce5750610ccc9150610eca565b565b6040516352d1902d60e01b8152602093919291906001600160a01b038316908581600481855afa60009181610e9b575b50610d5f5760405162461bcd60e51b815260048101879052602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b6064820152608490fd5b9394937fc9f76b5ec45e5cdef99837d7b6d2467235c1df8933c8ca56df5c35afa2c7d44401610e4457610d9183610eca565b7fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b600080a283511590811591610e3c575b50610dcc57505050565b600080610e3994610ddd6027610bb6565b94610deb6040519687610b7e565b602786527f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c81870152660819985a5b195960ca1b604087015281519101845af4610e33610f6c565b91610f9c565b50565b905038610dc2565b60405162461bcd60e51b815260048101859052602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b6064820152608490fd5b90918782813d8311610ec3575b610eb28183610b7e565b810103126105bf5750519038610cfe565b503d610ea8565b803b15610f11577f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b0319166001600160a01b03909216919091179055565b60405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608490fd5b3d15610f97573d90610f7d82610bb6565b91610f8b6040519384610b7e565b82523d6000602084013e565b606090565b91929015610ffe5750815115610fb0575090565b3b15610fb95790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b8251909150156110115750805190602001fd5b6040519062461bcd60e51b82528160208060048301528251908160248401526000935b828510611057575050604492506000838284010152601f80199101168101030190fd5b8481018201518686016044015293810193859350611034565b1561107757565b60405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608490fd5b919082039182116110dd57565b634e487b7160e01b600052601160045260246000fd5b919061118391600080604051936020968786019463a9059cbb60e01b865260018060a01b038093166024880152604487015260448652611134606487610b7e565b169261113f87610bb6565b9461114d6040519687610b7e565b8786527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656488870152519082855af1610e33610f6c565b8051908282159283156111f3575b5050501561119c5750565b6084906040519062461bcd60e51b82526004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152fd5b611203935082018101910161120b565b388281611191565b90816020910312611223575180151581036112235790565b600080fd5b60335460405163d994d6d560e01b815233600482015290602090829060249082906001600160a01b03165afa9081156112ab5760009161127d575b501561126b57565b604051631dd1b1b560e21b8152600490fd5b61129e915060203d81116112a4575b6112968183610b7e565b81019061120b565b38611263565b503d61128c565b6040513d6000823e3d90fd5b8181029181830414901517156110dd57670de0b6b3a764000090049056fea264697066735822122091448c7579344f25543739ba1e9bb307d6de063f5e15bde913884ed4cae17e4364736f6c63430008140033",
  "linkReferences": {},
  "deployedLinkReferences": {},
  "devdoc": {
    "details": "Contract that split his balance between two addresses based on a proportion defined by Governance.",
    "events": {
      "AdminChanged(address,address)": {
        "details": "Emitted when the admin account has changed."
      },
      "BeaconUpgraded(address)": {
        "details": "Emitted when the beacon is changed."
      },
      "Initialized(uint8)": {
        "details": "Triggered when the contract has been initialized or reinitialized."
      },
      "Upgraded(address)": {
        "details": "Emitted when the implementation is upgraded."
      }
    },
    "kind": "dev",
    "methods": {
      "changeGovernor(address)": {
        "params": {
          "newGovernor_": "New governor address"
        }
      },
      "initialize(address,address,address,address,address,uint256,address,address,uint256)": {
        "params": {
          "acTokenAddressRecipient1_": "address who receives acTokenPctToRecipient1",
          "acTokenAddressRecipient2_": "address who receives (100% - acTokenPctToRecipient1)",
          "acTokenPctToRecipient1_": "percentage of the acToken balance to send to acTokenAddressRecipient1 [PREC]",
          "acToken_": "collateral asset contract",
          "feeTokenAddressRecipient1_": "address who receives feeTokenPctToRecipient1",
          "feeTokenAddressRecipient2_": "address who receives (100% - feeTokenPctToRecipient1)",
          "feeTokenPctToRecipient1_": "percentage of the feeToken balance to send to acTokenAddressRecipient1 [PREC]",
          "feeToken_": "fee token contract",
          "governorAddress_": "governor address"
        }
      },
      "proxiableUUID()": {
        "details": "Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
      },
      "setAcToken(address)": {
        "params": {
          "newAcToken_": "new AC token contract"
        }
      },
      "setAcTokenAddressRecipient1(address)": {
        "params": {
          "acTokenAddressRecipient1_": "new recipient1 address"
        }
      },
      "setAcTokenAddressRecipient2(address)": {
        "params": {
          "acTokenAddressRecipient2_": "new recipient1 address"
        }
      },
      "setAcTokenPctToRecipient1(uint256)": {
        "params": {
          "acTokenPctToRecipient1_": "new percentage for recipient1 [PREC]"
        }
      },
      "setFeeToken(address)": {
        "params": {
          "newFeeToken_": "new fee token contract"
        }
      },
      "setFeeTokenAddressRecipient1(address)": {
        "params": {
          "feeTokenAddressRecipient1_": "new recipient1 address"
        }
      },
      "setFeeTokenAddressRecipient2(address)": {
        "params": {
          "feeTokenAddressRecipient2_": "new recipient2 address"
        }
      },
      "setFeeTokenPctToRecipient1(uint256)": {
        "params": {
          "feeTokenPctToRecipient1_": "new percentage for recipient1 [PREC]"
        }
      },
      "upgradeTo(address)": {
        "custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
        "details": "Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
      },
      "upgradeToAndCall(address,bytes)": {
        "custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
        "details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
      }
    },
    "stateVariables": {
      "__gap": {
        "details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
      }
    },
    "version": 1
  },
  "evm": {
    "bytecode": {
      "functionDebugData": {},
      "generatedSources": [],
      "linkReferences": {},
      "opcodes": "PUSH1 0xA0 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x31 JUMPI ADDRESS PUSH1 0x80 MSTORE PUSH2 0x130B SWAP1 DUP2 PUSH2 0x37 DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 DUP2 DUP2 PUSH2 0x500 ADD MSTORE DUP2 DUP2 PUSH2 0x889 ADD MSTORE PUSH2 0x986 ADD MSTORE RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 SWAP1 DUP2 CALLDATASIZE LT ISZERO PUSH2 0x16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0xC340A24 EQ PUSH2 0xB59 JUMPI POP DUP1 PUSH4 0x10BEC3E9 EQ PUSH2 0xB24 JUMPI DUP1 PUSH4 0x11059891 EQ PUSH2 0xAE0 JUMPI DUP1 PUSH4 0x11A37CC0 EQ PUSH2 0xA9C JUMPI DUP1 PUSH4 0x1545EE91 EQ PUSH2 0xA58 JUMPI DUP1 PUSH4 0x15CCE224 EQ PUSH2 0xA14 JUMPI DUP1 PUSH4 0x25BC6C41 EQ PUSH2 0x9EB JUMPI DUP4 DUP2 PUSH4 0x3659CFE6 EQ PUSH2 0x954 JUMPI POP DUP1 PUSH4 0x374AA85D EQ PUSH2 0x912 JUMPI DUP1 PUSH4 0x4DD75306 EQ PUSH2 0x8F3 JUMPI DUP4 DUP2 PUSH4 0x4F1EF286 EQ PUSH2 0x806 JUMPI POP DUP1 PUSH4 0x529B44AB EQ PUSH2 0x5C2 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x4EB JUMPI DUP1 PUSH4 0x556F2F5F EQ PUSH2 0x4C2 JUMPI DUP1 PUSH4 0x647846A5 EQ PUSH2 0x499 JUMPI DUP1 PUSH4 0x6A04B787 EQ PUSH2 0x455 JUMPI DUP1 PUSH4 0xA9904342 EQ PUSH2 0x411 JUMPI DUP1 PUSH4 0xCC40272A EQ PUSH2 0x3E8 JUMPI DUP1 PUSH4 0xD6A82CD5 EQ PUSH2 0x3C9 JUMPI DUP1 PUSH4 0xD8B627F9 EQ PUSH2 0x3A0 JUMPI DUP1 PUSH4 0xE4C0AAF4 EQ PUSH2 0x35C JUMPI DUP1 PUSH4 0xEF922797 EQ PUSH2 0x32F JUMPI PUSH4 0xF7654176 EQ PUSH2 0x125 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x32B JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x32B JUMPI PUSH1 0xCA SLOAD DUP2 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP1 DUP3 MSTORE ADDRESS DUP6 DUP4 ADD MSTORE DUP6 SWAP4 DUP5 SWAP4 DUP5 SWAP4 SWAP2 SWAP3 DUP5 SWAP3 PUSH1 0x20 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 DUP3 AND SWAP1 DUP5 DUP2 PUSH1 0x24 DUP2 DUP6 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x321 JUMPI DUP13 SWAP2 PUSH2 0x2F0 JUMPI JUMPDEST POP DUP1 PUSH2 0x2A9 JUMPI JUMPDEST POP POP DUP1 PUSH1 0xCB SLOAD AND SWAP9 DUP6 MLOAD SWAP3 DUP4 MSTORE ADDRESS SWAP1 DUP4 ADD MSTORE DUP3 DUP3 PUSH1 0x24 DUP2 DUP13 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x29F JUMPI DUP11 SWAP3 PUSH2 0x23B JUMPI JUMPDEST POP SWAP1 PUSH32 0xC356EB5D2FF4831654C13AFFE916EDB329B5146C30EB257B66FD928A2C59F2A6 SWAP9 PUSH1 0x80 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 DUP3 PUSH2 0x1F3 JUMPI JUMPDEST POP POP POP DUP3 MLOAD SWAP6 DUP7 MSTORE DUP6 ADD MSTORE DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE LOG1 DUP1 RETURN JUMPDEST PUSH2 0x216 SWAP8 POP PUSH2 0x233 SWAP3 SWAP7 POP PUSH2 0x224 PUSH2 0x20D PUSH1 0xD1 SLOAD DUP10 PUSH2 0x12B7 JUMP JUMPDEST SWAP9 DUP10 DUP1 SWAP10 PUSH2 0x10D0 JUMP JUMPDEST SWAP9 DUP10 SWAP4 DUP4 PUSH1 0xCF SLOAD AND SWAP1 PUSH2 0x10F3 JUMP JUMPDEST PUSH1 0xCB SLOAD PUSH1 0xD0 SLOAD DUP3 AND SWAP2 AND PUSH2 0x10F3 JUMP JUMPDEST CODESIZE DUP1 DUP1 PUSH2 0x1DC JUMP JUMPDEST SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 DUP1 SWAP3 POP DUP9 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x298 JUMPI JUMPDEST PUSH2 0x258 DUP2 DUP4 PUSH2 0xB7E JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x294 JUMPI PUSH32 0xC356EB5D2FF4831654C13AFFE916EDB329B5146C30EB257B66FD928A2C59F2A6 SWAP9 PUSH1 0x80 SWAP9 MLOAD SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 SWAP8 SWAP9 POP SWAP9 PUSH2 0x1A9 JUMP JUMPDEST DUP10 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x24E JUMP JUMPDEST DUP6 MLOAD RETURNDATASIZE DUP13 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x2C9 SWAP10 POP PUSH2 0x2D5 SWAP2 SWAP6 POP PUSH2 0x2C0 PUSH1 0xCE SLOAD DUP3 PUSH2 0x12B7 JUMP JUMPDEST SWAP10 DUP11 DUP1 SWAP3 PUSH2 0x10D0 JUMP JUMPDEST SWAP6 DUP4 PUSH1 0xCC SLOAD AND SWAP1 PUSH2 0x10F3 JUMP JUMPDEST PUSH2 0x2E9 DUP5 DUP3 PUSH1 0xCA SLOAD AND DUP4 PUSH1 0xCD SLOAD AND SWAP1 PUSH2 0x10F3 JUMP JUMPDEST CODESIZE DUP1 PUSH2 0x181 JUMP JUMPDEST SWAP1 POP DUP5 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x31A JUMPI JUMPDEST PUSH2 0x307 DUP2 DUP4 PUSH2 0xB7E JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x316 JUMPI MLOAD CODESIZE PUSH2 0x17A JUMP JUMPDEST DUP12 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x2FD JUMP JUMPDEST DUP8 MLOAD RETURNDATASIZE DUP15 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x358 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x358 JUMPI PUSH1 0xCD SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x358 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x358 JUMPI CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x358 JUMPI PUSH2 0x38A PUSH2 0x1228 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0x33 SLOAD AND OR PUSH1 0x33 SSTORE DUP1 RETURN JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x358 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x358 JUMPI PUSH1 0xCC SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x358 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x358 JUMPI PUSH1 0x20 SWAP1 PUSH1 0xD1 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x358 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x358 JUMPI PUSH1 0xD0 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x358 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x358 JUMPI CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x358 JUMPI PUSH2 0x43F PUSH2 0x1228 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0xCF SLOAD AND OR PUSH1 0xCF SSTORE DUP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x358 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x358 JUMPI CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x358 JUMPI PUSH2 0x483 PUSH2 0x1228 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0xCA SLOAD AND OR PUSH1 0xCA SSTORE DUP1 RETURN JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x358 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x358 JUMPI PUSH1 0xCB SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x358 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x358 JUMPI PUSH1 0xCF SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP SWAP2 CALLVALUE PUSH2 0x5BF JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x5BF JUMPI POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS SUB PUSH2 0x557 JUMPI PUSH1 0x20 DUP3 MLOAD PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP2 MSTORE RETURN JUMPDEST PUSH1 0x20 PUSH1 0x84 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x555550535570677261646561626C653A206D757374206E6F742062652063616C PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6C6564207468726F7567682064656C656761746563616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP1 REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x32B JUMPI PUSH2 0x120 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x32B JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP1 CALLDATALOAD DUP3 DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x802 JUMPI PUSH1 0x24 CALLDATALOAD SWAP3 DUP1 DUP5 AND DUP1 SWAP5 SUB PUSH2 0x7FE JUMPI PUSH1 0x44 CALLDATALOAD SWAP2 DUP2 DUP4 AND DUP1 SWAP4 SUB PUSH2 0x7FA JUMPI PUSH1 0x64 CALLDATALOAD DUP3 DUP2 AND DUP1 SWAP2 SUB PUSH2 0x7F6 JUMPI PUSH1 0x84 CALLDATALOAD DUP4 DUP2 AND DUP1 SWAP2 SUB PUSH2 0x7F2 JUMPI PUSH1 0xA4 CALLDATALOAD SWAP1 PUSH1 0xC4 CALLDATALOAD SWAP3 DUP6 DUP5 AND DUP1 SWAP5 SUB PUSH2 0x7EE JUMPI PUSH1 0xE4 CALLDATALOAD SWAP6 DUP7 AND DUP1 SWAP7 SUB PUSH2 0x7EE JUMPI PUSH2 0x104 CALLDATALOAD SWAP7 DUP12 SLOAD SWAP9 PUSH1 0xFF DUP11 PUSH1 0x8 SHR AND ISZERO SWAP10 DUP11 DUP1 SWAP12 PUSH2 0x7E1 JUMPI JUMPDEST DUP1 ISZERO PUSH2 0x7CA JUMPI JUMPDEST ISZERO PUSH2 0x770 JUMPI PUSH1 0xFF NOT DUP2 AND PUSH1 0x1 OR DUP15 SSTORE DUP11 PUSH2 0x75F JUMPI JUMPDEST POP PUSH8 0xDE0B6B3A7640000 DUP1 DUP7 GT PUSH2 0x750 JUMPI DUP10 GT PUSH2 0x742 JUMPI POP DUP12 SLOAD SWAP10 PUSH2 0x6B2 PUSH1 0xFF DUP13 PUSH1 0x8 SHR AND PUSH2 0x6A4 DUP2 PUSH2 0x1070 JUMP JUMPDEST PUSH2 0x6AD DUP2 PUSH2 0x1070 JUMP JUMPDEST PUSH2 0x1070 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL SWAP7 DUP8 PUSH1 0x33 SLOAD AND OR PUSH1 0x33 SSTORE DUP7 PUSH1 0xCA SLOAD AND OR PUSH1 0xCA SSTORE DUP6 PUSH1 0xCB SLOAD AND OR PUSH1 0xCB SSTORE DUP5 PUSH1 0xCC SLOAD AND OR PUSH1 0xCC SSTORE DUP4 PUSH1 0xCD SLOAD AND OR PUSH1 0xCD SSTORE PUSH1 0xCE SSTORE DUP2 PUSH1 0xCF SLOAD AND OR PUSH1 0xCF SSTORE PUSH1 0xD0 SLOAD AND OR PUSH1 0xD0 SSTORE PUSH1 0xD1 SSTORE PUSH2 0x70A JUMPI DUP3 DUP1 RETURN JUMPDEST PUSH2 0xFF00 NOT AND DUP3 SSTORE MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 SWAP1 LOG1 CODESIZE DUP1 DUP3 DUP1 RETURN JUMPDEST DUP12 MLOAD PUSH4 0x2A9FFAB7 PUSH1 0xE2 SHL DUP2 MSTORE REVERT JUMPDEST POP DUP12 MLOAD PUSH4 0x2A9FFAB7 PUSH1 0xE2 SHL DUP2 MSTORE REVERT JUMPDEST PUSH2 0xFFFF NOT AND PUSH2 0x101 OR DUP14 SSTORE CODESIZE PUSH2 0x676 JUMP JUMPDEST DUP13 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP5 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x661 JUMPI POP PUSH1 0x1 PUSH1 0xFF DUP3 AND EQ PUSH2 0x661 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0xFF DUP3 AND LT PUSH2 0x65A JUMP JUMPDEST DUP11 DUP1 REVERT JUMPDEST DUP9 DUP1 REVERT JUMPDEST DUP8 DUP1 REVERT JUMPDEST DUP7 DUP1 REVERT JUMPDEST DUP6 DUP1 REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST DUP1 DUP5 DUP5 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x8EF JUMPI DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND DUP3 SUB PUSH2 0x802 JUMPI PUSH1 0x24 CALLDATALOAD SWAP4 PUSH8 0xFFFFFFFFFFFFFFFF DUP6 GT PUSH2 0x7FE JUMPI CALLDATASIZE PUSH1 0x23 DUP7 ADD SLT ISZERO PUSH2 0x7FE JUMPI DUP5 ADD CALLDATALOAD SWAP1 PUSH2 0x85E PUSH2 0x855 DUP4 PUSH2 0xBB6 JUMP JUMPDEST SWAP5 MLOAD SWAP5 DUP6 PUSH2 0xB7E JUMP JUMPDEST DUP2 DUP5 MSTORE CALLDATASIZE PUSH1 0x24 DUP4 DUP8 ADD ADD GT PUSH2 0x7FE JUMPI PUSH2 0x8EC SWAP6 PUSH1 0x20 DUP4 PUSH2 0x8DF SWAP5 PUSH1 0x24 PUSH1 0x1 SWAP10 ADD DUP4 DUP10 ADD CALLDATACOPY DUP7 ADD ADD MSTORE DUP1 PUSH32 0x0 AND SWAP1 PUSH2 0x8B6 DUP3 ADDRESS EQ ISZERO PUSH2 0xBD2 JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD AND EQ PUSH2 0xC33 JUMP JUMPDEST PUSH2 0x8E7 PUSH2 0x1228 JUMP JUMPDEST PUSH2 0xC94 JUMP JUMPDEST DUP1 RETURN JUMPDEST POP POP REVERT JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x358 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x358 JUMPI PUSH1 0x20 SWAP1 PUSH1 0xCE SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x32B JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x32B JUMPI DUP1 CALLDATALOAD SWAP2 PUSH2 0x930 PUSH2 0x1228 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP4 GT PUSH2 0x947 JUMPI POP POP PUSH1 0xCE SSTORE DUP1 RETURN JUMPDEST MLOAD PUSH4 0x2A9FFAB7 PUSH1 0xE2 SHL DUP2 MSTORE REVERT JUMPDEST DUP3 DUP2 DUP6 CALLVALUE PUSH2 0x358 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x358 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 CALLDATALOAD DUP4 DUP2 AND DUP2 SUB PUSH2 0x32B JUMPI PUSH2 0x9B3 DUP5 PUSH2 0x8EC SWAP6 PUSH32 0x0 AND SWAP1 PUSH2 0x8B6 DUP3 ADDRESS EQ ISZERO PUSH2 0xBD2 JUMP JUMPDEST PUSH2 0x9BB PUSH2 0x1228 JUMP JUMPDEST PUSH2 0x9D0 PUSH2 0x9C7 DUP5 PUSH2 0xBB6 JUMP JUMPDEST SWAP3 MLOAD SWAP3 DUP4 PUSH2 0xB7E JUMP JUMPDEST DUP3 DUP3 MSTORE PUSH1 0x1F NOT PUSH2 0x9DF DUP5 PUSH2 0xBB6 JUMP JUMPDEST ADD CALLDATASIZE PUSH1 0x20 DUP5 ADD CALLDATACOPY PUSH2 0xC94 JUMP JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x358 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x358 JUMPI PUSH1 0xCA SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x358 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x358 JUMPI CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x358 JUMPI PUSH2 0xA42 PUSH2 0x1228 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0xCB SLOAD AND OR PUSH1 0xCB SSTORE DUP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x358 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x358 JUMPI CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x358 JUMPI PUSH2 0xA86 PUSH2 0x1228 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0xD0 SLOAD AND OR PUSH1 0xD0 SSTORE DUP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x358 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x358 JUMPI CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x358 JUMPI PUSH2 0xACA PUSH2 0x1228 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0xCC SLOAD AND OR PUSH1 0xCC SSTORE DUP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x358 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x358 JUMPI CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x358 JUMPI PUSH2 0xB0E PUSH2 0x1228 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0xCD SLOAD AND OR PUSH1 0xCD SSTORE DUP1 RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x32B JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x32B JUMPI DUP1 CALLDATALOAD SWAP2 PUSH2 0xB42 PUSH2 0x1228 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP4 GT PUSH2 0x947 JUMPI POP POP PUSH1 0xD1 SSTORE DUP1 RETURN JUMPDEST DUP5 SWAP1 CALLVALUE PUSH2 0x358 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x358 JUMPI PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xBA0 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xBA0 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0xBD9 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x19195B1959D85D1958D85B1B PUSH1 0xA2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0xC3A JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x6163746976652070726F7879 PUSH1 0xA0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0xFF PUSH32 0x4910FDFA16FED3260ED0E7147F7CC6DA11A60208B5B9406D12A635614FFD9143 SLOAD AND PUSH1 0x0 EQ PUSH2 0xCCE JUMPI POP PUSH2 0xCCC SWAP2 POP PUSH2 0xECA JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x52D1902D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x20 SWAP4 SWAP2 SWAP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP6 DUP2 PUSH1 0x4 DUP2 DUP6 GAS STATICCALL PUSH1 0x0 SWAP2 DUP2 PUSH2 0xE9B JUMPI JUMPDEST POP PUSH2 0xD5F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A206E657720696D706C656D656E74617469 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x6F6E206973206E6F742055555053 PUSH1 0x90 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP4 SWAP5 SWAP4 PUSH32 0xC9F76B5EC45E5CDEF99837D7B6D2467235C1DF8933C8CA56DF5C35AFA2C7D444 ADD PUSH2 0xE44 JUMPI PUSH2 0xD91 DUP4 PUSH2 0xECA JUMP JUMPDEST PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x0 DUP1 LOG2 DUP4 MLOAD ISZERO SWAP1 DUP2 ISZERO SWAP2 PUSH2 0xE3C JUMPI JUMPDEST POP PUSH2 0xDCC JUMPI POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xE39 SWAP5 PUSH2 0xDDD PUSH1 0x27 PUSH2 0xBB6 JUMP JUMPDEST SWAP5 PUSH2 0xDEB PUSH1 0x40 MLOAD SWAP7 DUP8 PUSH2 0xB7E JUMP JUMPDEST PUSH1 0x27 DUP7 MSTORE PUSH32 0x416464726573733A206C6F772D6C6576656C2064656C65676174652063616C6C DUP2 DUP8 ADD MSTORE PUSH7 0x819985A5B1959 PUSH1 0xCA SHL PUSH1 0x40 DUP8 ADD MSTORE DUP2 MLOAD SWAP2 ADD DUP5 GAS DELEGATECALL PUSH2 0xE33 PUSH2 0xF6C JUMP JUMPDEST SWAP2 PUSH2 0xF9C JUMP JUMPDEST POP JUMP JUMPDEST SWAP1 POP CODESIZE PUSH2 0xDC2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A20756E737570706F727465642070726F78 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x1A58589B1955555251 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 SWAP2 DUP8 DUP3 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0xEC3 JUMPI JUMPDEST PUSH2 0xEB2 DUP2 DUP4 PUSH2 0xB7E JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x5BF JUMPI POP MLOAD SWAP1 CODESIZE PUSH2 0xCFE JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xEA8 JUMP JUMPDEST DUP1 EXTCODESIZE ISZERO PUSH2 0xF11 JUMPI PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x1BDD08184818DBDB9D1C9858DD PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST RETURNDATASIZE ISZERO PUSH2 0xF97 JUMPI RETURNDATASIZE SWAP1 PUSH2 0xF7D DUP3 PUSH2 0xBB6 JUMP JUMPDEST SWAP2 PUSH2 0xF8B PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0xB7E JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST SWAP2 SWAP3 SWAP1 ISZERO PUSH2 0xFFE JUMPI POP DUP2 MLOAD ISZERO PUSH2 0xFB0 JUMPI POP SWAP1 JUMP JUMPDEST EXTCODESIZE ISZERO PUSH2 0xFB9 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP3 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x1011 JUMPI POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE DUP2 PUSH1 0x20 DUP1 PUSH1 0x4 DUP4 ADD MSTORE DUP3 MLOAD SWAP1 DUP2 PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x0 SWAP4 JUMPDEST DUP3 DUP6 LT PUSH2 0x1057 JUMPI POP POP PUSH1 0x44 SWAP3 POP PUSH1 0x0 DUP4 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SUB ADD SWAP1 REVERT JUMPDEST DUP5 DUP2 ADD DUP3 ADD MLOAD DUP7 DUP7 ADD PUSH1 0x44 ADD MSTORE SWAP4 DUP2 ADD SWAP4 DUP6 SWAP4 POP PUSH2 0x1034 JUMP JUMPDEST ISZERO PUSH2 0x1077 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x10DD JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 PUSH2 0x1183 SWAP2 PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD SWAP4 PUSH1 0x20 SWAP7 DUP8 DUP7 ADD SWAP5 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP4 AND PUSH1 0x24 DUP9 ADD MSTORE PUSH1 0x44 DUP8 ADD MSTORE PUSH1 0x44 DUP7 MSTORE PUSH2 0x1134 PUSH1 0x64 DUP8 PUSH2 0xB7E JUMP JUMPDEST AND SWAP3 PUSH2 0x113F DUP8 PUSH2 0xBB6 JUMP JUMPDEST SWAP5 PUSH2 0x114D PUSH1 0x40 MLOAD SWAP7 DUP8 PUSH2 0xB7E JUMP JUMPDEST DUP8 DUP7 MSTORE PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP9 DUP8 ADD MSTORE MLOAD SWAP1 DUP3 DUP6 GAS CALL PUSH2 0xE33 PUSH2 0xF6C JUMP JUMPDEST DUP1 MLOAD SWAP1 DUP3 DUP3 ISZERO SWAP3 DUP4 ISZERO PUSH2 0x11F3 JUMPI JUMPDEST POP POP POP ISZERO PUSH2 0x119C JUMPI POP JUMP JUMPDEST PUSH1 0x84 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0x1203 SWAP4 POP DUP3 ADD DUP2 ADD SWAP2 ADD PUSH2 0x120B JUMP JUMPDEST CODESIZE DUP3 DUP2 PUSH2 0x1191 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x1223 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x1223 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x40 MLOAD PUSH4 0xD994D6D5 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x12AB JUMPI PUSH1 0x0 SWAP2 PUSH2 0x127D JUMPI JUMPDEST POP ISZERO PUSH2 0x126B JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1DD1B1B5 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x129E SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x12A4 JUMPI JUMPDEST PUSH2 0x1296 DUP2 DUP4 PUSH2 0xB7E JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x120B JUMP JUMPDEST CODESIZE PUSH2 0x1263 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x128C JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP2 DUP2 MUL SWAP2 DUP2 DUP4 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x10DD JUMPI PUSH8 0xDE0B6B3A7640000 SWAP1 DIV SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP2 DIFFICULTY DUP13 PUSH22 0x79344F25543739BA1E9BB307D6DE063F5E15BDE91388 0x4E 0xD4 0xCA 0xE1 PUSH31 0x4364736F6C6343000814003300000000000000000000000000000000000000 ",
      "sourceMap": "497:7833:51:-:0;;;;;;;1332:4:9;1324:13;;497:7833:51;;;;;;1324:13:9;497:7833:51;;;;;;;;;;;;;;;;;;;"
    },
    "deployedBytecode": {
      "functionDebugData": {
        "abi_decode_bool_fromMemory": {
          "entryPoint": 4619,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "array_allocation_size_bytes": {
          "entryPoint": 2998,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "checked_sub_uint256": {
          "entryPoint": 4304,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "extract_returndata": {
          "entryPoint": 3948,
          "id": null,
          "parameterSlots": 0,
          "returnSlots": 1
        },
        "finalize_allocation": {
          "entryPoint": 2942,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 0
        },
        "fun_checkIfAuthorizedChanger": {
          "entryPoint": 4648,
          "id": 21468,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "fun_mulPrec": {
          "entryPoint": 4791,
          "id": 28012,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "fun_safeTransfer": {
          "entryPoint": 4339,
          "id": 6347,
          "parameterSlots": 3,
          "returnSlots": 0
        },
        "fun_setImplementation": {
          "entryPoint": 3786,
          "id": 678,
          "parameterSlots": 1,
          "returnSlots": 0
        },
        "fun_upgradeToAndCallUUPS": {
          "entryPoint": 3220,
          "id": 776,
          "parameterSlots": 3,
          "returnSlots": 0
        },
        "fun_verifyCallResultFromTarget": {
          "entryPoint": 3996,
          "id": 2931,
          "parameterSlots": 4,
          "returnSlots": 1
        },
        "require_helper_stringliteral_36e1": {
          "entryPoint": 3026,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 0
        },
        "require_helper_stringliteral_52f1": {
          "entryPoint": 3123,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 0
        },
        "require_helper_stringliteral_d688": {
          "entryPoint": 4208,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 0
        }
      },
      "generatedSources": [],
      "immutableReferences": {
        "1143": [
          {
            "length": 32,
            "start": 1280
          },
          {
            "length": 32,
            "start": 2185
          },
          {
            "length": 32,
            "start": 2438
          }
        ]
      },
      "linkReferences": {},
      "opcodes": "PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 SWAP1 DUP2 CALLDATASIZE LT ISZERO PUSH2 0x16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0xC340A24 EQ PUSH2 0xB59 JUMPI POP DUP1 PUSH4 0x10BEC3E9 EQ PUSH2 0xB24 JUMPI DUP1 PUSH4 0x11059891 EQ PUSH2 0xAE0 JUMPI DUP1 PUSH4 0x11A37CC0 EQ PUSH2 0xA9C JUMPI DUP1 PUSH4 0x1545EE91 EQ PUSH2 0xA58 JUMPI DUP1 PUSH4 0x15CCE224 EQ PUSH2 0xA14 JUMPI DUP1 PUSH4 0x25BC6C41 EQ PUSH2 0x9EB JUMPI DUP4 DUP2 PUSH4 0x3659CFE6 EQ PUSH2 0x954 JUMPI POP DUP1 PUSH4 0x374AA85D EQ PUSH2 0x912 JUMPI DUP1 PUSH4 0x4DD75306 EQ PUSH2 0x8F3 JUMPI DUP4 DUP2 PUSH4 0x4F1EF286 EQ PUSH2 0x806 JUMPI POP DUP1 PUSH4 0x529B44AB EQ PUSH2 0x5C2 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x4EB JUMPI DUP1 PUSH4 0x556F2F5F EQ PUSH2 0x4C2 JUMPI DUP1 PUSH4 0x647846A5 EQ PUSH2 0x499 JUMPI DUP1 PUSH4 0x6A04B787 EQ PUSH2 0x455 JUMPI DUP1 PUSH4 0xA9904342 EQ PUSH2 0x411 JUMPI DUP1 PUSH4 0xCC40272A EQ PUSH2 0x3E8 JUMPI DUP1 PUSH4 0xD6A82CD5 EQ PUSH2 0x3C9 JUMPI DUP1 PUSH4 0xD8B627F9 EQ PUSH2 0x3A0 JUMPI DUP1 PUSH4 0xE4C0AAF4 EQ PUSH2 0x35C JUMPI DUP1 PUSH4 0xEF922797 EQ PUSH2 0x32F JUMPI PUSH4 0xF7654176 EQ PUSH2 0x125 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x32B JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x32B JUMPI PUSH1 0xCA SLOAD DUP2 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP1 DUP3 MSTORE ADDRESS DUP6 DUP4 ADD MSTORE DUP6 SWAP4 DUP5 SWAP4 DUP5 SWAP4 SWAP2 SWAP3 DUP5 SWAP3 PUSH1 0x20 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 DUP3 AND SWAP1 DUP5 DUP2 PUSH1 0x24 DUP2 DUP6 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x321 JUMPI DUP13 SWAP2 PUSH2 0x2F0 JUMPI JUMPDEST POP DUP1 PUSH2 0x2A9 JUMPI JUMPDEST POP POP DUP1 PUSH1 0xCB SLOAD AND SWAP9 DUP6 MLOAD SWAP3 DUP4 MSTORE ADDRESS SWAP1 DUP4 ADD MSTORE DUP3 DUP3 PUSH1 0x24 DUP2 DUP13 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x29F JUMPI DUP11 SWAP3 PUSH2 0x23B JUMPI JUMPDEST POP SWAP1 PUSH32 0xC356EB5D2FF4831654C13AFFE916EDB329B5146C30EB257B66FD928A2C59F2A6 SWAP9 PUSH1 0x80 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 DUP3 PUSH2 0x1F3 JUMPI JUMPDEST POP POP POP DUP3 MLOAD SWAP6 DUP7 MSTORE DUP6 ADD MSTORE DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE LOG1 DUP1 RETURN JUMPDEST PUSH2 0x216 SWAP8 POP PUSH2 0x233 SWAP3 SWAP7 POP PUSH2 0x224 PUSH2 0x20D PUSH1 0xD1 SLOAD DUP10 PUSH2 0x12B7 JUMP JUMPDEST SWAP9 DUP10 DUP1 SWAP10 PUSH2 0x10D0 JUMP JUMPDEST SWAP9 DUP10 SWAP4 DUP4 PUSH1 0xCF SLOAD AND SWAP1 PUSH2 0x10F3 JUMP JUMPDEST PUSH1 0xCB SLOAD PUSH1 0xD0 SLOAD DUP3 AND SWAP2 AND PUSH2 0x10F3 JUMP JUMPDEST CODESIZE DUP1 DUP1 PUSH2 0x1DC JUMP JUMPDEST SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 DUP1 SWAP3 POP DUP9 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x298 JUMPI JUMPDEST PUSH2 0x258 DUP2 DUP4 PUSH2 0xB7E JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x294 JUMPI PUSH32 0xC356EB5D2FF4831654C13AFFE916EDB329B5146C30EB257B66FD928A2C59F2A6 SWAP9 PUSH1 0x80 SWAP9 MLOAD SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 SWAP8 SWAP9 POP SWAP9 PUSH2 0x1A9 JUMP JUMPDEST DUP10 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x24E JUMP JUMPDEST DUP6 MLOAD RETURNDATASIZE DUP13 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x2C9 SWAP10 POP PUSH2 0x2D5 SWAP2 SWAP6 POP PUSH2 0x2C0 PUSH1 0xCE SLOAD DUP3 PUSH2 0x12B7 JUMP JUMPDEST SWAP10 DUP11 DUP1 SWAP3 PUSH2 0x10D0 JUMP JUMPDEST SWAP6 DUP4 PUSH1 0xCC SLOAD AND SWAP1 PUSH2 0x10F3 JUMP JUMPDEST PUSH2 0x2E9 DUP5 DUP3 PUSH1 0xCA SLOAD AND DUP4 PUSH1 0xCD SLOAD AND SWAP1 PUSH2 0x10F3 JUMP JUMPDEST CODESIZE DUP1 PUSH2 0x181 JUMP JUMPDEST SWAP1 POP DUP5 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x31A JUMPI JUMPDEST PUSH2 0x307 DUP2 DUP4 PUSH2 0xB7E JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x316 JUMPI MLOAD CODESIZE PUSH2 0x17A JUMP JUMPDEST DUP12 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x2FD JUMP JUMPDEST DUP8 MLOAD RETURNDATASIZE DUP15 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x358 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x358 JUMPI PUSH1 0xCD SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x358 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x358 JUMPI CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x358 JUMPI PUSH2 0x38A PUSH2 0x1228 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0x33 SLOAD AND OR PUSH1 0x33 SSTORE DUP1 RETURN JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x358 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x358 JUMPI PUSH1 0xCC SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x358 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x358 JUMPI PUSH1 0x20 SWAP1 PUSH1 0xD1 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x358 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x358 JUMPI PUSH1 0xD0 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x358 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x358 JUMPI CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x358 JUMPI PUSH2 0x43F PUSH2 0x1228 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0xCF SLOAD AND OR PUSH1 0xCF SSTORE DUP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x358 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x358 JUMPI CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x358 JUMPI PUSH2 0x483 PUSH2 0x1228 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0xCA SLOAD AND OR PUSH1 0xCA SSTORE DUP1 RETURN JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x358 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x358 JUMPI PUSH1 0xCB SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x358 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x358 JUMPI PUSH1 0xCF SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP SWAP2 CALLVALUE PUSH2 0x5BF JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x5BF JUMPI POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS SUB PUSH2 0x557 JUMPI PUSH1 0x20 DUP3 MLOAD PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP2 MSTORE RETURN JUMPDEST PUSH1 0x20 PUSH1 0x84 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x555550535570677261646561626C653A206D757374206E6F742062652063616C PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6C6564207468726F7567682064656C656761746563616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP1 REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x32B JUMPI PUSH2 0x120 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x32B JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP1 CALLDATALOAD DUP3 DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x802 JUMPI PUSH1 0x24 CALLDATALOAD SWAP3 DUP1 DUP5 AND DUP1 SWAP5 SUB PUSH2 0x7FE JUMPI PUSH1 0x44 CALLDATALOAD SWAP2 DUP2 DUP4 AND DUP1 SWAP4 SUB PUSH2 0x7FA JUMPI PUSH1 0x64 CALLDATALOAD DUP3 DUP2 AND DUP1 SWAP2 SUB PUSH2 0x7F6 JUMPI PUSH1 0x84 CALLDATALOAD DUP4 DUP2 AND DUP1 SWAP2 SUB PUSH2 0x7F2 JUMPI PUSH1 0xA4 CALLDATALOAD SWAP1 PUSH1 0xC4 CALLDATALOAD SWAP3 DUP6 DUP5 AND DUP1 SWAP5 SUB PUSH2 0x7EE JUMPI PUSH1 0xE4 CALLDATALOAD SWAP6 DUP7 AND DUP1 SWAP7 SUB PUSH2 0x7EE JUMPI PUSH2 0x104 CALLDATALOAD SWAP7 DUP12 SLOAD SWAP9 PUSH1 0xFF DUP11 PUSH1 0x8 SHR AND ISZERO SWAP10 DUP11 DUP1 SWAP12 PUSH2 0x7E1 JUMPI JUMPDEST DUP1 ISZERO PUSH2 0x7CA JUMPI JUMPDEST ISZERO PUSH2 0x770 JUMPI PUSH1 0xFF NOT DUP2 AND PUSH1 0x1 OR DUP15 SSTORE DUP11 PUSH2 0x75F JUMPI JUMPDEST POP PUSH8 0xDE0B6B3A7640000 DUP1 DUP7 GT PUSH2 0x750 JUMPI DUP10 GT PUSH2 0x742 JUMPI POP DUP12 SLOAD SWAP10 PUSH2 0x6B2 PUSH1 0xFF DUP13 PUSH1 0x8 SHR AND PUSH2 0x6A4 DUP2 PUSH2 0x1070 JUMP JUMPDEST PUSH2 0x6AD DUP2 PUSH2 0x1070 JUMP JUMPDEST PUSH2 0x1070 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL SWAP7 DUP8 PUSH1 0x33 SLOAD AND OR PUSH1 0x33 SSTORE DUP7 PUSH1 0xCA SLOAD AND OR PUSH1 0xCA SSTORE DUP6 PUSH1 0xCB SLOAD AND OR PUSH1 0xCB SSTORE DUP5 PUSH1 0xCC SLOAD AND OR PUSH1 0xCC SSTORE DUP4 PUSH1 0xCD SLOAD AND OR PUSH1 0xCD SSTORE PUSH1 0xCE SSTORE DUP2 PUSH1 0xCF SLOAD AND OR PUSH1 0xCF SSTORE PUSH1 0xD0 SLOAD AND OR PUSH1 0xD0 SSTORE PUSH1 0xD1 SSTORE PUSH2 0x70A JUMPI DUP3 DUP1 RETURN JUMPDEST PUSH2 0xFF00 NOT AND DUP3 SSTORE MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 SWAP1 LOG1 CODESIZE DUP1 DUP3 DUP1 RETURN JUMPDEST DUP12 MLOAD PUSH4 0x2A9FFAB7 PUSH1 0xE2 SHL DUP2 MSTORE REVERT JUMPDEST POP DUP12 MLOAD PUSH4 0x2A9FFAB7 PUSH1 0xE2 SHL DUP2 MSTORE REVERT JUMPDEST PUSH2 0xFFFF NOT AND PUSH2 0x101 OR DUP14 SSTORE CODESIZE PUSH2 0x676 JUMP JUMPDEST DUP13 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP5 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x661 JUMPI POP PUSH1 0x1 PUSH1 0xFF DUP3 AND EQ PUSH2 0x661 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0xFF DUP3 AND LT PUSH2 0x65A JUMP JUMPDEST DUP11 DUP1 REVERT JUMPDEST DUP9 DUP1 REVERT JUMPDEST DUP8 DUP1 REVERT JUMPDEST DUP7 DUP1 REVERT JUMPDEST DUP6 DUP1 REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST DUP1 DUP5 DUP5 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x8EF JUMPI DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND DUP3 SUB PUSH2 0x802 JUMPI PUSH1 0x24 CALLDATALOAD SWAP4 PUSH8 0xFFFFFFFFFFFFFFFF DUP6 GT PUSH2 0x7FE JUMPI CALLDATASIZE PUSH1 0x23 DUP7 ADD SLT ISZERO PUSH2 0x7FE JUMPI DUP5 ADD CALLDATALOAD SWAP1 PUSH2 0x85E PUSH2 0x855 DUP4 PUSH2 0xBB6 JUMP JUMPDEST SWAP5 MLOAD SWAP5 DUP6 PUSH2 0xB7E JUMP JUMPDEST DUP2 DUP5 MSTORE CALLDATASIZE PUSH1 0x24 DUP4 DUP8 ADD ADD GT PUSH2 0x7FE JUMPI PUSH2 0x8EC SWAP6 PUSH1 0x20 DUP4 PUSH2 0x8DF SWAP5 PUSH1 0x24 PUSH1 0x1 SWAP10 ADD DUP4 DUP10 ADD CALLDATACOPY DUP7 ADD ADD MSTORE DUP1 PUSH32 0x0 AND SWAP1 PUSH2 0x8B6 DUP3 ADDRESS EQ ISZERO PUSH2 0xBD2 JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD AND EQ PUSH2 0xC33 JUMP JUMPDEST PUSH2 0x8E7 PUSH2 0x1228 JUMP JUMPDEST PUSH2 0xC94 JUMP JUMPDEST DUP1 RETURN JUMPDEST POP POP REVERT JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x358 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x358 JUMPI PUSH1 0x20 SWAP1 PUSH1 0xCE SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x32B JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x32B JUMPI DUP1 CALLDATALOAD SWAP2 PUSH2 0x930 PUSH2 0x1228 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP4 GT PUSH2 0x947 JUMPI POP POP PUSH1 0xCE SSTORE DUP1 RETURN JUMPDEST MLOAD PUSH4 0x2A9FFAB7 PUSH1 0xE2 SHL DUP2 MSTORE REVERT JUMPDEST DUP3 DUP2 DUP6 CALLVALUE PUSH2 0x358 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x358 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 CALLDATALOAD DUP4 DUP2 AND DUP2 SUB PUSH2 0x32B JUMPI PUSH2 0x9B3 DUP5 PUSH2 0x8EC SWAP6 PUSH32 0x0 AND SWAP1 PUSH2 0x8B6 DUP3 ADDRESS EQ ISZERO PUSH2 0xBD2 JUMP JUMPDEST PUSH2 0x9BB PUSH2 0x1228 JUMP JUMPDEST PUSH2 0x9D0 PUSH2 0x9C7 DUP5 PUSH2 0xBB6 JUMP JUMPDEST SWAP3 MLOAD SWAP3 DUP4 PUSH2 0xB7E JUMP JUMPDEST DUP3 DUP3 MSTORE PUSH1 0x1F NOT PUSH2 0x9DF DUP5 PUSH2 0xBB6 JUMP JUMPDEST ADD CALLDATASIZE PUSH1 0x20 DUP5 ADD CALLDATACOPY PUSH2 0xC94 JUMP JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x358 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x358 JUMPI PUSH1 0xCA SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x358 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x358 JUMPI CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x358 JUMPI PUSH2 0xA42 PUSH2 0x1228 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0xCB SLOAD AND OR PUSH1 0xCB SSTORE DUP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x358 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x358 JUMPI CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x358 JUMPI PUSH2 0xA86 PUSH2 0x1228 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0xD0 SLOAD AND OR PUSH1 0xD0 SSTORE DUP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x358 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x358 JUMPI CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x358 JUMPI PUSH2 0xACA PUSH2 0x1228 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0xCC SLOAD AND OR PUSH1 0xCC SSTORE DUP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x358 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x358 JUMPI CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x358 JUMPI PUSH2 0xB0E PUSH2 0x1228 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0xCD SLOAD AND OR PUSH1 0xCD SSTORE DUP1 RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x32B JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x32B JUMPI DUP1 CALLDATALOAD SWAP2 PUSH2 0xB42 PUSH2 0x1228 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP4 GT PUSH2 0x947 JUMPI POP POP PUSH1 0xD1 SSTORE DUP1 RETURN JUMPDEST DUP5 SWAP1 CALLVALUE PUSH2 0x358 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x358 JUMPI PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xBA0 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xBA0 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0xBD9 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x19195B1959D85D1958D85B1B PUSH1 0xA2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0xC3A JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x6163746976652070726F7879 PUSH1 0xA0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0xFF PUSH32 0x4910FDFA16FED3260ED0E7147F7CC6DA11A60208B5B9406D12A635614FFD9143 SLOAD AND PUSH1 0x0 EQ PUSH2 0xCCE JUMPI POP PUSH2 0xCCC SWAP2 POP PUSH2 0xECA JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x52D1902D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x20 SWAP4 SWAP2 SWAP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP6 DUP2 PUSH1 0x4 DUP2 DUP6 GAS STATICCALL PUSH1 0x0 SWAP2 DUP2 PUSH2 0xE9B JUMPI JUMPDEST POP PUSH2 0xD5F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A206E657720696D706C656D656E74617469 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x6F6E206973206E6F742055555053 PUSH1 0x90 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP4 SWAP5 SWAP4 PUSH32 0xC9F76B5EC45E5CDEF99837D7B6D2467235C1DF8933C8CA56DF5C35AFA2C7D444 ADD PUSH2 0xE44 JUMPI PUSH2 0xD91 DUP4 PUSH2 0xECA JUMP JUMPDEST PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x0 DUP1 LOG2 DUP4 MLOAD ISZERO SWAP1 DUP2 ISZERO SWAP2 PUSH2 0xE3C JUMPI JUMPDEST POP PUSH2 0xDCC JUMPI POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xE39 SWAP5 PUSH2 0xDDD PUSH1 0x27 PUSH2 0xBB6 JUMP JUMPDEST SWAP5 PUSH2 0xDEB PUSH1 0x40 MLOAD SWAP7 DUP8 PUSH2 0xB7E JUMP JUMPDEST PUSH1 0x27 DUP7 MSTORE PUSH32 0x416464726573733A206C6F772D6C6576656C2064656C65676174652063616C6C DUP2 DUP8 ADD MSTORE PUSH7 0x819985A5B1959 PUSH1 0xCA SHL PUSH1 0x40 DUP8 ADD MSTORE DUP2 MLOAD SWAP2 ADD DUP5 GAS DELEGATECALL PUSH2 0xE33 PUSH2 0xF6C JUMP JUMPDEST SWAP2 PUSH2 0xF9C JUMP JUMPDEST POP JUMP JUMPDEST SWAP1 POP CODESIZE PUSH2 0xDC2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A20756E737570706F727465642070726F78 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x1A58589B1955555251 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 SWAP2 DUP8 DUP3 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0xEC3 JUMPI JUMPDEST PUSH2 0xEB2 DUP2 DUP4 PUSH2 0xB7E JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x5BF JUMPI POP MLOAD SWAP1 CODESIZE PUSH2 0xCFE JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xEA8 JUMP JUMPDEST DUP1 EXTCODESIZE ISZERO PUSH2 0xF11 JUMPI PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x1BDD08184818DBDB9D1C9858DD PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST RETURNDATASIZE ISZERO PUSH2 0xF97 JUMPI RETURNDATASIZE SWAP1 PUSH2 0xF7D DUP3 PUSH2 0xBB6 JUMP JUMPDEST SWAP2 PUSH2 0xF8B PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0xB7E JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST SWAP2 SWAP3 SWAP1 ISZERO PUSH2 0xFFE JUMPI POP DUP2 MLOAD ISZERO PUSH2 0xFB0 JUMPI POP SWAP1 JUMP JUMPDEST EXTCODESIZE ISZERO PUSH2 0xFB9 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP3 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x1011 JUMPI POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE DUP2 PUSH1 0x20 DUP1 PUSH1 0x4 DUP4 ADD MSTORE DUP3 MLOAD SWAP1 DUP2 PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x0 SWAP4 JUMPDEST DUP3 DUP6 LT PUSH2 0x1057 JUMPI POP POP PUSH1 0x44 SWAP3 POP PUSH1 0x0 DUP4 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SUB ADD SWAP1 REVERT JUMPDEST DUP5 DUP2 ADD DUP3 ADD MLOAD DUP7 DUP7 ADD PUSH1 0x44 ADD MSTORE SWAP4 DUP2 ADD SWAP4 DUP6 SWAP4 POP PUSH2 0x1034 JUMP JUMPDEST ISZERO PUSH2 0x1077 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x10DD JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 PUSH2 0x1183 SWAP2 PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD SWAP4 PUSH1 0x20 SWAP7 DUP8 DUP7 ADD SWAP5 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP4 AND PUSH1 0x24 DUP9 ADD MSTORE PUSH1 0x44 DUP8 ADD MSTORE PUSH1 0x44 DUP7 MSTORE PUSH2 0x1134 PUSH1 0x64 DUP8 PUSH2 0xB7E JUMP JUMPDEST AND SWAP3 PUSH2 0x113F DUP8 PUSH2 0xBB6 JUMP JUMPDEST SWAP5 PUSH2 0x114D PUSH1 0x40 MLOAD SWAP7 DUP8 PUSH2 0xB7E JUMP JUMPDEST DUP8 DUP7 MSTORE PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP9 DUP8 ADD MSTORE MLOAD SWAP1 DUP3 DUP6 GAS CALL PUSH2 0xE33 PUSH2 0xF6C JUMP JUMPDEST DUP1 MLOAD SWAP1 DUP3 DUP3 ISZERO SWAP3 DUP4 ISZERO PUSH2 0x11F3 JUMPI JUMPDEST POP POP POP ISZERO PUSH2 0x119C JUMPI POP JUMP JUMPDEST PUSH1 0x84 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0x1203 SWAP4 POP DUP3 ADD DUP2 ADD SWAP2 ADD PUSH2 0x120B JUMP JUMPDEST CODESIZE DUP3 DUP2 PUSH2 0x1191 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x1223 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x1223 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x40 MLOAD PUSH4 0xD994D6D5 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x12AB JUMPI PUSH1 0x0 SWAP2 PUSH2 0x127D JUMPI JUMPDEST POP ISZERO PUSH2 0x126B JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1DD1B1B5 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x129E SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x12A4 JUMPI JUMPDEST PUSH2 0x1296 DUP2 DUP4 PUSH2 0xB7E JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x120B JUMP JUMPDEST CODESIZE PUSH2 0x1263 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x128C JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP2 DUP2 MUL SWAP2 DUP2 DUP4 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x10DD JUMPI PUSH8 0xDE0B6B3A7640000 SWAP1 DIV SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP2 DIFFICULTY DUP13 PUSH22 0x79344F25543739BA1E9BB307D6DE063F5E15BDE91388 0x4E 0xD4 0xCA 0xE1 PUSH31 0x4364736F6C6343000814003300000000000000000000000000000000000000 ",
      "sourceMap": "497:7833:51:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3846:7;497:7833;;;-1:-1:-1;;;3846:32:51;;;3872:4;3846:32;;;497:7833;3611:33;;;;;;3654;;3611;;3846:32;;-1:-1:-1;;;;;497:7833:51;;;;;3846:32;497:7833;;;;3846:32;;;;;;;;;;;497:7833;3892:18;;3888:405;;497:7833;;;;4357:8;497:7833;;;;;4357:33;;;3872:4;4357:33;;;497:7833;4357:33;;497:7833;4357:33;;;;;;;;;;;;;497:7833;4404:19;;4833:181;4404:19;497:7833;4404:19;;;;;;;;4400:418;;497:7833;;;;;;;;;;;;;;;;;;;4833:181;497:7833;;4400:418;4561:44;497:7833;;4780:26;497:7833;;;4679:26;4468:50;4494:23;497:7833;4468:50;;:::i;:::-;4561:44;;;;;:::i;:::-;497:7833;;;;4652:25;497:7833;;4679:26;;:::i;:::-;4357:8;497:7833;4753:25;497:7833;;;;;4780:26;:::i;:::-;4400:418;;;;;4357:33;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;497:7833;;;;4833:181;497:7833;;;;4357:33;;;;;;;;;;;497:7833;;;;4357:33;;;;;;497:7833;;971:66:6;497:7833:51;;971:66:6;;;;3888:405:51;4044:42;497:7833;;4158:25;497:7833;;;3954:48;3979:22;497:7833;3954:48;;:::i;:::-;4044:42;;;;;:::i;:::-;497:7833;;4132:24;497:7833;;4158:25;;:::i;:::-;4256;497:7833;;3846:7;497:7833;;;4230:24;497:7833;;4256:25;;:::i;:::-;3888:405;;;;3846:32;;;;;;;;;;;;;;;;:::i;:::-;;;497:7833;;;;;3846:32;;;497:7833;;;;3846:32;;;;;;497:7833;;971:66:6;497:7833:51;;971:66:6;;;;497:7833:51;;;;;;;;;;;;;;;;;;1102:39;497:7833;;;-1:-1:-1;;;;;497:7833:51;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;497:7833:51;;;;;-1:-1:-1;;;;;497:7833:51;;;;;;;;986:87:62;;:::i;:::-;-1:-1:-1;;;;;497:7833:51;;1885:23:62;497:7833:51;;;1885:23:62;497:7833:51;;;;;;;;;;;;;;;;;969:39;497:7833;;;-1:-1:-1;;;;;497:7833:51;;;;;;;;;;;;;;;;;;;;;;;;1593:38;497:7833;;;;;;;;;;;;;;;;;;;;;1462:40;497:7833;;;-1:-1:-1;;;;;497:7833:51;;;;;;;;;;;;;;;;-1:-1:-1;;497:7833:51;;;;;-1:-1:-1;;;;;497:7833:51;;;;;;;;986:87:62;;:::i;:::-;-1:-1:-1;;;;;497:7833:51;;6723:54;497:7833;;;6723:54;497:7833;;;;;;;;;;;-1:-1:-1;;497:7833:51;;;;;-1:-1:-1;;;;;497:7833:51;;;;;;;;986:87:62;;:::i;:::-;-1:-1:-1;;;;;497:7833:51;;5256:21;497:7833;;;5256:21;497:7833;;;;;;;;;;;;;;;;;889:22;497:7833;;;-1:-1:-1;;;;;497:7833:51;;;;;;;;;;;;;;;;;;;;;;1327:40;497:7833;;;-1:-1:-1;;;;;497:7833:51;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2333:6:9;-1:-1:-1;;;;;497:7833:51;2324:4:9;2316:23;497:7833:51;;;;;1312:66:6;497:7833:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;497:7833:51;;;;-1:-1:-1;;;;;497:7833:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;971:66:6;497:7833:51;;;971:66:6;3301:14:8;3347:34;;;;;;497:7833:51;3346:108:8;;;;497:7833:51;;;;-1:-1:-1;;497:7833:51;;;;;;;3562:65:8;;497:7833:51;633:8:94;;2821:35:51;;;2817:62;;2893:36;;2889:63;;497:7833;;;;5366:69:8;971:66:6;497:7833:51;;;971:66:6;5366:69:8;;;:::i;:::-;;;;:::i;:::-;;:::i;:::-;-1:-1:-1;;;;;497:7833:51;;;;1591:38:62;497:7833:51;;;1591:38:62;497:7833:51;;3040:18;497:7833;;;3040:18;497:7833;;3068:20;497:7833;;;3068:20;497:7833;;3098:52;497:7833;;;3098:52;497:7833;;3160:52;497:7833;;;3160:52;497:7833;3222:48;633:8:94;497:7833:51;3280:54;497:7833;;;3280:54;497:7833;3344:54;497:7833;;;3344:54;497:7833;3408:50;633:8:94;3647:99:8;;497:7833:51;;;3647:99:8;-1:-1:-1;;497:7833:51;;;;;;;3721:14:8;;497:7833:51;;3721:14:8;3647:99;;497:7833:51;;;2889:63;497:7833;;-1:-1:-1;;;2938:14:51;;;2817:62;-1:-1:-1;497:7833:51;;-1:-1:-1;;;2865:14:51;;;3562:65:8;-1:-1:-1;;497:7833:51;;;;;3562:65:8;;;497:7833:51;;;-1:-1:-1;;;497:7833:51;;;;;;;;;;;;;;;;;-1:-1:-1;;;497:7833:51;;;;;;;3346:108:8;3426:4;;1713:19:18;:23;3387:66:8;;3346:108;3387:66;971::6;497:7833:51;971:66:6;;;3436:17:8;3346:108;;3347:34;971:66:6;497:7833:51;971:66:6;;;3365:16:8;3347:34;;497:7833:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;497:7833:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;4109:4:9;497:7833:51;;;1963:87:9;497:7833:51;;;;;;;;;;;;;1898:6:9;;497:7833:51;1889:4:9;1873:80;1889:4;;1881:23;;1873:80;:::i;:::-;1312:66:6;497:7833:51;;1971:30:9;1963:87;:::i;:::-;986::62;;:::i;:::-;4109:4:9;:::i;:::-;497:7833:51;;;;;;;;;;;;;;;;;;;;;;1231:37;497:7833;;;;;;;;;;;;;;;-1:-1:-1;;497:7833:51;;;;;;986:87:62;;;:::i;:::-;633:8:94;6357:35:51;;6353:62;;633:8:94;;6425:48:51;633:8:94;497:7833:51;;6353:62;497:7833;-1:-1:-1;;;6401:14:51;;;497:7833;;;;;;;;;-1:-1:-1;;497:7833:51;;;;-1:-1:-1;;;;;497:7833:51;;;;;;;;;;1963:87:9;1898:6;3569:5;1898:6;;497:7833:51;1889:4:9;1873:80;1889:4;;1881:23;;1873:80;:::i;1963:87::-;986::62;;:::i;:::-;497:7833:51;;;;:::i;:::-;;;;;;:::i;:::-;;;;-1:-1:-1;;497:7833:51;;;:::i;:::-;;;;;;;3569:5:9;:::i;497:7833:51:-;;;;;;;;;;;;;;845:21;497:7833;;;-1:-1:-1;;;;;497:7833:51;;;;;;;;;;;;;;;;-1:-1:-1;;497:7833:51;;;;;-1:-1:-1;;;;;497:7833:51;;;;;;;;986:87:62;;:::i;:::-;-1:-1:-1;;;;;497:7833:51;;5466:23;497:7833;;;5466:23;497:7833;;;;;;;;;;;-1:-1:-1;;497:7833:51;;;;;-1:-1:-1;;;;;497:7833:51;;;;;;;;986:87:62;;:::i;:::-;-1:-1:-1;;;;;497:7833:51;;7027:54;497:7833;;;7027:54;497:7833;;;;;;;;;;;-1:-1:-1;;497:7833:51;;;;;-1:-1:-1;;;;;497:7833:51;;;;;;;;986:87:62;;:::i;:::-;-1:-1:-1;;;;;497:7833:51;;5735:52;497:7833;;;5735:52;497:7833;;;;;;;;;;;-1:-1:-1;;497:7833:51;;;;;-1:-1:-1;;;;;497:7833:51;;;;;;;;986:87:62;;:::i;:::-;-1:-1:-1;;;;;497:7833:51;;6033:52;497:7833;;;6033:52;497:7833;;;;;;;;;;;-1:-1:-1;;497:7833:51;;;;;;986:87:62;;;:::i;:::-;633:8:94;7357:36:51;;7353:63;;633:8:94;;7426:50:51;633:8:94;497:7833:51;;;;;;;;;;;;;;;;747:25:62;497:7833:51;-1:-1:-1;;;;;497:7833:51;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;497:7833:51;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;497:7833:51;;;;;;;;;;;;;;;;;-1:-1:-1;;;497:7833:51;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;497:7833:51;;;;;;;;;;;;;;;;;-1:-1:-1;;;497:7833:51;;;;;;;2820:944:6;;971:66;;;;3232:526;971:66;;;3330:17;;;;;:::i;:::-;2820:944::o;3232:526::-;497:7833:51;;-1:-1:-1;;;3383:63:6;;;;497:7833:51;;;;-1:-1:-1;;;;;497:7833:51;;;3383:63:6;497:7833:51;3383:63:6;497:7833:51;;3383:63:6;;-1:-1:-1;;3383:63:6;;;3232:526;-1:-1:-1;3379:302:6;;497:7833:51;;-1:-1:-1;;;3610:56:6;;3383:63;3610:56;;971:66;;;;;;;497:7833:51;971:66:6;497:7833:51;;;971:66:6;-1:-1:-1;;;971:66:6;;;;;;3610:56;3379:302;3496:28;;;;;971:66;;2171:17;;;:::i;:::-;2204:27;-1:-1:-1;2204:27:6;;497:7833:51;;2523:15:6;;;;:28;;;3379:302;2519:123;;;3232:526;;;2820:944::o;2519:123::-;-1:-1:-1;497:7833:51;7318:69:18;497:7833:51;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;497:7833:51;;;;7276:25:18;;;;;;;;;:::i;:::-;7318:69;;:::i;:::-;;2820:944:6:o;2523:28::-;;;;;;971:66;497:7833:51;;-1:-1:-1;;;971:66:6;;3383:63;971:66;;;;;;;;;497:7833:51;971:66:6;497:7833:51;;;971:66:6;-1:-1:-1;;;971:66:6;;;;;;;3383:63;;;;;;;;;;;;;;;;:::i;:::-;;;971:66;;;;;;3383:63;;;;;;;;;1699:281;1713:19:18;;:23;497:7833:51;;1312:66:6;497:7833:51;;-1:-1:-1;;;;;;497:7833:51;-1:-1:-1;;;;;497:7833:51;;;;;;;;;1699:281:6:o;497:7833:51:-;;;-1:-1:-1;;;497:7833:51;;;;;;;;;;;;;;;;;-1:-1:-1;;;497:7833:51;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;-1:-1:-1;497:7833:51;;;;:::o;:::-;;;:::o;7682:628:18:-;;;;7886:418;;;497:7833:51;;;7917:22:18;7913:286;;8212:17;;:::o;7913:286::-;1713:19;:23;497:7833:51;;8212:17:18;:::o;497:7833:51:-;;;-1:-1:-1;;;497:7833:51;;;;;;;;;;;;;;;;;;;;7886:418:18;497:7833:51;;;;-1:-1:-1;8991:21:18;:17;;9163:142;;;;;;;8987:379;497:7833:51;;;;;;9335:20:18;;497:7833:51;;9335:20:18;;;;497:7833:51;;;;;;;;;9011:1:18;497:7833:51;;;;;;;;;;;;9011:1:18;497:7833:51;;;;;;;;;;;;;;9335:20:18;;;;497:7833:51;;;;;;;;;;;;;;;;;;;-1:-1:-1;497:7833:51;;;;;;:::o;:::-;;;-1:-1:-1;;;497:7833:51;;;;;;;;;;;;;;;;;-1:-1:-1;;;497:7833:51;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;941:175:39;;;5535:69:44;941:175:39;-1:-1:-1;497:7833:51;;;1050:58:39;;;;;;971:66:6;;;;1050:58:39;;497:7833:51;;;;;;;;1050:58:39;;;497:7833:51;;;;;;1050:58:39;;;497:7833:51;1050:58:39;;:::i;:::-;497:7833:51;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;5487:31:44;;;;;;;;:::i;5535:69::-;497:7833:51;;5728:22:39;;;;:56;;;;;941:175;497:7833:51;;;;;;941:175:39;:::o;497:7833:51:-;;;;;;;;;;;;;;;;1050:58:39;497:7833:51;;;;;;;;-1:-1:-1;;;497:7833:51;;;;;5728:56:39;5754:30;;-1:-1:-1;5754:30:39;;;;;;;:::i;:::-;5728:56;;;;;497:7833:51;;;;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;497:7833:51;;2016:143:62;2081:8;497:7833:51;;;-1:-1:-1;;;2081:40:62;;2110:10;2081:40;;;497:7833:51;;2081:40:62;;497:7833:51;;;;;;-1:-1:-1;;;;;497:7833:51;2081:40:62;;;;;;;-1:-1:-1;2081:40:62;;;2016:143;2080:41;;2076:76;;2016:143::o;2076:76::-;497:7833:51;;-1:-1:-1;;;2130:22:62;;2081:40;;2130:22;2081:40;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;497:7833:51;;971:66:6;-1:-1:-1;971:66:6;;;;;1548:119:94;497:7833:51;;;;;;;;;;;;;;633:8:94;497:7833:51;;1548:119:94;:::o"
    },
    "gasEstimates": {
      "creation": {
        "codeDepositCost": "975000",
        "executionCost": "infinite",
        "totalCost": "infinite"
      },
      "external": {
        "acToken()": "2435",
        "acTokenAddressRecipient1()": "2731",
        "acTokenAddressRecipient2()": "2775",
        "acTokenPctToRecipient1()": "2485",
        "changeGovernor(address)": "infinite",
        "feeToken()": "2621",
        "feeTokenAddressRecipient1()": "2599",
        "feeTokenAddressRecipient2()": "2687",
        "feeTokenPctToRecipient1()": "2688",
        "governor()": "2289",
        "initialize(address,address,address,address,address,uint256,address,address,uint256)": "infinite",
        "proxiableUUID()": "infinite",
        "setAcToken(address)": "infinite",
        "setAcTokenAddressRecipient1(address)": "infinite",
        "setAcTokenAddressRecipient2(address)": "infinite",
        "setAcTokenPctToRecipient1(uint256)": "infinite",
        "setFeeToken(address)": "infinite",
        "setFeeTokenAddressRecipient1(address)": "infinite",
        "setFeeTokenAddressRecipient2(address)": "infinite",
        "setFeeTokenPctToRecipient1(uint256)": "infinite",
        "split()": "infinite",
        "upgradeTo(address)": "infinite",
        "upgradeToAndCall(address,bytes)": "infinite"
      },
      "internal": {
        "_authorizeUpgrade(address)": "infinite"
      }
    },
    "methodIdentifiers": {
      "acToken()": "25bc6c41",
      "acTokenAddressRecipient1()": "d8b627f9",
      "acTokenAddressRecipient2()": "ef922797",
      "acTokenPctToRecipient1()": "4dd75306",
      "changeGovernor(address)": "e4c0aaf4",
      "feeToken()": "647846a5",
      "feeTokenAddressRecipient1()": "556f2f5f",
      "feeTokenAddressRecipient2()": "cc40272a",
      "feeTokenPctToRecipient1()": "d6a82cd5",
      "governor()": "0c340a24",
      "initialize(address,address,address,address,address,uint256,address,address,uint256)": "529b44ab",
      "proxiableUUID()": "52d1902d",
      "setAcToken(address)": "6a04b787",
      "setAcTokenAddressRecipient1(address)": "11a37cc0",
      "setAcTokenAddressRecipient2(address)": "11059891",
      "setAcTokenPctToRecipient1(uint256)": "374aa85d",
      "setFeeToken(address)": "15cce224",
      "setFeeTokenAddressRecipient1(address)": "a9904342",
      "setFeeTokenAddressRecipient2(address)": "1545ee91",
      "setFeeTokenPctToRecipient1(uint256)": "10bec3e9",
      "split()": "f7654176",
      "upgradeTo(address)": "3659cfe6",
      "upgradeToAndCall(address,bytes)": "4f1ef286"
    }
  },
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidValue\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotAuthorizedChanger\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"acTokenPctToRecipient1_\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"acTokenPctToRecipient2_\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"feeTokenPctToRecipient1_\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"feeTokenPctToRecipient2_\",\"type\":\"uint256\"}],\"name\":\"SplitExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"acTokenAddressRecipient1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"acTokenAddressRecipient2\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"acTokenPctToRecipient1\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IGovernor\",\"name\":\"newGovernor_\",\"type\":\"address\"}],\"name\":\"changeGovernor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeTokenAddressRecipient1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeTokenAddressRecipient2\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeTokenPctToRecipient1\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"governor\",\"outputs\":[{\"internalType\":\"contract IGovernor\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"governorAddress_\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"acToken_\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"feeToken_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"acTokenAddressRecipient1_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"acTokenAddressRecipient2_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"acTokenPctToRecipient1_\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"feeTokenAddressRecipient1_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feeTokenAddressRecipient2_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"feeTokenPctToRecipient1_\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"newAcToken_\",\"type\":\"address\"}],\"name\":\"setAcToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"acTokenAddressRecipient1_\",\"type\":\"address\"}],\"name\":\"setAcTokenAddressRecipient1\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"acTokenAddressRecipient2_\",\"type\":\"address\"}],\"name\":\"setAcTokenAddressRecipient2\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"acTokenPctToRecipient1_\",\"type\":\"uint256\"}],\"name\":\"setAcTokenPctToRecipient1\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"newFeeToken_\",\"type\":\"address\"}],\"name\":\"setFeeToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"feeTokenAddressRecipient1_\",\"type\":\"address\"}],\"name\":\"setFeeTokenAddressRecipient1\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"feeTokenAddressRecipient2_\",\"type\":\"address\"}],\"name\":\"setFeeTokenAddressRecipient2\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"feeTokenPctToRecipient1_\",\"type\":\"uint256\"}],\"name\":\"setFeeTokenPctToRecipient1\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"split\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract that split his balance between two addresses based on a proportion defined by Governance.\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"changeGovernor(address)\":{\"params\":{\"newGovernor_\":\"New governor address\"}},\"initialize(address,address,address,address,address,uint256,address,address,uint256)\":{\"params\":{\"acTokenAddressRecipient1_\":\"address who receives acTokenPctToRecipient1\",\"acTokenAddressRecipient2_\":\"address who receives (100% - acTokenPctToRecipient1)\",\"acTokenPctToRecipient1_\":\"percentage of the acToken balance to send to acTokenAddressRecipient1 [PREC]\",\"acToken_\":\"collateral asset contract\",\"feeTokenAddressRecipient1_\":\"address who receives feeTokenPctToRecipient1\",\"feeTokenAddressRecipient2_\":\"address who receives (100% - feeTokenPctToRecipient1)\",\"feeTokenPctToRecipient1_\":\"percentage of the feeToken balance to send to acTokenAddressRecipient1 [PREC]\",\"feeToken_\":\"fee token contract\",\"governorAddress_\":\"governor address\"}},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"setAcToken(address)\":{\"params\":{\"newAcToken_\":\"new AC token contract\"}},\"setAcTokenAddressRecipient1(address)\":{\"params\":{\"acTokenAddressRecipient1_\":\"new recipient1 address\"}},\"setAcTokenAddressRecipient2(address)\":{\"params\":{\"acTokenAddressRecipient2_\":\"new recipient1 address\"}},\"setAcTokenPctToRecipient1(uint256)\":{\"params\":{\"acTokenPctToRecipient1_\":\"new percentage for recipient1 [PREC]\"}},\"setFeeToken(address)\":{\"params\":{\"newFeeToken_\":\"new fee token contract\"}},\"setFeeTokenAddressRecipient1(address)\":{\"params\":{\"feeTokenAddressRecipient1_\":\"new recipient1 address\"}},\"setFeeTokenAddressRecipient2(address)\":{\"params\":{\"feeTokenAddressRecipient2_\":\"new recipient2 address\"}},\"setFeeTokenPctToRecipient1(uint256)\":{\"params\":{\"feeTokenPctToRecipient1_\":\"new percentage for recipient1 [PREC]\"}},\"upgradeTo(address)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"changeGovernor(address)\":{\"notice\":\"Change the contract's governor. Should be called through the old governance system\"},\"governor()\":{\"notice\":\"The address of the contract which governs this one\"},\"initialize(address,address,address,address,address,uint256,address,address,uint256)\":{\"notice\":\"contract initializer\"},\"setAcToken(address)\":{\"notice\":\"sets new AC token\"},\"setAcTokenAddressRecipient1(address)\":{\"notice\":\"sets new recipient1 for AC token\"},\"setAcTokenAddressRecipient2(address)\":{\"notice\":\"sets new recipient2 for AC token\"},\"setAcTokenPctToRecipient1(uint256)\":{\"notice\":\"sets new percentage of AC token for recipient1\"},\"setFeeToken(address)\":{\"notice\":\"sets new fee token\"},\"setFeeTokenAddressRecipient1(address)\":{\"notice\":\"sets new recipient1 for fee token\"},\"setFeeTokenAddressRecipient2(address)\":{\"notice\":\"sets new recipient2 for fee token\"},\"setFeeTokenPctToRecipient1(uint256)\":{\"notice\":\"sets new percentage of fee token for recipient1\"},\"split()\":{\"notice\":\"splits all the acToken and feeToken balances to the recipients addresses\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/auxiliary/CommissionSplitter.sol\":\"CommissionSplitter\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul[j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTOtfDnca[r]Iulc]jmul[jul]VcTOculjmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC1967.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\\n *\\n * _Available since v4.8.3._\\n */\\ninterface IERC1967Upgradeable {\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Emitted when the beacon is changed.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n}\\n\",\"keccak256\":\"0x47d6e06872b12e72c79d1b5eb55842f860b5fb1207b2317c2358d2766b950a7b\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822ProxiableUpgradeable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/ERC1967/ERC1967Upgrade.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../beacon/IBeaconUpgradeable.sol\\\";\\nimport \\\"../../interfaces/IERC1967Upgradeable.sol\\\";\\nimport \\\"../../interfaces/draft-IERC1822Upgradeable.sol\\\";\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\nimport \\\"../../utils/StorageSlotUpgradeable.sol\\\";\\nimport \\\"../utils/Initializable.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n *\\n * _Available since v4.1._\\n */\\nabstract contract ERC1967UpgradeUpgradeable is Initializable, IERC1967Upgradeable {\\n    function __ERC1967Upgrade_init() internal onlyInitializing {\\n    }\\n\\n    function __ERC1967Upgrade_init_unchained() internal onlyInitializing {\\n    }\\n    // This is the keccak-256 hash of \\\"eip1967.proxy.rollback\\\" subtracted by 1\\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function _getImplementation() internal view returns (address) {\\n        return StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        require(AddressUpgradeable.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n        StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeTo(address newImplementation) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCall(address newImplementation, bytes memory data, bool forceCall) internal {\\n        _upgradeTo(newImplementation);\\n        if (data.length > 0 || forceCall) {\\n            AddressUpgradeable.functionDelegateCall(newImplementation, data);\\n        }\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data, bool forceCall) internal {\\n        // Upgrades from old implementations will perform a rollback test. This test requires the new\\n        // implementation to upgrade back to the old, non-ERC1822 compliant, implementation. Removing\\n        // this special case will break upgrade paths from old UUPS implementation to new ones.\\n        if (StorageSlotUpgradeable.getBooleanSlot(_ROLLBACK_SLOT).value) {\\n            _setImplementation(newImplementation);\\n        } else {\\n            try IERC1822ProxiableUpgradeable(newImplementation).proxiableUUID() returns (bytes32 slot) {\\n                require(slot == _IMPLEMENTATION_SLOT, \\\"ERC1967Upgrade: unsupported proxiableUUID\\\");\\n            } catch {\\n                revert(\\\"ERC1967Upgrade: new implementation is not UUPS\\\");\\n            }\\n            _upgradeToAndCall(newImplementation, data, forceCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Returns the current admin.\\n     */\\n    function _getAdmin() internal view returns (address) {\\n        return StorageSlotUpgradeable.getAddressSlot(_ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        require(newAdmin != address(0), \\\"ERC1967: new admin is the zero address\\\");\\n        StorageSlotUpgradeable.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {AdminChanged} event.\\n     */\\n    function _changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(_getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\\n     */\\n    bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function _getBeacon() internal view returns (address) {\\n        return StorageSlotUpgradeable.getAddressSlot(_BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        require(AddressUpgradeable.isContract(newBeacon), \\\"ERC1967: new beacon is not a contract\\\");\\n        require(\\n            AddressUpgradeable.isContract(IBeaconUpgradeable(newBeacon).implementation()),\\n            \\\"ERC1967: beacon implementation is not a contract\\\"\\n        );\\n        StorageSlotUpgradeable.getAddressSlot(_BEACON_SLOT).value = newBeacon;\\n    }\\n\\n    /**\\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\\n     *\\n     * Emits a {BeaconUpgraded} event.\\n     */\\n    function _upgradeBeaconToAndCall(address newBeacon, bytes memory data, bool forceCall) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n        if (data.length > 0 || forceCall) {\\n            AddressUpgradeable.functionDelegateCall(IBeaconUpgradeable(newBeacon).implementation(), data);\\n        }\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x584ebdf9c1118a7c773f98788e3f3ede01982bdf8932aa06f5acc7d54876e161\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeaconUpgradeable {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {BeaconProxy} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized != type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/UUPSUpgradeable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../interfaces/draft-IERC1822Upgradeable.sol\\\";\\nimport \\\"../ERC1967/ERC1967UpgradeUpgradeable.sol\\\";\\nimport \\\"./Initializable.sol\\\";\\n\\n/**\\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\\n *\\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\\n * `UUPSUpgradeable` with a custom implementation of upgrades.\\n *\\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\\n *\\n * _Available since v4.1._\\n */\\nabstract contract UUPSUpgradeable is Initializable, IERC1822ProxiableUpgradeable, ERC1967UpgradeUpgradeable {\\n    function __UUPSUpgradeable_init() internal onlyInitializing {\\n    }\\n\\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\\n    }\\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable state-variable-assignment\\n    address private immutable __self = address(this);\\n\\n    /**\\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\\n     * fail.\\n     */\\n    modifier onlyProxy() {\\n        require(address(this) != __self, \\\"Function must be called through delegatecall\\\");\\n        require(_getImplementation() == __self, \\\"Function must be called through active proxy\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\\n     * callable on the implementing contract but not through proxies.\\n     */\\n    modifier notDelegated() {\\n        require(address(this) == __self, \\\"UUPSUpgradeable: must not be called through delegatecall\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\\n     */\\n    function proxiableUUID() external view virtual override notDelegated returns (bytes32) {\\n        return _IMPLEMENTATION_SLOT;\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy to `newImplementation`.\\n     *\\n     * Calls {_authorizeUpgrade}.\\n     *\\n     * Emits an {Upgraded} event.\\n     *\\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\\n     */\\n    function upgradeTo(address newImplementation) public virtual onlyProxy {\\n        _authorizeUpgrade(newImplementation);\\n        _upgradeToAndCallUUPS(newImplementation, new bytes(0), false);\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\\n     * encoded in `data`.\\n     *\\n     * Calls {_authorizeUpgrade}.\\n     *\\n     * Emits an {Upgraded} event.\\n     *\\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\\n        _authorizeUpgrade(newImplementation);\\n        _upgradeToAndCallUUPS(newImplementation, data, true);\\n    }\\n\\n    /**\\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\\n     * {upgradeTo} and {upgradeToAndCall}.\\n     *\\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\\n     *\\n     * ```solidity\\n     * function _authorizeUpgrade(address) internal override onlyOwner {}\\n     * ```\\n     */\\n    function _authorizeUpgrade(address newImplementation) internal virtual;\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0xb607cb94c27e89750f5ae2ccebcb94e654e926f6125f4fd4c6262c89875118ad\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20Upgradeable {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/extensions/IERC20Permit.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n */\\ninterface IERC20PermitUpgradeable {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\\n     * given ``owner``'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0xd60f939a3ca0199014d079b4dd66aa757954334947d81eb5c1d35d7a83061ab3\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.3) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20Upgradeable.sol\\\";\\nimport \\\"../extensions/IERC20PermitUpgradeable.sol\\\";\\nimport \\\"../../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20Upgradeable {\\n    using AddressUpgradeable for address;\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransfer(IERC20Upgradeable token, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransferFrom(IERC20Upgradeable token, address from, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(IERC20Upgradeable token, address spender, uint256 value) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    /**\\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeIncreaseAllowance(IERC20Upgradeable token, address spender, uint256 value) internal {\\n        uint256 oldAllowance = token.allowance(address(this), spender);\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance + value));\\n    }\\n\\n    /**\\n     * @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeDecreaseAllowance(IERC20Upgradeable token, address spender, uint256 value) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance - value));\\n        }\\n    }\\n\\n    /**\\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\\n     * to be set to zero before setting it to a non-zero value, such as USDT.\\n     */\\n    function forceApprove(IERC20Upgradeable token, address spender, uint256 value) internal {\\n        bytes memory approvalCall = abi.encodeWithSelector(token.approve.selector, spender, value);\\n\\n        if (!_callOptionalReturnBool(token, approvalCall)) {\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, 0));\\n            _callOptionalReturn(token, approvalCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\\n     * Revert on invalid signature.\\n     */\\n    function safePermit(\\n        IERC20PermitUpgradeable token,\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal {\\n        uint256 nonceBefore = token.nonces(owner);\\n        token.permit(owner, spender, value, deadline, v, r, s);\\n        uint256 nonceAfter = token.nonces(owner);\\n        require(nonceAfter == nonceBefore + 1, \\\"SafeERC20: permit did not succeed\\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20Upgradeable token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        require(returndata.length == 0 || abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     *\\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\\n     */\\n    function _callOptionalReturnBool(IERC20Upgradeable token, bytes memory data) private returns (bool) {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\\n        // and not revert is the subcall reverts.\\n\\n        (bool success, bytes memory returndata) = address(token).call(data);\\n        return\\n            success && (returndata.length == 0 || abi.decode(returndata, (bool))) && AddressUpgradeable.isContract(address(token));\\n    }\\n}\\n\",\"keccak256\":\"0x23b997be73d3dd46885262704f0f8cfc7273fdadfe303d37969a9561373972b5\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\\n * _Available since v4.9 for `string`, `bytes`._\\n */\\nlibrary StorageSlotUpgradeable {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x07ac95acad040f1fb1f6120dd0aa5f702db69446e95f82613721879d30de0908\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/extensions/IERC20Permit.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n */\\ninterface IERC20Permit {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\\n     * given ``owner``'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.3) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../extensions/IERC20Permit.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    /**\\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 oldAllowance = token.allowance(address(this), spender);\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance + value));\\n    }\\n\\n    /**\\n     * @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance - value));\\n        }\\n    }\\n\\n    /**\\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\\n     * to be set to zero before setting it to a non-zero value, such as USDT.\\n     */\\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\\n        bytes memory approvalCall = abi.encodeWithSelector(token.approve.selector, spender, value);\\n\\n        if (!_callOptionalReturnBool(token, approvalCall)) {\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, 0));\\n            _callOptionalReturn(token, approvalCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\\n     * Revert on invalid signature.\\n     */\\n    function safePermit(\\n        IERC20Permit token,\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal {\\n        uint256 nonceBefore = token.nonces(owner);\\n        token.permit(owner, spender, value, deadline, v, r, s);\\n        uint256 nonceAfter = token.nonces(owner);\\n        require(nonceAfter == nonceBefore + 1, \\\"SafeERC20: permit did not succeed\\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        require(returndata.length == 0 || abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     *\\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\\n     */\\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\\n        // and not revert is the subcall reverts.\\n\\n        (bool success, bytes memory returndata) = address(token).call(data);\\n        return\\n            success && (returndata.length == 0 || abi.decode(returndata, (bool))) && Address.isContract(address(token));\\n    }\\n}\\n\",\"keccak256\":\"0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\"},\"contracts/auxiliary/CommissionSplitter.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.20;\\n\\nimport { Governed } from \\\"../governance/Governed.sol\\\";\\nimport { UUPSUpgradeable } from \\\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\\\";\\nimport { IERC20 } from \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport { SafeERC20 } from \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\n\\n/**\\n  @dev Contract that split his balance between two addresses based on a\\n  proportion defined by Governance.\\n */\\ncontract CommissionSplitter is Governed, UUPSUpgradeable {\\n    // ------- Events -------\\n\\n    event SplitExecuted(\\n        uint256 acTokenPctToRecipient1_,\\n        uint256 acTokenPctToRecipient2_,\\n        uint256 feeTokenPctToRecipient1_,\\n        uint256 feeTokenPctToRecipient2_\\n    );\\n\\n    // ------- Storage -------\\n\\n    // collateral asset\\n    IERC20 public acToken;\\n    // fee token\\n    IERC20 public feeToken;\\n\\n    // address who receives acTokenPctToRecipient1\\n    address public acTokenAddressRecipient1;\\n    // address who receives the rest of the commissions (100% - acTokenPctToRecipient1)\\n    address public acTokenAddressRecipient2;\\n    // percentage of the acToken balance to send to acTokenAddressRecipient1 [PREC]\\n    uint256 public acTokenPctToRecipient1;\\n\\n    // address who receives feeTokenPctToRecipient1\\n    address public feeTokenAddressRecipient1;\\n    // address who receives the rest of the commissions (100% - feeTokenPctToRecipient1)\\n    address public feeTokenAddressRecipient2;\\n    // percentage of the feeToken balance to send to acTokenAddressRecipient1 [PREC]\\n    uint256 public feeTokenPctToRecipient1;\\n\\n    /**\\n     * @notice contract initializer\\n     * @param governorAddress_ governor address\\n     * @param acToken_ collateral asset contract\\n     * @param feeToken_ fee token contract\\n     * @param acTokenAddressRecipient1_ address who receives acTokenPctToRecipient1\\n     * @param acTokenAddressRecipient2_ address who receives (100% - acTokenPctToRecipient1)\\n     * @param acTokenPctToRecipient1_ percentage of the acToken balance to send to acTokenAddressRecipient1 [PREC]\\n     * @param feeTokenAddressRecipient1_ address who receives feeTokenPctToRecipient1\\n     * @param feeTokenAddressRecipient2_ address who receives (100% - feeTokenPctToRecipient1)\\n     * @param feeTokenPctToRecipient1_ percentage of the feeToken balance to send to acTokenAddressRecipient1 [PREC]\\n     */\\n    function initialize(\\n        address governorAddress_,\\n        IERC20 acToken_,\\n        IERC20 feeToken_,\\n        address acTokenAddressRecipient1_,\\n        address acTokenAddressRecipient2_,\\n        uint256 acTokenPctToRecipient1_,\\n        address feeTokenAddressRecipient1_,\\n        address feeTokenAddressRecipient2_,\\n        uint256 feeTokenPctToRecipient1_\\n    ) public initializer {\\n        if (acTokenPctToRecipient1_ > PRECISION) revert InvalidValue();\\n        if (feeTokenPctToRecipient1_ > PRECISION) revert InvalidValue();\\n        __UUPSUpgradeable_init();\\n        __Governed_init(governorAddress_);\\n\\n        acToken = acToken_;\\n        feeToken = feeToken_;\\n        acTokenAddressRecipient1 = acTokenAddressRecipient1_;\\n        acTokenAddressRecipient2 = acTokenAddressRecipient2_;\\n        acTokenPctToRecipient1 = acTokenPctToRecipient1_;\\n        feeTokenAddressRecipient1 = feeTokenAddressRecipient1_;\\n        feeTokenAddressRecipient2 = feeTokenAddressRecipient2_;\\n        feeTokenPctToRecipient1 = feeTokenPctToRecipient1_;\\n    }\\n\\n    /**\\n     * @notice splits all the acToken and feeToken balances to the recipients addresses\\n     */\\n    function split() external {\\n        uint256 acTokenAmountToRecipient1;\\n        uint256 acTokenAmountToRecipient2;\\n        uint256 feeTokenAmountToRecipient1;\\n        uint256 feeTokenAmountToRecipient2;\\n\\n        // splits collateral asset\\n        uint256 acTokenBalance = acToken.balanceOf(address(this));\\n        if (acTokenBalance > 0) {\\n            acTokenAmountToRecipient1 = _mulPrec(acTokenBalance, acTokenPctToRecipient1);\\n            acTokenAmountToRecipient2 = acTokenBalance - acTokenAmountToRecipient1;\\n            SafeERC20.safeTransfer(acToken, acTokenAddressRecipient1, acTokenAmountToRecipient1);\\n            SafeERC20.safeTransfer(acToken, acTokenAddressRecipient2, acTokenAmountToRecipient2);\\n        }\\n\\n        // splits fee token\\n        uint256 feeTokenBalance = feeToken.balanceOf(address(this));\\n        if (feeTokenBalance > 0) {\\n            feeTokenAmountToRecipient1 = _mulPrec(feeTokenBalance, feeTokenPctToRecipient1);\\n            feeTokenAmountToRecipient2 = feeTokenBalance - feeTokenAmountToRecipient1;\\n            SafeERC20.safeTransfer(feeToken, feeTokenAddressRecipient1, feeTokenAmountToRecipient1);\\n            SafeERC20.safeTransfer(feeToken, feeTokenAddressRecipient2, feeTokenAmountToRecipient2);\\n        }\\n\\n        emit SplitExecuted(\\n            acTokenAmountToRecipient1,\\n            acTokenAmountToRecipient2,\\n            feeTokenAmountToRecipient1,\\n            feeTokenAmountToRecipient2\\n        );\\n    }\\n\\n    // ------- Only Authorized Changer Functions -------\\n\\n    /** @notice sets new AC token\\n     * @param newAcToken_ new AC token contract\\n     */\\n    function setAcToken(IERC20 newAcToken_) external onlyAuthorizedChanger {\\n        acToken = newAcToken_;\\n    }\\n\\n    /** @notice sets new fee token\\n     * @param newFeeToken_ new fee token contract\\n     */\\n    function setFeeToken(IERC20 newFeeToken_) external onlyAuthorizedChanger {\\n        feeToken = newFeeToken_;\\n    }\\n\\n    /** @notice sets new recipient1 for AC token\\n     * @param acTokenAddressRecipient1_ new recipient1 address\\n     */\\n    function setAcTokenAddressRecipient1(address acTokenAddressRecipient1_) external onlyAuthorizedChanger {\\n        acTokenAddressRecipient1 = acTokenAddressRecipient1_;\\n    }\\n\\n    /** @notice sets new recipient2 for AC token\\n     * @param acTokenAddressRecipient2_ new recipient1 address\\n     */\\n    function setAcTokenAddressRecipient2(address acTokenAddressRecipient2_) external onlyAuthorizedChanger {\\n        acTokenAddressRecipient2 = acTokenAddressRecipient2_;\\n    }\\n\\n    /** @notice sets new percentage of AC token for recipient1\\n     * @param acTokenPctToRecipient1_ new percentage for recipient1 [PREC]\\n     */\\n    function setAcTokenPctToRecipient1(uint256 acTokenPctToRecipient1_) external onlyAuthorizedChanger {\\n        if (acTokenPctToRecipient1_ > PRECISION) revert InvalidValue();\\n        acTokenPctToRecipient1 = acTokenPctToRecipient1_;\\n    }\\n\\n    /** @notice sets new recipient1 for fee token\\n     * @param feeTokenAddressRecipient1_ new recipient1 address\\n     */\\n    function setFeeTokenAddressRecipient1(address feeTokenAddressRecipient1_) external onlyAuthorizedChanger {\\n        feeTokenAddressRecipient1 = feeTokenAddressRecipient1_;\\n    }\\n\\n    /** @notice sets new recipient2 for fee token\\n     * @param feeTokenAddressRecipient2_ new recipient2 address\\n     */\\n    function setFeeTokenAddressRecipient2(address feeTokenAddressRecipient2_) external onlyAuthorizedChanger {\\n        feeTokenAddressRecipient2 = feeTokenAddressRecipient2_;\\n    }\\n\\n    /** @notice sets new percentage of fee token for recipient1\\n     * @param feeTokenPctToRecipient1_ new percentage for recipient1 [PREC]\\n     */\\n    function setFeeTokenPctToRecipient1(uint256 feeTokenPctToRecipient1_) external onlyAuthorizedChanger {\\n        if (feeTokenPctToRecipient1_ > PRECISION) revert InvalidValue();\\n        feeTokenPctToRecipient1 = feeTokenPctToRecipient1_;\\n    }\\n\\n    /**\\n     * @inheritdoc UUPSUpgradeable\\n     * @dev checks that the changer that will do the upgrade is currently authorized by governance to makes\\n     * changes within the system\\n     * @param newImplementation new implementation contract address(not used)\\n     */\\n    /* solhint-disable-next-line no-empty-blocks */\\n    function _authorizeUpgrade(address newImplementation) internal override onlyAuthorizedChanger {}\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n\\n    // Purposely left unused to save some state space to allow for future upgrades\\n    // slither-disable-next-line unused-state\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x5a6600a85cf263470726232f827f74ea149e99f3fd731921fb06ae1328ad9b51\",\"license\":\"UNLICENSED\"},\"contracts/governance/Governed.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.20;\\n\\nimport { IGovernor } from \\\"../interfaces/IGovernor.sol\\\";\\nimport { MocHelper } from \\\"../utils/MocHelper.sol\\\";\\nimport { Initializable } from \\\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\\\";\\n\\n/**\\n  @title Governed\\n  @notice Base contract to be inherited by governed contracts\\n  @dev This contract is not usable on its own since it does not have any _productive useful_ behavior\\n  The only purpose of this contract is to define some useful modifiers and functions to be used on the\\n  governance aspect of the child contract\\n  */\\nabstract contract Governed is Initializable, MocHelper {\\n    /**\\n    @notice The address of the contract which governs this one\\n   */\\n    IGovernor public governor;\\n\\n    error NotAuthorizedChanger();\\n\\n    /**\\n    @notice Modifier that protects the function\\n    @dev You should use this modifier in any function that should be called through\\n    the governance system\\n   */\\n    modifier onlyAuthorizedChanger() {\\n        checkIfAuthorizedChanger();\\n        _;\\n    }\\n\\n    /**\\n    @notice Initialize the contract with the basic settings\\n    @dev This initialize replaces the constructor but it is not called automatically.\\n    It is necessary because of the upgradeability of the contracts\\n    @param governorAddress_ Governor address\\n   */\\n    function __Governed_init(address governorAddress_) internal onlyInitializing {\\n        __Governed_init_unchained(governorAddress_);\\n    }\\n\\n    function __Governed_init_unchained(address governorAddress_) internal onlyInitializing {\\n        governor = IGovernor(governorAddress_);\\n    }\\n\\n    /**\\n    @notice Change the contract's governor. Should be called through the old governance system\\n    @param newGovernor_ New governor address\\n   */\\n    function changeGovernor(IGovernor newGovernor_) external onlyAuthorizedChanger {\\n        governor = newGovernor_;\\n    }\\n\\n    /**\\n    @notice Checks if the msg sender is an authorized changer, reverts otherwise\\n   */\\n    function checkIfAuthorizedChanger() internal view {\\n        if (!governor.isAuthorizedChanger(msg.sender)) revert NotAuthorizedChanger();\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n\\n    // Purposely left unused to save some state space to allow for future upgrades\\n    // slither-disable-next-line unused-state\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x4ca00d6d57ffff0ee43e4441d1bafa20c4e3f52e43e50b08cf68d7f65540e09a\",\"license\":\"UNLICENSED\"},\"contracts/interfaces/IChangeContract.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.20;\\n\\n/**\\n  @title IChangeContract\\n  @notice This interface is the one used by the governance system.\\n  @dev If you plan to do some changes to a system governed by this project you should write a contract\\n  that does those changes, like a recipe. This contract MUST not have ANY kind of public or external function\\n  that modifies the state of this ChangeContract, otherwise you could run into front-running issues when the governance\\n  system is fully in place.\\n */\\ninterface IChangeContract {\\n    /**\\n    @notice Override this function with a recipe of the changes to be done when this ChangeContract\\n    is executed\\n   */\\n    function execute() external;\\n}\\n\",\"keccak256\":\"0x22e20ac9596a6a4c4545b0c5cf307c2924987d6033ef75357850b0de4d1f0901\",\"license\":\"UNLICENSED\"},\"contracts/interfaces/IGovernor.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.20;\\n\\nimport { IChangeContract } from \\\"./IChangeContract.sol\\\";\\n\\n/**\\n  @title IGovernor\\n  @notice Governor interface. This functions should be overwritten to\\n  enable the communication with the rest of the system\\n  @dev This interface **MUST** be compatible with the corresponding Governance instance\\n  used on Production, from https://github.com/money-on-chain/Areopagus-Governance\\n  */\\ninterface IGovernor {\\n    /**\\n    @notice Function to be called to make the changes described in changeContract\\n    @dev This function should be protected somehow to only execute changes that\\n    benefit the system. This decision process is independent of this architecture\\n    therefore is independent of this interface too\\n    @param changeContract_ Address of the contract that will execute the changes\\n   */\\n    function executeChange(IChangeContract changeContract_) external;\\n\\n    /**\\n    @notice Returns whether this `changer_` is authorized to execute changes.\\n    @param changer_ Address of the contract that will execute the changes\\n   */\\n    function isAuthorizedChanger(address changer_) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x0f8cd9de3ed9348e6a58cf4d971586f60f5542a20ecd3748194e4ba288f419c1\",\"license\":\"UNLICENSED\"},\"contracts/utils/MocHelper.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.20;\\n\\nimport { SafeERC20 } from \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\n/* solhint-disable-next-line max-line-length */\\nimport { SafeERC20Upgradeable } from \\\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\\\";\\n\\nabstract contract MocHelper {\\n    error InvalidAddress();\\n    error InvalidValue();\\n    // Constants may not be used in child contracts and that is fine as they are\\n    // not using any space in storage, so we disable the check\\n    // slither-disable-next-line unused-state\\n    uint256 internal constant PRECISION = 10 ** 18;\\n    // slither-disable-next-line unused-state\\n    uint256 internal constant ONE = 10 ** 18;\\n    // slither-disable-next-line unused-state\\n    uint256 internal constant UINT256_MAX = ~uint256(0);\\n\\n    // Saves gas\\n    // https://github.com/KadenZipfel/gas-optimizations/blob/main/gas-saving-patterns/unchecked-arithmetic.md\\n    function unchecked_inc(uint256 i) internal pure returns (uint256) {\\n        unchecked {\\n            return i + 1;\\n        }\\n    }\\n\\n    /**\\n     * @notice add precision and div two number\\n     * @param a_ numerator\\n     * @param b_ denominator\\n     * @return `a_` * PRECISION / `b_`\\n     */\\n    function _divPrec(uint256 a_, uint256 b_) internal pure returns (uint256) {\\n        return (a_ * PRECISION) / b_;\\n    }\\n\\n    /**\\n     * @notice multiply two number and remove precision\\n     * @param a_ term 1\\n     * @param b_ term 2\\n     * @return `a_` * `b_` / PRECISION\\n     */\\n    function _mulPrec(uint256 a_, uint256 b_) internal pure returns (uint256) {\\n        return (a_ * b_) / PRECISION;\\n    }\\n\\n    /**\\n     * @notice reverts if value if less than PRECISION ONE\\n     * @param value_ value to check [PREC]\\n     */\\n    function _checkLessThanOne(uint256 value_) internal pure {\\n        if (value_ >= ONE) revert InvalidValue();\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n\\n    // Purposely left unused to save some state space to allow for future upgrades\\n    // slither-disable-next-line unused-state\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0xcaa68dd722c380b1fd1a6a13a07fe94da162c6af4a707de20199f2edad8d1f1e\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "storageLayout": {
    "storage": [
      {
        "astId": 950,
        "contract": "contracts/auxiliary/CommissionSplitter.sol:CommissionSplitter",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_uint8"
      },
      {
        "astId": 953,
        "contract": "contracts/auxiliary/CommissionSplitter.sol:CommissionSplitter",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 28031,
        "contract": "contracts/auxiliary/CommissionSplitter.sol:CommissionSplitter",
        "label": "__gap",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 21402,
        "contract": "contracts/auxiliary/CommissionSplitter.sol:CommissionSplitter",
        "label": "governor",
        "offset": 0,
        "slot": "51",
        "type": "t_contract(IGovernor)22264"
      },
      {
        "astId": 21473,
        "contract": "contracts/auxiliary/CommissionSplitter.sol:CommissionSplitter",
        "label": "__gap",
        "offset": 0,
        "slot": "52",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 932,
        "contract": "contracts/auxiliary/CommissionSplitter.sol:CommissionSplitter",
        "label": "__gap",
        "offset": 0,
        "slot": "102",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 1247,
        "contract": "contracts/auxiliary/CommissionSplitter.sol:CommissionSplitter",
        "label": "__gap",
        "offset": 0,
        "slot": "152",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 9847,
        "contract": "contracts/auxiliary/CommissionSplitter.sol:CommissionSplitter",
        "label": "acToken",
        "offset": 0,
        "slot": "202",
        "type": "t_contract(IERC20)6209"
      },
      {
        "astId": 9850,
        "contract": "contracts/auxiliary/CommissionSplitter.sol:CommissionSplitter",
        "label": "feeToken",
        "offset": 0,
        "slot": "203",
        "type": "t_contract(IERC20)6209"
      },
      {
        "astId": 9852,
        "contract": "contracts/auxiliary/CommissionSplitter.sol:CommissionSplitter",
        "label": "acTokenAddressRecipient1",
        "offset": 0,
        "slot": "204",
        "type": "t_address"
      },
      {
        "astId": 9854,
        "contract": "contracts/auxiliary/CommissionSplitter.sol:CommissionSplitter",
        "label": "acTokenAddressRecipient2",
        "offset": 0,
        "slot": "205",
        "type": "t_address"
      },
      {
        "astId": 9856,
        "contract": "contracts/auxiliary/CommissionSplitter.sol:CommissionSplitter",
        "label": "acTokenPctToRecipient1",
        "offset": 0,
        "slot": "206",
        "type": "t_uint256"
      },
      {
        "astId": 9858,
        "contract": "contracts/auxiliary/CommissionSplitter.sol:CommissionSplitter",
        "label": "feeTokenAddressRecipient1",
        "offset": 0,
        "slot": "207",
        "type": "t_address"
      },
      {
        "astId": 9860,
        "contract": "contracts/auxiliary/CommissionSplitter.sol:CommissionSplitter",
        "label": "feeTokenAddressRecipient2",
        "offset": 0,
        "slot": "208",
        "type": "t_address"
      },
      {
        "astId": 9862,
        "contract": "contracts/auxiliary/CommissionSplitter.sol:CommissionSplitter",
        "label": "feeTokenPctToRecipient1",
        "offset": 0,
        "slot": "209",
        "type": "t_uint256"
      },
      {
        "astId": 10189,
        "contract": "contracts/auxiliary/CommissionSplitter.sol:CommissionSplitter",
        "label": "__gap",
        "offset": 0,
        "slot": "210",
        "type": "t_array(t_uint256)50_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_uint256)50_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[50]",
        "numberOfBytes": "1600"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(IERC20)6209": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_contract(IGovernor)22264": {
        "encoding": "inplace",
        "label": "contract IGovernor",
        "numberOfBytes": "20"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "changeGovernor(address)": {
        "notice": "Change the contract's governor. Should be called through the old governance system"
      },
      "governor()": {
        "notice": "The address of the contract which governs this one"
      },
      "initialize(address,address,address,address,address,uint256,address,address,uint256)": {
        "notice": "contract initializer"
      },
      "setAcToken(address)": {
        "notice": "sets new AC token"
      },
      "setAcTokenAddressRecipient1(address)": {
        "notice": "sets new recipient1 for AC token"
      },
      "setAcTokenAddressRecipient2(address)": {
        "notice": "sets new recipient2 for AC token"
      },
      "setAcTokenPctToRecipient1(uint256)": {
        "notice": "sets new percentage of AC token for recipient1"
      },
      "setFeeToken(address)": {
        "notice": "sets new fee token"
      },
      "setFeeTokenAddressRecipient1(address)": {
        "notice": "sets new recipient1 for fee token"
      },
      "setFeeTokenAddressRecipient2(address)": {
        "notice": "sets new recipient2 for fee token"
      },
      "setFeeTokenPctToRecipient1(uint256)": {
        "notice": "sets new percentage of fee token for recipient1"
      },
      "split()": {
        "notice": "splits all the acToken and feeToken balances to the recipients addresses"
      }
    },
    "version": 1
  }
}