{
  "contractName": "GovernorMock",
  "sourceName": "contracts/mocks/upgradeability/GovernorMock.sol",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IChangeContract",
          "name": "changeContract",
          "type": "address"
        }
      ],
      "name": "executeChange",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isAuthorized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isAuthorizedChanger",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "isAuthorized_",
          "type": "bool"
        }
      ],
      "name": "setIsAuthorized",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x60806040526000805460ff1916600117905534801561001d57600080fd5b506101aa8061002d6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806357e6c2f4146100515780638c777e82146100725780639e0a8e0914610087578063d994d6d5146100a8575b600080fd5b60005461005e9060ff1681565b604051901515815260200160405180910390f35b61008561008036600461012e565b6100c0565b005b610085610095366004610152565b6000805460ff1916911515919091179055565b61005e6100b636600461012e565b5060005460ff1690565b806001600160a01b031663614619546040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156100fb57600080fd5b505af115801561010f573d6000803e3d6000fd5b5050505050565b6001600160a01b038116811461012b57600080fd5b50565b60006020828403121561014057600080fd5b813561014b81610116565b9392505050565b60006020828403121561016457600080fd5b8135801515811461014b57600080fdfea26469706673582212208582db8b63122237ccf1fba83d5f171fee83188f8c6314ff94086a187f8d06fd64736f6c63430008110033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c806357e6c2f4146100515780638c777e82146100725780639e0a8e0914610087578063d994d6d5146100a8575b600080fd5b60005461005e9060ff1681565b604051901515815260200160405180910390f35b61008561008036600461012e565b6100c0565b005b610085610095366004610152565b6000805460ff1916911515919091179055565b61005e6100b636600461012e565b5060005460ff1690565b806001600160a01b031663614619546040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156100fb57600080fd5b505af115801561010f573d6000803e3d6000fd5b5050505050565b6001600160a01b038116811461012b57600080fd5b50565b60006020828403121561014057600080fd5b813561014b81610116565b9392505050565b60006020828403121561016457600080fd5b8135801515811461014b57600080fdfea26469706673582212208582db8b63122237ccf1fba83d5f171fee83188f8c6314ff94086a187f8d06fd64736f6c63430008110033",
  "linkReferences": {},
  "deployedLinkReferences": {},
  "devdoc": {
    "details": "Test only contract to mock Governor behavior ",
    "kind": "dev",
    "methods": {
      "executeChange(address)": {
        "params": {
          "changeContract": "Address of the contract that will execute the changes"
        }
      }
    },
    "title": "GovernorMock",
    "version": 1
  },
  "evm": {
    "bytecode": {
      "functionDebugData": {},
      "generatedSources": [],
      "linkReferences": {},
      "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x1D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AA DUP1 PUSH2 0x2D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x57E6C2F4 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x8C777E82 EQ PUSH2 0x72 JUMPI DUP1 PUSH4 0x9E0A8E09 EQ PUSH2 0x87 JUMPI DUP1 PUSH4 0xD994D6D5 EQ PUSH2 0xA8 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x5E SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x85 PUSH2 0x80 CALLDATASIZE PUSH1 0x4 PUSH2 0x12E JUMP JUMPDEST PUSH2 0xC0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x85 PUSH2 0x95 CALLDATASIZE PUSH1 0x4 PUSH2 0x152 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x5E PUSH2 0xB6 CALLDATASIZE PUSH1 0x4 PUSH2 0x12E JUMP JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x61461954 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x10F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x12B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x140 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x14B DUP2 PUSH2 0x116 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x164 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x14B JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP6 DUP3 0xDB DUP12 PUSH4 0x122237CC CALL 0xFB 0xA8 RETURNDATASIZE 0x5F OR 0x1F 0xEE DUP4 XOR DUP16 DUP13 PUSH4 0x14FF9408 PUSH11 0x187F8D06FD64736F6C6343 STOP ADDMOD GT STOP CALLER ",
      "sourceMap": "196:573:65:-:0;;;237:31;;;-1:-1:-1;;237:31:65;264:4;237:31;;;196:573;;;;;;;;;;;;;;;;"
    },
    "deployedBytecode": {
      "functionDebugData": {
        "@executeChange_17525": {
          "entryPoint": 192,
          "id": 17525,
          "parameterSlots": 1,
          "returnSlots": 0
        },
        "@isAuthorizedChanger_17536": {
          "entryPoint": null,
          "id": 17536,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "@isAuthorized_17512": {
          "entryPoint": null,
          "id": 17512,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@setIsAuthorized_17546": {
          "entryPoint": null,
          "id": 17546,
          "parameterSlots": 1,
          "returnSlots": 0
        },
        "abi_decode_tuple_t_address": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_decode_tuple_t_bool": {
          "entryPoint": 338,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_decode_tuple_t_contract$_IChangeContract_$17120": {
          "entryPoint": 302,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "validator_revert_contract_IChangeContract": {
          "entryPoint": 278,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 0
        }
      },
      "generatedSources": [
        {
          "ast": {
            "nodeType": "YulBlock",
            "src": "0:1197:73",
            "statements": [
              {
                "nodeType": "YulBlock",
                "src": "6:3:73",
                "statements": []
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "109:92:73",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "119:26:73",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "131:9:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "142:2:73",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "127:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "127:18:73"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "119:4:73"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "161:9:73"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "186:6:73"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "179:6:73"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "179:14:73"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "172:6:73"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "172:22:73"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "154:6:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "154:41:73"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "154:41:73"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "78:9:73",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "89:6:73",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "100:4:73",
                    "type": ""
                  }
                ],
                "src": "14:187:73"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "268:86:73",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "332:16:73",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "341:1:73",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "344:1:73",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "334:6:73"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "334:12:73"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "334:12:73"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "291:5:73"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "302:5:73"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "317:3:73",
                                            "type": "",
                                            "value": "160"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "322:1:73",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "shl",
                                          "nodeType": "YulIdentifier",
                                          "src": "313:3:73"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "313:11:73"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "326:1:73",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "309:3:73"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "309:19:73"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "298:3:73"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "298:31:73"
                              }
                            ],
                            "functionName": {
                              "name": "eq",
                              "nodeType": "YulIdentifier",
                              "src": "288:2:73"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "288:42:73"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "281:6:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "281:50:73"
                      },
                      "nodeType": "YulIf",
                      "src": "278:70:73"
                    }
                  ]
                },
                "name": "validator_revert_contract_IChangeContract",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "value",
                    "nodeType": "YulTypedName",
                    "src": "257:5:73",
                    "type": ""
                  }
                ],
                "src": "206:148:73"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "454:194:73",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "500:16:73",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "509:1:73",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "512:1:73",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "502:6:73"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "502:12:73"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "502:12:73"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "475:7:73"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "484:9:73"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "471:3:73"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "471:23:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "496:2:73",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "467:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "467:32:73"
                      },
                      "nodeType": "YulIf",
                      "src": "464:52:73"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "525:36:73",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "551:9:73"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "538:12:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "538:23:73"
                      },
                      "variables": [
                        {
                          "name": "value",
                          "nodeType": "YulTypedName",
                          "src": "529:5:73",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "612:5:73"
                          }
                        ],
                        "functionName": {
                          "name": "validator_revert_contract_IChangeContract",
                          "nodeType": "YulIdentifier",
                          "src": "570:41:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "570:48:73"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "570:48:73"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "627:15:73",
                      "value": {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "637:5:73"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "627:6:73"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_contract$_IChangeContract_$17120",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "420:9:73",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "431:7:73",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "443:6:73",
                    "type": ""
                  }
                ],
                "src": "359:289:73"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "720:206:73",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "766:16:73",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "775:1:73",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "778:1:73",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "768:6:73"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "768:12:73"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "768:12:73"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "741:7:73"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "750:9:73"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "737:3:73"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "737:23:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "762:2:73",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "733:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "733:32:73"
                      },
                      "nodeType": "YulIf",
                      "src": "730:52:73"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "791:36:73",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "817:9:73"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "804:12:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "804:23:73"
                      },
                      "variables": [
                        {
                          "name": "value",
                          "nodeType": "YulTypedName",
                          "src": "795:5:73",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "880:16:73",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "889:1:73",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "892:1:73",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "882:6:73"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "882:12:73"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "882:12:73"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "849:5:73"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "870:5:73"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "863:6:73"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "863:13:73"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "856:6:73"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "856:21:73"
                              }
                            ],
                            "functionName": {
                              "name": "eq",
                              "nodeType": "YulIdentifier",
                              "src": "846:2:73"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "846:32:73"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "839:6:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "839:40:73"
                      },
                      "nodeType": "YulIf",
                      "src": "836:60:73"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "905:15:73",
                      "value": {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "915:5:73"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "905:6:73"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_bool",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "686:9:73",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "697:7:73",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "709:6:73",
                    "type": ""
                  }
                ],
                "src": "653:273:73"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "1001:194:73",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1047:16:73",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1056:1:73",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1059:1:73",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "1049:6:73"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1049:12:73"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1049:12:73"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "1022:7:73"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1031:9:73"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1018:3:73"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1018:23:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1043:2:73",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "1014:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1014:32:73"
                      },
                      "nodeType": "YulIf",
                      "src": "1011:52:73"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1072:36:73",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1098:9:73"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "1085:12:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1085:23:73"
                      },
                      "variables": [
                        {
                          "name": "value",
                          "nodeType": "YulTypedName",
                          "src": "1076:5:73",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1159:5:73"
                          }
                        ],
                        "functionName": {
                          "name": "validator_revert_contract_IChangeContract",
                          "nodeType": "YulIdentifier",
                          "src": "1117:41:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1117:48:73"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1117:48:73"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1174:15:73",
                      "value": {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1184:5:73"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1174:6:73"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_address",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "967:9:73",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "978:7:73",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "990:6:73",
                    "type": ""
                  }
                ],
                "src": "931:264:73"
              }
            ]
          },
          "contents": "{\n    { }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function validator_revert_contract_IChangeContract(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_contract$_IChangeContract_$17120(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_contract_IChangeContract(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_contract_IChangeContract(value)\n        value0 := value\n    }\n}",
          "id": 73,
          "language": "Yul",
          "name": "#utility.yul"
        }
      ],
      "immutableReferences": {},
      "linkReferences": {},
      "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x57E6C2F4 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x8C777E82 EQ PUSH2 0x72 JUMPI DUP1 PUSH4 0x9E0A8E09 EQ PUSH2 0x87 JUMPI DUP1 PUSH4 0xD994D6D5 EQ PUSH2 0xA8 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x5E SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x85 PUSH2 0x80 CALLDATASIZE PUSH1 0x4 PUSH2 0x12E JUMP JUMPDEST PUSH2 0xC0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x85 PUSH2 0x95 CALLDATASIZE PUSH1 0x4 PUSH2 0x152 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x5E PUSH2 0xB6 CALLDATASIZE PUSH1 0x4 PUSH2 0x12E JUMP JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x61461954 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x10F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x12B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x140 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x14B DUP2 PUSH2 0x116 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x164 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x14B JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP6 DUP3 0xDB DUP12 PUSH4 0x122237CC CALL 0xFB 0xA8 RETURNDATASIZE 0x5F OR 0x1F 0xEE DUP4 XOR DUP16 DUP13 PUSH4 0x14FF9408 PUSH11 0x187F8D06FD64736F6C6343 STOP ADDMOD GT STOP CALLER ",
      "sourceMap": "196:573:65:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;237:31;;;;;;;;;;;;179:14:73;;172:22;154:41;;142:2;127:18;237:31:65;;;;;;;441:105;;;;;;:::i;:::-;;:::i;:::-;;670:97;;;;;;:::i;:::-;732:12;:28;;-1:-1:-1;;732:28:65;;;;;;;;;;670:97;552:112;;;;;;:::i;:::-;-1:-1:-1;622:4:65;645:12;;;;552:112;441:105;515:14;-1:-1:-1;;;;;515:22:65;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;441:105;:::o;206:148:73:-;-1:-1:-1;;;;;298:31:73;;288:42;;278:70;;344:1;341;334:12;278:70;206:148;:::o;359:289::-;443:6;496:2;484:9;475:7;471:23;467:32;464:52;;;512:1;509;502:12;464:52;551:9;538:23;570:48;612:5;570:48;:::i;:::-;637:5;359:289;-1:-1:-1;;;359:289:73:o;653:273::-;709:6;762:2;750:9;741:7;737:23;733:32;730:52;;;778:1;775;768:12;730:52;817:9;804:23;870:5;863:13;856:21;849:5;846:32;836:60;;892:1;889;882:12"
    },
    "gasEstimates": {
      "creation": {
        "codeDepositCost": "85200",
        "executionCost": "24359",
        "totalCost": "109559"
      },
      "external": {
        "executeChange(address)": "infinite",
        "isAuthorized()": "2276",
        "isAuthorizedChanger(address)": "2493",
        "setIsAuthorized(bool)": "24504"
      }
    },
    "methodIdentifiers": {
      "executeChange(address)": "8c777e82",
      "isAuthorized()": "57e6c2f4",
      "isAuthorizedChanger(address)": "d994d6d5",
      "setIsAuthorized(bool)": "9e0a8e09"
    }
  },
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IChangeContract\",\"name\":\"changeContract\",\"type\":\"address\"}],\"name\":\"executeChange\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isAuthorized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isAuthorizedChanger\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"isAuthorized_\",\"type\":\"bool\"}],\"name\":\"setIsAuthorized\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Test only contract to mock Governor behavior \",\"kind\":\"dev\",\"methods\":{\"executeChange(address)\":{\"params\":{\"changeContract\":\"Address of the contract that will execute the changes\"}}},\"title\":\"GovernorMock\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"executeChange(address)\":{\"notice\":\"Function to be called to make the changes in changeContract\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/mocks/upgradeability/GovernorMock.sol\":\"GovernorMock\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IChangeContract.sol\":{\"content\":\"pragma solidity 0.8.17;\\n\\n/**\\n  @title IChangeContract\\n  @notice This interface is the one used by the governance system.\\n  @dev If you plan to do some changes to a system governed by this project you should write a contract\\n  that does those changes, like a recipe. This contract MUST not have ANY kind of public or external function\\n  that modifies the state of this ChangeContract, otherwise you could run into front-running issues when the governance\\n  system is fully in place.\\n */\\ninterface IChangeContract {\\n    /**\\n    @notice Override this function with a recipe of the changes to be done when this ChangeContract\\n    is executed\\n   */\\n    function execute() external;\\n}\\n\",\"keccak256\":\"0xb895afc679b258c256091b83e9cdc7f45b8097cccd7a0f757dae88d6146a92bc\"},\"contracts/interfaces/IGovernor.sol\":{\"content\":\"pragma solidity 0.8.17;\\n\\nimport \\\"./IChangeContract.sol\\\";\\n\\n/**\\n  @title IGovernor\\n  @notice Governor interface. This functions should be overwritten to\\n  enable the communication with the rest of the system\\n  @dev This interface **MUST** be compatible with the corresponding Governance instance\\n  used on Production, from https://github.com/money-on-chain/Areopagus-Governance\\n  */\\ninterface IGovernor {\\n    /**\\n    @notice Function to be called to make the changes described in changeContract\\n    @dev This function should be protected somehow to only execute changes that\\n    benefit the system. This decision process is independent of this architecture\\n    therefore is independent of this interface too\\n    @param changeContract_ Address of the contract that will execute the changes\\n   */\\n    function executeChange(IChangeContract changeContract_) external;\\n\\n    /**\\n    @notice Returns whether this `changer_` is authorized to execute changes.\\n    @param changer_ Address of the contract that will execute the changes\\n   */\\n    function isAuthorizedChanger(address changer_) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x1cf472464f36e62859cf0e296cb6ec70e36b9c4665ae78ac0cf41b661d468e38\"},\"contracts/mocks/upgradeability/GovernorMock.sol\":{\"content\":\"pragma solidity 0.8.17;\\n\\nimport \\\"../../interfaces/IGovernor.sol\\\";\\nimport \\\"../../interfaces/IChangeContract.sol\\\";\\n\\n/**\\n  @title GovernorMock\\n  @dev Test only contract to mock Governor behavior \\n*/\\ncontract GovernorMock is IGovernor {\\n    bool public isAuthorized = true;\\n\\n    /**\\n    @notice Function to be called to make the changes in changeContract\\n    @param changeContract Address of the contract that will execute the changes\\n   */\\n    function executeChange(IChangeContract changeContract) external {\\n        changeContract.execute();\\n    }\\n\\n    function isAuthorizedChanger(address) external view override returns (bool) {\\n        return isAuthorized;\\n    }\\n\\n    function setIsAuthorized(bool isAuthorized_) public {\\n        isAuthorized = isAuthorized_;\\n    }\\n}\\n\",\"keccak256\":\"0xdc007418d27019a763de7b295351161b912e0b6c806bd0733dee92d232279770\"}},\"version\":1}",
  "storageLayout": {
    "storage": [
      {
        "astId": 17512,
        "contract": "contracts/mocks/upgradeability/GovernorMock.sol:GovernorMock",
        "label": "isAuthorized",
        "offset": 0,
        "slot": "0",
        "type": "t_bool"
      }
    ],
    "types": {
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      }
    }
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "executeChange(address)": {
        "notice": "Function to be called to make the changes in changeContract"
      }
    },
    "version": 1
  }
}
