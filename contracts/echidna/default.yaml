testMode: "property"

#propMaxGas defines gas cost at which a property fails
propMaxGas: 1000000000
#testMaxGas is a gas limit; does not cause failure, but terminates sequence
testMaxGas: 1000000000
#balanceAddr is default balance for addresses
balanceAddr: 0xffffffffffffffffffffffff
#codeSize max code size for deployed contratcs (default 24576, per EIP-170)
codeSize: 245760
#testLimit is the number of test sequences to run
#testLimit: 50000
#TODO: increase this number
testLimit: 10000
#seqLen defines how many transactions are in a test sequence
seqLen: 300
#shrinkLimit determines how much effort is spent shrinking failing sequences
shrinkLimit: 5000
#coverage controls coverage guided testing
coverage: true
deployer: "0x00a329C0648769a73afAC7F9381e08fb43DBEA70"
#sender is set of addresses transactions may originate from
sender: ["0x10000", "0x20000", "0x00a329C0648769a73afAC7F9381e08fb43DBEA70"]
#cryticArgs allows special args to crytic
cryticArgs: # If we add more dependencies they will need to be added as symlinks here!
  [
    "--solc-remaps",
    "hardhat/=../node_modules/hardhat/ @openzeppelin/contracts/=../node_modules/@openzeppelin/contracts/ @openzeppelin/contracts-upgradeable/=../node_modules/@openzeppelin/contracts-upgradeable/",
    ] 
#directory to save the corpus; by default is disabled
corpusDir: "corpus"
#filter the functions to test
filterBlacklist: true
filterFunctions: 
  [
    "EchidnaMocCoreTester.getPTCac()",
    "EchidnaMocCoreTester.getCglb()", 
    "EchidnaMocCoreTester.getTCAvailableToRedeem()", 
    "EchidnaMocCoreTester.getTPAvailableToMint(uint256)",
    "EchidnaMocCoreTester.getTotalACavailable()", 
    "EchidnaMocCoreTester.getLeverageTC()", 
    "EchidnaMocCoreTester.getQACforRedeemTP(uint256,uint256)", 
    "EchidnaMocCoreTester.getPACtp(uint256)",
    "EchidnaMocCoreTester.evalLiquidation()",
    "EchidnaMocCoreTester.isLiquidationReached()"
  ]